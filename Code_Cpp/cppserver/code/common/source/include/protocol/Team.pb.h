// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Team.proto

#ifndef PROTOBUF_Team_2eproto__INCLUDED
#define PROTOBUF_Team_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "AccountStruct.pb.h"
#include "PlayerStruct.pb.h"
#include "GameStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Team_2eproto();
void protobuf_AssignDesc_Team_2eproto();
void protobuf_ShutdownFile_Team_2eproto();

class PBTeamMember;
class PBTeamMemberSimple;
class PBTeamTarget;
class PBTeamMemberJobRequire;
class PBTeamTask;
class PBTeamInfo;
class PBTeamInfoSimple;
class PBC2GTeamInvite;
class PBC2GTeamAcceptInvite;
class PBC2GTeamApply;
class PBC2GTeamAcceptApply;
class PBC2GTeamLeave;
class PBC2GTeamChangeLeader;
class PBC2GTeamPublishAsk;
class PBC2GTeamPublishCancel;
class PBC2GTeamPublishInvite;
class PBC2GTeamPublishAcceptInvite;
class PBC2GTeamPublishList;
class PBC2GTeamKick;
class PBC2GTeamKickVote;
class PBTeamSetAllot;
class PBTeamSetAllotVote;
class PBTeamNearPlayerList;
class PBTeamNearTeamList;
class PBTeamAcceptInviteTransfer;
class PBTeamAcceptApplyTransfer;
class PBC2GTeamPublishAdd;
class PBC2GTeamPublishDel;
class PBC2GTeamPublishInviteTransfer;
class PBC2GTeamPublishAcceptInviteTransfer;
class PBTeamPublish;
class PBG2CTeamPublishList;
class PBTeamNearPlayer;
class PBC2GTeamNearPlayerList;
class PBC2GTeamNearTeamList;
class PBG2WTeamPublishAsk;
class PBC2GTeamView;
class PBG2CTeamInviteTransfer;
class PBG2CTeamApplyTransfer;
class PBC2GCallupAsk;
class PBG2CCallupAck;
class PBC2GAcceptIdentityAsk;
class PBG2CAcceptIdentityAck;
class PBC2GCheckConditionAsk;
class PBTeamMemberCondition;
class PBG2CheckConditionAck;
class PBTeamApplicant;
class PBTeamCreateAsk;
class PBTeamCreateAck;
class PBTeamSetTargetAsk;
class PBTeamSetTargetAck;
class PBSetAutoAcceptAsk;
class PBSetAutoAcceptAck;
class PBSetAutoMatchAsk;
class PBSetAutoMatchAck;
class PBSetAutoMatchJoinAsk;
class PBSetAutoMatchJoinAck;
class PBSetAutoMatchJobLimitAsk;
class PBSetAutoMatchJobLimitAck;
class PBGetApplicantListAsk;
class PBGetApplicantListAck;
class PBClearApplicantListAsk;
class PBClearApplicantListAck;
class PBC2GTeamAcceptApplyFromListAsk;
class PBTeamAcceptApplyFromListAck;
class PBC2GSearchTeamByTargetAsk;
class PBSearchTeamByTargetAck;
class PBC2GApplyTeamByTargetAsk;
class PBApplyTeamByTargetAck;
class PBApplyedTeamIdListNtf;
class PBC2GCancleApplyTeamByTargetAsk;
class PBCancleApplyTeamByTargetAck;
class PBC2GAcceptTeamTaskAsk;
class PBG2CAcceptTeamTaskAck;
class PBC2GEnterTeamTaskCopymapAsk;
class PBC2GCompleteTeamTaskAsk;
class PBG2CCompleteTeamTaskAck;
class PBC2GTeamFollowAsk;
class PBG2CTeamFollowAck;
class PBC2GTeamRemainConfirmAsk;
class PBG2CTeamRemainConfirmAck;
class PBC2GTeamConfirmAsk;
class PBG2CTeamConfirmAck;
class PBG2CBroadMsg;
class PBG2CMemberHitAck;

enum _emTeamConfirmState {
  TeamConfirmState_None = 0,
  TeamConfirmState_Ing = 1,
  TeamConfirmState_Agree = 2,
  TeamConfirmState_Refuse = 3
};
bool _emTeamConfirmState_IsValid(int value);
const _emTeamConfirmState _emTeamConfirmState_MIN = TeamConfirmState_None;
const _emTeamConfirmState _emTeamConfirmState_MAX = TeamConfirmState_Refuse;
const int _emTeamConfirmState_ARRAYSIZE = _emTeamConfirmState_MAX + 1;

const ::google::protobuf::EnumDescriptor* _emTeamConfirmState_descriptor();
inline const ::std::string& _emTeamConfirmState_Name(_emTeamConfirmState value) {
  return ::google::protobuf::internal::NameOfEnum(
    _emTeamConfirmState_descriptor(), value);
}
inline bool _emTeamConfirmState_Parse(
    const ::std::string& name, _emTeamConfirmState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<_emTeamConfirmState>(
    _emTeamConfirmState_descriptor(), name, value);
}
enum _emTeamTaskState {
  TeamTaskState_None = 0,
  TeamTaskState_Start = 1,
  TeamTaskState_Complete = 2
};
bool _emTeamTaskState_IsValid(int value);
const _emTeamTaskState _emTeamTaskState_MIN = TeamTaskState_None;
const _emTeamTaskState _emTeamTaskState_MAX = TeamTaskState_Complete;
const int _emTeamTaskState_ARRAYSIZE = _emTeamTaskState_MAX + 1;

const ::google::protobuf::EnumDescriptor* _emTeamTaskState_descriptor();
inline const ::std::string& _emTeamTaskState_Name(_emTeamTaskState value) {
  return ::google::protobuf::internal::NameOfEnum(
    _emTeamTaskState_descriptor(), value);
}
inline bool _emTeamTaskState_Parse(
    const ::std::string& name, _emTeamTaskState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<_emTeamTaskState>(
    _emTeamTaskState_descriptor(), name, value);
}
enum _em_TeamPublishDelReason {
  TeamPublishDelReason_CopymapCount = 0,
  TeamPublishDelReason_OffLine = 1,
  TeamPublishDelReason_Manual = 2
};
bool _em_TeamPublishDelReason_IsValid(int value);
const _em_TeamPublishDelReason _em_TeamPublishDelReason_MIN = TeamPublishDelReason_CopymapCount;
const _em_TeamPublishDelReason _em_TeamPublishDelReason_MAX = TeamPublishDelReason_Manual;
const int _em_TeamPublishDelReason_ARRAYSIZE = _em_TeamPublishDelReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* _em_TeamPublishDelReason_descriptor();
inline const ::std::string& _em_TeamPublishDelReason_Name(_em_TeamPublishDelReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    _em_TeamPublishDelReason_descriptor(), value);
}
inline bool _em_TeamPublishDelReason_Parse(
    const ::std::string& name, _em_TeamPublishDelReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<_em_TeamPublishDelReason>(
    _em_TeamPublishDelReason_descriptor(), name, value);
}
// ===================================================================

class PBTeamMember : public ::google::protobuf::Message {
 public:
  PBTeamMember();
  virtual ~PBTeamMember();
  
  PBTeamMember(const PBTeamMember& from);
  
  inline PBTeamMember& operator=(const PBTeamMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamMember& default_instance();
  
  void Swap(PBTeamMember* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamMember& from);
  void MergeFrom(const PBTeamMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerAvatar avatar = 1;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 1;
  inline const ::PBPlayerAvatar& avatar() const;
  inline ::PBPlayerAvatar* mutable_avatar();
  inline ::PBPlayerAvatar* release_avatar();
  
  // optional uint32 fightpower = 2;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 2;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // optional bool online = 3;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 3;
  inline bool online() const;
  inline void set_online(bool value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 sceneid = 5;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 5;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 cellid = 6;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 6;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);
  
  // optional uint32 mark = 7;
  inline bool has_mark() const;
  inline void clear_mark();
  static const int kMarkFieldNumber = 7;
  inline ::google::protobuf::uint32 mark() const;
  inline void set_mark(::google::protobuf::uint32 value);
  
  // optional uint32 calluptime = 8;
  inline bool has_calluptime() const;
  inline void clear_calluptime();
  static const int kCalluptimeFieldNumber = 8;
  inline ::google::protobuf::uint32 calluptime() const;
  inline void set_calluptime(::google::protobuf::uint32 value);
  
  // optional uint32 level = 9;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 teamconfirmstate = 10;
  inline bool has_teamconfirmstate() const;
  inline void clear_teamconfirmstate();
  static const int kTeamconfirmstateFieldNumber = 10;
  inline ::google::protobuf::uint32 teamconfirmstate() const;
  inline void set_teamconfirmstate(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamMember)
 private:
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_calluptime();
  inline void clear_has_calluptime();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_teamconfirmstate();
  inline void clear_has_teamconfirmstate();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerAvatar* avatar_;
  ::google::protobuf::uint32 fightpower_;
  bool online_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint32 mark_;
  ::google::protobuf::uint32 calluptime_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 teamconfirmstate_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamMember* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamMemberSimple : public ::google::protobuf::Message {
 public:
  PBTeamMemberSimple();
  virtual ~PBTeamMemberSimple();
  
  PBTeamMemberSimple(const PBTeamMemberSimple& from);
  
  inline PBTeamMemberSimple& operator=(const PBTeamMemberSimple& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamMemberSimple& default_instance();
  
  void Swap(PBTeamMemberSimple* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamMemberSimple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamMemberSimple& from);
  void MergeFrom(const PBTeamMemberSimple& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 job = 2;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamMemberSimple)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_job();
  inline void clear_has_job();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 job_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamMemberSimple* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamTarget : public ::google::protobuf::Message {
 public:
  PBTeamTarget();
  virtual ~PBTeamTarget();
  
  PBTeamTarget(const PBTeamTarget& from);
  
  inline PBTeamTarget& operator=(const PBTeamTarget& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamTarget& default_instance();
  
  void Swap(PBTeamTarget* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamTarget& from);
  void MergeFrom(const PBTeamTarget& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 targetid = 1;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 1;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
  // optional uint32 difficulty = 2;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 2;
  inline ::google::protobuf::uint32 difficulty() const;
  inline void set_difficulty(::google::protobuf::uint32 value);
  
  // optional uint32 levelmin = 3;
  inline bool has_levelmin() const;
  inline void clear_levelmin();
  static const int kLevelminFieldNumber = 3;
  inline ::google::protobuf::uint32 levelmin() const;
  inline void set_levelmin(::google::protobuf::uint32 value);
  
  // optional uint32 levelmax = 4;
  inline bool has_levelmax() const;
  inline void clear_levelmax();
  static const int kLevelmaxFieldNumber = 4;
  inline ::google::protobuf::uint32 levelmax() const;
  inline void set_levelmax(::google::protobuf::uint32 value);
  
  // optional uint32 activeid = 5;
  inline bool has_activeid() const;
  inline void clear_activeid();
  static const int kActiveidFieldNumber = 5;
  inline ::google::protobuf::uint32 activeid() const;
  inline void set_activeid(::google::protobuf::uint32 value);
  
  // optional bool isautomatch = 6;
  inline bool has_isautomatch() const;
  inline void clear_isautomatch();
  static const int kIsautomatchFieldNumber = 6;
  inline bool isautomatch() const;
  inline void set_isautomatch(bool value);
  
  // optional bool isautoaccept = 7;
  inline bool has_isautoaccept() const;
  inline void clear_isautoaccept();
  static const int kIsautoacceptFieldNumber = 7;
  inline bool isautoaccept() const;
  inline void set_isautoaccept(bool value);
  
  // optional uint32 cash = 8;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 8;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamTarget)
 private:
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_difficulty();
  inline void clear_has_difficulty();
  inline void set_has_levelmin();
  inline void clear_has_levelmin();
  inline void set_has_levelmax();
  inline void clear_has_levelmax();
  inline void set_has_activeid();
  inline void clear_has_activeid();
  inline void set_has_isautomatch();
  inline void clear_has_isautomatch();
  inline void set_has_isautoaccept();
  inline void clear_has_isautoaccept();
  inline void set_has_cash();
  inline void clear_has_cash();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 targetid_;
  ::google::protobuf::uint32 difficulty_;
  ::google::protobuf::uint32 levelmin_;
  ::google::protobuf::uint32 levelmax_;
  ::google::protobuf::uint32 activeid_;
  bool isautomatch_;
  bool isautoaccept_;
  ::google::protobuf::uint32 cash_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamTarget* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamMemberJobRequire : public ::google::protobuf::Message {
 public:
  PBTeamMemberJobRequire();
  virtual ~PBTeamMemberJobRequire();
  
  PBTeamMemberJobRequire(const PBTeamMemberJobRequire& from);
  
  inline PBTeamMemberJobRequire& operator=(const PBTeamMemberJobRequire& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamMemberJobRequire& default_instance();
  
  void Swap(PBTeamMemberJobRequire* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamMemberJobRequire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamMemberJobRequire& from);
  void MergeFrom(const PBTeamMemberJobRequire& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 postion = 1;
  inline bool has_postion() const;
  inline void clear_postion();
  static const int kPostionFieldNumber = 1;
  inline ::google::protobuf::uint32 postion() const;
  inline void set_postion(::google::protobuf::uint32 value);
  
  // repeated uint32 jobrequire = 2;
  inline int jobrequire_size() const;
  inline void clear_jobrequire();
  static const int kJobrequireFieldNumber = 2;
  inline ::google::protobuf::uint32 jobrequire(int index) const;
  inline void set_jobrequire(int index, ::google::protobuf::uint32 value);
  inline void add_jobrequire(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      jobrequire() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_jobrequire();
  
  // @@protoc_insertion_point(class_scope:PBTeamMemberJobRequire)
 private:
  inline void set_has_postion();
  inline void clear_has_postion();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > jobrequire_;
  ::google::protobuf::uint32 postion_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamMemberJobRequire* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamTask : public ::google::protobuf::Message {
 public:
  PBTeamTask();
  virtual ~PBTeamTask();
  
  PBTeamTask(const PBTeamTask& from);
  
  inline PBTeamTask& operator=(const PBTeamTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamTask& default_instance();
  
  void Swap(PBTeamTask* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamTask& from);
  void MergeFrom(const PBTeamTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 copymapid = 2;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 2;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 npcid = 3;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 3;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional uint32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamTask)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_state();
  inline void clear_has_state();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamTask* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamInfo : public ::google::protobuf::Message {
 public:
  PBTeamInfo();
  virtual ~PBTeamInfo();
  
  PBTeamInfo(const PBTeamInfo& from);
  
  inline PBTeamInfo& operator=(const PBTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamInfo& default_instance();
  
  void Swap(PBTeamInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamInfo& from);
  void MergeFrom(const PBTeamInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);
  
  // optional uint32 learderid = 2;
  inline bool has_learderid() const;
  inline void clear_learderid();
  static const int kLearderidFieldNumber = 2;
  inline ::google::protobuf::uint32 learderid() const;
  inline void set_learderid(::google::protobuf::uint32 value);
  
  // optional uint32 allottype = 3;
  inline bool has_allottype() const;
  inline void clear_allottype();
  static const int kAllottypeFieldNumber = 3;
  inline ::google::protobuf::uint32 allottype() const;
  inline void set_allottype(::google::protobuf::uint32 value);
  
  // repeated .PBTeamMember member = 4;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 4;
  inline const ::PBTeamMember& member(int index) const;
  inline ::PBTeamMember* mutable_member(int index);
  inline ::PBTeamMember* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMember >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamMember >*
      mutable_member();
  
  // optional .PBTeamTarget teamtarget = 5;
  inline bool has_teamtarget() const;
  inline void clear_teamtarget();
  static const int kTeamtargetFieldNumber = 5;
  inline const ::PBTeamTarget& teamtarget() const;
  inline ::PBTeamTarget* mutable_teamtarget();
  inline ::PBTeamTarget* release_teamtarget();
  
  // repeated .PBTeamMemberJobRequire jobs = 6;
  inline int jobs_size() const;
  inline void clear_jobs();
  static const int kJobsFieldNumber = 6;
  inline const ::PBTeamMemberJobRequire& jobs(int index) const;
  inline ::PBTeamMemberJobRequire* mutable_jobs(int index);
  inline ::PBTeamMemberJobRequire* add_jobs();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >&
      jobs() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >*
      mutable_jobs();
  
  // optional .PBTeamTask teamtask = 7;
  inline bool has_teamtask() const;
  inline void clear_teamtask();
  static const int kTeamtaskFieldNumber = 7;
  inline const ::PBTeamTask& teamtask() const;
  inline ::PBTeamTask* mutable_teamtask();
  inline ::PBTeamTask* release_teamtask();
  
  // @@protoc_insertion_point(class_scope:PBTeamInfo)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_learderid();
  inline void clear_has_learderid();
  inline void set_has_allottype();
  inline void clear_has_allottype();
  inline void set_has_teamtarget();
  inline void clear_has_teamtarget();
  inline void set_has_teamtask();
  inline void clear_has_teamtask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 learderid_;
  ::google::protobuf::uint32 allottype_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamMember > member_;
  ::PBTeamTarget* teamtarget_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire > jobs_;
  ::PBTeamTask* teamtask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamInfoSimple : public ::google::protobuf::Message {
 public:
  PBTeamInfoSimple();
  virtual ~PBTeamInfoSimple();
  
  PBTeamInfoSimple(const PBTeamInfoSimple& from);
  
  inline PBTeamInfoSimple& operator=(const PBTeamInfoSimple& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamInfoSimple& default_instance();
  
  void Swap(PBTeamInfoSimple* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamInfoSimple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamInfoSimple& from);
  void MergeFrom(const PBTeamInfoSimple& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);
  
  // optional uint32 leaderplayerid = 2;
  inline bool has_leaderplayerid() const;
  inline void clear_leaderplayerid();
  static const int kLeaderplayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 leaderplayerid() const;
  inline void set_leaderplayerid(::google::protobuf::uint32 value);
  
  // optional string leadername = 3;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 3;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  
  // optional uint32 leadersceneid = 4;
  inline bool has_leadersceneid() const;
  inline void clear_leadersceneid();
  static const int kLeadersceneidFieldNumber = 4;
  inline ::google::protobuf::uint32 leadersceneid() const;
  inline void set_leadersceneid(::google::protobuf::uint32 value);
  
  // optional uint32 leaderjob = 5;
  inline bool has_leaderjob() const;
  inline void clear_leaderjob();
  static const int kLeaderjobFieldNumber = 5;
  inline ::google::protobuf::uint32 leaderjob() const;
  inline void set_leaderjob(::google::protobuf::uint32 value);
  
  // repeated .PBTeamMemberSimple member = 6;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 6;
  inline const ::PBTeamMemberSimple& member(int index) const;
  inline ::PBTeamMemberSimple* mutable_member(int index);
  inline ::PBTeamMemberSimple* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberSimple >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberSimple >*
      mutable_member();
  
  // optional .PBTeamTarget teamtarget = 7;
  inline bool has_teamtarget() const;
  inline void clear_teamtarget();
  static const int kTeamtargetFieldNumber = 7;
  inline const ::PBTeamTarget& teamtarget() const;
  inline ::PBTeamTarget* mutable_teamtarget();
  inline ::PBTeamTarget* release_teamtarget();
  
  // optional string leaderfactionbanner = 8;
  inline bool has_leaderfactionbanner() const;
  inline void clear_leaderfactionbanner();
  static const int kLeaderfactionbannerFieldNumber = 8;
  inline const ::std::string& leaderfactionbanner() const;
  inline void set_leaderfactionbanner(const ::std::string& value);
  inline void set_leaderfactionbanner(const char* value);
  inline void set_leaderfactionbanner(const char* value, size_t size);
  inline ::std::string* mutable_leaderfactionbanner();
  inline ::std::string* release_leaderfactionbanner();
  
  // optional uint32 averagefightpower = 9;
  inline bool has_averagefightpower() const;
  inline void clear_averagefightpower();
  static const int kAveragefightpowerFieldNumber = 9;
  inline ::google::protobuf::uint32 averagefightpower() const;
  inline void set_averagefightpower(::google::protobuf::uint32 value);
  
  // optional uint32 leaderlevel = 10;
  inline bool has_leaderlevel() const;
  inline void clear_leaderlevel();
  static const int kLeaderlevelFieldNumber = 10;
  inline ::google::protobuf::uint32 leaderlevel() const;
  inline void set_leaderlevel(::google::protobuf::uint32 value);
  
  // optional string leaderfactionname = 11;
  inline bool has_leaderfactionname() const;
  inline void clear_leaderfactionname();
  static const int kLeaderfactionnameFieldNumber = 11;
  inline const ::std::string& leaderfactionname() const;
  inline void set_leaderfactionname(const ::std::string& value);
  inline void set_leaderfactionname(const char* value);
  inline void set_leaderfactionname(const char* value, size_t size);
  inline ::std::string* mutable_leaderfactionname();
  inline ::std::string* release_leaderfactionname();
  
  // optional uint32 leaderfactionid = 12;
  inline bool has_leaderfactionid() const;
  inline void clear_leaderfactionid();
  static const int kLeaderfactionidFieldNumber = 12;
  inline ::google::protobuf::uint32 leaderfactionid() const;
  inline void set_leaderfactionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamInfoSimple)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_leaderplayerid();
  inline void clear_has_leaderplayerid();
  inline void set_has_leadername();
  inline void clear_has_leadername();
  inline void set_has_leadersceneid();
  inline void clear_has_leadersceneid();
  inline void set_has_leaderjob();
  inline void clear_has_leaderjob();
  inline void set_has_teamtarget();
  inline void clear_has_teamtarget();
  inline void set_has_leaderfactionbanner();
  inline void clear_has_leaderfactionbanner();
  inline void set_has_averagefightpower();
  inline void clear_has_averagefightpower();
  inline void set_has_leaderlevel();
  inline void clear_has_leaderlevel();
  inline void set_has_leaderfactionname();
  inline void clear_has_leaderfactionname();
  inline void set_has_leaderfactionid();
  inline void clear_has_leaderfactionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 teamid_;
  ::std::string* leadername_;
  ::google::protobuf::uint32 leaderplayerid_;
  ::google::protobuf::uint32 leadersceneid_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamMemberSimple > member_;
  ::PBTeamTarget* teamtarget_;
  ::google::protobuf::uint32 leaderjob_;
  ::google::protobuf::uint32 averagefightpower_;
  ::std::string* leaderfactionbanner_;
  ::std::string* leaderfactionname_;
  ::google::protobuf::uint32 leaderlevel_;
  ::google::protobuf::uint32 leaderfactionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamInfoSimple* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamInvite : public ::google::protobuf::Message {
 public:
  PBC2GTeamInvite();
  virtual ~PBC2GTeamInvite();
  
  PBC2GTeamInvite(const PBC2GTeamInvite& from);
  
  inline PBC2GTeamInvite& operator=(const PBC2GTeamInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamInvite& default_instance();
  
  void Swap(PBC2GTeamInvite* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamInvite& from);
  void MergeFrom(const PBC2GTeamInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamInvite)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamInvite* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamAcceptInvite : public ::google::protobuf::Message {
 public:
  PBC2GTeamAcceptInvite();
  virtual ~PBC2GTeamAcceptInvite();
  
  PBC2GTeamAcceptInvite(const PBC2GTeamAcceptInvite& from);
  
  inline PBC2GTeamAcceptInvite& operator=(const PBC2GTeamAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamAcceptInvite& default_instance();
  
  void Swap(PBC2GTeamAcceptInvite* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamAcceptInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamAcceptInvite& from);
  void MergeFrom(const PBC2GTeamAcceptInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional bool accept = 2;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 2;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamAcceptInvite)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamAcceptInvite* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamApply : public ::google::protobuf::Message {
 public:
  PBC2GTeamApply();
  virtual ~PBC2GTeamApply();
  
  PBC2GTeamApply(const PBC2GTeamApply& from);
  
  inline PBC2GTeamApply& operator=(const PBC2GTeamApply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamApply& default_instance();
  
  void Swap(PBC2GTeamApply* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamApply& from);
  void MergeFrom(const PBC2GTeamApply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamApply)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamApply* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamAcceptApply : public ::google::protobuf::Message {
 public:
  PBC2GTeamAcceptApply();
  virtual ~PBC2GTeamAcceptApply();
  
  PBC2GTeamAcceptApply(const PBC2GTeamAcceptApply& from);
  
  inline PBC2GTeamAcceptApply& operator=(const PBC2GTeamAcceptApply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamAcceptApply& default_instance();
  
  void Swap(PBC2GTeamAcceptApply* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamAcceptApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamAcceptApply& from);
  void MergeFrom(const PBC2GTeamAcceptApply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional bool accept = 2;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 2;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamAcceptApply)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamAcceptApply* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamLeave : public ::google::protobuf::Message {
 public:
  PBC2GTeamLeave();
  virtual ~PBC2GTeamLeave();
  
  PBC2GTeamLeave(const PBC2GTeamLeave& from);
  
  inline PBC2GTeamLeave& operator=(const PBC2GTeamLeave& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamLeave& default_instance();
  
  void Swap(PBC2GTeamLeave* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamLeave& from);
  void MergeFrom(const PBC2GTeamLeave& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamLeave)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamLeave* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamChangeLeader : public ::google::protobuf::Message {
 public:
  PBC2GTeamChangeLeader();
  virtual ~PBC2GTeamChangeLeader();
  
  PBC2GTeamChangeLeader(const PBC2GTeamChangeLeader& from);
  
  inline PBC2GTeamChangeLeader& operator=(const PBC2GTeamChangeLeader& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamChangeLeader& default_instance();
  
  void Swap(PBC2GTeamChangeLeader* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamChangeLeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamChangeLeader& from);
  void MergeFrom(const PBC2GTeamChangeLeader& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamChangeLeader)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamChangeLeader* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishAsk : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishAsk();
  virtual ~PBC2GTeamPublishAsk();
  
  PBC2GTeamPublishAsk(const PBC2GTeamPublishAsk& from);
  
  inline PBC2GTeamPublishAsk& operator=(const PBC2GTeamPublishAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishAsk& default_instance();
  
  void Swap(PBC2GTeamPublishAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishAsk& from);
  void MergeFrom(const PBC2GTeamPublishAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishAsk)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* msg_;
  ::google::protobuf::uint32 copymapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishCancel : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishCancel();
  virtual ~PBC2GTeamPublishCancel();
  
  PBC2GTeamPublishCancel(const PBC2GTeamPublishCancel& from);
  
  inline PBC2GTeamPublishCancel& operator=(const PBC2GTeamPublishCancel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishCancel& default_instance();
  
  void Swap(PBC2GTeamPublishCancel* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishCancel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishCancel& from);
  void MergeFrom(const PBC2GTeamPublishCancel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishCancel)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishCancel* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishInvite : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishInvite();
  virtual ~PBC2GTeamPublishInvite();
  
  PBC2GTeamPublishInvite(const PBC2GTeamPublishInvite& from);
  
  inline PBC2GTeamPublishInvite& operator=(const PBC2GTeamPublishInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishInvite& default_instance();
  
  void Swap(PBC2GTeamPublishInvite* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishInvite& from);
  void MergeFrom(const PBC2GTeamPublishInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishInvite)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishInvite* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishAcceptInvite : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishAcceptInvite();
  virtual ~PBC2GTeamPublishAcceptInvite();
  
  PBC2GTeamPublishAcceptInvite(const PBC2GTeamPublishAcceptInvite& from);
  
  inline PBC2GTeamPublishAcceptInvite& operator=(const PBC2GTeamPublishAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishAcceptInvite& default_instance();
  
  void Swap(PBC2GTeamPublishAcceptInvite* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishAcceptInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishAcceptInvite& from);
  void MergeFrom(const PBC2GTeamPublishAcceptInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional bool accept = 3;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 3;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishAcceptInvite)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 playerid_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishAcceptInvite* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishList : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishList();
  virtual ~PBC2GTeamPublishList();
  
  PBC2GTeamPublishList(const PBC2GTeamPublishList& from);
  
  inline PBC2GTeamPublishList& operator=(const PBC2GTeamPublishList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishList& default_instance();
  
  void Swap(PBC2GTeamPublishList* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishList& from);
  void MergeFrom(const PBC2GTeamPublishList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 beginidx = 2;
  inline bool has_beginidx() const;
  inline void clear_beginidx();
  static const int kBeginidxFieldNumber = 2;
  inline ::google::protobuf::uint32 beginidx() const;
  inline void set_beginidx(::google::protobuf::uint32 value);
  
  // optional uint32 endidx = 3;
  inline bool has_endidx() const;
  inline void clear_endidx();
  static const int kEndidxFieldNumber = 3;
  inline ::google::protobuf::uint32 endidx() const;
  inline void set_endidx(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishList)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_beginidx();
  inline void clear_has_beginidx();
  inline void set_has_endidx();
  inline void clear_has_endidx();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 beginidx_;
  ::google::protobuf::uint32 endidx_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishList* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamKick : public ::google::protobuf::Message {
 public:
  PBC2GTeamKick();
  virtual ~PBC2GTeamKick();
  
  PBC2GTeamKick(const PBC2GTeamKick& from);
  
  inline PBC2GTeamKick& operator=(const PBC2GTeamKick& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamKick& default_instance();
  
  void Swap(PBC2GTeamKick* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamKick& from);
  void MergeFrom(const PBC2GTeamKick& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamKick)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamKick* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamKickVote : public ::google::protobuf::Message {
 public:
  PBC2GTeamKickVote();
  virtual ~PBC2GTeamKickVote();
  
  PBC2GTeamKickVote(const PBC2GTeamKickVote& from);
  
  inline PBC2GTeamKickVote& operator=(const PBC2GTeamKickVote& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamKickVote& default_instance();
  
  void Swap(PBC2GTeamKickVote* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamKickVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamKickVote& from);
  void MergeFrom(const PBC2GTeamKickVote& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional bool agree = 2;
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 2;
  inline bool agree() const;
  inline void set_agree(bool value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamKickVote)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_agree();
  inline void clear_has_agree();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  bool agree_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamKickVote* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamSetAllot : public ::google::protobuf::Message {
 public:
  PBTeamSetAllot();
  virtual ~PBTeamSetAllot();
  
  PBTeamSetAllot(const PBTeamSetAllot& from);
  
  inline PBTeamSetAllot& operator=(const PBTeamSetAllot& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamSetAllot& default_instance();
  
  void Swap(PBTeamSetAllot* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamSetAllot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamSetAllot& from);
  void MergeFrom(const PBTeamSetAllot& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamSetAllot)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamSetAllot* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamSetAllotVote : public ::google::protobuf::Message {
 public:
  PBTeamSetAllotVote();
  virtual ~PBTeamSetAllotVote();
  
  PBTeamSetAllotVote(const PBTeamSetAllotVote& from);
  
  inline PBTeamSetAllotVote& operator=(const PBTeamSetAllotVote& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamSetAllotVote& default_instance();
  
  void Swap(PBTeamSetAllotVote* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamSetAllotVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamSetAllotVote& from);
  void MergeFrom(const PBTeamSetAllotVote& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional bool agree = 2;
  inline bool has_agree() const;
  inline void clear_agree();
  static const int kAgreeFieldNumber = 2;
  inline bool agree() const;
  inline void set_agree(bool value);
  
  // @@protoc_insertion_point(class_scope:PBTeamSetAllotVote)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_agree();
  inline void clear_has_agree();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  bool agree_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamSetAllotVote* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamNearPlayerList : public ::google::protobuf::Message {
 public:
  PBTeamNearPlayerList();
  virtual ~PBTeamNearPlayerList();
  
  PBTeamNearPlayerList(const PBTeamNearPlayerList& from);
  
  inline PBTeamNearPlayerList& operator=(const PBTeamNearPlayerList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamNearPlayerList& default_instance();
  
  void Swap(PBTeamNearPlayerList* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamNearPlayerList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamNearPlayerList& from);
  void MergeFrom(const PBTeamNearPlayerList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 beginidx = 1;
  inline bool has_beginidx() const;
  inline void clear_beginidx();
  static const int kBeginidxFieldNumber = 1;
  inline ::google::protobuf::uint32 beginidx() const;
  inline void set_beginidx(::google::protobuf::uint32 value);
  
  // optional uint32 endidx = 2;
  inline bool has_endidx() const;
  inline void clear_endidx();
  static const int kEndidxFieldNumber = 2;
  inline ::google::protobuf::uint32 endidx() const;
  inline void set_endidx(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamNearPlayerList)
 private:
  inline void set_has_beginidx();
  inline void clear_has_beginidx();
  inline void set_has_endidx();
  inline void clear_has_endidx();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 beginidx_;
  ::google::protobuf::uint32 endidx_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamNearPlayerList* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamNearTeamList : public ::google::protobuf::Message {
 public:
  PBTeamNearTeamList();
  virtual ~PBTeamNearTeamList();
  
  PBTeamNearTeamList(const PBTeamNearTeamList& from);
  
  inline PBTeamNearTeamList& operator=(const PBTeamNearTeamList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamNearTeamList& default_instance();
  
  void Swap(PBTeamNearTeamList* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamNearTeamList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamNearTeamList& from);
  void MergeFrom(const PBTeamNearTeamList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 beginidx = 1;
  inline bool has_beginidx() const;
  inline void clear_beginidx();
  static const int kBeginidxFieldNumber = 1;
  inline ::google::protobuf::uint32 beginidx() const;
  inline void set_beginidx(::google::protobuf::uint32 value);
  
  // optional uint32 endidx = 2;
  inline bool has_endidx() const;
  inline void clear_endidx();
  static const int kEndidxFieldNumber = 2;
  inline ::google::protobuf::uint32 endidx() const;
  inline void set_endidx(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamNearTeamList)
 private:
  inline void set_has_beginidx();
  inline void clear_has_beginidx();
  inline void set_has_endidx();
  inline void clear_has_endidx();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 beginidx_;
  ::google::protobuf::uint32 endidx_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamNearTeamList* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamAcceptInviteTransfer : public ::google::protobuf::Message {
 public:
  PBTeamAcceptInviteTransfer();
  virtual ~PBTeamAcceptInviteTransfer();
  
  PBTeamAcceptInviteTransfer(const PBTeamAcceptInviteTransfer& from);
  
  inline PBTeamAcceptInviteTransfer& operator=(const PBTeamAcceptInviteTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamAcceptInviteTransfer& default_instance();
  
  void Swap(PBTeamAcceptInviteTransfer* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamAcceptInviteTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamAcceptInviteTransfer& from);
  void MergeFrom(const PBTeamAcceptInviteTransfer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional bool accept = 2;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 2;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:PBTeamAcceptInviteTransfer)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamAcceptInviteTransfer* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamAcceptApplyTransfer : public ::google::protobuf::Message {
 public:
  PBTeamAcceptApplyTransfer();
  virtual ~PBTeamAcceptApplyTransfer();
  
  PBTeamAcceptApplyTransfer(const PBTeamAcceptApplyTransfer& from);
  
  inline PBTeamAcceptApplyTransfer& operator=(const PBTeamAcceptApplyTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamAcceptApplyTransfer& default_instance();
  
  void Swap(PBTeamAcceptApplyTransfer* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamAcceptApplyTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamAcceptApplyTransfer& from);
  void MergeFrom(const PBTeamAcceptApplyTransfer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional bool accept = 2;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 2;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:PBTeamAcceptApplyTransfer)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamAcceptApplyTransfer* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishAdd : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishAdd();
  virtual ~PBC2GTeamPublishAdd();
  
  PBC2GTeamPublishAdd(const PBC2GTeamPublishAdd& from);
  
  inline PBC2GTeamPublishAdd& operator=(const PBC2GTeamPublishAdd& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishAdd& default_instance();
  
  void Swap(PBC2GTeamPublishAdd* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishAdd& from);
  void MergeFrom(const PBC2GTeamPublishAdd& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional string msg = 3;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 3;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishAdd)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 time_;
  ::std::string* msg_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishAdd* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishDel : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishDel();
  virtual ~PBC2GTeamPublishDel();
  
  PBC2GTeamPublishDel(const PBC2GTeamPublishDel& from);
  
  inline PBC2GTeamPublishDel& operator=(const PBC2GTeamPublishDel& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishDel& default_instance();
  
  void Swap(PBC2GTeamPublishDel* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishDel& from);
  void MergeFrom(const PBC2GTeamPublishDel& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishDel)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishDel* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishInviteTransfer : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishInviteTransfer();
  virtual ~PBC2GTeamPublishInviteTransfer();
  
  PBC2GTeamPublishInviteTransfer(const PBC2GTeamPublishInviteTransfer& from);
  
  inline PBC2GTeamPublishInviteTransfer& operator=(const PBC2GTeamPublishInviteTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishInviteTransfer& default_instance();
  
  void Swap(PBC2GTeamPublishInviteTransfer* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishInviteTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishInviteTransfer& from);
  void MergeFrom(const PBC2GTeamPublishInviteTransfer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional .PBPlayerDisplay display = 2;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 2;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 fightpower = 3;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 3;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishInviteTransfer)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 fightpower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishInviteTransfer* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamPublishAcceptInviteTransfer : public ::google::protobuf::Message {
 public:
  PBC2GTeamPublishAcceptInviteTransfer();
  virtual ~PBC2GTeamPublishAcceptInviteTransfer();
  
  PBC2GTeamPublishAcceptInviteTransfer(const PBC2GTeamPublishAcceptInviteTransfer& from);
  
  inline PBC2GTeamPublishAcceptInviteTransfer& operator=(const PBC2GTeamPublishAcceptInviteTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamPublishAcceptInviteTransfer& default_instance();
  
  void Swap(PBC2GTeamPublishAcceptInviteTransfer* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamPublishAcceptInviteTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamPublishAcceptInviteTransfer& from);
  void MergeFrom(const PBC2GTeamPublishAcceptInviteTransfer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional .PBPlayerDisplay display = 2;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 2;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional bool accept = 3;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 3;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamPublishAcceptInviteTransfer)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 copymapid_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamPublishAcceptInviteTransfer* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamPublish : public ::google::protobuf::Message {
 public:
  PBTeamPublish();
  virtual ~PBTeamPublish();
  
  PBTeamPublish(const PBTeamPublish& from);
  
  inline PBTeamPublish& operator=(const PBTeamPublish& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamPublish& default_instance();
  
  void Swap(PBTeamPublish* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamPublish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamPublish& from);
  void MergeFrom(const PBTeamPublish& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 fightpower = 2;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 2;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // optional uint32 compeletenum = 3;
  inline bool has_compeletenum() const;
  inline void clear_compeletenum();
  static const int kCompeletenumFieldNumber = 3;
  inline ::google::protobuf::uint32 compeletenum() const;
  inline void set_compeletenum(::google::protobuf::uint32 value);
  
  // optional string msg = 4;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 4;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  
  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamPublish)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_compeletenum();
  inline void clear_has_compeletenum();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 fightpower_;
  ::google::protobuf::uint32 compeletenum_;
  ::std::string* msg_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamPublish* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CTeamPublishList : public ::google::protobuf::Message {
 public:
  PBG2CTeamPublishList();
  virtual ~PBG2CTeamPublishList();
  
  PBG2CTeamPublishList(const PBG2CTeamPublishList& from);
  
  inline PBG2CTeamPublishList& operator=(const PBG2CTeamPublishList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CTeamPublishList& default_instance();
  
  void Swap(PBG2CTeamPublishList* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CTeamPublishList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CTeamPublishList& from);
  void MergeFrom(const PBG2CTeamPublishList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 beginidx = 2;
  inline bool has_beginidx() const;
  inline void clear_beginidx();
  static const int kBeginidxFieldNumber = 2;
  inline ::google::protobuf::uint32 beginidx() const;
  inline void set_beginidx(::google::protobuf::uint32 value);
  
  // optional uint32 endidx = 3;
  inline bool has_endidx() const;
  inline void clear_endidx();
  static const int kEndidxFieldNumber = 3;
  inline ::google::protobuf::uint32 endidx() const;
  inline void set_endidx(::google::protobuf::uint32 value);
  
  // optional uint32 allcount = 4;
  inline bool has_allcount() const;
  inline void clear_allcount();
  static const int kAllcountFieldNumber = 4;
  inline ::google::protobuf::uint32 allcount() const;
  inline void set_allcount(::google::protobuf::uint32 value);
  
  // repeated .PBTeamPublish publish = 5;
  inline int publish_size() const;
  inline void clear_publish();
  static const int kPublishFieldNumber = 5;
  inline const ::PBTeamPublish& publish(int index) const;
  inline ::PBTeamPublish* mutable_publish(int index);
  inline ::PBTeamPublish* add_publish();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamPublish >&
      publish() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamPublish >*
      mutable_publish();
  
  // @@protoc_insertion_point(class_scope:PBG2CTeamPublishList)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_beginidx();
  inline void clear_has_beginidx();
  inline void set_has_endidx();
  inline void clear_has_endidx();
  inline void set_has_allcount();
  inline void clear_has_allcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 beginidx_;
  ::google::protobuf::uint32 endidx_;
  ::google::protobuf::uint32 allcount_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamPublish > publish_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CTeamPublishList* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamNearPlayer : public ::google::protobuf::Message {
 public:
  PBTeamNearPlayer();
  virtual ~PBTeamNearPlayer();
  
  PBTeamNearPlayer(const PBTeamNearPlayer& from);
  
  inline PBTeamNearPlayer& operator=(const PBTeamNearPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamNearPlayer& default_instance();
  
  void Swap(PBTeamNearPlayer* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamNearPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamNearPlayer& from);
  void MergeFrom(const PBTeamNearPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 fightpower = 2;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 2;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // optional uint64 teamid = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamNearPlayer)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 fightpower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamNearPlayer* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamNearPlayerList : public ::google::protobuf::Message {
 public:
  PBC2GTeamNearPlayerList();
  virtual ~PBC2GTeamNearPlayerList();
  
  PBC2GTeamNearPlayerList(const PBC2GTeamNearPlayerList& from);
  
  inline PBC2GTeamNearPlayerList& operator=(const PBC2GTeamNearPlayerList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamNearPlayerList& default_instance();
  
  void Swap(PBC2GTeamNearPlayerList* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamNearPlayerList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamNearPlayerList& from);
  void MergeFrom(const PBC2GTeamNearPlayerList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 beginidx = 1;
  inline bool has_beginidx() const;
  inline void clear_beginidx();
  static const int kBeginidxFieldNumber = 1;
  inline ::google::protobuf::uint32 beginidx() const;
  inline void set_beginidx(::google::protobuf::uint32 value);
  
  // optional uint32 endidx = 2;
  inline bool has_endidx() const;
  inline void clear_endidx();
  static const int kEndidxFieldNumber = 2;
  inline ::google::protobuf::uint32 endidx() const;
  inline void set_endidx(::google::protobuf::uint32 value);
  
  // optional uint32 allcount = 3;
  inline bool has_allcount() const;
  inline void clear_allcount();
  static const int kAllcountFieldNumber = 3;
  inline ::google::protobuf::uint32 allcount() const;
  inline void set_allcount(::google::protobuf::uint32 value);
  
  // repeated .PBTeamNearPlayer player = 4;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 4;
  inline const ::PBTeamNearPlayer& player(int index) const;
  inline ::PBTeamNearPlayer* mutable_player(int index);
  inline ::PBTeamNearPlayer* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamNearPlayer >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamNearPlayer >*
      mutable_player();
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamNearPlayerList)
 private:
  inline void set_has_beginidx();
  inline void clear_has_beginidx();
  inline void set_has_endidx();
  inline void clear_has_endidx();
  inline void set_has_allcount();
  inline void clear_has_allcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 beginidx_;
  ::google::protobuf::uint32 endidx_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamNearPlayer > player_;
  ::google::protobuf::uint32 allcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamNearPlayerList* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamNearTeamList : public ::google::protobuf::Message {
 public:
  PBC2GTeamNearTeamList();
  virtual ~PBC2GTeamNearTeamList();
  
  PBC2GTeamNearTeamList(const PBC2GTeamNearTeamList& from);
  
  inline PBC2GTeamNearTeamList& operator=(const PBC2GTeamNearTeamList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamNearTeamList& default_instance();
  
  void Swap(PBC2GTeamNearTeamList* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamNearTeamList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamNearTeamList& from);
  void MergeFrom(const PBC2GTeamNearTeamList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 beginidx = 1;
  inline bool has_beginidx() const;
  inline void clear_beginidx();
  static const int kBeginidxFieldNumber = 1;
  inline ::google::protobuf::uint32 beginidx() const;
  inline void set_beginidx(::google::protobuf::uint32 value);
  
  // optional uint32 endidx = 2;
  inline bool has_endidx() const;
  inline void clear_endidx();
  static const int kEndidxFieldNumber = 2;
  inline ::google::protobuf::uint32 endidx() const;
  inline void set_endidx(::google::protobuf::uint32 value);
  
  // optional uint32 allcount = 3;
  inline bool has_allcount() const;
  inline void clear_allcount();
  static const int kAllcountFieldNumber = 3;
  inline ::google::protobuf::uint32 allcount() const;
  inline void set_allcount(::google::protobuf::uint32 value);
  
  // repeated .PBTeamInfo team = 4;
  inline int team_size() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 4;
  inline const ::PBTeamInfo& team(int index) const;
  inline ::PBTeamInfo* mutable_team(int index);
  inline ::PBTeamInfo* add_team();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamInfo >&
      team() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamInfo >*
      mutable_team();
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamNearTeamList)
 private:
  inline void set_has_beginidx();
  inline void clear_has_beginidx();
  inline void set_has_endidx();
  inline void clear_has_endidx();
  inline void set_has_allcount();
  inline void clear_has_allcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 beginidx_;
  ::google::protobuf::uint32 endidx_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamInfo > team_;
  ::google::protobuf::uint32 allcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamNearTeamList* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WTeamPublishAsk : public ::google::protobuf::Message {
 public:
  PBG2WTeamPublishAsk();
  virtual ~PBG2WTeamPublishAsk();
  
  PBG2WTeamPublishAsk(const PBG2WTeamPublishAsk& from);
  
  inline PBG2WTeamPublishAsk& operator=(const PBG2WTeamPublishAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WTeamPublishAsk& default_instance();
  
  void Swap(PBG2WTeamPublishAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WTeamPublishAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WTeamPublishAsk& from);
  void MergeFrom(const PBG2WTeamPublishAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBC2GTeamPublishAsk clientmsg = 1;
  inline bool has_clientmsg() const;
  inline void clear_clientmsg();
  static const int kClientmsgFieldNumber = 1;
  inline const ::PBC2GTeamPublishAsk& clientmsg() const;
  inline ::PBC2GTeamPublishAsk* mutable_clientmsg();
  inline ::PBC2GTeamPublishAsk* release_clientmsg();
  
  // optional uint32 donecount = 2;
  inline bool has_donecount() const;
  inline void clear_donecount();
  static const int kDonecountFieldNumber = 2;
  inline ::google::protobuf::uint32 donecount() const;
  inline void set_donecount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WTeamPublishAsk)
 private:
  inline void set_has_clientmsg();
  inline void clear_has_clientmsg();
  inline void set_has_donecount();
  inline void clear_has_donecount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBC2GTeamPublishAsk* clientmsg_;
  ::google::protobuf::uint32 donecount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WTeamPublishAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamView : public ::google::protobuf::Message {
 public:
  PBC2GTeamView();
  virtual ~PBC2GTeamView();
  
  PBC2GTeamView(const PBC2GTeamView& from);
  
  inline PBC2GTeamView& operator=(const PBC2GTeamView& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamView& default_instance();
  
  void Swap(PBC2GTeamView* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamView& from);
  void MergeFrom(const PBC2GTeamView& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamView)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamView* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CTeamInviteTransfer : public ::google::protobuf::Message {
 public:
  PBG2CTeamInviteTransfer();
  virtual ~PBG2CTeamInviteTransfer();
  
  PBG2CTeamInviteTransfer(const PBG2CTeamInviteTransfer& from);
  
  inline PBG2CTeamInviteTransfer& operator=(const PBG2CTeamInviteTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CTeamInviteTransfer& default_instance();
  
  void Swap(PBG2CTeamInviteTransfer* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CTeamInviteTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CTeamInviteTransfer& from);
  void MergeFrom(const PBG2CTeamInviteTransfer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 fightpower = 2;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 2;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // optional uint32 teamTargetID = 3;
  inline bool has_teamtargetid() const;
  inline void clear_teamtargetid();
  static const int kTeamTargetIDFieldNumber = 3;
  inline ::google::protobuf::uint32 teamtargetid() const;
  inline void set_teamtargetid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CTeamInviteTransfer)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_teamtargetid();
  inline void clear_has_teamtargetid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 fightpower_;
  ::google::protobuf::uint32 teamtargetid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CTeamInviteTransfer* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CTeamApplyTransfer : public ::google::protobuf::Message {
 public:
  PBG2CTeamApplyTransfer();
  virtual ~PBG2CTeamApplyTransfer();
  
  PBG2CTeamApplyTransfer(const PBG2CTeamApplyTransfer& from);
  
  inline PBG2CTeamApplyTransfer& operator=(const PBG2CTeamApplyTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CTeamApplyTransfer& default_instance();
  
  void Swap(PBG2CTeamApplyTransfer* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CTeamApplyTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CTeamApplyTransfer& from);
  void MergeFrom(const PBG2CTeamApplyTransfer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 fightpower = 2;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 2;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CTeamApplyTransfer)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 fightpower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CTeamApplyTransfer* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GCallupAsk : public ::google::protobuf::Message {
 public:
  PBC2GCallupAsk();
  virtual ~PBC2GCallupAsk();
  
  PBC2GCallupAsk(const PBC2GCallupAsk& from);
  
  inline PBC2GCallupAsk& operator=(const PBC2GCallupAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GCallupAsk& default_instance();
  
  void Swap(PBC2GCallupAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GCallupAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GCallupAsk& from);
  void MergeFrom(const PBC2GCallupAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GCallupAsk)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GCallupAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCallupAck : public ::google::protobuf::Message {
 public:
  PBG2CCallupAck();
  virtual ~PBG2CCallupAck();
  
  PBG2CCallupAck(const PBG2CCallupAck& from);
  
  inline PBG2CCallupAck& operator=(const PBG2CCallupAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCallupAck& default_instance();
  
  void Swap(PBG2CCallupAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCallupAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCallupAck& from);
  void MergeFrom(const PBG2CCallupAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CCallupAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCallupAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GAcceptIdentityAsk : public ::google::protobuf::Message {
 public:
  PBC2GAcceptIdentityAsk();
  virtual ~PBC2GAcceptIdentityAsk();
  
  PBC2GAcceptIdentityAsk(const PBC2GAcceptIdentityAsk& from);
  
  inline PBC2GAcceptIdentityAsk& operator=(const PBC2GAcceptIdentityAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GAcceptIdentityAsk& default_instance();
  
  void Swap(PBC2GAcceptIdentityAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GAcceptIdentityAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GAcceptIdentityAsk& from);
  void MergeFrom(const PBC2GAcceptIdentityAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 npcunitid = 2;
  inline bool has_npcunitid() const;
  inline void clear_npcunitid();
  static const int kNpcunitidFieldNumber = 2;
  inline ::google::protobuf::uint32 npcunitid() const;
  inline void set_npcunitid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GAcceptIdentityAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_npcunitid();
  inline void clear_has_npcunitid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 npcunitid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GAcceptIdentityAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CAcceptIdentityAck : public ::google::protobuf::Message {
 public:
  PBG2CAcceptIdentityAck();
  virtual ~PBG2CAcceptIdentityAck();
  
  PBG2CAcceptIdentityAck(const PBG2CAcceptIdentityAck& from);
  
  inline PBG2CAcceptIdentityAck& operator=(const PBG2CAcceptIdentityAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CAcceptIdentityAck& default_instance();
  
  void Swap(PBG2CAcceptIdentityAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CAcceptIdentityAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CAcceptIdentityAck& from);
  void MergeFrom(const PBG2CAcceptIdentityAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 npcunitid = 2;
  inline bool has_npcunitid() const;
  inline void clear_npcunitid();
  static const int kNpcunitidFieldNumber = 2;
  inline ::google::protobuf::uint32 npcunitid() const;
  inline void set_npcunitid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CAcceptIdentityAck)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_npcunitid();
  inline void clear_has_npcunitid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 npcunitid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CAcceptIdentityAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GCheckConditionAsk : public ::google::protobuf::Message {
 public:
  PBC2GCheckConditionAsk();
  virtual ~PBC2GCheckConditionAsk();
  
  PBC2GCheckConditionAsk(const PBC2GCheckConditionAsk& from);
  
  inline PBC2GCheckConditionAsk& operator=(const PBC2GCheckConditionAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GCheckConditionAsk& default_instance();
  
  void Swap(PBC2GCheckConditionAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GCheckConditionAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GCheckConditionAsk& from);
  void MergeFrom(const PBC2GCheckConditionAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 npcunitid = 2;
  inline bool has_npcunitid() const;
  inline void clear_npcunitid();
  static const int kNpcunitidFieldNumber = 2;
  inline ::google::protobuf::uint32 npcunitid() const;
  inline void set_npcunitid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GCheckConditionAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_npcunitid();
  inline void clear_has_npcunitid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 npcunitid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GCheckConditionAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamMemberCondition : public ::google::protobuf::Message {
 public:
  PBTeamMemberCondition();
  virtual ~PBTeamMemberCondition();
  
  PBTeamMemberCondition(const PBTeamMemberCondition& from);
  
  inline PBTeamMemberCondition& operator=(const PBTeamMemberCondition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamMemberCondition& default_instance();
  
  void Swap(PBTeamMemberCondition* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamMemberCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamMemberCondition& from);
  void MergeFrom(const PBTeamMemberCondition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional .PBItemNum itemnum = 2;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemnumFieldNumber = 2;
  inline const ::PBItemNum& itemnum() const;
  inline ::PBItemNum* mutable_itemnum();
  inline ::PBItemNum* release_itemnum();
  
  // optional uint32 entercount = 3;
  inline bool has_entercount() const;
  inline void clear_entercount();
  static const int kEntercountFieldNumber = 3;
  inline ::google::protobuf::uint32 entercount() const;
  inline void set_entercount(::google::protobuf::uint32 value);
  
  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional bool isnonear = 5;
  inline bool has_isnonear() const;
  inline void clear_isnonear();
  static const int kIsnonearFieldNumber = 5;
  inline bool isnonear() const;
  inline void set_isnonear(bool value);
  
  // optional bool isneedPre = 6;
  inline bool has_isneedpre() const;
  inline void clear_isneedpre();
  static const int kIsneedPreFieldNumber = 6;
  inline bool isneedpre() const;
  inline void set_isneedpre(bool value);
  
  // optional bool ishavetask = 7;
  inline bool has_ishavetask() const;
  inline void clear_ishavetask();
  static const int kIshavetaskFieldNumber = 7;
  inline bool ishavetask() const;
  inline void set_ishavetask(bool value);
  
  // @@protoc_insertion_point(class_scope:PBTeamMemberCondition)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_entercount();
  inline void clear_has_entercount();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_isnonear();
  inline void clear_has_isnonear();
  inline void set_has_isneedpre();
  inline void clear_has_isneedpre();
  inline void set_has_ishavetask();
  inline void clear_has_ishavetask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBItemNum* itemnum_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 entercount_;
  ::google::protobuf::uint32 level_;
  bool isnonear_;
  bool isneedpre_;
  bool ishavetask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamMemberCondition* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CheckConditionAck : public ::google::protobuf::Message {
 public:
  PBG2CheckConditionAck();
  virtual ~PBG2CheckConditionAck();
  
  PBG2CheckConditionAck(const PBG2CheckConditionAck& from);
  
  inline PBG2CheckConditionAck& operator=(const PBG2CheckConditionAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CheckConditionAck& default_instance();
  
  void Swap(PBG2CheckConditionAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CheckConditionAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CheckConditionAck& from);
  void MergeFrom(const PBG2CheckConditionAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated .PBTeamMemberCondition condition = 2;
  inline int condition_size() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 2;
  inline const ::PBTeamMemberCondition& condition(int index) const;
  inline ::PBTeamMemberCondition* mutable_condition(int index);
  inline ::PBTeamMemberCondition* add_condition();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberCondition >&
      condition() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberCondition >*
      mutable_condition();
  
  // @@protoc_insertion_point(class_scope:PBG2CheckConditionAck)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBTeamMemberCondition > condition_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CheckConditionAck* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamApplicant : public ::google::protobuf::Message {
 public:
  PBTeamApplicant();
  virtual ~PBTeamApplicant();
  
  PBTeamApplicant(const PBTeamApplicant& from);
  
  inline PBTeamApplicant& operator=(const PBTeamApplicant& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamApplicant& default_instance();
  
  void Swap(PBTeamApplicant* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamApplicant* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamApplicant& from);
  void MergeFrom(const PBTeamApplicant& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 job = 4;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 4;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // optional uint32 fightpower = 5;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 5;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // optional uint32 relationship = 6;
  inline bool has_relationship() const;
  inline void clear_relationship();
  static const int kRelationshipFieldNumber = 6;
  inline ::google::protobuf::uint32 relationship() const;
  inline void set_relationship(::google::protobuf::uint32 value);
  
  // optional string factionname = 7;
  inline bool has_factionname() const;
  inline void clear_factionname();
  static const int kFactionnameFieldNumber = 7;
  inline const ::std::string& factionname() const;
  inline void set_factionname(const ::std::string& value);
  inline void set_factionname(const char* value);
  inline void set_factionname(const char* value, size_t size);
  inline ::std::string* mutable_factionname();
  inline ::std::string* release_factionname();
  
  // optional uint32 factionid = 8;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 8;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamApplicant)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_relationship();
  inline void clear_has_relationship();
  inline void set_has_factionname();
  inline void clear_has_factionname();
  inline void set_has_factionid();
  inline void clear_has_factionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 fightpower_;
  ::std::string* factionname_;
  ::google::protobuf::uint32 relationship_;
  ::google::protobuf::uint32 factionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamApplicant* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamCreateAsk : public ::google::protobuf::Message {
 public:
  PBTeamCreateAsk();
  virtual ~PBTeamCreateAsk();
  
  PBTeamCreateAsk(const PBTeamCreateAsk& from);
  
  inline PBTeamCreateAsk& operator=(const PBTeamCreateAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamCreateAsk& default_instance();
  
  void Swap(PBTeamCreateAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamCreateAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamCreateAsk& from);
  void MergeFrom(const PBTeamCreateAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamTarget target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::PBTeamTarget& target() const;
  inline ::PBTeamTarget* mutable_target();
  inline ::PBTeamTarget* release_target();
  
  // @@protoc_insertion_point(class_scope:PBTeamCreateAsk)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamTarget* target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamCreateAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamCreateAck : public ::google::protobuf::Message {
 public:
  PBTeamCreateAck();
  virtual ~PBTeamCreateAck();
  
  PBTeamCreateAck(const PBTeamCreateAck& from);
  
  inline PBTeamCreateAck& operator=(const PBTeamCreateAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamCreateAck& default_instance();
  
  void Swap(PBTeamCreateAck* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamCreateAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamCreateAck& from);
  void MergeFrom(const PBTeamCreateAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamInfo team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline const ::PBTeamInfo& team() const;
  inline ::PBTeamInfo* mutable_team();
  inline ::PBTeamInfo* release_team();
  
  // @@protoc_insertion_point(class_scope:PBTeamCreateAck)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamInfo* team_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamCreateAck* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamSetTargetAsk : public ::google::protobuf::Message {
 public:
  PBTeamSetTargetAsk();
  virtual ~PBTeamSetTargetAsk();
  
  PBTeamSetTargetAsk(const PBTeamSetTargetAsk& from);
  
  inline PBTeamSetTargetAsk& operator=(const PBTeamSetTargetAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamSetTargetAsk& default_instance();
  
  void Swap(PBTeamSetTargetAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamSetTargetAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamSetTargetAsk& from);
  void MergeFrom(const PBTeamSetTargetAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamTarget target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::PBTeamTarget& target() const;
  inline ::PBTeamTarget* mutable_target();
  inline ::PBTeamTarget* release_target();
  
  // @@protoc_insertion_point(class_scope:PBTeamSetTargetAsk)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamTarget* target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamSetTargetAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamSetTargetAck : public ::google::protobuf::Message {
 public:
  PBTeamSetTargetAck();
  virtual ~PBTeamSetTargetAck();
  
  PBTeamSetTargetAck(const PBTeamSetTargetAck& from);
  
  inline PBTeamSetTargetAck& operator=(const PBTeamSetTargetAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamSetTargetAck& default_instance();
  
  void Swap(PBTeamSetTargetAck* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamSetTargetAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamSetTargetAck& from);
  void MergeFrom(const PBTeamSetTargetAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamTarget target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::PBTeamTarget& target() const;
  inline ::PBTeamTarget* mutable_target();
  inline ::PBTeamTarget* release_target();
  
  // @@protoc_insertion_point(class_scope:PBTeamSetTargetAck)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamTarget* target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamSetTargetAck* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoAcceptAsk : public ::google::protobuf::Message {
 public:
  PBSetAutoAcceptAsk();
  virtual ~PBSetAutoAcceptAsk();
  
  PBSetAutoAcceptAsk(const PBSetAutoAcceptAsk& from);
  
  inline PBSetAutoAcceptAsk& operator=(const PBSetAutoAcceptAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoAcceptAsk& default_instance();
  
  void Swap(PBSetAutoAcceptAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoAcceptAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoAcceptAsk& from);
  void MergeFrom(const PBSetAutoAcceptAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isopen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 1;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // @@protoc_insertion_point(class_scope:PBSetAutoAcceptAsk)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isopen_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoAcceptAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoAcceptAck : public ::google::protobuf::Message {
 public:
  PBSetAutoAcceptAck();
  virtual ~PBSetAutoAcceptAck();
  
  PBSetAutoAcceptAck(const PBSetAutoAcceptAck& from);
  
  inline PBSetAutoAcceptAck& operator=(const PBSetAutoAcceptAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoAcceptAck& default_instance();
  
  void Swap(PBSetAutoAcceptAck* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoAcceptAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoAcceptAck& from);
  void MergeFrom(const PBSetAutoAcceptAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isopen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 1;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // @@protoc_insertion_point(class_scope:PBSetAutoAcceptAck)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isopen_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoAcceptAck* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoMatchAsk : public ::google::protobuf::Message {
 public:
  PBSetAutoMatchAsk();
  virtual ~PBSetAutoMatchAsk();
  
  PBSetAutoMatchAsk(const PBSetAutoMatchAsk& from);
  
  inline PBSetAutoMatchAsk& operator=(const PBSetAutoMatchAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoMatchAsk& default_instance();
  
  void Swap(PBSetAutoMatchAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoMatchAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoMatchAsk& from);
  void MergeFrom(const PBSetAutoMatchAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isopen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 1;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // @@protoc_insertion_point(class_scope:PBSetAutoMatchAsk)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isopen_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoMatchAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoMatchAck : public ::google::protobuf::Message {
 public:
  PBSetAutoMatchAck();
  virtual ~PBSetAutoMatchAck();
  
  PBSetAutoMatchAck(const PBSetAutoMatchAck& from);
  
  inline PBSetAutoMatchAck& operator=(const PBSetAutoMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoMatchAck& default_instance();
  
  void Swap(PBSetAutoMatchAck* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoMatchAck& from);
  void MergeFrom(const PBSetAutoMatchAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isopen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 1;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // @@protoc_insertion_point(class_scope:PBSetAutoMatchAck)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isopen_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoMatchJoinAsk : public ::google::protobuf::Message {
 public:
  PBSetAutoMatchJoinAsk();
  virtual ~PBSetAutoMatchJoinAsk();
  
  PBSetAutoMatchJoinAsk(const PBSetAutoMatchJoinAsk& from);
  
  inline PBSetAutoMatchJoinAsk& operator=(const PBSetAutoMatchJoinAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoMatchJoinAsk& default_instance();
  
  void Swap(PBSetAutoMatchJoinAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoMatchJoinAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoMatchJoinAsk& from);
  void MergeFrom(const PBSetAutoMatchJoinAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isopen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 1;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // optional uint32 targetid = 2;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 2;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSetAutoMatchJoinAsk)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isopen_;
  ::google::protobuf::uint32 targetid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoMatchJoinAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoMatchJoinAck : public ::google::protobuf::Message {
 public:
  PBSetAutoMatchJoinAck();
  virtual ~PBSetAutoMatchJoinAck();
  
  PBSetAutoMatchJoinAck(const PBSetAutoMatchJoinAck& from);
  
  inline PBSetAutoMatchJoinAck& operator=(const PBSetAutoMatchJoinAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoMatchJoinAck& default_instance();
  
  void Swap(PBSetAutoMatchJoinAck* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoMatchJoinAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoMatchJoinAck& from);
  void MergeFrom(const PBSetAutoMatchJoinAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isopen = 1;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsopenFieldNumber = 1;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // optional uint32 targetid = 2;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 2;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSetAutoMatchJoinAck)
 private:
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isopen_;
  ::google::protobuf::uint32 targetid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoMatchJoinAck* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoMatchJobLimitAsk : public ::google::protobuf::Message {
 public:
  PBSetAutoMatchJobLimitAsk();
  virtual ~PBSetAutoMatchJobLimitAsk();
  
  PBSetAutoMatchJobLimitAsk(const PBSetAutoMatchJobLimitAsk& from);
  
  inline PBSetAutoMatchJobLimitAsk& operator=(const PBSetAutoMatchJobLimitAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoMatchJobLimitAsk& default_instance();
  
  void Swap(PBSetAutoMatchJobLimitAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoMatchJobLimitAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoMatchJobLimitAsk& from);
  void MergeFrom(const PBSetAutoMatchJobLimitAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamMemberJobRequire jobs = 1;
  inline bool has_jobs() const;
  inline void clear_jobs();
  static const int kJobsFieldNumber = 1;
  inline const ::PBTeamMemberJobRequire& jobs() const;
  inline ::PBTeamMemberJobRequire* mutable_jobs();
  inline ::PBTeamMemberJobRequire* release_jobs();
  
  // @@protoc_insertion_point(class_scope:PBSetAutoMatchJobLimitAsk)
 private:
  inline void set_has_jobs();
  inline void clear_has_jobs();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamMemberJobRequire* jobs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoMatchJobLimitAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBSetAutoMatchJobLimitAck : public ::google::protobuf::Message {
 public:
  PBSetAutoMatchJobLimitAck();
  virtual ~PBSetAutoMatchJobLimitAck();
  
  PBSetAutoMatchJobLimitAck(const PBSetAutoMatchJobLimitAck& from);
  
  inline PBSetAutoMatchJobLimitAck& operator=(const PBSetAutoMatchJobLimitAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSetAutoMatchJobLimitAck& default_instance();
  
  void Swap(PBSetAutoMatchJobLimitAck* other);
  
  // implements Message ----------------------------------------------
  
  PBSetAutoMatchJobLimitAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSetAutoMatchJobLimitAck& from);
  void MergeFrom(const PBSetAutoMatchJobLimitAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBTeamMemberJobRequire jobs = 1;
  inline int jobs_size() const;
  inline void clear_jobs();
  static const int kJobsFieldNumber = 1;
  inline const ::PBTeamMemberJobRequire& jobs(int index) const;
  inline ::PBTeamMemberJobRequire* mutable_jobs(int index);
  inline ::PBTeamMemberJobRequire* add_jobs();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >&
      jobs() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >*
      mutable_jobs();
  
  // @@protoc_insertion_point(class_scope:PBSetAutoMatchJobLimitAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire > jobs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSetAutoMatchJobLimitAck* default_instance_;
};
// -------------------------------------------------------------------

class PBGetApplicantListAsk : public ::google::protobuf::Message {
 public:
  PBGetApplicantListAsk();
  virtual ~PBGetApplicantListAsk();
  
  PBGetApplicantListAsk(const PBGetApplicantListAsk& from);
  
  inline PBGetApplicantListAsk& operator=(const PBGetApplicantListAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGetApplicantListAsk& default_instance();
  
  void Swap(PBGetApplicantListAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBGetApplicantListAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGetApplicantListAsk& from);
  void MergeFrom(const PBGetApplicantListAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:PBGetApplicantListAsk)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBGetApplicantListAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBGetApplicantListAck : public ::google::protobuf::Message {
 public:
  PBGetApplicantListAck();
  virtual ~PBGetApplicantListAck();
  
  PBGetApplicantListAck(const PBGetApplicantListAck& from);
  
  inline PBGetApplicantListAck& operator=(const PBGetApplicantListAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGetApplicantListAck& default_instance();
  
  void Swap(PBGetApplicantListAck* other);
  
  // implements Message ----------------------------------------------
  
  PBGetApplicantListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGetApplicantListAck& from);
  void MergeFrom(const PBGetApplicantListAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBTeamApplicant applicants = 1;
  inline int applicants_size() const;
  inline void clear_applicants();
  static const int kApplicantsFieldNumber = 1;
  inline const ::PBTeamApplicant& applicants(int index) const;
  inline ::PBTeamApplicant* mutable_applicants(int index);
  inline ::PBTeamApplicant* add_applicants();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamApplicant >&
      applicants() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamApplicant >*
      mutable_applicants();
  
  // @@protoc_insertion_point(class_scope:PBGetApplicantListAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBTeamApplicant > applicants_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBGetApplicantListAck* default_instance_;
};
// -------------------------------------------------------------------

class PBClearApplicantListAsk : public ::google::protobuf::Message {
 public:
  PBClearApplicantListAsk();
  virtual ~PBClearApplicantListAsk();
  
  PBClearApplicantListAsk(const PBClearApplicantListAsk& from);
  
  inline PBClearApplicantListAsk& operator=(const PBClearApplicantListAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBClearApplicantListAsk& default_instance();
  
  void Swap(PBClearApplicantListAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBClearApplicantListAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBClearApplicantListAsk& from);
  void MergeFrom(const PBClearApplicantListAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:PBClearApplicantListAsk)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBClearApplicantListAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBClearApplicantListAck : public ::google::protobuf::Message {
 public:
  PBClearApplicantListAck();
  virtual ~PBClearApplicantListAck();
  
  PBClearApplicantListAck(const PBClearApplicantListAck& from);
  
  inline PBClearApplicantListAck& operator=(const PBClearApplicantListAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBClearApplicantListAck& default_instance();
  
  void Swap(PBClearApplicantListAck* other);
  
  // implements Message ----------------------------------------------
  
  PBClearApplicantListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBClearApplicantListAck& from);
  void MergeFrom(const PBClearApplicantListAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:PBClearApplicantListAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBClearApplicantListAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamAcceptApplyFromListAsk : public ::google::protobuf::Message {
 public:
  PBC2GTeamAcceptApplyFromListAsk();
  virtual ~PBC2GTeamAcceptApplyFromListAsk();
  
  PBC2GTeamAcceptApplyFromListAsk(const PBC2GTeamAcceptApplyFromListAsk& from);
  
  inline PBC2GTeamAcceptApplyFromListAsk& operator=(const PBC2GTeamAcceptApplyFromListAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamAcceptApplyFromListAsk& default_instance();
  
  void Swap(PBC2GTeamAcceptApplyFromListAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamAcceptApplyFromListAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamAcceptApplyFromListAsk& from);
  void MergeFrom(const PBC2GTeamAcceptApplyFromListAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamAcceptApplyFromListAsk)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamAcceptApplyFromListAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamAcceptApplyFromListAck : public ::google::protobuf::Message {
 public:
  PBTeamAcceptApplyFromListAck();
  virtual ~PBTeamAcceptApplyFromListAck();
  
  PBTeamAcceptApplyFromListAck(const PBTeamAcceptApplyFromListAck& from);
  
  inline PBTeamAcceptApplyFromListAck& operator=(const PBTeamAcceptApplyFromListAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamAcceptApplyFromListAck& default_instance();
  
  void Swap(PBTeamAcceptApplyFromListAck* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamAcceptApplyFromListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamAcceptApplyFromListAck& from);
  void MergeFrom(const PBTeamAcceptApplyFromListAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamAcceptApplyFromListAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamAcceptApplyFromListAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GSearchTeamByTargetAsk : public ::google::protobuf::Message {
 public:
  PBC2GSearchTeamByTargetAsk();
  virtual ~PBC2GSearchTeamByTargetAsk();
  
  PBC2GSearchTeamByTargetAsk(const PBC2GSearchTeamByTargetAsk& from);
  
  inline PBC2GSearchTeamByTargetAsk& operator=(const PBC2GSearchTeamByTargetAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GSearchTeamByTargetAsk& default_instance();
  
  void Swap(PBC2GSearchTeamByTargetAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GSearchTeamByTargetAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GSearchTeamByTargetAsk& from);
  void MergeFrom(const PBC2GSearchTeamByTargetAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamTarget target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::PBTeamTarget& target() const;
  inline ::PBTeamTarget* mutable_target();
  inline ::PBTeamTarget* release_target();
  
  // optional uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GSearchTeamByTargetAsk)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamTarget* target_;
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GSearchTeamByTargetAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBSearchTeamByTargetAck : public ::google::protobuf::Message {
 public:
  PBSearchTeamByTargetAck();
  virtual ~PBSearchTeamByTargetAck();
  
  PBSearchTeamByTargetAck(const PBSearchTeamByTargetAck& from);
  
  inline PBSearchTeamByTargetAck& operator=(const PBSearchTeamByTargetAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSearchTeamByTargetAck& default_instance();
  
  void Swap(PBSearchTeamByTargetAck* other);
  
  // implements Message ----------------------------------------------
  
  PBSearchTeamByTargetAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSearchTeamByTargetAck& from);
  void MergeFrom(const PBSearchTeamByTargetAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamTarget target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline const ::PBTeamTarget& target() const;
  inline ::PBTeamTarget* mutable_target();
  inline ::PBTeamTarget* release_target();
  
  // repeated .PBTeamInfoSimple teams = 2;
  inline int teams_size() const;
  inline void clear_teams();
  static const int kTeamsFieldNumber = 2;
  inline const ::PBTeamInfoSimple& teams(int index) const;
  inline ::PBTeamInfoSimple* mutable_teams(int index);
  inline ::PBTeamInfoSimple* add_teams();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamInfoSimple >&
      teams() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamInfoSimple >*
      mutable_teams();
  
  // optional uint32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSearchTeamByTargetAck)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamTarget* target_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamInfoSimple > teams_;
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBSearchTeamByTargetAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GApplyTeamByTargetAsk : public ::google::protobuf::Message {
 public:
  PBC2GApplyTeamByTargetAsk();
  virtual ~PBC2GApplyTeamByTargetAsk();
  
  PBC2GApplyTeamByTargetAsk(const PBC2GApplyTeamByTargetAsk& from);
  
  inline PBC2GApplyTeamByTargetAsk& operator=(const PBC2GApplyTeamByTargetAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GApplyTeamByTargetAsk& default_instance();
  
  void Swap(PBC2GApplyTeamByTargetAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GApplyTeamByTargetAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GApplyTeamByTargetAsk& from);
  void MergeFrom(const PBC2GApplyTeamByTargetAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GApplyTeamByTargetAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 teamid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GApplyTeamByTargetAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBApplyTeamByTargetAck : public ::google::protobuf::Message {
 public:
  PBApplyTeamByTargetAck();
  virtual ~PBApplyTeamByTargetAck();
  
  PBApplyTeamByTargetAck(const PBApplyTeamByTargetAck& from);
  
  inline PBApplyTeamByTargetAck& operator=(const PBApplyTeamByTargetAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBApplyTeamByTargetAck& default_instance();
  
  void Swap(PBApplyTeamByTargetAck* other);
  
  // implements Message ----------------------------------------------
  
  PBApplyTeamByTargetAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBApplyTeamByTargetAck& from);
  void MergeFrom(const PBApplyTeamByTargetAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:PBApplyTeamByTargetAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBApplyTeamByTargetAck* default_instance_;
};
// -------------------------------------------------------------------

class PBApplyedTeamIdListNtf : public ::google::protobuf::Message {
 public:
  PBApplyedTeamIdListNtf();
  virtual ~PBApplyedTeamIdListNtf();
  
  PBApplyedTeamIdListNtf(const PBApplyedTeamIdListNtf& from);
  
  inline PBApplyedTeamIdListNtf& operator=(const PBApplyedTeamIdListNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBApplyedTeamIdListNtf& default_instance();
  
  void Swap(PBApplyedTeamIdListNtf* other);
  
  // implements Message ----------------------------------------------
  
  PBApplyedTeamIdListNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBApplyedTeamIdListNtf& from);
  void MergeFrom(const PBApplyedTeamIdListNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint64 teamids = 1;
  inline int teamids_size() const;
  inline void clear_teamids();
  static const int kTeamidsFieldNumber = 1;
  inline ::google::protobuf::uint64 teamids(int index) const;
  inline void set_teamids(int index, ::google::protobuf::uint64 value);
  inline void add_teamids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      teamids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_teamids();
  
  // @@protoc_insertion_point(class_scope:PBApplyedTeamIdListNtf)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > teamids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBApplyedTeamIdListNtf* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GCancleApplyTeamByTargetAsk : public ::google::protobuf::Message {
 public:
  PBC2GCancleApplyTeamByTargetAsk();
  virtual ~PBC2GCancleApplyTeamByTargetAsk();
  
  PBC2GCancleApplyTeamByTargetAsk(const PBC2GCancleApplyTeamByTargetAsk& from);
  
  inline PBC2GCancleApplyTeamByTargetAsk& operator=(const PBC2GCancleApplyTeamByTargetAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GCancleApplyTeamByTargetAsk& default_instance();
  
  void Swap(PBC2GCancleApplyTeamByTargetAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GCancleApplyTeamByTargetAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GCancleApplyTeamByTargetAsk& from);
  void MergeFrom(const PBC2GCancleApplyTeamByTargetAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 teamid = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GCancleApplyTeamByTargetAsk)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 teamid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GCancleApplyTeamByTargetAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBCancleApplyTeamByTargetAck : public ::google::protobuf::Message {
 public:
  PBCancleApplyTeamByTargetAck();
  virtual ~PBCancleApplyTeamByTargetAck();
  
  PBCancleApplyTeamByTargetAck(const PBCancleApplyTeamByTargetAck& from);
  
  inline PBCancleApplyTeamByTargetAck& operator=(const PBCancleApplyTeamByTargetAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCancleApplyTeamByTargetAck& default_instance();
  
  void Swap(PBCancleApplyTeamByTargetAck* other);
  
  // implements Message ----------------------------------------------
  
  PBCancleApplyTeamByTargetAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCancleApplyTeamByTargetAck& from);
  void MergeFrom(const PBCancleApplyTeamByTargetAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:PBCancleApplyTeamByTargetAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBCancleApplyTeamByTargetAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GAcceptTeamTaskAsk : public ::google::protobuf::Message {
 public:
  PBC2GAcceptTeamTaskAsk();
  virtual ~PBC2GAcceptTeamTaskAsk();
  
  PBC2GAcceptTeamTaskAsk(const PBC2GAcceptTeamTaskAsk& from);
  
  inline PBC2GAcceptTeamTaskAsk& operator=(const PBC2GAcceptTeamTaskAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GAcceptTeamTaskAsk& default_instance();
  
  void Swap(PBC2GAcceptTeamTaskAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GAcceptTeamTaskAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GAcceptTeamTaskAsk& from);
  void MergeFrom(const PBC2GAcceptTeamTaskAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 npcunitid = 2;
  inline bool has_npcunitid() const;
  inline void clear_npcunitid();
  static const int kNpcunitidFieldNumber = 2;
  inline ::google::protobuf::uint32 npcunitid() const;
  inline void set_npcunitid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GAcceptTeamTaskAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_npcunitid();
  inline void clear_has_npcunitid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 npcunitid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GAcceptTeamTaskAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CAcceptTeamTaskAck : public ::google::protobuf::Message {
 public:
  PBG2CAcceptTeamTaskAck();
  virtual ~PBG2CAcceptTeamTaskAck();
  
  PBG2CAcceptTeamTaskAck(const PBG2CAcceptTeamTaskAck& from);
  
  inline PBG2CAcceptTeamTaskAck& operator=(const PBG2CAcceptTeamTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CAcceptTeamTaskAck& default_instance();
  
  void Swap(PBG2CAcceptTeamTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CAcceptTeamTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CAcceptTeamTaskAck& from);
  void MergeFrom(const PBG2CAcceptTeamTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamTask teamtask = 1;
  inline bool has_teamtask() const;
  inline void clear_teamtask();
  static const int kTeamtaskFieldNumber = 1;
  inline const ::PBTeamTask& teamtask() const;
  inline ::PBTeamTask* mutable_teamtask();
  inline ::PBTeamTask* release_teamtask();
  
  // @@protoc_insertion_point(class_scope:PBG2CAcceptTeamTaskAck)
 private:
  inline void set_has_teamtask();
  inline void clear_has_teamtask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamTask* teamtask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CAcceptTeamTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GEnterTeamTaskCopymapAsk : public ::google::protobuf::Message {
 public:
  PBC2GEnterTeamTaskCopymapAsk();
  virtual ~PBC2GEnterTeamTaskCopymapAsk();
  
  PBC2GEnterTeamTaskCopymapAsk(const PBC2GEnterTeamTaskCopymapAsk& from);
  
  inline PBC2GEnterTeamTaskCopymapAsk& operator=(const PBC2GEnterTeamTaskCopymapAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GEnterTeamTaskCopymapAsk& default_instance();
  
  void Swap(PBC2GEnterTeamTaskCopymapAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GEnterTeamTaskCopymapAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GEnterTeamTaskCopymapAsk& from);
  void MergeFrom(const PBC2GEnterTeamTaskCopymapAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 npcunitid = 1;
  inline bool has_npcunitid() const;
  inline void clear_npcunitid();
  static const int kNpcunitidFieldNumber = 1;
  inline ::google::protobuf::uint32 npcunitid() const;
  inline void set_npcunitid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GEnterTeamTaskCopymapAsk)
 private:
  inline void set_has_npcunitid();
  inline void clear_has_npcunitid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 npcunitid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GEnterTeamTaskCopymapAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GCompleteTeamTaskAsk : public ::google::protobuf::Message {
 public:
  PBC2GCompleteTeamTaskAsk();
  virtual ~PBC2GCompleteTeamTaskAsk();
  
  PBC2GCompleteTeamTaskAsk(const PBC2GCompleteTeamTaskAsk& from);
  
  inline PBC2GCompleteTeamTaskAsk& operator=(const PBC2GCompleteTeamTaskAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GCompleteTeamTaskAsk& default_instance();
  
  void Swap(PBC2GCompleteTeamTaskAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GCompleteTeamTaskAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GCompleteTeamTaskAsk& from);
  void MergeFrom(const PBC2GCompleteTeamTaskAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 npcunitid = 1;
  inline bool has_npcunitid() const;
  inline void clear_npcunitid();
  static const int kNpcunitidFieldNumber = 1;
  inline ::google::protobuf::uint32 npcunitid() const;
  inline void set_npcunitid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GCompleteTeamTaskAsk)
 private:
  inline void set_has_npcunitid();
  inline void clear_has_npcunitid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 npcunitid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GCompleteTeamTaskAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCompleteTeamTaskAck : public ::google::protobuf::Message {
 public:
  PBG2CCompleteTeamTaskAck();
  virtual ~PBG2CCompleteTeamTaskAck();
  
  PBG2CCompleteTeamTaskAck(const PBG2CCompleteTeamTaskAck& from);
  
  inline PBG2CCompleteTeamTaskAck& operator=(const PBG2CCompleteTeamTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCompleteTeamTaskAck& default_instance();
  
  void Swap(PBG2CCompleteTeamTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCompleteTeamTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCompleteTeamTaskAck& from);
  void MergeFrom(const PBG2CCompleteTeamTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBExpendNum expend = 1;
  inline int expend_size() const;
  inline void clear_expend();
  static const int kExpendFieldNumber = 1;
  inline const ::PBExpendNum& expend(int index) const;
  inline ::PBExpendNum* mutable_expend(int index);
  inline ::PBExpendNum* add_expend();
  inline const ::google::protobuf::RepeatedPtrField< ::PBExpendNum >&
      expend() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBExpendNum >*
      mutable_expend();
  
  // repeated .PBItemNum item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::PBItemNum& item(int index) const;
  inline ::PBItemNum* mutable_item(int index);
  inline ::PBItemNum* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemNum >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemNum >*
      mutable_item();
  
  // repeated .PBItemNum leaderitem = 3;
  inline int leaderitem_size() const;
  inline void clear_leaderitem();
  static const int kLeaderitemFieldNumber = 3;
  inline const ::PBItemNum& leaderitem(int index) const;
  inline ::PBItemNum* mutable_leaderitem(int index);
  inline ::PBItemNum* add_leaderitem();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemNum >&
      leaderitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemNum >*
      mutable_leaderitem();
  
  // @@protoc_insertion_point(class_scope:PBG2CCompleteTeamTaskAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBExpendNum > expend_;
  ::google::protobuf::RepeatedPtrField< ::PBItemNum > item_;
  ::google::protobuf::RepeatedPtrField< ::PBItemNum > leaderitem_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCompleteTeamTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamFollowAsk : public ::google::protobuf::Message {
 public:
  PBC2GTeamFollowAsk();
  virtual ~PBC2GTeamFollowAsk();
  
  PBC2GTeamFollowAsk(const PBC2GTeamFollowAsk& from);
  
  inline PBC2GTeamFollowAsk& operator=(const PBC2GTeamFollowAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamFollowAsk& default_instance();
  
  void Swap(PBC2GTeamFollowAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamFollowAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamFollowAsk& from);
  void MergeFrom(const PBC2GTeamFollowAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isfollow = 1;
  inline bool has_isfollow() const;
  inline void clear_isfollow();
  static const int kIsfollowFieldNumber = 1;
  inline bool isfollow() const;
  inline void set_isfollow(bool value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamFollowAsk)
 private:
  inline void set_has_isfollow();
  inline void clear_has_isfollow();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isfollow_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamFollowAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CTeamFollowAck : public ::google::protobuf::Message {
 public:
  PBG2CTeamFollowAck();
  virtual ~PBG2CTeamFollowAck();
  
  PBG2CTeamFollowAck(const PBG2CTeamFollowAck& from);
  
  inline PBG2CTeamFollowAck& operator=(const PBG2CTeamFollowAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CTeamFollowAck& default_instance();
  
  void Swap(PBG2CTeamFollowAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CTeamFollowAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CTeamFollowAck& from);
  void MergeFrom(const PBG2CTeamFollowAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional bool isfollow = 2;
  inline bool has_isfollow() const;
  inline void clear_isfollow();
  static const int kIsfollowFieldNumber = 2;
  inline bool isfollow() const;
  inline void set_isfollow(bool value);
  
  // @@protoc_insertion_point(class_scope:PBG2CTeamFollowAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_isfollow();
  inline void clear_has_isfollow();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  bool isfollow_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CTeamFollowAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamRemainConfirmAsk : public ::google::protobuf::Message {
 public:
  PBC2GTeamRemainConfirmAsk();
  virtual ~PBC2GTeamRemainConfirmAsk();
  
  PBC2GTeamRemainConfirmAsk(const PBC2GTeamRemainConfirmAsk& from);
  
  inline PBC2GTeamRemainConfirmAsk& operator=(const PBC2GTeamRemainConfirmAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamRemainConfirmAsk& default_instance();
  
  void Swap(PBC2GTeamRemainConfirmAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamRemainConfirmAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamRemainConfirmAsk& from);
  void MergeFrom(const PBC2GTeamRemainConfirmAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamRemainConfirmAsk)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamRemainConfirmAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CTeamRemainConfirmAck : public ::google::protobuf::Message {
 public:
  PBG2CTeamRemainConfirmAck();
  virtual ~PBG2CTeamRemainConfirmAck();
  
  PBG2CTeamRemainConfirmAck(const PBG2CTeamRemainConfirmAck& from);
  
  inline PBG2CTeamRemainConfirmAck& operator=(const PBG2CTeamRemainConfirmAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CTeamRemainConfirmAck& default_instance();
  
  void Swap(PBG2CTeamRemainConfirmAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CTeamRemainConfirmAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CTeamRemainConfirmAck& from);
  void MergeFrom(const PBG2CTeamRemainConfirmAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CTeamRemainConfirmAck)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CTeamRemainConfirmAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GTeamConfirmAsk : public ::google::protobuf::Message {
 public:
  PBC2GTeamConfirmAsk();
  virtual ~PBC2GTeamConfirmAsk();
  
  PBC2GTeamConfirmAsk(const PBC2GTeamConfirmAsk& from);
  
  inline PBC2GTeamConfirmAsk& operator=(const PBC2GTeamConfirmAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GTeamConfirmAsk& default_instance();
  
  void Swap(PBC2GTeamConfirmAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GTeamConfirmAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GTeamConfirmAsk& from);
  void MergeFrom(const PBC2GTeamConfirmAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isconfirm = 1;
  inline bool has_isconfirm() const;
  inline void clear_isconfirm();
  static const int kIsconfirmFieldNumber = 1;
  inline bool isconfirm() const;
  inline void set_isconfirm(bool value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GTeamConfirmAsk)
 private:
  inline void set_has_isconfirm();
  inline void clear_has_isconfirm();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isconfirm_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GTeamConfirmAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CTeamConfirmAck : public ::google::protobuf::Message {
 public:
  PBG2CTeamConfirmAck();
  virtual ~PBG2CTeamConfirmAck();
  
  PBG2CTeamConfirmAck(const PBG2CTeamConfirmAck& from);
  
  inline PBG2CTeamConfirmAck& operator=(const PBG2CTeamConfirmAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CTeamConfirmAck& default_instance();
  
  void Swap(PBG2CTeamConfirmAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CTeamConfirmAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CTeamConfirmAck& from);
  void MergeFrom(const PBG2CTeamConfirmAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional bool isconfirm = 2;
  inline bool has_isconfirm() const;
  inline void clear_isconfirm();
  static const int kIsconfirmFieldNumber = 2;
  inline bool isconfirm() const;
  inline void set_isconfirm(bool value);
  
  // @@protoc_insertion_point(class_scope:PBG2CTeamConfirmAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_isconfirm();
  inline void clear_has_isconfirm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  bool isconfirm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CTeamConfirmAck* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CBroadMsg : public ::google::protobuf::Message {
 public:
  PBG2CBroadMsg();
  virtual ~PBG2CBroadMsg();
  
  PBG2CBroadMsg(const PBG2CBroadMsg& from);
  
  inline PBG2CBroadMsg& operator=(const PBG2CBroadMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CBroadMsg& default_instance();
  
  void Swap(PBG2CBroadMsg* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CBroadMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CBroadMsg& from);
  void MergeFrom(const PBG2CBroadMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool isconfirm = 1;
  inline bool has_isconfirm() const;
  inline void clear_isconfirm();
  static const int kIsconfirmFieldNumber = 1;
  inline bool isconfirm() const;
  inline void set_isconfirm(bool value);
  
  // @@protoc_insertion_point(class_scope:PBG2CBroadMsg)
 private:
  inline void set_has_isconfirm();
  inline void clear_has_isconfirm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool isconfirm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CBroadMsg* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CMemberHitAck : public ::google::protobuf::Message {
 public:
  PBG2CMemberHitAck();
  virtual ~PBG2CMemberHitAck();
  
  PBG2CMemberHitAck(const PBG2CMemberHitAck& from);
  
  inline PBG2CMemberHitAck& operator=(const PBG2CMemberHitAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CMemberHitAck& default_instance();
  
  void Swap(PBG2CMemberHitAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CMemberHitAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CMemberHitAck& from);
  void MergeFrom(const PBG2CMemberHitAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBTeamMemberCondition condition = 1;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 1;
  inline const ::PBTeamMemberCondition& condition() const;
  inline ::PBTeamMemberCondition* mutable_condition();
  inline ::PBTeamMemberCondition* release_condition();
  
  // @@protoc_insertion_point(class_scope:PBG2CMemberHitAck)
 private:
  inline void set_has_condition();
  inline void clear_has_condition();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBTeamMemberCondition* condition_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Team_2eproto();
  friend void protobuf_AssignDesc_Team_2eproto();
  friend void protobuf_ShutdownFile_Team_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CMemberHitAck* default_instance_;
};
// ===================================================================


// ===================================================================

// PBTeamMember

// optional .PBPlayerAvatar avatar = 1;
inline bool PBTeamMember::has_avatar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamMember::set_has_avatar() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamMember::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamMember::clear_avatar() {
  if (avatar_ != NULL) avatar_->::PBPlayerAvatar::Clear();
  clear_has_avatar();
}
inline const ::PBPlayerAvatar& PBTeamMember::avatar() const {
  return avatar_ != NULL ? *avatar_ : *default_instance_->avatar_;
}
inline ::PBPlayerAvatar* PBTeamMember::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == NULL) avatar_ = new ::PBPlayerAvatar;
  return avatar_;
}
inline ::PBPlayerAvatar* PBTeamMember::release_avatar() {
  clear_has_avatar();
  ::PBPlayerAvatar* temp = avatar_;
  avatar_ = NULL;
  return temp;
}

// optional uint32 fightpower = 2;
inline bool PBTeamMember::has_fightpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamMember::set_has_fightpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamMember::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamMember::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBTeamMember::fightpower() const {
  return fightpower_;
}
inline void PBTeamMember::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional bool online = 3;
inline bool PBTeamMember::has_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamMember::set_has_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamMember::clear_has_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamMember::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool PBTeamMember::online() const {
  return online_;
}
inline void PBTeamMember::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint32 time = 4;
inline bool PBTeamMember::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTeamMember::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTeamMember::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTeamMember::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBTeamMember::time() const {
  return time_;
}
inline void PBTeamMember::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 sceneid = 5;
inline bool PBTeamMember::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTeamMember::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTeamMember::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTeamMember::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBTeamMember::sceneid() const {
  return sceneid_;
}
inline void PBTeamMember::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 cellid = 6;
inline bool PBTeamMember::has_cellid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBTeamMember::set_has_cellid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBTeamMember::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBTeamMember::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 PBTeamMember::cellid() const {
  return cellid_;
}
inline void PBTeamMember::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional uint32 mark = 7;
inline bool PBTeamMember::has_mark() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBTeamMember::set_has_mark() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBTeamMember::clear_has_mark() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBTeamMember::clear_mark() {
  mark_ = 0u;
  clear_has_mark();
}
inline ::google::protobuf::uint32 PBTeamMember::mark() const {
  return mark_;
}
inline void PBTeamMember::set_mark(::google::protobuf::uint32 value) {
  set_has_mark();
  mark_ = value;
}

// optional uint32 calluptime = 8;
inline bool PBTeamMember::has_calluptime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBTeamMember::set_has_calluptime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBTeamMember::clear_has_calluptime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBTeamMember::clear_calluptime() {
  calluptime_ = 0u;
  clear_has_calluptime();
}
inline ::google::protobuf::uint32 PBTeamMember::calluptime() const {
  return calluptime_;
}
inline void PBTeamMember::set_calluptime(::google::protobuf::uint32 value) {
  set_has_calluptime();
  calluptime_ = value;
}

// optional uint32 level = 9;
inline bool PBTeamMember::has_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBTeamMember::set_has_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBTeamMember::clear_has_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBTeamMember::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBTeamMember::level() const {
  return level_;
}
inline void PBTeamMember::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 teamconfirmstate = 10;
inline bool PBTeamMember::has_teamconfirmstate() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBTeamMember::set_has_teamconfirmstate() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBTeamMember::clear_has_teamconfirmstate() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBTeamMember::clear_teamconfirmstate() {
  teamconfirmstate_ = 0u;
  clear_has_teamconfirmstate();
}
inline ::google::protobuf::uint32 PBTeamMember::teamconfirmstate() const {
  return teamconfirmstate_;
}
inline void PBTeamMember::set_teamconfirmstate(::google::protobuf::uint32 value) {
  set_has_teamconfirmstate();
  teamconfirmstate_ = value;
}

// -------------------------------------------------------------------

// PBTeamMemberSimple

// optional uint32 level = 1;
inline bool PBTeamMemberSimple::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamMemberSimple::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamMemberSimple::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamMemberSimple::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBTeamMemberSimple::level() const {
  return level_;
}
inline void PBTeamMemberSimple::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 job = 2;
inline bool PBTeamMemberSimple::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamMemberSimple::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamMemberSimple::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamMemberSimple::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBTeamMemberSimple::job() const {
  return job_;
}
inline void PBTeamMemberSimple::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// -------------------------------------------------------------------

// PBTeamTarget

// optional uint32 targetid = 1;
inline bool PBTeamTarget::has_targetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamTarget::set_has_targetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamTarget::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamTarget::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 PBTeamTarget::targetid() const {
  return targetid_;
}
inline void PBTeamTarget::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional uint32 difficulty = 2;
inline bool PBTeamTarget::has_difficulty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamTarget::set_has_difficulty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamTarget::clear_has_difficulty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamTarget::clear_difficulty() {
  difficulty_ = 0u;
  clear_has_difficulty();
}
inline ::google::protobuf::uint32 PBTeamTarget::difficulty() const {
  return difficulty_;
}
inline void PBTeamTarget::set_difficulty(::google::protobuf::uint32 value) {
  set_has_difficulty();
  difficulty_ = value;
}

// optional uint32 levelmin = 3;
inline bool PBTeamTarget::has_levelmin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamTarget::set_has_levelmin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamTarget::clear_has_levelmin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamTarget::clear_levelmin() {
  levelmin_ = 0u;
  clear_has_levelmin();
}
inline ::google::protobuf::uint32 PBTeamTarget::levelmin() const {
  return levelmin_;
}
inline void PBTeamTarget::set_levelmin(::google::protobuf::uint32 value) {
  set_has_levelmin();
  levelmin_ = value;
}

// optional uint32 levelmax = 4;
inline bool PBTeamTarget::has_levelmax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTeamTarget::set_has_levelmax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTeamTarget::clear_has_levelmax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTeamTarget::clear_levelmax() {
  levelmax_ = 0u;
  clear_has_levelmax();
}
inline ::google::protobuf::uint32 PBTeamTarget::levelmax() const {
  return levelmax_;
}
inline void PBTeamTarget::set_levelmax(::google::protobuf::uint32 value) {
  set_has_levelmax();
  levelmax_ = value;
}

// optional uint32 activeid = 5;
inline bool PBTeamTarget::has_activeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTeamTarget::set_has_activeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTeamTarget::clear_has_activeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTeamTarget::clear_activeid() {
  activeid_ = 0u;
  clear_has_activeid();
}
inline ::google::protobuf::uint32 PBTeamTarget::activeid() const {
  return activeid_;
}
inline void PBTeamTarget::set_activeid(::google::protobuf::uint32 value) {
  set_has_activeid();
  activeid_ = value;
}

// optional bool isautomatch = 6;
inline bool PBTeamTarget::has_isautomatch() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBTeamTarget::set_has_isautomatch() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBTeamTarget::clear_has_isautomatch() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBTeamTarget::clear_isautomatch() {
  isautomatch_ = false;
  clear_has_isautomatch();
}
inline bool PBTeamTarget::isautomatch() const {
  return isautomatch_;
}
inline void PBTeamTarget::set_isautomatch(bool value) {
  set_has_isautomatch();
  isautomatch_ = value;
}

// optional bool isautoaccept = 7;
inline bool PBTeamTarget::has_isautoaccept() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBTeamTarget::set_has_isautoaccept() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBTeamTarget::clear_has_isautoaccept() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBTeamTarget::clear_isautoaccept() {
  isautoaccept_ = false;
  clear_has_isautoaccept();
}
inline bool PBTeamTarget::isautoaccept() const {
  return isautoaccept_;
}
inline void PBTeamTarget::set_isautoaccept(bool value) {
  set_has_isautoaccept();
  isautoaccept_ = value;
}

// optional uint32 cash = 8;
inline bool PBTeamTarget::has_cash() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBTeamTarget::set_has_cash() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBTeamTarget::clear_has_cash() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBTeamTarget::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 PBTeamTarget::cash() const {
  return cash_;
}
inline void PBTeamTarget::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// -------------------------------------------------------------------

// PBTeamMemberJobRequire

// optional uint32 postion = 1;
inline bool PBTeamMemberJobRequire::has_postion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamMemberJobRequire::set_has_postion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamMemberJobRequire::clear_has_postion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamMemberJobRequire::clear_postion() {
  postion_ = 0u;
  clear_has_postion();
}
inline ::google::protobuf::uint32 PBTeamMemberJobRequire::postion() const {
  return postion_;
}
inline void PBTeamMemberJobRequire::set_postion(::google::protobuf::uint32 value) {
  set_has_postion();
  postion_ = value;
}

// repeated uint32 jobrequire = 2;
inline int PBTeamMemberJobRequire::jobrequire_size() const {
  return jobrequire_.size();
}
inline void PBTeamMemberJobRequire::clear_jobrequire() {
  jobrequire_.Clear();
}
inline ::google::protobuf::uint32 PBTeamMemberJobRequire::jobrequire(int index) const {
  return jobrequire_.Get(index);
}
inline void PBTeamMemberJobRequire::set_jobrequire(int index, ::google::protobuf::uint32 value) {
  jobrequire_.Set(index, value);
}
inline void PBTeamMemberJobRequire::add_jobrequire(::google::protobuf::uint32 value) {
  jobrequire_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTeamMemberJobRequire::jobrequire() const {
  return jobrequire_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTeamMemberJobRequire::mutable_jobrequire() {
  return &jobrequire_;
}

// -------------------------------------------------------------------

// PBTeamTask

// optional uint32 id = 1;
inline bool PBTeamTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamTask::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBTeamTask::id() const {
  return id_;
}
inline void PBTeamTask::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 copymapid = 2;
inline bool PBTeamTask::has_copymapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamTask::set_has_copymapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamTask::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamTask::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBTeamTask::copymapid() const {
  return copymapid_;
}
inline void PBTeamTask::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 npcid = 3;
inline bool PBTeamTask::has_npcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamTask::set_has_npcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamTask::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamTask::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 PBTeamTask::npcid() const {
  return npcid_;
}
inline void PBTeamTask::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
}

// optional uint32 state = 4;
inline bool PBTeamTask::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTeamTask::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTeamTask::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTeamTask::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 PBTeamTask::state() const {
  return state_;
}
inline void PBTeamTask::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// PBTeamInfo

// optional uint64 teamid = 1;
inline bool PBTeamInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamInfo::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 PBTeamInfo::teamid() const {
  return teamid_;
}
inline void PBTeamInfo::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint32 learderid = 2;
inline bool PBTeamInfo::has_learderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamInfo::set_has_learderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamInfo::clear_has_learderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamInfo::clear_learderid() {
  learderid_ = 0u;
  clear_has_learderid();
}
inline ::google::protobuf::uint32 PBTeamInfo::learderid() const {
  return learderid_;
}
inline void PBTeamInfo::set_learderid(::google::protobuf::uint32 value) {
  set_has_learderid();
  learderid_ = value;
}

// optional uint32 allottype = 3;
inline bool PBTeamInfo::has_allottype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamInfo::set_has_allottype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamInfo::clear_has_allottype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamInfo::clear_allottype() {
  allottype_ = 0u;
  clear_has_allottype();
}
inline ::google::protobuf::uint32 PBTeamInfo::allottype() const {
  return allottype_;
}
inline void PBTeamInfo::set_allottype(::google::protobuf::uint32 value) {
  set_has_allottype();
  allottype_ = value;
}

// repeated .PBTeamMember member = 4;
inline int PBTeamInfo::member_size() const {
  return member_.size();
}
inline void PBTeamInfo::clear_member() {
  member_.Clear();
}
inline const ::PBTeamMember& PBTeamInfo::member(int index) const {
  return member_.Get(index);
}
inline ::PBTeamMember* PBTeamInfo::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::PBTeamMember* PBTeamInfo::add_member() {
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMember >&
PBTeamInfo::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamMember >*
PBTeamInfo::mutable_member() {
  return &member_;
}

// optional .PBTeamTarget teamtarget = 5;
inline bool PBTeamInfo::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTeamInfo::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTeamInfo::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTeamInfo::clear_teamtarget() {
  if (teamtarget_ != NULL) teamtarget_->::PBTeamTarget::Clear();
  clear_has_teamtarget();
}
inline const ::PBTeamTarget& PBTeamInfo::teamtarget() const {
  return teamtarget_ != NULL ? *teamtarget_ : *default_instance_->teamtarget_;
}
inline ::PBTeamTarget* PBTeamInfo::mutable_teamtarget() {
  set_has_teamtarget();
  if (teamtarget_ == NULL) teamtarget_ = new ::PBTeamTarget;
  return teamtarget_;
}
inline ::PBTeamTarget* PBTeamInfo::release_teamtarget() {
  clear_has_teamtarget();
  ::PBTeamTarget* temp = teamtarget_;
  teamtarget_ = NULL;
  return temp;
}

// repeated .PBTeamMemberJobRequire jobs = 6;
inline int PBTeamInfo::jobs_size() const {
  return jobs_.size();
}
inline void PBTeamInfo::clear_jobs() {
  jobs_.Clear();
}
inline const ::PBTeamMemberJobRequire& PBTeamInfo::jobs(int index) const {
  return jobs_.Get(index);
}
inline ::PBTeamMemberJobRequire* PBTeamInfo::mutable_jobs(int index) {
  return jobs_.Mutable(index);
}
inline ::PBTeamMemberJobRequire* PBTeamInfo::add_jobs() {
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >&
PBTeamInfo::jobs() const {
  return jobs_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >*
PBTeamInfo::mutable_jobs() {
  return &jobs_;
}

// optional .PBTeamTask teamtask = 7;
inline bool PBTeamInfo::has_teamtask() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBTeamInfo::set_has_teamtask() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBTeamInfo::clear_has_teamtask() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBTeamInfo::clear_teamtask() {
  if (teamtask_ != NULL) teamtask_->::PBTeamTask::Clear();
  clear_has_teamtask();
}
inline const ::PBTeamTask& PBTeamInfo::teamtask() const {
  return teamtask_ != NULL ? *teamtask_ : *default_instance_->teamtask_;
}
inline ::PBTeamTask* PBTeamInfo::mutable_teamtask() {
  set_has_teamtask();
  if (teamtask_ == NULL) teamtask_ = new ::PBTeamTask;
  return teamtask_;
}
inline ::PBTeamTask* PBTeamInfo::release_teamtask() {
  clear_has_teamtask();
  ::PBTeamTask* temp = teamtask_;
  teamtask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBTeamInfoSimple

// optional uint64 teamid = 1;
inline bool PBTeamInfoSimple::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamInfoSimple::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamInfoSimple::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamInfoSimple::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 PBTeamInfoSimple::teamid() const {
  return teamid_;
}
inline void PBTeamInfoSimple::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional uint32 leaderplayerid = 2;
inline bool PBTeamInfoSimple::has_leaderplayerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamInfoSimple::set_has_leaderplayerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamInfoSimple::clear_has_leaderplayerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamInfoSimple::clear_leaderplayerid() {
  leaderplayerid_ = 0u;
  clear_has_leaderplayerid();
}
inline ::google::protobuf::uint32 PBTeamInfoSimple::leaderplayerid() const {
  return leaderplayerid_;
}
inline void PBTeamInfoSimple::set_leaderplayerid(::google::protobuf::uint32 value) {
  set_has_leaderplayerid();
  leaderplayerid_ = value;
}

// optional string leadername = 3;
inline bool PBTeamInfoSimple::has_leadername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamInfoSimple::set_has_leadername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamInfoSimple::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamInfoSimple::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::kEmptyString) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& PBTeamInfoSimple::leadername() const {
  return *leadername_;
}
inline void PBTeamInfoSimple::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
}
inline void PBTeamInfoSimple::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
}
inline void PBTeamInfoSimple::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamInfoSimple::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  return leadername_;
}
inline ::std::string* PBTeamInfoSimple::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 leadersceneid = 4;
inline bool PBTeamInfoSimple::has_leadersceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTeamInfoSimple::set_has_leadersceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTeamInfoSimple::clear_has_leadersceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTeamInfoSimple::clear_leadersceneid() {
  leadersceneid_ = 0u;
  clear_has_leadersceneid();
}
inline ::google::protobuf::uint32 PBTeamInfoSimple::leadersceneid() const {
  return leadersceneid_;
}
inline void PBTeamInfoSimple::set_leadersceneid(::google::protobuf::uint32 value) {
  set_has_leadersceneid();
  leadersceneid_ = value;
}

// optional uint32 leaderjob = 5;
inline bool PBTeamInfoSimple::has_leaderjob() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTeamInfoSimple::set_has_leaderjob() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTeamInfoSimple::clear_has_leaderjob() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTeamInfoSimple::clear_leaderjob() {
  leaderjob_ = 0u;
  clear_has_leaderjob();
}
inline ::google::protobuf::uint32 PBTeamInfoSimple::leaderjob() const {
  return leaderjob_;
}
inline void PBTeamInfoSimple::set_leaderjob(::google::protobuf::uint32 value) {
  set_has_leaderjob();
  leaderjob_ = value;
}

// repeated .PBTeamMemberSimple member = 6;
inline int PBTeamInfoSimple::member_size() const {
  return member_.size();
}
inline void PBTeamInfoSimple::clear_member() {
  member_.Clear();
}
inline const ::PBTeamMemberSimple& PBTeamInfoSimple::member(int index) const {
  return member_.Get(index);
}
inline ::PBTeamMemberSimple* PBTeamInfoSimple::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::PBTeamMemberSimple* PBTeamInfoSimple::add_member() {
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberSimple >&
PBTeamInfoSimple::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberSimple >*
PBTeamInfoSimple::mutable_member() {
  return &member_;
}

// optional .PBTeamTarget teamtarget = 7;
inline bool PBTeamInfoSimple::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBTeamInfoSimple::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBTeamInfoSimple::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBTeamInfoSimple::clear_teamtarget() {
  if (teamtarget_ != NULL) teamtarget_->::PBTeamTarget::Clear();
  clear_has_teamtarget();
}
inline const ::PBTeamTarget& PBTeamInfoSimple::teamtarget() const {
  return teamtarget_ != NULL ? *teamtarget_ : *default_instance_->teamtarget_;
}
inline ::PBTeamTarget* PBTeamInfoSimple::mutable_teamtarget() {
  set_has_teamtarget();
  if (teamtarget_ == NULL) teamtarget_ = new ::PBTeamTarget;
  return teamtarget_;
}
inline ::PBTeamTarget* PBTeamInfoSimple::release_teamtarget() {
  clear_has_teamtarget();
  ::PBTeamTarget* temp = teamtarget_;
  teamtarget_ = NULL;
  return temp;
}

// optional string leaderfactionbanner = 8;
inline bool PBTeamInfoSimple::has_leaderfactionbanner() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBTeamInfoSimple::set_has_leaderfactionbanner() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBTeamInfoSimple::clear_has_leaderfactionbanner() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBTeamInfoSimple::clear_leaderfactionbanner() {
  if (leaderfactionbanner_ != &::google::protobuf::internal::kEmptyString) {
    leaderfactionbanner_->clear();
  }
  clear_has_leaderfactionbanner();
}
inline const ::std::string& PBTeamInfoSimple::leaderfactionbanner() const {
  return *leaderfactionbanner_;
}
inline void PBTeamInfoSimple::set_leaderfactionbanner(const ::std::string& value) {
  set_has_leaderfactionbanner();
  if (leaderfactionbanner_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionbanner_ = new ::std::string;
  }
  leaderfactionbanner_->assign(value);
}
inline void PBTeamInfoSimple::set_leaderfactionbanner(const char* value) {
  set_has_leaderfactionbanner();
  if (leaderfactionbanner_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionbanner_ = new ::std::string;
  }
  leaderfactionbanner_->assign(value);
}
inline void PBTeamInfoSimple::set_leaderfactionbanner(const char* value, size_t size) {
  set_has_leaderfactionbanner();
  if (leaderfactionbanner_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionbanner_ = new ::std::string;
  }
  leaderfactionbanner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamInfoSimple::mutable_leaderfactionbanner() {
  set_has_leaderfactionbanner();
  if (leaderfactionbanner_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionbanner_ = new ::std::string;
  }
  return leaderfactionbanner_;
}
inline ::std::string* PBTeamInfoSimple::release_leaderfactionbanner() {
  clear_has_leaderfactionbanner();
  if (leaderfactionbanner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leaderfactionbanner_;
    leaderfactionbanner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 averagefightpower = 9;
inline bool PBTeamInfoSimple::has_averagefightpower() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBTeamInfoSimple::set_has_averagefightpower() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBTeamInfoSimple::clear_has_averagefightpower() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBTeamInfoSimple::clear_averagefightpower() {
  averagefightpower_ = 0u;
  clear_has_averagefightpower();
}
inline ::google::protobuf::uint32 PBTeamInfoSimple::averagefightpower() const {
  return averagefightpower_;
}
inline void PBTeamInfoSimple::set_averagefightpower(::google::protobuf::uint32 value) {
  set_has_averagefightpower();
  averagefightpower_ = value;
}

// optional uint32 leaderlevel = 10;
inline bool PBTeamInfoSimple::has_leaderlevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBTeamInfoSimple::set_has_leaderlevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBTeamInfoSimple::clear_has_leaderlevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBTeamInfoSimple::clear_leaderlevel() {
  leaderlevel_ = 0u;
  clear_has_leaderlevel();
}
inline ::google::protobuf::uint32 PBTeamInfoSimple::leaderlevel() const {
  return leaderlevel_;
}
inline void PBTeamInfoSimple::set_leaderlevel(::google::protobuf::uint32 value) {
  set_has_leaderlevel();
  leaderlevel_ = value;
}

// optional string leaderfactionname = 11;
inline bool PBTeamInfoSimple::has_leaderfactionname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBTeamInfoSimple::set_has_leaderfactionname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBTeamInfoSimple::clear_has_leaderfactionname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBTeamInfoSimple::clear_leaderfactionname() {
  if (leaderfactionname_ != &::google::protobuf::internal::kEmptyString) {
    leaderfactionname_->clear();
  }
  clear_has_leaderfactionname();
}
inline const ::std::string& PBTeamInfoSimple::leaderfactionname() const {
  return *leaderfactionname_;
}
inline void PBTeamInfoSimple::set_leaderfactionname(const ::std::string& value) {
  set_has_leaderfactionname();
  if (leaderfactionname_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionname_ = new ::std::string;
  }
  leaderfactionname_->assign(value);
}
inline void PBTeamInfoSimple::set_leaderfactionname(const char* value) {
  set_has_leaderfactionname();
  if (leaderfactionname_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionname_ = new ::std::string;
  }
  leaderfactionname_->assign(value);
}
inline void PBTeamInfoSimple::set_leaderfactionname(const char* value, size_t size) {
  set_has_leaderfactionname();
  if (leaderfactionname_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionname_ = new ::std::string;
  }
  leaderfactionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamInfoSimple::mutable_leaderfactionname() {
  set_has_leaderfactionname();
  if (leaderfactionname_ == &::google::protobuf::internal::kEmptyString) {
    leaderfactionname_ = new ::std::string;
  }
  return leaderfactionname_;
}
inline ::std::string* PBTeamInfoSimple::release_leaderfactionname() {
  clear_has_leaderfactionname();
  if (leaderfactionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leaderfactionname_;
    leaderfactionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 leaderfactionid = 12;
inline bool PBTeamInfoSimple::has_leaderfactionid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBTeamInfoSimple::set_has_leaderfactionid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBTeamInfoSimple::clear_has_leaderfactionid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBTeamInfoSimple::clear_leaderfactionid() {
  leaderfactionid_ = 0u;
  clear_has_leaderfactionid();
}
inline ::google::protobuf::uint32 PBTeamInfoSimple::leaderfactionid() const {
  return leaderfactionid_;
}
inline void PBTeamInfoSimple::set_leaderfactionid(::google::protobuf::uint32 value) {
  set_has_leaderfactionid();
  leaderfactionid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamInvite

// optional uint32 playerid = 1;
inline bool PBC2GTeamInvite::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamInvite::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamInvite::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamInvite::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamInvite::playerid() const {
  return playerid_;
}
inline void PBC2GTeamInvite::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamAcceptInvite

// optional uint32 playerid = 1;
inline bool PBC2GTeamAcceptInvite::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamAcceptInvite::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamAcceptInvite::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamAcceptInvite::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamAcceptInvite::playerid() const {
  return playerid_;
}
inline void PBC2GTeamAcceptInvite::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional bool accept = 2;
inline bool PBC2GTeamAcceptInvite::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamAcceptInvite::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamAcceptInvite::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamAcceptInvite::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool PBC2GTeamAcceptInvite::accept() const {
  return accept_;
}
inline void PBC2GTeamAcceptInvite::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamApply

// optional uint32 playerid = 1;
inline bool PBC2GTeamApply::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamApply::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamApply::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamApply::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamApply::playerid() const {
  return playerid_;
}
inline void PBC2GTeamApply::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamAcceptApply

// optional uint32 playerid = 1;
inline bool PBC2GTeamAcceptApply::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamAcceptApply::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamAcceptApply::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamAcceptApply::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamAcceptApply::playerid() const {
  return playerid_;
}
inline void PBC2GTeamAcceptApply::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional bool accept = 2;
inline bool PBC2GTeamAcceptApply::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamAcceptApply::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamAcceptApply::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamAcceptApply::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool PBC2GTeamAcceptApply::accept() const {
  return accept_;
}
inline void PBC2GTeamAcceptApply::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamLeave

// -------------------------------------------------------------------

// PBC2GTeamChangeLeader

// optional uint32 playerid = 1;
inline bool PBC2GTeamChangeLeader::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamChangeLeader::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamChangeLeader::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamChangeLeader::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamChangeLeader::playerid() const {
  return playerid_;
}
inline void PBC2GTeamChangeLeader::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamPublishAsk

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishAsk::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishAsk::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishAsk::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishAsk::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishAsk::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishAsk::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional string msg = 2;
inline bool PBC2GTeamPublishAsk::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishAsk::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishAsk::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishAsk::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& PBC2GTeamPublishAsk::msg() const {
  return *msg_;
}
inline void PBC2GTeamPublishAsk::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PBC2GTeamPublishAsk::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PBC2GTeamPublishAsk::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBC2GTeamPublishAsk::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* PBC2GTeamPublishAsk::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBC2GTeamPublishCancel

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishCancel::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishCancel::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishCancel::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishCancel::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishCancel::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishCancel::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamPublishInvite

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishInvite::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishInvite::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishInvite::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishInvite::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishInvite::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishInvite::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBC2GTeamPublishInvite::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishInvite::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishInvite::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishInvite::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishInvite::playerid() const {
  return playerid_;
}
inline void PBC2GTeamPublishInvite::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamPublishAcceptInvite

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishAcceptInvite::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishAcceptInvite::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishAcceptInvite::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishAcceptInvite::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishAcceptInvite::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishAcceptInvite::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBC2GTeamPublishAcceptInvite::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishAcceptInvite::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishAcceptInvite::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishAcceptInvite::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishAcceptInvite::playerid() const {
  return playerid_;
}
inline void PBC2GTeamPublishAcceptInvite::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional bool accept = 3;
inline bool PBC2GTeamPublishAcceptInvite::has_accept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamPublishAcceptInvite::set_has_accept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamPublishAcceptInvite::clear_has_accept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamPublishAcceptInvite::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool PBC2GTeamPublishAcceptInvite::accept() const {
  return accept_;
}
inline void PBC2GTeamPublishAcceptInvite::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamPublishList

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishList::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishList::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishList::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishList::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishList::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishList::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 beginidx = 2;
inline bool PBC2GTeamPublishList::has_beginidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishList::set_has_beginidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishList::clear_has_beginidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishList::clear_beginidx() {
  beginidx_ = 0u;
  clear_has_beginidx();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishList::beginidx() const {
  return beginidx_;
}
inline void PBC2GTeamPublishList::set_beginidx(::google::protobuf::uint32 value) {
  set_has_beginidx();
  beginidx_ = value;
}

// optional uint32 endidx = 3;
inline bool PBC2GTeamPublishList::has_endidx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamPublishList::set_has_endidx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamPublishList::clear_has_endidx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamPublishList::clear_endidx() {
  endidx_ = 0u;
  clear_has_endidx();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishList::endidx() const {
  return endidx_;
}
inline void PBC2GTeamPublishList::set_endidx(::google::protobuf::uint32 value) {
  set_has_endidx();
  endidx_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamKick

// optional uint32 playerid = 1;
inline bool PBC2GTeamKick::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamKick::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamKick::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamKick::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamKick::playerid() const {
  return playerid_;
}
inline void PBC2GTeamKick::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamKickVote

// optional uint32 playerid = 1;
inline bool PBC2GTeamKickVote::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamKickVote::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamKickVote::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamKickVote::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamKickVote::playerid() const {
  return playerid_;
}
inline void PBC2GTeamKickVote::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional bool agree = 2;
inline bool PBC2GTeamKickVote::has_agree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamKickVote::set_has_agree() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamKickVote::clear_has_agree() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamKickVote::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool PBC2GTeamKickVote::agree() const {
  return agree_;
}
inline void PBC2GTeamKickVote::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
}

// -------------------------------------------------------------------

// PBTeamSetAllot

// optional uint32 type = 1;
inline bool PBTeamSetAllot::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamSetAllot::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamSetAllot::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamSetAllot::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBTeamSetAllot::type() const {
  return type_;
}
inline void PBTeamSetAllot::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// PBTeamSetAllotVote

// optional uint32 type = 1;
inline bool PBTeamSetAllotVote::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamSetAllotVote::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamSetAllotVote::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamSetAllotVote::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBTeamSetAllotVote::type() const {
  return type_;
}
inline void PBTeamSetAllotVote::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bool agree = 2;
inline bool PBTeamSetAllotVote::has_agree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamSetAllotVote::set_has_agree() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamSetAllotVote::clear_has_agree() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamSetAllotVote::clear_agree() {
  agree_ = false;
  clear_has_agree();
}
inline bool PBTeamSetAllotVote::agree() const {
  return agree_;
}
inline void PBTeamSetAllotVote::set_agree(bool value) {
  set_has_agree();
  agree_ = value;
}

// -------------------------------------------------------------------

// PBTeamNearPlayerList

// optional uint32 beginidx = 1;
inline bool PBTeamNearPlayerList::has_beginidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamNearPlayerList::set_has_beginidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamNearPlayerList::clear_has_beginidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamNearPlayerList::clear_beginidx() {
  beginidx_ = 0u;
  clear_has_beginidx();
}
inline ::google::protobuf::uint32 PBTeamNearPlayerList::beginidx() const {
  return beginidx_;
}
inline void PBTeamNearPlayerList::set_beginidx(::google::protobuf::uint32 value) {
  set_has_beginidx();
  beginidx_ = value;
}

// optional uint32 endidx = 2;
inline bool PBTeamNearPlayerList::has_endidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamNearPlayerList::set_has_endidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamNearPlayerList::clear_has_endidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamNearPlayerList::clear_endidx() {
  endidx_ = 0u;
  clear_has_endidx();
}
inline ::google::protobuf::uint32 PBTeamNearPlayerList::endidx() const {
  return endidx_;
}
inline void PBTeamNearPlayerList::set_endidx(::google::protobuf::uint32 value) {
  set_has_endidx();
  endidx_ = value;
}

// -------------------------------------------------------------------

// PBTeamNearTeamList

// optional uint32 beginidx = 1;
inline bool PBTeamNearTeamList::has_beginidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamNearTeamList::set_has_beginidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamNearTeamList::clear_has_beginidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamNearTeamList::clear_beginidx() {
  beginidx_ = 0u;
  clear_has_beginidx();
}
inline ::google::protobuf::uint32 PBTeamNearTeamList::beginidx() const {
  return beginidx_;
}
inline void PBTeamNearTeamList::set_beginidx(::google::protobuf::uint32 value) {
  set_has_beginidx();
  beginidx_ = value;
}

// optional uint32 endidx = 2;
inline bool PBTeamNearTeamList::has_endidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamNearTeamList::set_has_endidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamNearTeamList::clear_has_endidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamNearTeamList::clear_endidx() {
  endidx_ = 0u;
  clear_has_endidx();
}
inline ::google::protobuf::uint32 PBTeamNearTeamList::endidx() const {
  return endidx_;
}
inline void PBTeamNearTeamList::set_endidx(::google::protobuf::uint32 value) {
  set_has_endidx();
  endidx_ = value;
}

// -------------------------------------------------------------------

// PBTeamAcceptInviteTransfer

// optional .PBPlayerDisplay display = 1;
inline bool PBTeamAcceptInviteTransfer::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamAcceptInviteTransfer::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamAcceptInviteTransfer::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamAcceptInviteTransfer::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBTeamAcceptInviteTransfer::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBTeamAcceptInviteTransfer::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBTeamAcceptInviteTransfer::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional bool accept = 2;
inline bool PBTeamAcceptInviteTransfer::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamAcceptInviteTransfer::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamAcceptInviteTransfer::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamAcceptInviteTransfer::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool PBTeamAcceptInviteTransfer::accept() const {
  return accept_;
}
inline void PBTeamAcceptInviteTransfer::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// PBTeamAcceptApplyTransfer

// optional .PBPlayerDisplay display = 1;
inline bool PBTeamAcceptApplyTransfer::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamAcceptApplyTransfer::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamAcceptApplyTransfer::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamAcceptApplyTransfer::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBTeamAcceptApplyTransfer::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBTeamAcceptApplyTransfer::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBTeamAcceptApplyTransfer::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional bool accept = 2;
inline bool PBTeamAcceptApplyTransfer::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamAcceptApplyTransfer::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamAcceptApplyTransfer::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamAcceptApplyTransfer::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool PBTeamAcceptApplyTransfer::accept() const {
  return accept_;
}
inline void PBTeamAcceptApplyTransfer::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamPublishAdd

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishAdd::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishAdd::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishAdd::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishAdd::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishAdd::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishAdd::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 time = 2;
inline bool PBC2GTeamPublishAdd::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishAdd::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishAdd::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishAdd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishAdd::time() const {
  return time_;
}
inline void PBC2GTeamPublishAdd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional string msg = 3;
inline bool PBC2GTeamPublishAdd::has_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamPublishAdd::set_has_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamPublishAdd::clear_has_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamPublishAdd::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& PBC2GTeamPublishAdd::msg() const {
  return *msg_;
}
inline void PBC2GTeamPublishAdd::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PBC2GTeamPublishAdd::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PBC2GTeamPublishAdd::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBC2GTeamPublishAdd::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* PBC2GTeamPublishAdd::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBC2GTeamPublishDel

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishDel::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishDel::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishDel::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishDel::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishDel::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishDel::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 reason = 2;
inline bool PBC2GTeamPublishDel::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishDel::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishDel::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishDel::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishDel::reason() const {
  return reason_;
}
inline void PBC2GTeamPublishDel::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamPublishInviteTransfer

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishInviteTransfer::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishInviteTransfer::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishInviteTransfer::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishInviteTransfer::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishInviteTransfer::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishInviteTransfer::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional .PBPlayerDisplay display = 2;
inline bool PBC2GTeamPublishInviteTransfer::has_display() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishInviteTransfer::set_has_display() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishInviteTransfer::clear_has_display() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishInviteTransfer::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBC2GTeamPublishInviteTransfer::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBC2GTeamPublishInviteTransfer::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBC2GTeamPublishInviteTransfer::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 fightpower = 3;
inline bool PBC2GTeamPublishInviteTransfer::has_fightpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamPublishInviteTransfer::set_has_fightpower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamPublishInviteTransfer::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamPublishInviteTransfer::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishInviteTransfer::fightpower() const {
  return fightpower_;
}
inline void PBC2GTeamPublishInviteTransfer::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamPublishAcceptInviteTransfer

// optional uint32 copymapid = 1;
inline bool PBC2GTeamPublishAcceptInviteTransfer::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBC2GTeamPublishAcceptInviteTransfer::copymapid() const {
  return copymapid_;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional .PBPlayerDisplay display = 2;
inline bool PBC2GTeamPublishAcceptInviteTransfer::has_display() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::set_has_display() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::clear_has_display() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBC2GTeamPublishAcceptInviteTransfer::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBC2GTeamPublishAcceptInviteTransfer::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBC2GTeamPublishAcceptInviteTransfer::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional bool accept = 3;
inline bool PBC2GTeamPublishAcceptInviteTransfer::has_accept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::set_has_accept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::clear_has_accept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool PBC2GTeamPublishAcceptInviteTransfer::accept() const {
  return accept_;
}
inline void PBC2GTeamPublishAcceptInviteTransfer::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// PBTeamPublish

// optional .PBPlayerDisplay display = 1;
inline bool PBTeamPublish::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamPublish::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamPublish::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamPublish::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBTeamPublish::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBTeamPublish::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBTeamPublish::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 fightpower = 2;
inline bool PBTeamPublish::has_fightpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamPublish::set_has_fightpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamPublish::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamPublish::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBTeamPublish::fightpower() const {
  return fightpower_;
}
inline void PBTeamPublish::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint32 compeletenum = 3;
inline bool PBTeamPublish::has_compeletenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamPublish::set_has_compeletenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamPublish::clear_has_compeletenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamPublish::clear_compeletenum() {
  compeletenum_ = 0u;
  clear_has_compeletenum();
}
inline ::google::protobuf::uint32 PBTeamPublish::compeletenum() const {
  return compeletenum_;
}
inline void PBTeamPublish::set_compeletenum(::google::protobuf::uint32 value) {
  set_has_compeletenum();
  compeletenum_ = value;
}

// optional string msg = 4;
inline bool PBTeamPublish::has_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTeamPublish::set_has_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTeamPublish::clear_has_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTeamPublish::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& PBTeamPublish::msg() const {
  return *msg_;
}
inline void PBTeamPublish::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PBTeamPublish::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PBTeamPublish::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamPublish::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* PBTeamPublish::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 time = 5;
inline bool PBTeamPublish::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTeamPublish::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTeamPublish::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTeamPublish::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBTeamPublish::time() const {
  return time_;
}
inline void PBTeamPublish::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBG2CTeamPublishList

// optional uint32 copymapid = 1;
inline bool PBG2CTeamPublishList::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CTeamPublishList::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CTeamPublishList::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CTeamPublishList::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBG2CTeamPublishList::copymapid() const {
  return copymapid_;
}
inline void PBG2CTeamPublishList::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 beginidx = 2;
inline bool PBG2CTeamPublishList::has_beginidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CTeamPublishList::set_has_beginidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CTeamPublishList::clear_has_beginidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CTeamPublishList::clear_beginidx() {
  beginidx_ = 0u;
  clear_has_beginidx();
}
inline ::google::protobuf::uint32 PBG2CTeamPublishList::beginidx() const {
  return beginidx_;
}
inline void PBG2CTeamPublishList::set_beginidx(::google::protobuf::uint32 value) {
  set_has_beginidx();
  beginidx_ = value;
}

// optional uint32 endidx = 3;
inline bool PBG2CTeamPublishList::has_endidx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CTeamPublishList::set_has_endidx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CTeamPublishList::clear_has_endidx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CTeamPublishList::clear_endidx() {
  endidx_ = 0u;
  clear_has_endidx();
}
inline ::google::protobuf::uint32 PBG2CTeamPublishList::endidx() const {
  return endidx_;
}
inline void PBG2CTeamPublishList::set_endidx(::google::protobuf::uint32 value) {
  set_has_endidx();
  endidx_ = value;
}

// optional uint32 allcount = 4;
inline bool PBG2CTeamPublishList::has_allcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2CTeamPublishList::set_has_allcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2CTeamPublishList::clear_has_allcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2CTeamPublishList::clear_allcount() {
  allcount_ = 0u;
  clear_has_allcount();
}
inline ::google::protobuf::uint32 PBG2CTeamPublishList::allcount() const {
  return allcount_;
}
inline void PBG2CTeamPublishList::set_allcount(::google::protobuf::uint32 value) {
  set_has_allcount();
  allcount_ = value;
}

// repeated .PBTeamPublish publish = 5;
inline int PBG2CTeamPublishList::publish_size() const {
  return publish_.size();
}
inline void PBG2CTeamPublishList::clear_publish() {
  publish_.Clear();
}
inline const ::PBTeamPublish& PBG2CTeamPublishList::publish(int index) const {
  return publish_.Get(index);
}
inline ::PBTeamPublish* PBG2CTeamPublishList::mutable_publish(int index) {
  return publish_.Mutable(index);
}
inline ::PBTeamPublish* PBG2CTeamPublishList::add_publish() {
  return publish_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamPublish >&
PBG2CTeamPublishList::publish() const {
  return publish_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamPublish >*
PBG2CTeamPublishList::mutable_publish() {
  return &publish_;
}

// -------------------------------------------------------------------

// PBTeamNearPlayer

// optional .PBPlayerDisplay display = 1;
inline bool PBTeamNearPlayer::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamNearPlayer::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamNearPlayer::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamNearPlayer::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBTeamNearPlayer::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBTeamNearPlayer::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBTeamNearPlayer::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 fightpower = 2;
inline bool PBTeamNearPlayer::has_fightpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamNearPlayer::set_has_fightpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamNearPlayer::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamNearPlayer::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBTeamNearPlayer::fightpower() const {
  return fightpower_;
}
inline void PBTeamNearPlayer::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint64 teamid = 3;
inline bool PBTeamNearPlayer::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamNearPlayer::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamNearPlayer::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamNearPlayer::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 PBTeamNearPlayer::teamid() const {
  return teamid_;
}
inline void PBTeamNearPlayer::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamNearPlayerList

// optional uint32 beginidx = 1;
inline bool PBC2GTeamNearPlayerList::has_beginidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamNearPlayerList::set_has_beginidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamNearPlayerList::clear_has_beginidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamNearPlayerList::clear_beginidx() {
  beginidx_ = 0u;
  clear_has_beginidx();
}
inline ::google::protobuf::uint32 PBC2GTeamNearPlayerList::beginidx() const {
  return beginidx_;
}
inline void PBC2GTeamNearPlayerList::set_beginidx(::google::protobuf::uint32 value) {
  set_has_beginidx();
  beginidx_ = value;
}

// optional uint32 endidx = 2;
inline bool PBC2GTeamNearPlayerList::has_endidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamNearPlayerList::set_has_endidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamNearPlayerList::clear_has_endidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamNearPlayerList::clear_endidx() {
  endidx_ = 0u;
  clear_has_endidx();
}
inline ::google::protobuf::uint32 PBC2GTeamNearPlayerList::endidx() const {
  return endidx_;
}
inline void PBC2GTeamNearPlayerList::set_endidx(::google::protobuf::uint32 value) {
  set_has_endidx();
  endidx_ = value;
}

// optional uint32 allcount = 3;
inline bool PBC2GTeamNearPlayerList::has_allcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamNearPlayerList::set_has_allcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamNearPlayerList::clear_has_allcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamNearPlayerList::clear_allcount() {
  allcount_ = 0u;
  clear_has_allcount();
}
inline ::google::protobuf::uint32 PBC2GTeamNearPlayerList::allcount() const {
  return allcount_;
}
inline void PBC2GTeamNearPlayerList::set_allcount(::google::protobuf::uint32 value) {
  set_has_allcount();
  allcount_ = value;
}

// repeated .PBTeamNearPlayer player = 4;
inline int PBC2GTeamNearPlayerList::player_size() const {
  return player_.size();
}
inline void PBC2GTeamNearPlayerList::clear_player() {
  player_.Clear();
}
inline const ::PBTeamNearPlayer& PBC2GTeamNearPlayerList::player(int index) const {
  return player_.Get(index);
}
inline ::PBTeamNearPlayer* PBC2GTeamNearPlayerList::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::PBTeamNearPlayer* PBC2GTeamNearPlayerList::add_player() {
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamNearPlayer >&
PBC2GTeamNearPlayerList::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamNearPlayer >*
PBC2GTeamNearPlayerList::mutable_player() {
  return &player_;
}

// -------------------------------------------------------------------

// PBC2GTeamNearTeamList

// optional uint32 beginidx = 1;
inline bool PBC2GTeamNearTeamList::has_beginidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamNearTeamList::set_has_beginidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamNearTeamList::clear_has_beginidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamNearTeamList::clear_beginidx() {
  beginidx_ = 0u;
  clear_has_beginidx();
}
inline ::google::protobuf::uint32 PBC2GTeamNearTeamList::beginidx() const {
  return beginidx_;
}
inline void PBC2GTeamNearTeamList::set_beginidx(::google::protobuf::uint32 value) {
  set_has_beginidx();
  beginidx_ = value;
}

// optional uint32 endidx = 2;
inline bool PBC2GTeamNearTeamList::has_endidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamNearTeamList::set_has_endidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamNearTeamList::clear_has_endidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamNearTeamList::clear_endidx() {
  endidx_ = 0u;
  clear_has_endidx();
}
inline ::google::protobuf::uint32 PBC2GTeamNearTeamList::endidx() const {
  return endidx_;
}
inline void PBC2GTeamNearTeamList::set_endidx(::google::protobuf::uint32 value) {
  set_has_endidx();
  endidx_ = value;
}

// optional uint32 allcount = 3;
inline bool PBC2GTeamNearTeamList::has_allcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamNearTeamList::set_has_allcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamNearTeamList::clear_has_allcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamNearTeamList::clear_allcount() {
  allcount_ = 0u;
  clear_has_allcount();
}
inline ::google::protobuf::uint32 PBC2GTeamNearTeamList::allcount() const {
  return allcount_;
}
inline void PBC2GTeamNearTeamList::set_allcount(::google::protobuf::uint32 value) {
  set_has_allcount();
  allcount_ = value;
}

// repeated .PBTeamInfo team = 4;
inline int PBC2GTeamNearTeamList::team_size() const {
  return team_.size();
}
inline void PBC2GTeamNearTeamList::clear_team() {
  team_.Clear();
}
inline const ::PBTeamInfo& PBC2GTeamNearTeamList::team(int index) const {
  return team_.Get(index);
}
inline ::PBTeamInfo* PBC2GTeamNearTeamList::mutable_team(int index) {
  return team_.Mutable(index);
}
inline ::PBTeamInfo* PBC2GTeamNearTeamList::add_team() {
  return team_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamInfo >&
PBC2GTeamNearTeamList::team() const {
  return team_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamInfo >*
PBC2GTeamNearTeamList::mutable_team() {
  return &team_;
}

// -------------------------------------------------------------------

// PBG2WTeamPublishAsk

// optional .PBC2GTeamPublishAsk clientmsg = 1;
inline bool PBG2WTeamPublishAsk::has_clientmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WTeamPublishAsk::set_has_clientmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WTeamPublishAsk::clear_has_clientmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WTeamPublishAsk::clear_clientmsg() {
  if (clientmsg_ != NULL) clientmsg_->::PBC2GTeamPublishAsk::Clear();
  clear_has_clientmsg();
}
inline const ::PBC2GTeamPublishAsk& PBG2WTeamPublishAsk::clientmsg() const {
  return clientmsg_ != NULL ? *clientmsg_ : *default_instance_->clientmsg_;
}
inline ::PBC2GTeamPublishAsk* PBG2WTeamPublishAsk::mutable_clientmsg() {
  set_has_clientmsg();
  if (clientmsg_ == NULL) clientmsg_ = new ::PBC2GTeamPublishAsk;
  return clientmsg_;
}
inline ::PBC2GTeamPublishAsk* PBG2WTeamPublishAsk::release_clientmsg() {
  clear_has_clientmsg();
  ::PBC2GTeamPublishAsk* temp = clientmsg_;
  clientmsg_ = NULL;
  return temp;
}

// optional uint32 donecount = 2;
inline bool PBG2WTeamPublishAsk::has_donecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WTeamPublishAsk::set_has_donecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WTeamPublishAsk::clear_has_donecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WTeamPublishAsk::clear_donecount() {
  donecount_ = 0u;
  clear_has_donecount();
}
inline ::google::protobuf::uint32 PBG2WTeamPublishAsk::donecount() const {
  return donecount_;
}
inline void PBG2WTeamPublishAsk::set_donecount(::google::protobuf::uint32 value) {
  set_has_donecount();
  donecount_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamView

// optional uint32 playerid = 1;
inline bool PBC2GTeamView::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamView::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamView::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamView::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamView::playerid() const {
  return playerid_;
}
inline void PBC2GTeamView::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBG2CTeamInviteTransfer

// optional .PBPlayerDisplay display = 1;
inline bool PBG2CTeamInviteTransfer::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CTeamInviteTransfer::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CTeamInviteTransfer::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CTeamInviteTransfer::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2CTeamInviteTransfer::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2CTeamInviteTransfer::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2CTeamInviteTransfer::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 fightpower = 2;
inline bool PBG2CTeamInviteTransfer::has_fightpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CTeamInviteTransfer::set_has_fightpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CTeamInviteTransfer::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CTeamInviteTransfer::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBG2CTeamInviteTransfer::fightpower() const {
  return fightpower_;
}
inline void PBG2CTeamInviteTransfer::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint32 teamTargetID = 3;
inline bool PBG2CTeamInviteTransfer::has_teamtargetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CTeamInviteTransfer::set_has_teamtargetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CTeamInviteTransfer::clear_has_teamtargetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CTeamInviteTransfer::clear_teamtargetid() {
  teamtargetid_ = 0u;
  clear_has_teamtargetid();
}
inline ::google::protobuf::uint32 PBG2CTeamInviteTransfer::teamtargetid() const {
  return teamtargetid_;
}
inline void PBG2CTeamInviteTransfer::set_teamtargetid(::google::protobuf::uint32 value) {
  set_has_teamtargetid();
  teamtargetid_ = value;
}

// -------------------------------------------------------------------

// PBG2CTeamApplyTransfer

// optional .PBPlayerDisplay display = 1;
inline bool PBG2CTeamApplyTransfer::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CTeamApplyTransfer::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CTeamApplyTransfer::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CTeamApplyTransfer::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2CTeamApplyTransfer::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2CTeamApplyTransfer::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2CTeamApplyTransfer::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 fightpower = 2;
inline bool PBG2CTeamApplyTransfer::has_fightpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CTeamApplyTransfer::set_has_fightpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CTeamApplyTransfer::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CTeamApplyTransfer::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBG2CTeamApplyTransfer::fightpower() const {
  return fightpower_;
}
inline void PBG2CTeamApplyTransfer::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// -------------------------------------------------------------------

// PBC2GCallupAsk

// optional uint32 playerid = 1;
inline bool PBC2GCallupAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GCallupAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GCallupAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GCallupAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GCallupAsk::playerid() const {
  return playerid_;
}
inline void PBC2GCallupAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBG2CCallupAck

// optional uint32 playerid = 1;
inline bool PBG2CCallupAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CCallupAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CCallupAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CCallupAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2CCallupAck::playerid() const {
  return playerid_;
}
inline void PBG2CCallupAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBC2GAcceptIdentityAsk

// optional uint32 id = 1;
inline bool PBC2GAcceptIdentityAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GAcceptIdentityAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GAcceptIdentityAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GAcceptIdentityAsk::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GAcceptIdentityAsk::id() const {
  return id_;
}
inline void PBC2GAcceptIdentityAsk::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 npcunitid = 2;
inline bool PBC2GAcceptIdentityAsk::has_npcunitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GAcceptIdentityAsk::set_has_npcunitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GAcceptIdentityAsk::clear_has_npcunitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GAcceptIdentityAsk::clear_npcunitid() {
  npcunitid_ = 0u;
  clear_has_npcunitid();
}
inline ::google::protobuf::uint32 PBC2GAcceptIdentityAsk::npcunitid() const {
  return npcunitid_;
}
inline void PBC2GAcceptIdentityAsk::set_npcunitid(::google::protobuf::uint32 value) {
  set_has_npcunitid();
  npcunitid_ = value;
}

// -------------------------------------------------------------------

// PBG2CAcceptIdentityAck

// optional uint32 id = 1;
inline bool PBG2CAcceptIdentityAck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CAcceptIdentityAck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CAcceptIdentityAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CAcceptIdentityAck::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CAcceptIdentityAck::id() const {
  return id_;
}
inline void PBG2CAcceptIdentityAck::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 npcunitid = 2;
inline bool PBG2CAcceptIdentityAck::has_npcunitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CAcceptIdentityAck::set_has_npcunitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CAcceptIdentityAck::clear_has_npcunitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CAcceptIdentityAck::clear_npcunitid() {
  npcunitid_ = 0u;
  clear_has_npcunitid();
}
inline ::google::protobuf::uint32 PBG2CAcceptIdentityAck::npcunitid() const {
  return npcunitid_;
}
inline void PBG2CAcceptIdentityAck::set_npcunitid(::google::protobuf::uint32 value) {
  set_has_npcunitid();
  npcunitid_ = value;
}

// -------------------------------------------------------------------

// PBC2GCheckConditionAsk

// optional uint32 id = 1;
inline bool PBC2GCheckConditionAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GCheckConditionAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GCheckConditionAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GCheckConditionAsk::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GCheckConditionAsk::id() const {
  return id_;
}
inline void PBC2GCheckConditionAsk::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 npcunitid = 2;
inline bool PBC2GCheckConditionAsk::has_npcunitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GCheckConditionAsk::set_has_npcunitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GCheckConditionAsk::clear_has_npcunitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GCheckConditionAsk::clear_npcunitid() {
  npcunitid_ = 0u;
  clear_has_npcunitid();
}
inline ::google::protobuf::uint32 PBC2GCheckConditionAsk::npcunitid() const {
  return npcunitid_;
}
inline void PBC2GCheckConditionAsk::set_npcunitid(::google::protobuf::uint32 value) {
  set_has_npcunitid();
  npcunitid_ = value;
}

// -------------------------------------------------------------------

// PBTeamMemberCondition

// optional uint32 playerid = 1;
inline bool PBTeamMemberCondition::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamMemberCondition::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamMemberCondition::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamMemberCondition::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBTeamMemberCondition::playerid() const {
  return playerid_;
}
inline void PBTeamMemberCondition::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional .PBItemNum itemnum = 2;
inline bool PBTeamMemberCondition::has_itemnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamMemberCondition::set_has_itemnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamMemberCondition::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamMemberCondition::clear_itemnum() {
  if (itemnum_ != NULL) itemnum_->::PBItemNum::Clear();
  clear_has_itemnum();
}
inline const ::PBItemNum& PBTeamMemberCondition::itemnum() const {
  return itemnum_ != NULL ? *itemnum_ : *default_instance_->itemnum_;
}
inline ::PBItemNum* PBTeamMemberCondition::mutable_itemnum() {
  set_has_itemnum();
  if (itemnum_ == NULL) itemnum_ = new ::PBItemNum;
  return itemnum_;
}
inline ::PBItemNum* PBTeamMemberCondition::release_itemnum() {
  clear_has_itemnum();
  ::PBItemNum* temp = itemnum_;
  itemnum_ = NULL;
  return temp;
}

// optional uint32 entercount = 3;
inline bool PBTeamMemberCondition::has_entercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamMemberCondition::set_has_entercount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamMemberCondition::clear_has_entercount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamMemberCondition::clear_entercount() {
  entercount_ = 0u;
  clear_has_entercount();
}
inline ::google::protobuf::uint32 PBTeamMemberCondition::entercount() const {
  return entercount_;
}
inline void PBTeamMemberCondition::set_entercount(::google::protobuf::uint32 value) {
  set_has_entercount();
  entercount_ = value;
}

// optional uint32 level = 4;
inline bool PBTeamMemberCondition::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTeamMemberCondition::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTeamMemberCondition::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTeamMemberCondition::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBTeamMemberCondition::level() const {
  return level_;
}
inline void PBTeamMemberCondition::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional bool isnonear = 5;
inline bool PBTeamMemberCondition::has_isnonear() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTeamMemberCondition::set_has_isnonear() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTeamMemberCondition::clear_has_isnonear() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTeamMemberCondition::clear_isnonear() {
  isnonear_ = false;
  clear_has_isnonear();
}
inline bool PBTeamMemberCondition::isnonear() const {
  return isnonear_;
}
inline void PBTeamMemberCondition::set_isnonear(bool value) {
  set_has_isnonear();
  isnonear_ = value;
}

// optional bool isneedPre = 6;
inline bool PBTeamMemberCondition::has_isneedpre() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBTeamMemberCondition::set_has_isneedpre() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBTeamMemberCondition::clear_has_isneedpre() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBTeamMemberCondition::clear_isneedpre() {
  isneedpre_ = false;
  clear_has_isneedpre();
}
inline bool PBTeamMemberCondition::isneedpre() const {
  return isneedpre_;
}
inline void PBTeamMemberCondition::set_isneedpre(bool value) {
  set_has_isneedpre();
  isneedpre_ = value;
}

// optional bool ishavetask = 7;
inline bool PBTeamMemberCondition::has_ishavetask() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBTeamMemberCondition::set_has_ishavetask() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBTeamMemberCondition::clear_has_ishavetask() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBTeamMemberCondition::clear_ishavetask() {
  ishavetask_ = false;
  clear_has_ishavetask();
}
inline bool PBTeamMemberCondition::ishavetask() const {
  return ishavetask_;
}
inline void PBTeamMemberCondition::set_ishavetask(bool value) {
  set_has_ishavetask();
  ishavetask_ = value;
}

// -------------------------------------------------------------------

// PBG2CheckConditionAck

// optional uint32 id = 1;
inline bool PBG2CheckConditionAck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CheckConditionAck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CheckConditionAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CheckConditionAck::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CheckConditionAck::id() const {
  return id_;
}
inline void PBG2CheckConditionAck::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .PBTeamMemberCondition condition = 2;
inline int PBG2CheckConditionAck::condition_size() const {
  return condition_.size();
}
inline void PBG2CheckConditionAck::clear_condition() {
  condition_.Clear();
}
inline const ::PBTeamMemberCondition& PBG2CheckConditionAck::condition(int index) const {
  return condition_.Get(index);
}
inline ::PBTeamMemberCondition* PBG2CheckConditionAck::mutable_condition(int index) {
  return condition_.Mutable(index);
}
inline ::PBTeamMemberCondition* PBG2CheckConditionAck::add_condition() {
  return condition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberCondition >&
PBG2CheckConditionAck::condition() const {
  return condition_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberCondition >*
PBG2CheckConditionAck::mutable_condition() {
  return &condition_;
}

// -------------------------------------------------------------------

// PBTeamApplicant

// optional uint32 playerid = 1;
inline bool PBTeamApplicant::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamApplicant::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamApplicant::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamApplicant::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBTeamApplicant::playerid() const {
  return playerid_;
}
inline void PBTeamApplicant::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string name = 2;
inline bool PBTeamApplicant::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamApplicant::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamApplicant::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamApplicant::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBTeamApplicant::name() const {
  return *name_;
}
inline void PBTeamApplicant::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTeamApplicant::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBTeamApplicant::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamApplicant::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBTeamApplicant::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 level = 3;
inline bool PBTeamApplicant::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTeamApplicant::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTeamApplicant::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTeamApplicant::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBTeamApplicant::level() const {
  return level_;
}
inline void PBTeamApplicant::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 job = 4;
inline bool PBTeamApplicant::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBTeamApplicant::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBTeamApplicant::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBTeamApplicant::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBTeamApplicant::job() const {
  return job_;
}
inline void PBTeamApplicant::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// optional uint32 fightpower = 5;
inline bool PBTeamApplicant::has_fightpower() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBTeamApplicant::set_has_fightpower() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBTeamApplicant::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBTeamApplicant::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBTeamApplicant::fightpower() const {
  return fightpower_;
}
inline void PBTeamApplicant::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint32 relationship = 6;
inline bool PBTeamApplicant::has_relationship() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBTeamApplicant::set_has_relationship() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBTeamApplicant::clear_has_relationship() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBTeamApplicant::clear_relationship() {
  relationship_ = 0u;
  clear_has_relationship();
}
inline ::google::protobuf::uint32 PBTeamApplicant::relationship() const {
  return relationship_;
}
inline void PBTeamApplicant::set_relationship(::google::protobuf::uint32 value) {
  set_has_relationship();
  relationship_ = value;
}

// optional string factionname = 7;
inline bool PBTeamApplicant::has_factionname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBTeamApplicant::set_has_factionname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBTeamApplicant::clear_has_factionname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBTeamApplicant::clear_factionname() {
  if (factionname_ != &::google::protobuf::internal::kEmptyString) {
    factionname_->clear();
  }
  clear_has_factionname();
}
inline const ::std::string& PBTeamApplicant::factionname() const {
  return *factionname_;
}
inline void PBTeamApplicant::set_factionname(const ::std::string& value) {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  factionname_->assign(value);
}
inline void PBTeamApplicant::set_factionname(const char* value) {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  factionname_->assign(value);
}
inline void PBTeamApplicant::set_factionname(const char* value, size_t size) {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  factionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBTeamApplicant::mutable_factionname() {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  return factionname_;
}
inline ::std::string* PBTeamApplicant::release_factionname() {
  clear_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = factionname_;
    factionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 factionid = 8;
inline bool PBTeamApplicant::has_factionid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBTeamApplicant::set_has_factionid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBTeamApplicant::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBTeamApplicant::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBTeamApplicant::factionid() const {
  return factionid_;
}
inline void PBTeamApplicant::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// -------------------------------------------------------------------

// PBTeamCreateAsk

// optional .PBTeamTarget target = 1;
inline bool PBTeamCreateAsk::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamCreateAsk::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamCreateAsk::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamCreateAsk::clear_target() {
  if (target_ != NULL) target_->::PBTeamTarget::Clear();
  clear_has_target();
}
inline const ::PBTeamTarget& PBTeamCreateAsk::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBTeamTarget* PBTeamCreateAsk::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBTeamTarget;
  return target_;
}
inline ::PBTeamTarget* PBTeamCreateAsk::release_target() {
  clear_has_target();
  ::PBTeamTarget* temp = target_;
  target_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBTeamCreateAck

// optional .PBTeamInfo team = 1;
inline bool PBTeamCreateAck::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamCreateAck::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamCreateAck::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamCreateAck::clear_team() {
  if (team_ != NULL) team_->::PBTeamInfo::Clear();
  clear_has_team();
}
inline const ::PBTeamInfo& PBTeamCreateAck::team() const {
  return team_ != NULL ? *team_ : *default_instance_->team_;
}
inline ::PBTeamInfo* PBTeamCreateAck::mutable_team() {
  set_has_team();
  if (team_ == NULL) team_ = new ::PBTeamInfo;
  return team_;
}
inline ::PBTeamInfo* PBTeamCreateAck::release_team() {
  clear_has_team();
  ::PBTeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBTeamSetTargetAsk

// optional .PBTeamTarget target = 1;
inline bool PBTeamSetTargetAsk::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamSetTargetAsk::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamSetTargetAsk::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamSetTargetAsk::clear_target() {
  if (target_ != NULL) target_->::PBTeamTarget::Clear();
  clear_has_target();
}
inline const ::PBTeamTarget& PBTeamSetTargetAsk::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBTeamTarget* PBTeamSetTargetAsk::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBTeamTarget;
  return target_;
}
inline ::PBTeamTarget* PBTeamSetTargetAsk::release_target() {
  clear_has_target();
  ::PBTeamTarget* temp = target_;
  target_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBTeamSetTargetAck

// optional .PBTeamTarget target = 1;
inline bool PBTeamSetTargetAck::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamSetTargetAck::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamSetTargetAck::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamSetTargetAck::clear_target() {
  if (target_ != NULL) target_->::PBTeamTarget::Clear();
  clear_has_target();
}
inline const ::PBTeamTarget& PBTeamSetTargetAck::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBTeamTarget* PBTeamSetTargetAck::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBTeamTarget;
  return target_;
}
inline ::PBTeamTarget* PBTeamSetTargetAck::release_target() {
  clear_has_target();
  ::PBTeamTarget* temp = target_;
  target_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBSetAutoAcceptAsk

// optional bool isopen = 1;
inline bool PBSetAutoAcceptAsk::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSetAutoAcceptAsk::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSetAutoAcceptAsk::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSetAutoAcceptAsk::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool PBSetAutoAcceptAsk::isopen() const {
  return isopen_;
}
inline void PBSetAutoAcceptAsk::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// PBSetAutoAcceptAck

// optional bool isopen = 1;
inline bool PBSetAutoAcceptAck::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSetAutoAcceptAck::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSetAutoAcceptAck::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSetAutoAcceptAck::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool PBSetAutoAcceptAck::isopen() const {
  return isopen_;
}
inline void PBSetAutoAcceptAck::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// PBSetAutoMatchAsk

// optional bool isopen = 1;
inline bool PBSetAutoMatchAsk::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSetAutoMatchAsk::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSetAutoMatchAsk::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSetAutoMatchAsk::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool PBSetAutoMatchAsk::isopen() const {
  return isopen_;
}
inline void PBSetAutoMatchAsk::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// PBSetAutoMatchAck

// optional bool isopen = 1;
inline bool PBSetAutoMatchAck::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSetAutoMatchAck::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSetAutoMatchAck::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSetAutoMatchAck::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool PBSetAutoMatchAck::isopen() const {
  return isopen_;
}
inline void PBSetAutoMatchAck::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// PBSetAutoMatchJoinAsk

// optional bool isopen = 1;
inline bool PBSetAutoMatchJoinAsk::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSetAutoMatchJoinAsk::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSetAutoMatchJoinAsk::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSetAutoMatchJoinAsk::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool PBSetAutoMatchJoinAsk::isopen() const {
  return isopen_;
}
inline void PBSetAutoMatchJoinAsk::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// optional uint32 targetid = 2;
inline bool PBSetAutoMatchJoinAsk::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSetAutoMatchJoinAsk::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSetAutoMatchJoinAsk::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSetAutoMatchJoinAsk::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 PBSetAutoMatchJoinAsk::targetid() const {
  return targetid_;
}
inline void PBSetAutoMatchJoinAsk::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
}

// -------------------------------------------------------------------

// PBSetAutoMatchJoinAck

// optional bool isopen = 1;
inline bool PBSetAutoMatchJoinAck::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSetAutoMatchJoinAck::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSetAutoMatchJoinAck::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSetAutoMatchJoinAck::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool PBSetAutoMatchJoinAck::isopen() const {
  return isopen_;
}
inline void PBSetAutoMatchJoinAck::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// optional uint32 targetid = 2;
inline bool PBSetAutoMatchJoinAck::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSetAutoMatchJoinAck::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSetAutoMatchJoinAck::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSetAutoMatchJoinAck::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 PBSetAutoMatchJoinAck::targetid() const {
  return targetid_;
}
inline void PBSetAutoMatchJoinAck::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
}

// -------------------------------------------------------------------

// PBSetAutoMatchJobLimitAsk

// optional .PBTeamMemberJobRequire jobs = 1;
inline bool PBSetAutoMatchJobLimitAsk::has_jobs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSetAutoMatchJobLimitAsk::set_has_jobs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSetAutoMatchJobLimitAsk::clear_has_jobs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSetAutoMatchJobLimitAsk::clear_jobs() {
  if (jobs_ != NULL) jobs_->::PBTeamMemberJobRequire::Clear();
  clear_has_jobs();
}
inline const ::PBTeamMemberJobRequire& PBSetAutoMatchJobLimitAsk::jobs() const {
  return jobs_ != NULL ? *jobs_ : *default_instance_->jobs_;
}
inline ::PBTeamMemberJobRequire* PBSetAutoMatchJobLimitAsk::mutable_jobs() {
  set_has_jobs();
  if (jobs_ == NULL) jobs_ = new ::PBTeamMemberJobRequire;
  return jobs_;
}
inline ::PBTeamMemberJobRequire* PBSetAutoMatchJobLimitAsk::release_jobs() {
  clear_has_jobs();
  ::PBTeamMemberJobRequire* temp = jobs_;
  jobs_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBSetAutoMatchJobLimitAck

// repeated .PBTeamMemberJobRequire jobs = 1;
inline int PBSetAutoMatchJobLimitAck::jobs_size() const {
  return jobs_.size();
}
inline void PBSetAutoMatchJobLimitAck::clear_jobs() {
  jobs_.Clear();
}
inline const ::PBTeamMemberJobRequire& PBSetAutoMatchJobLimitAck::jobs(int index) const {
  return jobs_.Get(index);
}
inline ::PBTeamMemberJobRequire* PBSetAutoMatchJobLimitAck::mutable_jobs(int index) {
  return jobs_.Mutable(index);
}
inline ::PBTeamMemberJobRequire* PBSetAutoMatchJobLimitAck::add_jobs() {
  return jobs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >&
PBSetAutoMatchJobLimitAck::jobs() const {
  return jobs_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamMemberJobRequire >*
PBSetAutoMatchJobLimitAck::mutable_jobs() {
  return &jobs_;
}

// -------------------------------------------------------------------

// PBGetApplicantListAsk

// -------------------------------------------------------------------

// PBGetApplicantListAck

// repeated .PBTeamApplicant applicants = 1;
inline int PBGetApplicantListAck::applicants_size() const {
  return applicants_.size();
}
inline void PBGetApplicantListAck::clear_applicants() {
  applicants_.Clear();
}
inline const ::PBTeamApplicant& PBGetApplicantListAck::applicants(int index) const {
  return applicants_.Get(index);
}
inline ::PBTeamApplicant* PBGetApplicantListAck::mutable_applicants(int index) {
  return applicants_.Mutable(index);
}
inline ::PBTeamApplicant* PBGetApplicantListAck::add_applicants() {
  return applicants_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamApplicant >&
PBGetApplicantListAck::applicants() const {
  return applicants_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamApplicant >*
PBGetApplicantListAck::mutable_applicants() {
  return &applicants_;
}

// -------------------------------------------------------------------

// PBClearApplicantListAsk

// -------------------------------------------------------------------

// PBClearApplicantListAck

// -------------------------------------------------------------------

// PBC2GTeamAcceptApplyFromListAsk

// optional uint32 playerid = 1;
inline bool PBC2GTeamAcceptApplyFromListAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamAcceptApplyFromListAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamAcceptApplyFromListAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamAcceptApplyFromListAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GTeamAcceptApplyFromListAsk::playerid() const {
  return playerid_;
}
inline void PBC2GTeamAcceptApplyFromListAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBTeamAcceptApplyFromListAck

// optional uint32 playerid = 1;
inline bool PBTeamAcceptApplyFromListAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamAcceptApplyFromListAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamAcceptApplyFromListAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamAcceptApplyFromListAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBTeamAcceptApplyFromListAck::playerid() const {
  return playerid_;
}
inline void PBTeamAcceptApplyFromListAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBC2GSearchTeamByTargetAsk

// optional .PBTeamTarget target = 1;
inline bool PBC2GSearchTeamByTargetAsk::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GSearchTeamByTargetAsk::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GSearchTeamByTargetAsk::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GSearchTeamByTargetAsk::clear_target() {
  if (target_ != NULL) target_->::PBTeamTarget::Clear();
  clear_has_target();
}
inline const ::PBTeamTarget& PBC2GSearchTeamByTargetAsk::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBTeamTarget* PBC2GSearchTeamByTargetAsk::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBTeamTarget;
  return target_;
}
inline ::PBTeamTarget* PBC2GSearchTeamByTargetAsk::release_target() {
  clear_has_target();
  ::PBTeamTarget* temp = target_;
  target_ = NULL;
  return temp;
}

// optional uint32 index = 2;
inline bool PBC2GSearchTeamByTargetAsk::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GSearchTeamByTargetAsk::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GSearchTeamByTargetAsk::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GSearchTeamByTargetAsk::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 PBC2GSearchTeamByTargetAsk::index() const {
  return index_;
}
inline void PBC2GSearchTeamByTargetAsk::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// PBSearchTeamByTargetAck

// optional .PBTeamTarget target = 1;
inline bool PBSearchTeamByTargetAck::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSearchTeamByTargetAck::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSearchTeamByTargetAck::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSearchTeamByTargetAck::clear_target() {
  if (target_ != NULL) target_->::PBTeamTarget::Clear();
  clear_has_target();
}
inline const ::PBTeamTarget& PBSearchTeamByTargetAck::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBTeamTarget* PBSearchTeamByTargetAck::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBTeamTarget;
  return target_;
}
inline ::PBTeamTarget* PBSearchTeamByTargetAck::release_target() {
  clear_has_target();
  ::PBTeamTarget* temp = target_;
  target_ = NULL;
  return temp;
}

// repeated .PBTeamInfoSimple teams = 2;
inline int PBSearchTeamByTargetAck::teams_size() const {
  return teams_.size();
}
inline void PBSearchTeamByTargetAck::clear_teams() {
  teams_.Clear();
}
inline const ::PBTeamInfoSimple& PBSearchTeamByTargetAck::teams(int index) const {
  return teams_.Get(index);
}
inline ::PBTeamInfoSimple* PBSearchTeamByTargetAck::mutable_teams(int index) {
  return teams_.Mutable(index);
}
inline ::PBTeamInfoSimple* PBSearchTeamByTargetAck::add_teams() {
  return teams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamInfoSimple >&
PBSearchTeamByTargetAck::teams() const {
  return teams_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamInfoSimple >*
PBSearchTeamByTargetAck::mutable_teams() {
  return &teams_;
}

// optional uint32 index = 3;
inline bool PBSearchTeamByTargetAck::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSearchTeamByTargetAck::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSearchTeamByTargetAck::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSearchTeamByTargetAck::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 PBSearchTeamByTargetAck::index() const {
  return index_;
}
inline void PBSearchTeamByTargetAck::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// PBC2GApplyTeamByTargetAsk

// optional uint64 teamid = 1;
inline bool PBC2GApplyTeamByTargetAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GApplyTeamByTargetAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GApplyTeamByTargetAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GApplyTeamByTargetAsk::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 PBC2GApplyTeamByTargetAsk::teamid() const {
  return teamid_;
}
inline void PBC2GApplyTeamByTargetAsk::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// PBApplyTeamByTargetAck

// -------------------------------------------------------------------

// PBApplyedTeamIdListNtf

// repeated uint64 teamids = 1;
inline int PBApplyedTeamIdListNtf::teamids_size() const {
  return teamids_.size();
}
inline void PBApplyedTeamIdListNtf::clear_teamids() {
  teamids_.Clear();
}
inline ::google::protobuf::uint64 PBApplyedTeamIdListNtf::teamids(int index) const {
  return teamids_.Get(index);
}
inline void PBApplyedTeamIdListNtf::set_teamids(int index, ::google::protobuf::uint64 value) {
  teamids_.Set(index, value);
}
inline void PBApplyedTeamIdListNtf::add_teamids(::google::protobuf::uint64 value) {
  teamids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PBApplyedTeamIdListNtf::teamids() const {
  return teamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PBApplyedTeamIdListNtf::mutable_teamids() {
  return &teamids_;
}

// -------------------------------------------------------------------

// PBC2GCancleApplyTeamByTargetAsk

// optional uint64 teamid = 1;
inline bool PBC2GCancleApplyTeamByTargetAsk::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GCancleApplyTeamByTargetAsk::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GCancleApplyTeamByTargetAsk::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GCancleApplyTeamByTargetAsk::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 PBC2GCancleApplyTeamByTargetAsk::teamid() const {
  return teamid_;
}
inline void PBC2GCancleApplyTeamByTargetAsk::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// -------------------------------------------------------------------

// PBCancleApplyTeamByTargetAck

// -------------------------------------------------------------------

// PBC2GAcceptTeamTaskAsk

// optional uint32 id = 1;
inline bool PBC2GAcceptTeamTaskAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GAcceptTeamTaskAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GAcceptTeamTaskAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GAcceptTeamTaskAsk::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GAcceptTeamTaskAsk::id() const {
  return id_;
}
inline void PBC2GAcceptTeamTaskAsk::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 npcunitid = 2;
inline bool PBC2GAcceptTeamTaskAsk::has_npcunitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GAcceptTeamTaskAsk::set_has_npcunitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GAcceptTeamTaskAsk::clear_has_npcunitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GAcceptTeamTaskAsk::clear_npcunitid() {
  npcunitid_ = 0u;
  clear_has_npcunitid();
}
inline ::google::protobuf::uint32 PBC2GAcceptTeamTaskAsk::npcunitid() const {
  return npcunitid_;
}
inline void PBC2GAcceptTeamTaskAsk::set_npcunitid(::google::protobuf::uint32 value) {
  set_has_npcunitid();
  npcunitid_ = value;
}

// -------------------------------------------------------------------

// PBG2CAcceptTeamTaskAck

// optional .PBTeamTask teamtask = 1;
inline bool PBG2CAcceptTeamTaskAck::has_teamtask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CAcceptTeamTaskAck::set_has_teamtask() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CAcceptTeamTaskAck::clear_has_teamtask() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CAcceptTeamTaskAck::clear_teamtask() {
  if (teamtask_ != NULL) teamtask_->::PBTeamTask::Clear();
  clear_has_teamtask();
}
inline const ::PBTeamTask& PBG2CAcceptTeamTaskAck::teamtask() const {
  return teamtask_ != NULL ? *teamtask_ : *default_instance_->teamtask_;
}
inline ::PBTeamTask* PBG2CAcceptTeamTaskAck::mutable_teamtask() {
  set_has_teamtask();
  if (teamtask_ == NULL) teamtask_ = new ::PBTeamTask;
  return teamtask_;
}
inline ::PBTeamTask* PBG2CAcceptTeamTaskAck::release_teamtask() {
  clear_has_teamtask();
  ::PBTeamTask* temp = teamtask_;
  teamtask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBC2GEnterTeamTaskCopymapAsk

// optional uint32 npcunitid = 1;
inline bool PBC2GEnterTeamTaskCopymapAsk::has_npcunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GEnterTeamTaskCopymapAsk::set_has_npcunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GEnterTeamTaskCopymapAsk::clear_has_npcunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GEnterTeamTaskCopymapAsk::clear_npcunitid() {
  npcunitid_ = 0u;
  clear_has_npcunitid();
}
inline ::google::protobuf::uint32 PBC2GEnterTeamTaskCopymapAsk::npcunitid() const {
  return npcunitid_;
}
inline void PBC2GEnterTeamTaskCopymapAsk::set_npcunitid(::google::protobuf::uint32 value) {
  set_has_npcunitid();
  npcunitid_ = value;
}

// -------------------------------------------------------------------

// PBC2GCompleteTeamTaskAsk

// optional uint32 npcunitid = 1;
inline bool PBC2GCompleteTeamTaskAsk::has_npcunitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GCompleteTeamTaskAsk::set_has_npcunitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GCompleteTeamTaskAsk::clear_has_npcunitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GCompleteTeamTaskAsk::clear_npcunitid() {
  npcunitid_ = 0u;
  clear_has_npcunitid();
}
inline ::google::protobuf::uint32 PBC2GCompleteTeamTaskAsk::npcunitid() const {
  return npcunitid_;
}
inline void PBC2GCompleteTeamTaskAsk::set_npcunitid(::google::protobuf::uint32 value) {
  set_has_npcunitid();
  npcunitid_ = value;
}

// -------------------------------------------------------------------

// PBG2CCompleteTeamTaskAck

// repeated .PBExpendNum expend = 1;
inline int PBG2CCompleteTeamTaskAck::expend_size() const {
  return expend_.size();
}
inline void PBG2CCompleteTeamTaskAck::clear_expend() {
  expend_.Clear();
}
inline const ::PBExpendNum& PBG2CCompleteTeamTaskAck::expend(int index) const {
  return expend_.Get(index);
}
inline ::PBExpendNum* PBG2CCompleteTeamTaskAck::mutable_expend(int index) {
  return expend_.Mutable(index);
}
inline ::PBExpendNum* PBG2CCompleteTeamTaskAck::add_expend() {
  return expend_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBExpendNum >&
PBG2CCompleteTeamTaskAck::expend() const {
  return expend_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBExpendNum >*
PBG2CCompleteTeamTaskAck::mutable_expend() {
  return &expend_;
}

// repeated .PBItemNum item = 2;
inline int PBG2CCompleteTeamTaskAck::item_size() const {
  return item_.size();
}
inline void PBG2CCompleteTeamTaskAck::clear_item() {
  item_.Clear();
}
inline const ::PBItemNum& PBG2CCompleteTeamTaskAck::item(int index) const {
  return item_.Get(index);
}
inline ::PBItemNum* PBG2CCompleteTeamTaskAck::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBItemNum* PBG2CCompleteTeamTaskAck::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemNum >&
PBG2CCompleteTeamTaskAck::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemNum >*
PBG2CCompleteTeamTaskAck::mutable_item() {
  return &item_;
}

// repeated .PBItemNum leaderitem = 3;
inline int PBG2CCompleteTeamTaskAck::leaderitem_size() const {
  return leaderitem_.size();
}
inline void PBG2CCompleteTeamTaskAck::clear_leaderitem() {
  leaderitem_.Clear();
}
inline const ::PBItemNum& PBG2CCompleteTeamTaskAck::leaderitem(int index) const {
  return leaderitem_.Get(index);
}
inline ::PBItemNum* PBG2CCompleteTeamTaskAck::mutable_leaderitem(int index) {
  return leaderitem_.Mutable(index);
}
inline ::PBItemNum* PBG2CCompleteTeamTaskAck::add_leaderitem() {
  return leaderitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemNum >&
PBG2CCompleteTeamTaskAck::leaderitem() const {
  return leaderitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemNum >*
PBG2CCompleteTeamTaskAck::mutable_leaderitem() {
  return &leaderitem_;
}

// -------------------------------------------------------------------

// PBC2GTeamFollowAsk

// optional bool isfollow = 1;
inline bool PBC2GTeamFollowAsk::has_isfollow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamFollowAsk::set_has_isfollow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamFollowAsk::clear_has_isfollow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamFollowAsk::clear_isfollow() {
  isfollow_ = false;
  clear_has_isfollow();
}
inline bool PBC2GTeamFollowAsk::isfollow() const {
  return isfollow_;
}
inline void PBC2GTeamFollowAsk::set_isfollow(bool value) {
  set_has_isfollow();
  isfollow_ = value;
}

// -------------------------------------------------------------------

// PBG2CTeamFollowAck

// optional uint32 playerid = 1;
inline bool PBG2CTeamFollowAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CTeamFollowAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CTeamFollowAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CTeamFollowAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2CTeamFollowAck::playerid() const {
  return playerid_;
}
inline void PBG2CTeamFollowAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional bool isfollow = 2;
inline bool PBG2CTeamFollowAck::has_isfollow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CTeamFollowAck::set_has_isfollow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CTeamFollowAck::clear_has_isfollow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CTeamFollowAck::clear_isfollow() {
  isfollow_ = false;
  clear_has_isfollow();
}
inline bool PBG2CTeamFollowAck::isfollow() const {
  return isfollow_;
}
inline void PBG2CTeamFollowAck::set_isfollow(bool value) {
  set_has_isfollow();
  isfollow_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamRemainConfirmAsk

// optional uint32 type = 1;
inline bool PBC2GTeamRemainConfirmAsk::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamRemainConfirmAsk::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamRemainConfirmAsk::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamRemainConfirmAsk::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBC2GTeamRemainConfirmAsk::type() const {
  return type_;
}
inline void PBC2GTeamRemainConfirmAsk::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 2;
inline bool PBC2GTeamRemainConfirmAsk::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamRemainConfirmAsk::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamRemainConfirmAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamRemainConfirmAsk::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GTeamRemainConfirmAsk::id() const {
  return id_;
}
inline void PBC2GTeamRemainConfirmAsk::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBG2CTeamRemainConfirmAck

// optional uint32 type = 1;
inline bool PBG2CTeamRemainConfirmAck::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CTeamRemainConfirmAck::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CTeamRemainConfirmAck::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CTeamRemainConfirmAck::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBG2CTeamRemainConfirmAck::type() const {
  return type_;
}
inline void PBG2CTeamRemainConfirmAck::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 2;
inline bool PBG2CTeamRemainConfirmAck::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CTeamRemainConfirmAck::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CTeamRemainConfirmAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CTeamRemainConfirmAck::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CTeamRemainConfirmAck::id() const {
  return id_;
}
inline void PBG2CTeamRemainConfirmAck::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBC2GTeamConfirmAsk

// optional bool isconfirm = 1;
inline bool PBC2GTeamConfirmAsk::has_isconfirm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GTeamConfirmAsk::set_has_isconfirm() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GTeamConfirmAsk::clear_has_isconfirm() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GTeamConfirmAsk::clear_isconfirm() {
  isconfirm_ = false;
  clear_has_isconfirm();
}
inline bool PBC2GTeamConfirmAsk::isconfirm() const {
  return isconfirm_;
}
inline void PBC2GTeamConfirmAsk::set_isconfirm(bool value) {
  set_has_isconfirm();
  isconfirm_ = value;
}

// optional uint32 type = 2;
inline bool PBC2GTeamConfirmAsk::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GTeamConfirmAsk::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GTeamConfirmAsk::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GTeamConfirmAsk::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBC2GTeamConfirmAsk::type() const {
  return type_;
}
inline void PBC2GTeamConfirmAsk::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 3;
inline bool PBC2GTeamConfirmAsk::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GTeamConfirmAsk::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GTeamConfirmAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GTeamConfirmAsk::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GTeamConfirmAsk::id() const {
  return id_;
}
inline void PBC2GTeamConfirmAsk::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBG2CTeamConfirmAck

// optional uint32 playerid = 1;
inline bool PBG2CTeamConfirmAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CTeamConfirmAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CTeamConfirmAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CTeamConfirmAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2CTeamConfirmAck::playerid() const {
  return playerid_;
}
inline void PBG2CTeamConfirmAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional bool isconfirm = 2;
inline bool PBG2CTeamConfirmAck::has_isconfirm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CTeamConfirmAck::set_has_isconfirm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CTeamConfirmAck::clear_has_isconfirm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CTeamConfirmAck::clear_isconfirm() {
  isconfirm_ = false;
  clear_has_isconfirm();
}
inline bool PBG2CTeamConfirmAck::isconfirm() const {
  return isconfirm_;
}
inline void PBG2CTeamConfirmAck::set_isconfirm(bool value) {
  set_has_isconfirm();
  isconfirm_ = value;
}

// -------------------------------------------------------------------

// PBG2CBroadMsg

// optional bool isconfirm = 1;
inline bool PBG2CBroadMsg::has_isconfirm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CBroadMsg::set_has_isconfirm() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CBroadMsg::clear_has_isconfirm() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CBroadMsg::clear_isconfirm() {
  isconfirm_ = false;
  clear_has_isconfirm();
}
inline bool PBG2CBroadMsg::isconfirm() const {
  return isconfirm_;
}
inline void PBG2CBroadMsg::set_isconfirm(bool value) {
  set_has_isconfirm();
  isconfirm_ = value;
}

// -------------------------------------------------------------------

// PBG2CMemberHitAck

// optional .PBTeamMemberCondition condition = 1;
inline bool PBG2CMemberHitAck::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CMemberHitAck::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CMemberHitAck::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CMemberHitAck::clear_condition() {
  if (condition_ != NULL) condition_->::PBTeamMemberCondition::Clear();
  clear_has_condition();
}
inline const ::PBTeamMemberCondition& PBG2CMemberHitAck::condition() const {
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::PBTeamMemberCondition* PBG2CMemberHitAck::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::PBTeamMemberCondition;
  return condition_;
}
inline ::PBTeamMemberCondition* PBG2CMemberHitAck::release_condition() {
  clear_has_condition();
  ::PBTeamMemberCondition* temp = condition_;
  condition_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< _emTeamConfirmState>() {
  return _emTeamConfirmState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< _emTeamTaskState>() {
  return _emTeamTaskState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< _em_TeamPublishDelReason>() {
  return _em_TeamPublishDelReason_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Team_2eproto__INCLUDED
