// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Broadcast.proto

#ifndef PROTOBUF_Broadcast_2eproto__INCLUDED
#define PROTOBUF_Broadcast_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "AccountStruct.pb.h"
#include "PlayerStruct.pb.h"
#include "GameStruct.pb.h"
#include "Faction.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Broadcast_2eproto();
void protobuf_AssignDesc_Broadcast_2eproto();
void protobuf_ShutdownFile_Broadcast_2eproto();

class PBG2CBroadcast_CopymapInvite;
class PBG2CBroadcast_CreateFaction;
class PBG2CBroadCast_TreasurePrize;
class PBG2CBroadCast_TreasurePrize_RefreshBoss;
class PBG2CBroadCast_GreatWallTrain;
class PBG2CBroadCast_WorldBoss;

enum _emBroadcast_Channel {
  BroadcastChannel_World = 1,
  BroadcastChannel_Line = 2,
  BroadcastChannel_Team = 3,
  BroadcastChannel_Player = 4,
  BroadcastChannel_Faction = 5,
  BroadcastChannel_War = 6,
  BroadcastChannel_Union = 7,
  BroadcastChannel_Corps = 8
};
bool _emBroadcast_Channel_IsValid(int value);
const _emBroadcast_Channel _emBroadcast_Channel_MIN = BroadcastChannel_World;
const _emBroadcast_Channel _emBroadcast_Channel_MAX = BroadcastChannel_Corps;
const int _emBroadcast_Channel_ARRAYSIZE = _emBroadcast_Channel_MAX + 1;

const ::google::protobuf::EnumDescriptor* _emBroadcast_Channel_descriptor();
inline const ::std::string& _emBroadcast_Channel_Name(_emBroadcast_Channel value) {
  return ::google::protobuf::internal::NameOfEnum(
    _emBroadcast_Channel_descriptor(), value);
}
inline bool _emBroadcast_Channel_Parse(
    const ::std::string& name, _emBroadcast_Channel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<_emBroadcast_Channel>(
    _emBroadcast_Channel_descriptor(), name, value);
}
// ===================================================================

class PBG2CBroadcast_CopymapInvite : public ::google::protobuf::Message {
 public:
  PBG2CBroadcast_CopymapInvite();
  virtual ~PBG2CBroadcast_CopymapInvite();
  
  PBG2CBroadcast_CopymapInvite(const PBG2CBroadcast_CopymapInvite& from);
  
  inline PBG2CBroadcast_CopymapInvite& operator=(const PBG2CBroadcast_CopymapInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CBroadcast_CopymapInvite& default_instance();
  
  void Swap(PBG2CBroadcast_CopymapInvite* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CBroadcast_CopymapInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CBroadcast_CopymapInvite& from);
  void MergeFrom(const PBG2CBroadcast_CopymapInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 copymapid = 2;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 2;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CBroadcast_CopymapInvite)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 copymapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Broadcast_2eproto();
  friend void protobuf_AssignDesc_Broadcast_2eproto();
  friend void protobuf_ShutdownFile_Broadcast_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CBroadcast_CopymapInvite* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CBroadcast_CreateFaction : public ::google::protobuf::Message {
 public:
  PBG2CBroadcast_CreateFaction();
  virtual ~PBG2CBroadcast_CreateFaction();
  
  PBG2CBroadcast_CreateFaction(const PBG2CBroadcast_CreateFaction& from);
  
  inline PBG2CBroadcast_CreateFaction& operator=(const PBG2CBroadcast_CreateFaction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CBroadcast_CreateFaction& default_instance();
  
  void Swap(PBG2CBroadcast_CreateFaction* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CBroadcast_CreateFaction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CBroadcast_CreateFaction& from);
  void MergeFrom(const PBG2CBroadcast_CreateFaction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional .PBFactionBase factionbase = 2;
  inline bool has_factionbase() const;
  inline void clear_factionbase();
  static const int kFactionbaseFieldNumber = 2;
  inline const ::PBFactionBase& factionbase() const;
  inline ::PBFactionBase* mutable_factionbase();
  inline ::PBFactionBase* release_factionbase();
  
  // @@protoc_insertion_point(class_scope:PBG2CBroadcast_CreateFaction)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_factionbase();
  inline void clear_has_factionbase();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::PBFactionBase* factionbase_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Broadcast_2eproto();
  friend void protobuf_AssignDesc_Broadcast_2eproto();
  friend void protobuf_ShutdownFile_Broadcast_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CBroadcast_CreateFaction* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CBroadCast_TreasurePrize : public ::google::protobuf::Message {
 public:
  PBG2CBroadCast_TreasurePrize();
  virtual ~PBG2CBroadCast_TreasurePrize();
  
  PBG2CBroadCast_TreasurePrize(const PBG2CBroadCast_TreasurePrize& from);
  
  inline PBG2CBroadCast_TreasurePrize& operator=(const PBG2CBroadCast_TreasurePrize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CBroadCast_TreasurePrize& default_instance();
  
  void Swap(PBG2CBroadCast_TreasurePrize* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CBroadCast_TreasurePrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CBroadCast_TreasurePrize& from);
  void MergeFrom(const PBG2CBroadCast_TreasurePrize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string playername = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  
  // optional uint32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CBroadCast_TreasurePrize)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* playername_;
  ::google::protobuf::uint32 itemid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Broadcast_2eproto();
  friend void protobuf_AssignDesc_Broadcast_2eproto();
  friend void protobuf_ShutdownFile_Broadcast_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CBroadCast_TreasurePrize* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CBroadCast_TreasurePrize_RefreshBoss : public ::google::protobuf::Message {
 public:
  PBG2CBroadCast_TreasurePrize_RefreshBoss();
  virtual ~PBG2CBroadCast_TreasurePrize_RefreshBoss();
  
  PBG2CBroadCast_TreasurePrize_RefreshBoss(const PBG2CBroadCast_TreasurePrize_RefreshBoss& from);
  
  inline PBG2CBroadCast_TreasurePrize_RefreshBoss& operator=(const PBG2CBroadCast_TreasurePrize_RefreshBoss& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CBroadCast_TreasurePrize_RefreshBoss& default_instance();
  
  void Swap(PBG2CBroadCast_TreasurePrize_RefreshBoss* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CBroadCast_TreasurePrize_RefreshBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CBroadCast_TreasurePrize_RefreshBoss& from);
  void MergeFrom(const PBG2CBroadCast_TreasurePrize_RefreshBoss& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string playername = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  
  // optional uint32 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CBroadCast_TreasurePrize_RefreshBoss)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* playername_;
  ::google::protobuf::uint32 sceneid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Broadcast_2eproto();
  friend void protobuf_AssignDesc_Broadcast_2eproto();
  friend void protobuf_ShutdownFile_Broadcast_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CBroadCast_TreasurePrize_RefreshBoss* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CBroadCast_GreatWallTrain : public ::google::protobuf::Message {
 public:
  PBG2CBroadCast_GreatWallTrain();
  virtual ~PBG2CBroadCast_GreatWallTrain();
  
  PBG2CBroadCast_GreatWallTrain(const PBG2CBroadCast_GreatWallTrain& from);
  
  inline PBG2CBroadCast_GreatWallTrain& operator=(const PBG2CBroadCast_GreatWallTrain& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CBroadCast_GreatWallTrain& default_instance();
  
  void Swap(PBG2CBroadCast_GreatWallTrain* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CBroadCast_GreatWallTrain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CBroadCast_GreatWallTrain& from);
  void MergeFrom(const PBG2CBroadCast_GreatWallTrain& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 layer = 1;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 1;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);
  
  // optional string playername = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  
  // @@protoc_insertion_point(class_scope:PBG2CBroadCast_GreatWallTrain)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_playername();
  inline void clear_has_playername();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* playername_;
  ::google::protobuf::uint32 layer_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Broadcast_2eproto();
  friend void protobuf_AssignDesc_Broadcast_2eproto();
  friend void protobuf_ShutdownFile_Broadcast_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CBroadCast_GreatWallTrain* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CBroadCast_WorldBoss : public ::google::protobuf::Message {
 public:
  PBG2CBroadCast_WorldBoss();
  virtual ~PBG2CBroadCast_WorldBoss();
  
  PBG2CBroadCast_WorldBoss(const PBG2CBroadCast_WorldBoss& from);
  
  inline PBG2CBroadCast_WorldBoss& operator=(const PBG2CBroadCast_WorldBoss& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CBroadCast_WorldBoss& default_instance();
  
  void Swap(PBG2CBroadCast_WorldBoss* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CBroadCast_WorldBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CBroadCast_WorldBoss& from);
  void MergeFrom(const PBG2CBroadCast_WorldBoss& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 bossActivityId = 1;
  inline bool has_bossactivityid() const;
  inline void clear_bossactivityid();
  static const int kBossActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 bossactivityid() const;
  inline void set_bossactivityid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CBroadCast_WorldBoss)
 private:
  inline void set_has_bossactivityid();
  inline void clear_has_bossactivityid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 bossactivityid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Broadcast_2eproto();
  friend void protobuf_AssignDesc_Broadcast_2eproto();
  friend void protobuf_ShutdownFile_Broadcast_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CBroadCast_WorldBoss* default_instance_;
};
// ===================================================================


// ===================================================================

// PBG2CBroadcast_CopymapInvite

// optional .PBPlayerDisplay display = 1;
inline bool PBG2CBroadcast_CopymapInvite::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CBroadcast_CopymapInvite::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CBroadcast_CopymapInvite::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CBroadcast_CopymapInvite::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2CBroadcast_CopymapInvite::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2CBroadcast_CopymapInvite::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2CBroadcast_CopymapInvite::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 copymapid = 2;
inline bool PBG2CBroadcast_CopymapInvite::has_copymapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CBroadcast_CopymapInvite::set_has_copymapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CBroadcast_CopymapInvite::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CBroadcast_CopymapInvite::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBG2CBroadcast_CopymapInvite::copymapid() const {
  return copymapid_;
}
inline void PBG2CBroadcast_CopymapInvite::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// -------------------------------------------------------------------

// PBG2CBroadcast_CreateFaction

// optional .PBPlayerDisplay display = 1;
inline bool PBG2CBroadcast_CreateFaction::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CBroadcast_CreateFaction::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CBroadcast_CreateFaction::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CBroadcast_CreateFaction::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2CBroadcast_CreateFaction::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2CBroadcast_CreateFaction::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2CBroadcast_CreateFaction::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional .PBFactionBase factionbase = 2;
inline bool PBG2CBroadcast_CreateFaction::has_factionbase() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CBroadcast_CreateFaction::set_has_factionbase() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CBroadcast_CreateFaction::clear_has_factionbase() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CBroadcast_CreateFaction::clear_factionbase() {
  if (factionbase_ != NULL) factionbase_->::PBFactionBase::Clear();
  clear_has_factionbase();
}
inline const ::PBFactionBase& PBG2CBroadcast_CreateFaction::factionbase() const {
  return factionbase_ != NULL ? *factionbase_ : *default_instance_->factionbase_;
}
inline ::PBFactionBase* PBG2CBroadcast_CreateFaction::mutable_factionbase() {
  set_has_factionbase();
  if (factionbase_ == NULL) factionbase_ = new ::PBFactionBase;
  return factionbase_;
}
inline ::PBFactionBase* PBG2CBroadcast_CreateFaction::release_factionbase() {
  clear_has_factionbase();
  ::PBFactionBase* temp = factionbase_;
  factionbase_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2CBroadCast_TreasurePrize

// optional string playername = 1;
inline bool PBG2CBroadCast_TreasurePrize::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CBroadCast_TreasurePrize::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CBroadCast_TreasurePrize::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CBroadCast_TreasurePrize::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PBG2CBroadCast_TreasurePrize::playername() const {
  return *playername_;
}
inline void PBG2CBroadCast_TreasurePrize::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CBroadCast_TreasurePrize::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CBroadCast_TreasurePrize::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CBroadCast_TreasurePrize::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PBG2CBroadCast_TreasurePrize::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 itemid = 2;
inline bool PBG2CBroadCast_TreasurePrize::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CBroadCast_TreasurePrize::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CBroadCast_TreasurePrize::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CBroadCast_TreasurePrize::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PBG2CBroadCast_TreasurePrize::itemid() const {
  return itemid_;
}
inline void PBG2CBroadCast_TreasurePrize::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// PBG2CBroadCast_TreasurePrize_RefreshBoss

// optional string playername = 1;
inline bool PBG2CBroadCast_TreasurePrize_RefreshBoss::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PBG2CBroadCast_TreasurePrize_RefreshBoss::playername() const {
  return *playername_;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CBroadCast_TreasurePrize_RefreshBoss::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PBG2CBroadCast_TreasurePrize_RefreshBoss::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 sceneid = 2;
inline bool PBG2CBroadCast_TreasurePrize_RefreshBoss::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBG2CBroadCast_TreasurePrize_RefreshBoss::sceneid() const {
  return sceneid_;
}
inline void PBG2CBroadCast_TreasurePrize_RefreshBoss::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// -------------------------------------------------------------------

// PBG2CBroadCast_GreatWallTrain

// optional uint32 layer = 1;
inline bool PBG2CBroadCast_GreatWallTrain::has_layer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CBroadCast_GreatWallTrain::set_has_layer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CBroadCast_GreatWallTrain::clear_has_layer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CBroadCast_GreatWallTrain::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 PBG2CBroadCast_GreatWallTrain::layer() const {
  return layer_;
}
inline void PBG2CBroadCast_GreatWallTrain::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
}

// optional string playername = 2;
inline bool PBG2CBroadCast_GreatWallTrain::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CBroadCast_GreatWallTrain::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CBroadCast_GreatWallTrain::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CBroadCast_GreatWallTrain::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PBG2CBroadCast_GreatWallTrain::playername() const {
  return *playername_;
}
inline void PBG2CBroadCast_GreatWallTrain::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CBroadCast_GreatWallTrain::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CBroadCast_GreatWallTrain::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CBroadCast_GreatWallTrain::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PBG2CBroadCast_GreatWallTrain::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBG2CBroadCast_WorldBoss

// optional uint32 bossActivityId = 1;
inline bool PBG2CBroadCast_WorldBoss::has_bossactivityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CBroadCast_WorldBoss::set_has_bossactivityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CBroadCast_WorldBoss::clear_has_bossactivityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CBroadCast_WorldBoss::clear_bossactivityid() {
  bossactivityid_ = 0u;
  clear_has_bossactivityid();
}
inline ::google::protobuf::uint32 PBG2CBroadCast_WorldBoss::bossactivityid() const {
  return bossactivityid_;
}
inline void PBG2CBroadCast_WorldBoss::set_bossactivityid(::google::protobuf::uint32 value) {
  set_has_bossactivityid();
  bossactivityid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< _emBroadcast_Channel>() {
  return _emBroadcast_Channel_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Broadcast_2eproto__INCLUDED
