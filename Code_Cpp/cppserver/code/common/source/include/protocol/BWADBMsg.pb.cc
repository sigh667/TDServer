// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BWADBMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBBW2DBStartLoadAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBBW2DBStartLoadAsk_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BWADBMsg_2eproto() {
  protobuf_AddDesc_BWADBMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BWADBMsg.proto");
  GOOGLE_CHECK(file != NULL);
  PBBW2DBStartLoadAsk_descriptor_ = file->message_type(0);
  static const int PBBW2DBStartLoadAsk_offsets_[1] = {
  };
  PBBW2DBStartLoadAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBBW2DBStartLoadAsk_descriptor_,
      PBBW2DBStartLoadAsk::default_instance_,
      PBBW2DBStartLoadAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBW2DBStartLoadAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBBW2DBStartLoadAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBBW2DBStartLoadAsk));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BWADBMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBBW2DBStartLoadAsk_descriptor_, &PBBW2DBStartLoadAsk::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BWADBMsg_2eproto() {
  delete PBBW2DBStartLoadAsk::default_instance_;
  delete PBBW2DBStartLoadAsk_reflection_;
}

void protobuf_AddDesc_BWADBMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PlayerStruct_2eproto();
  ::protobuf_AddDesc_AccountStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016BWADBMsg.proto\032\022PlayerStruct.proto\032\023Ac"
    "countStruct.proto\"\025\n\023PBBW2DBStartLoadAsk", 80);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BWADBMsg.proto", &protobuf_RegisterTypes);
  PBBW2DBStartLoadAsk::default_instance_ = new PBBW2DBStartLoadAsk();
  PBBW2DBStartLoadAsk::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BWADBMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BWADBMsg_2eproto {
  StaticDescriptorInitializer_BWADBMsg_2eproto() {
    protobuf_AddDesc_BWADBMsg_2eproto();
  }
} static_descriptor_initializer_BWADBMsg_2eproto_;


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBBW2DBStartLoadAsk::PBBW2DBStartLoadAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBBW2DBStartLoadAsk::InitAsDefaultInstance() {
}

PBBW2DBStartLoadAsk::PBBW2DBStartLoadAsk(const PBBW2DBStartLoadAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBBW2DBStartLoadAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBBW2DBStartLoadAsk::~PBBW2DBStartLoadAsk() {
  SharedDtor();
}

void PBBW2DBStartLoadAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBBW2DBStartLoadAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBBW2DBStartLoadAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBBW2DBStartLoadAsk_descriptor_;
}

const PBBW2DBStartLoadAsk& PBBW2DBStartLoadAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BWADBMsg_2eproto();  return *default_instance_;
}

PBBW2DBStartLoadAsk* PBBW2DBStartLoadAsk::default_instance_ = NULL;

PBBW2DBStartLoadAsk* PBBW2DBStartLoadAsk::New() const {
  return new PBBW2DBStartLoadAsk;
}

void PBBW2DBStartLoadAsk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBBW2DBStartLoadAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PBBW2DBStartLoadAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBBW2DBStartLoadAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBBW2DBStartLoadAsk::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBBW2DBStartLoadAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBBW2DBStartLoadAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBBW2DBStartLoadAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBBW2DBStartLoadAsk::MergeFrom(const PBBW2DBStartLoadAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBBW2DBStartLoadAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBBW2DBStartLoadAsk::CopyFrom(const PBBW2DBStartLoadAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBBW2DBStartLoadAsk::IsInitialized() const {
  
  return true;
}

void PBBW2DBStartLoadAsk::Swap(PBBW2DBStartLoadAsk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBBW2DBStartLoadAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBBW2DBStartLoadAsk_descriptor_;
  metadata.reflection = PBBW2DBStartLoadAsk_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
