// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BWADBProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* _emPBW2DB_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emBW2DB_Protocol_Operator_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _em_BW2DB_Event_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emPDB2BW_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emDB2BW_Protocol_Operator_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_BWADBProtocol_2eproto() {
  protobuf_AddDesc_BWADBProtocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BWADBProtocol.proto");
  GOOGLE_CHECK(file != NULL);
  _emPBW2DB_Protocol_descriptor_ = file->enum_type(0);
  _emBW2DB_Protocol_Operator_descriptor_ = file->enum_type(1);
  _em_BW2DB_Event_descriptor_ = file->enum_type(2);
  _emPDB2BW_Protocol_descriptor_ = file->enum_type(3);
  _emDB2BW_Protocol_Operator_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BWADBProtocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_BWADBProtocol_2eproto() {
}

void protobuf_AddDesc_BWADBProtocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023BWADBProtocol.proto**\n\022_emPBW2DB_Proto"
    "col\022\024\n\020P_BW2DB_Operator\020\000*^\n\032_emBW2DB_Pr"
    "otocol_Operator\022 \n\034BW2DB_Operator_StartL"
    "oad_Ask\020\000\022\036\n\032BW2DB_Operator_DBBlock_Ask\020"
    "\001*\'\n\017_em_BW2DB_Event\022\024\n\020BW2DB_Event_Test"
    "\020\000**\n\022_emPDB2BW_Protocol\022\024\n\020P_DB2BW_Oper"
    "ator\020\000*X\n\032_emDB2BW_Protocol_Operator\022\035\n\031"
    "DB2BW_Operator_DBRecv_Ack\020\000\022\033\n\027DB2BW_Ope"
    "rator_Test_Ack\020\001", 336);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BWADBProtocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BWADBProtocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BWADBProtocol_2eproto {
  StaticDescriptorInitializer_BWADBProtocol_2eproto() {
    protobuf_AddDesc_BWADBProtocol_2eproto();
  }
} static_descriptor_initializer_BWADBProtocol_2eproto_;

const ::google::protobuf::EnumDescriptor* _emPBW2DB_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPBW2DB_Protocol_descriptor_;
}
bool _emPBW2DB_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emBW2DB_Protocol_Operator_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emBW2DB_Protocol_Operator_descriptor_;
}
bool _emBW2DB_Protocol_Operator_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _em_BW2DB_Event_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _em_BW2DB_Event_descriptor_;
}
bool _em_BW2DB_Event_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emPDB2BW_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPDB2BW_Protocol_descriptor_;
}
bool _emPDB2BW_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emDB2BW_Protocol_Operator_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emDB2BW_Protocol_Operator_descriptor_;
}
bool _emDB2BW_Protocol_Operator_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
