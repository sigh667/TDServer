// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RecordStruct.proto

#ifndef PROTOBUF_RecordStruct_2eproto__INCLUDED
#define PROTOBUF_RecordStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "PlayerStruct.pb.h"
#include "GameStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RecordStruct_2eproto();
void protobuf_AssignDesc_RecordStruct_2eproto();
void protobuf_ShutdownFile_RecordStruct_2eproto();

class PBLog_Common;
class PBLog_Item;
class PBLog_Doing;
class PBLog_Dartcar;

// ===================================================================

class PBLog_Common : public ::google::protobuf::Message {
 public:
  PBLog_Common();
  virtual ~PBLog_Common();
  
  PBLog_Common(const PBLog_Common& from);
  
  inline PBLog_Common& operator=(const PBLog_Common& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLog_Common& default_instance();
  
  void Swap(PBLog_Common* other);
  
  // implements Message ----------------------------------------------
  
  PBLog_Common* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLog_Common& from);
  void MergeFrom(const PBLog_Common& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 doingevent = 1;
  inline bool has_doingevent() const;
  inline void clear_doingevent();
  static const int kDoingeventFieldNumber = 1;
  inline ::google::protobuf::uint32 doingevent() const;
  inline void set_doingevent(::google::protobuf::uint32 value);
  
  // optional uint32 worldid = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 stamp = 3;
  inline bool has_stamp() const;
  inline void clear_stamp();
  static const int kStampFieldNumber = 3;
  inline ::google::protobuf::uint32 stamp() const;
  inline void set_stamp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBLog_Common)
 private:
  inline void set_has_doingevent();
  inline void clear_has_doingevent();
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_stamp();
  inline void clear_has_stamp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 doingevent_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 stamp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_RecordStruct_2eproto();
  friend void protobuf_AssignDesc_RecordStruct_2eproto();
  friend void protobuf_ShutdownFile_RecordStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBLog_Common* default_instance_;
};
// -------------------------------------------------------------------

class PBLog_Item : public ::google::protobuf::Message {
 public:
  PBLog_Item();
  virtual ~PBLog_Item();
  
  PBLog_Item(const PBLog_Item& from);
  
  inline PBLog_Item& operator=(const PBLog_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLog_Item& default_instance();
  
  void Swap(PBLog_Item* other);
  
  // implements Message ----------------------------------------------
  
  PBLog_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLog_Item& from);
  void MergeFrom(const PBLog_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBLog_Common common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::PBLog_Common& common() const;
  inline ::PBLog_Common* mutable_common();
  inline ::PBLog_Common* release_common();
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 doingtype = 3;
  inline bool has_doingtype() const;
  inline void clear_doingtype();
  static const int kDoingtypeFieldNumber = 3;
  inline ::google::protobuf::uint32 doingtype() const;
  inline void set_doingtype(::google::protobuf::uint32 value);
  
  // optional uint32 itemId = 4;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint64 itemSN = 5;
  inline bool has_itemsn() const;
  inline void clear_itemsn();
  static const int kItemSNFieldNumber = 5;
  inline ::google::protobuf::uint64 itemsn() const;
  inline void set_itemsn(::google::protobuf::uint64 value);
  
  // optional uint32 itemNum = 6;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 6;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);
  
  // optional uint32 flag = 7;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 7;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);
  
  // optional uint32 lefttime = 8;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLefttimeFieldNumber = 8;
  inline ::google::protobuf::uint32 lefttime() const;
  inline void set_lefttime(::google::protobuf::uint32 value);
  
  // optional uint32 endtime = 9;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 9;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);
  
  // optional uint32 enhanceexp = 10;
  inline bool has_enhanceexp() const;
  inline void clear_enhanceexp();
  static const int kEnhanceexpFieldNumber = 10;
  inline ::google::protobuf::uint32 enhanceexp() const;
  inline void set_enhanceexp(::google::protobuf::uint32 value);
  
  // optional uint32 forgeexp = 11;
  inline bool has_forgeexp() const;
  inline void clear_forgeexp();
  static const int kForgeexpFieldNumber = 11;
  inline ::google::protobuf::uint32 forgeexp() const;
  inline void set_forgeexp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBLog_Item)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_doingtype();
  inline void clear_has_doingtype();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemsn();
  inline void clear_has_itemsn();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_enhanceexp();
  inline void clear_has_enhanceexp();
  inline void set_has_forgeexp();
  inline void clear_has_forgeexp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBLog_Common* common_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 doingtype_;
  ::google::protobuf::uint64 itemsn_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 enhanceexp_;
  ::google::protobuf::uint32 forgeexp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void  protobuf_AddDesc_RecordStruct_2eproto();
  friend void protobuf_AssignDesc_RecordStruct_2eproto();
  friend void protobuf_ShutdownFile_RecordStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBLog_Item* default_instance_;
};
// -------------------------------------------------------------------

class PBLog_Doing : public ::google::protobuf::Message {
 public:
  PBLog_Doing();
  virtual ~PBLog_Doing();
  
  PBLog_Doing(const PBLog_Doing& from);
  
  inline PBLog_Doing& operator=(const PBLog_Doing& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLog_Doing& default_instance();
  
  void Swap(PBLog_Doing* other);
  
  // implements Message ----------------------------------------------
  
  PBLog_Doing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLog_Doing& from);
  void MergeFrom(const PBLog_Doing& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBLog_Common common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::PBLog_Common& common() const;
  inline ::PBLog_Common* mutable_common();
  inline ::PBLog_Common* release_common();
  
  // optional uint32 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 scenecell = 3;
  inline bool has_scenecell() const;
  inline void clear_scenecell();
  static const int kScenecellFieldNumber = 3;
  inline ::google::protobuf::uint32 scenecell() const;
  inline void set_scenecell(::google::protobuf::uint32 value);
  
  // optional uint32 doingobj = 4;
  inline bool has_doingobj() const;
  inline void clear_doingobj();
  static const int kDoingobjFieldNumber = 4;
  inline ::google::protobuf::uint32 doingobj() const;
  inline void set_doingobj(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 5;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 5;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint64 objectid = 6;
  inline bool has_objectid() const;
  inline void clear_objectid();
  static const int kObjectidFieldNumber = 6;
  inline ::google::protobuf::uint64 objectid() const;
  inline void set_objectid(::google::protobuf::uint64 value);
  
  // optional uint32 linkid = 7;
  inline bool has_linkid() const;
  inline void clear_linkid();
  static const int kLinkidFieldNumber = 7;
  inline ::google::protobuf::uint32 linkid() const;
  inline void set_linkid(::google::protobuf::uint32 value);
  
  // optional uint64 fromvalue = 8;
  inline bool has_fromvalue() const;
  inline void clear_fromvalue();
  static const int kFromvalueFieldNumber = 8;
  inline ::google::protobuf::uint64 fromvalue() const;
  inline void set_fromvalue(::google::protobuf::uint64 value);
  
  // optional uint64 tovalue = 9;
  inline bool has_tovalue() const;
  inline void clear_tovalue();
  static const int kTovalueFieldNumber = 9;
  inline ::google::protobuf::uint64 tovalue() const;
  inline void set_tovalue(::google::protobuf::uint64 value);
  
  // optional uint64 value = 10;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 10;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBLog_Doing)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenecell();
  inline void clear_has_scenecell();
  inline void set_has_doingobj();
  inline void clear_has_doingobj();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_objectid();
  inline void clear_has_objectid();
  inline void set_has_linkid();
  inline void clear_has_linkid();
  inline void set_has_fromvalue();
  inline void clear_has_fromvalue();
  inline void set_has_tovalue();
  inline void clear_has_tovalue();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBLog_Common* common_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 scenecell_;
  ::google::protobuf::uint32 doingobj_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint64 objectid_;
  ::google::protobuf::uint64 fromvalue_;
  ::google::protobuf::uint64 tovalue_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 linkid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_RecordStruct_2eproto();
  friend void protobuf_AssignDesc_RecordStruct_2eproto();
  friend void protobuf_ShutdownFile_RecordStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBLog_Doing* default_instance_;
};
// -------------------------------------------------------------------

class PBLog_Dartcar : public ::google::protobuf::Message {
 public:
  PBLog_Dartcar();
  virtual ~PBLog_Dartcar();
  
  PBLog_Dartcar(const PBLog_Dartcar& from);
  
  inline PBLog_Dartcar& operator=(const PBLog_Dartcar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLog_Dartcar& default_instance();
  
  void Swap(PBLog_Dartcar* other);
  
  // implements Message ----------------------------------------------
  
  PBLog_Dartcar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLog_Dartcar& from);
  void MergeFrom(const PBLog_Dartcar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBLog_Common common = 1;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 1;
  inline const ::PBLog_Common& common() const;
  inline ::PBLog_Common* mutable_common();
  inline ::PBLog_Common* release_common();
  
  // optional uint32 event = 2;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 2;
  inline ::google::protobuf::uint32 event() const;
  inline void set_event(::google::protobuf::uint32 value);
  
  // optional uint32 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 scenecellid = 4;
  inline bool has_scenecellid() const;
  inline void clear_scenecellid();
  static const int kScenecellidFieldNumber = 4;
  inline ::google::protobuf::uint32 scenecellid() const;
  inline void set_scenecellid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 5;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 5;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional uint64 liushui = 6;
  inline bool has_liushui() const;
  inline void clear_liushui();
  static const int kLiushuiFieldNumber = 6;
  inline ::google::protobuf::uint64 liushui() const;
  inline void set_liushui(::google::protobuf::uint64 value);
  
  // optional uint32 dartcarid = 7;
  inline bool has_dartcarid() const;
  inline void clear_dartcarid();
  static const int kDartcaridFieldNumber = 7;
  inline ::google::protobuf::uint32 dartcarid() const;
  inline void set_dartcarid(::google::protobuf::uint32 value);
  
  // optional uint32 honghuo = 8;
  inline bool has_honghuo() const;
  inline void clear_honghuo();
  static const int kHonghuoFieldNumber = 8;
  inline ::google::protobuf::uint32 honghuo() const;
  inline void set_honghuo(::google::protobuf::uint32 value);
  
  // optional string playername = 9;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 9;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  
  // optional uint32 playerid = 10;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 10;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 prizeid = 11;
  inline bool has_prizeid() const;
  inline void clear_prizeid();
  static const int kPrizeidFieldNumber = 11;
  inline ::google::protobuf::uint32 prizeid() const;
  inline void set_prizeid(::google::protobuf::uint32 value);
  
  // optional uint32 prizecount = 12;
  inline bool has_prizecount() const;
  inline void clear_prizecount();
  static const int kPrizecountFieldNumber = 12;
  inline ::google::protobuf::uint32 prizecount() const;
  inline void set_prizecount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBLog_Dartcar)
 private:
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenecellid();
  inline void clear_has_scenecellid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_liushui();
  inline void clear_has_liushui();
  inline void set_has_dartcarid();
  inline void clear_has_dartcarid();
  inline void set_has_honghuo();
  inline void clear_has_honghuo();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_prizeid();
  inline void clear_has_prizeid();
  inline void set_has_prizecount();
  inline void clear_has_prizecount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBLog_Common* common_;
  ::google::protobuf::uint32 event_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 dynid_;
  ::google::protobuf::uint32 scenecellid_;
  ::google::protobuf::uint32 dartcarid_;
  ::google::protobuf::uint64 liushui_;
  ::std::string* playername_;
  ::google::protobuf::uint32 honghuo_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 prizeid_;
  ::google::protobuf::uint32 prizecount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_RecordStruct_2eproto();
  friend void protobuf_AssignDesc_RecordStruct_2eproto();
  friend void protobuf_ShutdownFile_RecordStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBLog_Dartcar* default_instance_;
};
// ===================================================================


// ===================================================================

// PBLog_Common

// optional uint32 doingevent = 1;
inline bool PBLog_Common::has_doingevent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLog_Common::set_has_doingevent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLog_Common::clear_has_doingevent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLog_Common::clear_doingevent() {
  doingevent_ = 0u;
  clear_has_doingevent();
}
inline ::google::protobuf::uint32 PBLog_Common::doingevent() const {
  return doingevent_;
}
inline void PBLog_Common::set_doingevent(::google::protobuf::uint32 value) {
  set_has_doingevent();
  doingevent_ = value;
}

// optional uint32 worldid = 2;
inline bool PBLog_Common::has_worldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBLog_Common::set_has_worldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBLog_Common::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBLog_Common::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 PBLog_Common::worldid() const {
  return worldid_;
}
inline void PBLog_Common::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional uint32 stamp = 3;
inline bool PBLog_Common::has_stamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBLog_Common::set_has_stamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBLog_Common::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBLog_Common::clear_stamp() {
  stamp_ = 0u;
  clear_has_stamp();
}
inline ::google::protobuf::uint32 PBLog_Common::stamp() const {
  return stamp_;
}
inline void PBLog_Common::set_stamp(::google::protobuf::uint32 value) {
  set_has_stamp();
  stamp_ = value;
}

// -------------------------------------------------------------------

// PBLog_Item

// optional .PBLog_Common common = 1;
inline bool PBLog_Item::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLog_Item::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLog_Item::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLog_Item::clear_common() {
  if (common_ != NULL) common_->::PBLog_Common::Clear();
  clear_has_common();
}
inline const ::PBLog_Common& PBLog_Item::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::PBLog_Common* PBLog_Item::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::PBLog_Common;
  return common_;
}
inline ::PBLog_Common* PBLog_Item::release_common() {
  clear_has_common();
  ::PBLog_Common* temp = common_;
  common_ = NULL;
  return temp;
}

// optional uint32 playerid = 2;
inline bool PBLog_Item::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBLog_Item::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBLog_Item::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBLog_Item::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBLog_Item::playerid() const {
  return playerid_;
}
inline void PBLog_Item::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 doingtype = 3;
inline bool PBLog_Item::has_doingtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBLog_Item::set_has_doingtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBLog_Item::clear_has_doingtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBLog_Item::clear_doingtype() {
  doingtype_ = 0u;
  clear_has_doingtype();
}
inline ::google::protobuf::uint32 PBLog_Item::doingtype() const {
  return doingtype_;
}
inline void PBLog_Item::set_doingtype(::google::protobuf::uint32 value) {
  set_has_doingtype();
  doingtype_ = value;
}

// optional uint32 itemId = 4;
inline bool PBLog_Item::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBLog_Item::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBLog_Item::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBLog_Item::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PBLog_Item::itemid() const {
  return itemid_;
}
inline void PBLog_Item::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint64 itemSN = 5;
inline bool PBLog_Item::has_itemsn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBLog_Item::set_has_itemsn() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBLog_Item::clear_has_itemsn() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBLog_Item::clear_itemsn() {
  itemsn_ = GOOGLE_ULONGLONG(0);
  clear_has_itemsn();
}
inline ::google::protobuf::uint64 PBLog_Item::itemsn() const {
  return itemsn_;
}
inline void PBLog_Item::set_itemsn(::google::protobuf::uint64 value) {
  set_has_itemsn();
  itemsn_ = value;
}

// optional uint32 itemNum = 6;
inline bool PBLog_Item::has_itemnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBLog_Item::set_has_itemnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBLog_Item::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBLog_Item::clear_itemnum() {
  itemnum_ = 0u;
  clear_has_itemnum();
}
inline ::google::protobuf::uint32 PBLog_Item::itemnum() const {
  return itemnum_;
}
inline void PBLog_Item::set_itemnum(::google::protobuf::uint32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// optional uint32 flag = 7;
inline bool PBLog_Item::has_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBLog_Item::set_has_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBLog_Item::clear_has_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBLog_Item::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 PBLog_Item::flag() const {
  return flag_;
}
inline void PBLog_Item::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// optional uint32 lefttime = 8;
inline bool PBLog_Item::has_lefttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBLog_Item::set_has_lefttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBLog_Item::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBLog_Item::clear_lefttime() {
  lefttime_ = 0u;
  clear_has_lefttime();
}
inline ::google::protobuf::uint32 PBLog_Item::lefttime() const {
  return lefttime_;
}
inline void PBLog_Item::set_lefttime(::google::protobuf::uint32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// optional uint32 endtime = 9;
inline bool PBLog_Item::has_endtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBLog_Item::set_has_endtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBLog_Item::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBLog_Item::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 PBLog_Item::endtime() const {
  return endtime_;
}
inline void PBLog_Item::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
}

// optional uint32 enhanceexp = 10;
inline bool PBLog_Item::has_enhanceexp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBLog_Item::set_has_enhanceexp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBLog_Item::clear_has_enhanceexp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBLog_Item::clear_enhanceexp() {
  enhanceexp_ = 0u;
  clear_has_enhanceexp();
}
inline ::google::protobuf::uint32 PBLog_Item::enhanceexp() const {
  return enhanceexp_;
}
inline void PBLog_Item::set_enhanceexp(::google::protobuf::uint32 value) {
  set_has_enhanceexp();
  enhanceexp_ = value;
}

// optional uint32 forgeexp = 11;
inline bool PBLog_Item::has_forgeexp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBLog_Item::set_has_forgeexp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBLog_Item::clear_has_forgeexp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBLog_Item::clear_forgeexp() {
  forgeexp_ = 0u;
  clear_has_forgeexp();
}
inline ::google::protobuf::uint32 PBLog_Item::forgeexp() const {
  return forgeexp_;
}
inline void PBLog_Item::set_forgeexp(::google::protobuf::uint32 value) {
  set_has_forgeexp();
  forgeexp_ = value;
}

// -------------------------------------------------------------------

// PBLog_Doing

// optional .PBLog_Common common = 1;
inline bool PBLog_Doing::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLog_Doing::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLog_Doing::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLog_Doing::clear_common() {
  if (common_ != NULL) common_->::PBLog_Common::Clear();
  clear_has_common();
}
inline const ::PBLog_Common& PBLog_Doing::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::PBLog_Common* PBLog_Doing::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::PBLog_Common;
  return common_;
}
inline ::PBLog_Common* PBLog_Doing::release_common() {
  clear_has_common();
  ::PBLog_Common* temp = common_;
  common_ = NULL;
  return temp;
}

// optional uint32 sceneid = 2;
inline bool PBLog_Doing::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBLog_Doing::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBLog_Doing::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBLog_Doing::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBLog_Doing::sceneid() const {
  return sceneid_;
}
inline void PBLog_Doing::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 scenecell = 3;
inline bool PBLog_Doing::has_scenecell() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBLog_Doing::set_has_scenecell() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBLog_Doing::clear_has_scenecell() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBLog_Doing::clear_scenecell() {
  scenecell_ = 0u;
  clear_has_scenecell();
}
inline ::google::protobuf::uint32 PBLog_Doing::scenecell() const {
  return scenecell_;
}
inline void PBLog_Doing::set_scenecell(::google::protobuf::uint32 value) {
  set_has_scenecell();
  scenecell_ = value;
}

// optional uint32 doingobj = 4;
inline bool PBLog_Doing::has_doingobj() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBLog_Doing::set_has_doingobj() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBLog_Doing::clear_has_doingobj() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBLog_Doing::clear_doingobj() {
  doingobj_ = 0u;
  clear_has_doingobj();
}
inline ::google::protobuf::uint32 PBLog_Doing::doingobj() const {
  return doingobj_;
}
inline void PBLog_Doing::set_doingobj(::google::protobuf::uint32 value) {
  set_has_doingobj();
  doingobj_ = value;
}

// optional uint32 playerid = 5;
inline bool PBLog_Doing::has_playerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBLog_Doing::set_has_playerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBLog_Doing::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBLog_Doing::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBLog_Doing::playerid() const {
  return playerid_;
}
inline void PBLog_Doing::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 objectid = 6;
inline bool PBLog_Doing::has_objectid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBLog_Doing::set_has_objectid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBLog_Doing::clear_has_objectid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBLog_Doing::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
  clear_has_objectid();
}
inline ::google::protobuf::uint64 PBLog_Doing::objectid() const {
  return objectid_;
}
inline void PBLog_Doing::set_objectid(::google::protobuf::uint64 value) {
  set_has_objectid();
  objectid_ = value;
}

// optional uint32 linkid = 7;
inline bool PBLog_Doing::has_linkid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBLog_Doing::set_has_linkid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBLog_Doing::clear_has_linkid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBLog_Doing::clear_linkid() {
  linkid_ = 0u;
  clear_has_linkid();
}
inline ::google::protobuf::uint32 PBLog_Doing::linkid() const {
  return linkid_;
}
inline void PBLog_Doing::set_linkid(::google::protobuf::uint32 value) {
  set_has_linkid();
  linkid_ = value;
}

// optional uint64 fromvalue = 8;
inline bool PBLog_Doing::has_fromvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBLog_Doing::set_has_fromvalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBLog_Doing::clear_has_fromvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBLog_Doing::clear_fromvalue() {
  fromvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_fromvalue();
}
inline ::google::protobuf::uint64 PBLog_Doing::fromvalue() const {
  return fromvalue_;
}
inline void PBLog_Doing::set_fromvalue(::google::protobuf::uint64 value) {
  set_has_fromvalue();
  fromvalue_ = value;
}

// optional uint64 tovalue = 9;
inline bool PBLog_Doing::has_tovalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBLog_Doing::set_has_tovalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBLog_Doing::clear_has_tovalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBLog_Doing::clear_tovalue() {
  tovalue_ = GOOGLE_ULONGLONG(0);
  clear_has_tovalue();
}
inline ::google::protobuf::uint64 PBLog_Doing::tovalue() const {
  return tovalue_;
}
inline void PBLog_Doing::set_tovalue(::google::protobuf::uint64 value) {
  set_has_tovalue();
  tovalue_ = value;
}

// optional uint64 value = 10;
inline bool PBLog_Doing::has_value() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBLog_Doing::set_has_value() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBLog_Doing::clear_has_value() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBLog_Doing::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 PBLog_Doing::value() const {
  return value_;
}
inline void PBLog_Doing::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// PBLog_Dartcar

// optional .PBLog_Common common = 1;
inline bool PBLog_Dartcar::has_common() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLog_Dartcar::set_has_common() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLog_Dartcar::clear_has_common() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLog_Dartcar::clear_common() {
  if (common_ != NULL) common_->::PBLog_Common::Clear();
  clear_has_common();
}
inline const ::PBLog_Common& PBLog_Dartcar::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::PBLog_Common* PBLog_Dartcar::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::PBLog_Common;
  return common_;
}
inline ::PBLog_Common* PBLog_Dartcar::release_common() {
  clear_has_common();
  ::PBLog_Common* temp = common_;
  common_ = NULL;
  return temp;
}

// optional uint32 event = 2;
inline bool PBLog_Dartcar::has_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBLog_Dartcar::set_has_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBLog_Dartcar::clear_has_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBLog_Dartcar::clear_event() {
  event_ = 0u;
  clear_has_event();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::event() const {
  return event_;
}
inline void PBLog_Dartcar::set_event(::google::protobuf::uint32 value) {
  set_has_event();
  event_ = value;
}

// optional uint32 sceneid = 3;
inline bool PBLog_Dartcar::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBLog_Dartcar::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBLog_Dartcar::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBLog_Dartcar::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::sceneid() const {
  return sceneid_;
}
inline void PBLog_Dartcar::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 scenecellid = 4;
inline bool PBLog_Dartcar::has_scenecellid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBLog_Dartcar::set_has_scenecellid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBLog_Dartcar::clear_has_scenecellid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBLog_Dartcar::clear_scenecellid() {
  scenecellid_ = 0u;
  clear_has_scenecellid();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::scenecellid() const {
  return scenecellid_;
}
inline void PBLog_Dartcar::set_scenecellid(::google::protobuf::uint32 value) {
  set_has_scenecellid();
  scenecellid_ = value;
}

// optional uint64 dynid = 5;
inline bool PBLog_Dartcar::has_dynid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBLog_Dartcar::set_has_dynid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBLog_Dartcar::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBLog_Dartcar::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBLog_Dartcar::dynid() const {
  return dynid_;
}
inline void PBLog_Dartcar::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional uint64 liushui = 6;
inline bool PBLog_Dartcar::has_liushui() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBLog_Dartcar::set_has_liushui() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBLog_Dartcar::clear_has_liushui() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBLog_Dartcar::clear_liushui() {
  liushui_ = GOOGLE_ULONGLONG(0);
  clear_has_liushui();
}
inline ::google::protobuf::uint64 PBLog_Dartcar::liushui() const {
  return liushui_;
}
inline void PBLog_Dartcar::set_liushui(::google::protobuf::uint64 value) {
  set_has_liushui();
  liushui_ = value;
}

// optional uint32 dartcarid = 7;
inline bool PBLog_Dartcar::has_dartcarid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBLog_Dartcar::set_has_dartcarid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBLog_Dartcar::clear_has_dartcarid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBLog_Dartcar::clear_dartcarid() {
  dartcarid_ = 0u;
  clear_has_dartcarid();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::dartcarid() const {
  return dartcarid_;
}
inline void PBLog_Dartcar::set_dartcarid(::google::protobuf::uint32 value) {
  set_has_dartcarid();
  dartcarid_ = value;
}

// optional uint32 honghuo = 8;
inline bool PBLog_Dartcar::has_honghuo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBLog_Dartcar::set_has_honghuo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBLog_Dartcar::clear_has_honghuo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBLog_Dartcar::clear_honghuo() {
  honghuo_ = 0u;
  clear_has_honghuo();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::honghuo() const {
  return honghuo_;
}
inline void PBLog_Dartcar::set_honghuo(::google::protobuf::uint32 value) {
  set_has_honghuo();
  honghuo_ = value;
}

// optional string playername = 9;
inline bool PBLog_Dartcar::has_playername() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBLog_Dartcar::set_has_playername() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBLog_Dartcar::clear_has_playername() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBLog_Dartcar::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PBLog_Dartcar::playername() const {
  return *playername_;
}
inline void PBLog_Dartcar::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBLog_Dartcar::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBLog_Dartcar::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBLog_Dartcar::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PBLog_Dartcar::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 playerid = 10;
inline bool PBLog_Dartcar::has_playerid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBLog_Dartcar::set_has_playerid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBLog_Dartcar::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBLog_Dartcar::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::playerid() const {
  return playerid_;
}
inline void PBLog_Dartcar::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 prizeid = 11;
inline bool PBLog_Dartcar::has_prizeid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBLog_Dartcar::set_has_prizeid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBLog_Dartcar::clear_has_prizeid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBLog_Dartcar::clear_prizeid() {
  prizeid_ = 0u;
  clear_has_prizeid();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::prizeid() const {
  return prizeid_;
}
inline void PBLog_Dartcar::set_prizeid(::google::protobuf::uint32 value) {
  set_has_prizeid();
  prizeid_ = value;
}

// optional uint32 prizecount = 12;
inline bool PBLog_Dartcar::has_prizecount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBLog_Dartcar::set_has_prizecount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBLog_Dartcar::clear_has_prizecount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBLog_Dartcar::clear_prizecount() {
  prizecount_ = 0u;
  clear_has_prizecount();
}
inline ::google::protobuf::uint32 PBLog_Dartcar::prizecount() const {
  return prizecount_;
}
inline void PBLog_Dartcar::set_prizecount(::google::protobuf::uint32 value) {
  set_has_prizecount();
  prizecount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RecordStruct_2eproto__INCLUDED
