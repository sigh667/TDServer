// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PvpWar.proto

#ifndef PROTOBUF_PvpWar_2eproto__INCLUDED
#define PROTOBUF_PvpWar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "AccountStruct.pb.h"
#include "PlayerStruct.pb.h"
#include "GameStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PvpWar_2eproto();
void protobuf_AssignDesc_PvpWar_2eproto();
void protobuf_ShutdownFile_PvpWar_2eproto();

class PBPvpMember;
class PBC2GPvpEnterMatchAsk;
class PBG2CPvpEnterMatchAck;
class PBG2CPvpExitMatchAck;
class PBS2C_PvpWar_ReadyAck;
class PBS2C_PvpWar_ExitReadyAck;
class PBW2BWPvpWarSingleMatchAsk;
class PBW2BWPvpWarTeamMatchAsk;
class PBW2BWPvpWarExitMatchAsk;
class PBW2BWPvpWarReadyEnterAsk;
class PBW2BWPvpWarExitEnterAsk;
class PBBW2WPvpWarExitMatchAck;
class PBBW2WPvpWarEnterMatchAck;
class PBBW2WPvpWarReadyEnterAck;
class PBBW2WPvpWarExitReadyEnterAck;
class PBBW2WPvpWarCompleteMatchAck;
class PBPvpBannerCampScore;
class PBPvpBannerPlayerInfo;
class PBG2CCopymapSynBannerScore;
class PBG2CCopymapSynBannerPlayerInfo;
class PBG2CCopymapSynBannerResult;
class PBG2CCopymapSynBannerGodlike;
class PBG2CCopymapSynBannerMegakill;
class PBG2CCopymapSynGetBanner;
class PBG2CCopymapSynBannerKill;
class PBSinglePvpMember;
class PBG2WSinglePvpExitMatch;
class PBG2CCopymapSynSinglePvpResult;
class PBCAGSinglePvpDayPrize;
class PBG2CSinglePvpSynScore;

// ===================================================================

class PBPvpMember : public ::google::protobuf::Message {
 public:
  PBPvpMember();
  virtual ~PBPvpMember();
  
  PBPvpMember(const PBPvpMember& from);
  
  inline PBPvpMember& operator=(const PBPvpMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPvpMember& default_instance();
  
  void Swap(PBPvpMember* other);
  
  // implements Message ----------------------------------------------
  
  PBPvpMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPvpMember& from);
  void MergeFrom(const PBPvpMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint64 maxfightpower = 2;
  inline bool has_maxfightpower() const;
  inline void clear_maxfightpower();
  static const int kMaxfightpowerFieldNumber = 2;
  inline ::google::protobuf::uint64 maxfightpower() const;
  inline void set_maxfightpower(::google::protobuf::uint64 value);
  
  // optional uint64 teamid = 3;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamidFieldNumber = 3;
  inline ::google::protobuf::uint64 teamid() const;
  inline void set_teamid(::google::protobuf::uint64 value);
  
  // optional bool isready = 4;
  inline bool has_isready() const;
  inline void clear_isready();
  static const int kIsreadyFieldNumber = 4;
  inline bool isready() const;
  inline void set_isready(bool value);
  
  // @@protoc_insertion_point(class_scope:PBPvpMember)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_maxfightpower();
  inline void clear_has_maxfightpower();
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_isready();
  inline void clear_has_isready();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint64 maxfightpower_;
  ::google::protobuf::uint64 teamid_;
  bool isready_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBPvpMember* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GPvpEnterMatchAsk : public ::google::protobuf::Message {
 public:
  PBC2GPvpEnterMatchAsk();
  virtual ~PBC2GPvpEnterMatchAsk();
  
  PBC2GPvpEnterMatchAsk(const PBC2GPvpEnterMatchAsk& from);
  
  inline PBC2GPvpEnterMatchAsk& operator=(const PBC2GPvpEnterMatchAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GPvpEnterMatchAsk& default_instance();
  
  void Swap(PBC2GPvpEnterMatchAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GPvpEnterMatchAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GPvpEnterMatchAsk& from);
  void MergeFrom(const PBC2GPvpEnterMatchAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GPvpEnterMatchAsk)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GPvpEnterMatchAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CPvpEnterMatchAck : public ::google::protobuf::Message {
 public:
  PBG2CPvpEnterMatchAck();
  virtual ~PBG2CPvpEnterMatchAck();
  
  PBG2CPvpEnterMatchAck(const PBG2CPvpEnterMatchAck& from);
  
  inline PBG2CPvpEnterMatchAck& operator=(const PBG2CPvpEnterMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CPvpEnterMatchAck& default_instance();
  
  void Swap(PBG2CPvpEnterMatchAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CPvpEnterMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CPvpEnterMatchAck& from);
  void MergeFrom(const PBG2CPvpEnterMatchAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CPvpEnterMatchAck)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CPvpEnterMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CPvpExitMatchAck : public ::google::protobuf::Message {
 public:
  PBG2CPvpExitMatchAck();
  virtual ~PBG2CPvpExitMatchAck();
  
  PBG2CPvpExitMatchAck(const PBG2CPvpExitMatchAck& from);
  
  inline PBG2CPvpExitMatchAck& operator=(const PBG2CPvpExitMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CPvpExitMatchAck& default_instance();
  
  void Swap(PBG2CPvpExitMatchAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CPvpExitMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CPvpExitMatchAck& from);
  void MergeFrom(const PBG2CPvpExitMatchAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CPvpExitMatchAck)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CPvpExitMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class PBS2C_PvpWar_ReadyAck : public ::google::protobuf::Message {
 public:
  PBS2C_PvpWar_ReadyAck();
  virtual ~PBS2C_PvpWar_ReadyAck();
  
  PBS2C_PvpWar_ReadyAck(const PBS2C_PvpWar_ReadyAck& from);
  
  inline PBS2C_PvpWar_ReadyAck& operator=(const PBS2C_PvpWar_ReadyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBS2C_PvpWar_ReadyAck& default_instance();
  
  void Swap(PBS2C_PvpWar_ReadyAck* other);
  
  // implements Message ----------------------------------------------
  
  PBS2C_PvpWar_ReadyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBS2C_PvpWar_ReadyAck& from);
  void MergeFrom(const PBS2C_PvpWar_ReadyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBS2C_PvpWar_ReadyAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBS2C_PvpWar_ReadyAck* default_instance_;
};
// -------------------------------------------------------------------

class PBS2C_PvpWar_ExitReadyAck : public ::google::protobuf::Message {
 public:
  PBS2C_PvpWar_ExitReadyAck();
  virtual ~PBS2C_PvpWar_ExitReadyAck();
  
  PBS2C_PvpWar_ExitReadyAck(const PBS2C_PvpWar_ExitReadyAck& from);
  
  inline PBS2C_PvpWar_ExitReadyAck& operator=(const PBS2C_PvpWar_ExitReadyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBS2C_PvpWar_ExitReadyAck& default_instance();
  
  void Swap(PBS2C_PvpWar_ExitReadyAck* other);
  
  // implements Message ----------------------------------------------
  
  PBS2C_PvpWar_ExitReadyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBS2C_PvpWar_ExitReadyAck& from);
  void MergeFrom(const PBS2C_PvpWar_ExitReadyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 nextentertime = 2;
  inline bool has_nextentertime() const;
  inline void clear_nextentertime();
  static const int kNextentertimeFieldNumber = 2;
  inline ::google::protobuf::uint32 nextentertime() const;
  inline void set_nextentertime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBS2C_PvpWar_ExitReadyAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_nextentertime();
  inline void clear_has_nextentertime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 nextentertime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBS2C_PvpWar_ExitReadyAck* default_instance_;
};
// -------------------------------------------------------------------

class PBW2BWPvpWarSingleMatchAsk : public ::google::protobuf::Message {
 public:
  PBW2BWPvpWarSingleMatchAsk();
  virtual ~PBW2BWPvpWarSingleMatchAsk();
  
  PBW2BWPvpWarSingleMatchAsk(const PBW2BWPvpWarSingleMatchAsk& from);
  
  inline PBW2BWPvpWarSingleMatchAsk& operator=(const PBW2BWPvpWarSingleMatchAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2BWPvpWarSingleMatchAsk& default_instance();
  
  void Swap(PBW2BWPvpWarSingleMatchAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2BWPvpWarSingleMatchAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2BWPvpWarSingleMatchAsk& from);
  void MergeFrom(const PBW2BWPvpWarSingleMatchAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPvpMember member = 1;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::PBPvpMember& member() const;
  inline ::PBPvpMember* mutable_member();
  inline ::PBPvpMember* release_member();
  
  // @@protoc_insertion_point(class_scope:PBW2BWPvpWarSingleMatchAsk)
 private:
  inline void set_has_member();
  inline void clear_has_member();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPvpMember* member_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2BWPvpWarSingleMatchAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2BWPvpWarTeamMatchAsk : public ::google::protobuf::Message {
 public:
  PBW2BWPvpWarTeamMatchAsk();
  virtual ~PBW2BWPvpWarTeamMatchAsk();
  
  PBW2BWPvpWarTeamMatchAsk(const PBW2BWPvpWarTeamMatchAsk& from);
  
  inline PBW2BWPvpWarTeamMatchAsk& operator=(const PBW2BWPvpWarTeamMatchAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2BWPvpWarTeamMatchAsk& default_instance();
  
  void Swap(PBW2BWPvpWarTeamMatchAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2BWPvpWarTeamMatchAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2BWPvpWarTeamMatchAsk& from);
  void MergeFrom(const PBW2BWPvpWarTeamMatchAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPvpMember member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::PBPvpMember& member(int index) const;
  inline ::PBPvpMember* mutable_member(int index);
  inline ::PBPvpMember* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPvpMember >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPvpMember >*
      mutable_member();
  
  // optional uint32 maxfightpower = 2;
  inline bool has_maxfightpower() const;
  inline void clear_maxfightpower();
  static const int kMaxfightpowerFieldNumber = 2;
  inline ::google::protobuf::uint32 maxfightpower() const;
  inline void set_maxfightpower(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2BWPvpWarTeamMatchAsk)
 private:
  inline void set_has_maxfightpower();
  inline void clear_has_maxfightpower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPvpMember > member_;
  ::google::protobuf::uint32 maxfightpower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2BWPvpWarTeamMatchAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2BWPvpWarExitMatchAsk : public ::google::protobuf::Message {
 public:
  PBW2BWPvpWarExitMatchAsk();
  virtual ~PBW2BWPvpWarExitMatchAsk();
  
  PBW2BWPvpWarExitMatchAsk(const PBW2BWPvpWarExitMatchAsk& from);
  
  inline PBW2BWPvpWarExitMatchAsk& operator=(const PBW2BWPvpWarExitMatchAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2BWPvpWarExitMatchAsk& default_instance();
  
  void Swap(PBW2BWPvpWarExitMatchAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2BWPvpWarExitMatchAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2BWPvpWarExitMatchAsk& from);
  void MergeFrom(const PBW2BWPvpWarExitMatchAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // @@protoc_insertion_point(class_scope:PBW2BWPvpWarExitMatchAsk)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2BWPvpWarExitMatchAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2BWPvpWarReadyEnterAsk : public ::google::protobuf::Message {
 public:
  PBW2BWPvpWarReadyEnterAsk();
  virtual ~PBW2BWPvpWarReadyEnterAsk();
  
  PBW2BWPvpWarReadyEnterAsk(const PBW2BWPvpWarReadyEnterAsk& from);
  
  inline PBW2BWPvpWarReadyEnterAsk& operator=(const PBW2BWPvpWarReadyEnterAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2BWPvpWarReadyEnterAsk& default_instance();
  
  void Swap(PBW2BWPvpWarReadyEnterAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2BWPvpWarReadyEnterAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2BWPvpWarReadyEnterAsk& from);
  void MergeFrom(const PBW2BWPvpWarReadyEnterAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // @@protoc_insertion_point(class_scope:PBW2BWPvpWarReadyEnterAsk)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2BWPvpWarReadyEnterAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2BWPvpWarExitEnterAsk : public ::google::protobuf::Message {
 public:
  PBW2BWPvpWarExitEnterAsk();
  virtual ~PBW2BWPvpWarExitEnterAsk();
  
  PBW2BWPvpWarExitEnterAsk(const PBW2BWPvpWarExitEnterAsk& from);
  
  inline PBW2BWPvpWarExitEnterAsk& operator=(const PBW2BWPvpWarExitEnterAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2BWPvpWarExitEnterAsk& default_instance();
  
  void Swap(PBW2BWPvpWarExitEnterAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2BWPvpWarExitEnterAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2BWPvpWarExitEnterAsk& from);
  void MergeFrom(const PBW2BWPvpWarExitEnterAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // @@protoc_insertion_point(class_scope:PBW2BWPvpWarExitEnterAsk)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2BWPvpWarExitEnterAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBBW2WPvpWarExitMatchAck : public ::google::protobuf::Message {
 public:
  PBBW2WPvpWarExitMatchAck();
  virtual ~PBBW2WPvpWarExitMatchAck();
  
  PBBW2WPvpWarExitMatchAck(const PBBW2WPvpWarExitMatchAck& from);
  
  inline PBBW2WPvpWarExitMatchAck& operator=(const PBBW2WPvpWarExitMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBW2WPvpWarExitMatchAck& default_instance();
  
  void Swap(PBBW2WPvpWarExitMatchAck* other);
  
  // implements Message ----------------------------------------------
  
  PBBW2WPvpWarExitMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBW2WPvpWarExitMatchAck& from);
  void MergeFrom(const PBBW2WPvpWarExitMatchAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBBW2WPvpWarExitMatchAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBBW2WPvpWarExitMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class PBBW2WPvpWarEnterMatchAck : public ::google::protobuf::Message {
 public:
  PBBW2WPvpWarEnterMatchAck();
  virtual ~PBBW2WPvpWarEnterMatchAck();
  
  PBBW2WPvpWarEnterMatchAck(const PBBW2WPvpWarEnterMatchAck& from);
  
  inline PBBW2WPvpWarEnterMatchAck& operator=(const PBBW2WPvpWarEnterMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBW2WPvpWarEnterMatchAck& default_instance();
  
  void Swap(PBBW2WPvpWarEnterMatchAck* other);
  
  // implements Message ----------------------------------------------
  
  PBBW2WPvpWarEnterMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBW2WPvpWarEnterMatchAck& from);
  void MergeFrom(const PBBW2WPvpWarEnterMatchAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 warid = 1;
  inline bool has_warid() const;
  inline void clear_warid();
  static const int kWaridFieldNumber = 1;
  inline ::google::protobuf::uint32 warid() const;
  inline void set_warid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBBW2WPvpWarEnterMatchAck)
 private:
  inline void set_has_warid();
  inline void clear_has_warid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 warid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBBW2WPvpWarEnterMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class PBBW2WPvpWarReadyEnterAck : public ::google::protobuf::Message {
 public:
  PBBW2WPvpWarReadyEnterAck();
  virtual ~PBBW2WPvpWarReadyEnterAck();
  
  PBBW2WPvpWarReadyEnterAck(const PBBW2WPvpWarReadyEnterAck& from);
  
  inline PBBW2WPvpWarReadyEnterAck& operator=(const PBBW2WPvpWarReadyEnterAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBW2WPvpWarReadyEnterAck& default_instance();
  
  void Swap(PBBW2WPvpWarReadyEnterAck* other);
  
  // implements Message ----------------------------------------------
  
  PBBW2WPvpWarReadyEnterAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBW2WPvpWarReadyEnterAck& from);
  void MergeFrom(const PBBW2WPvpWarReadyEnterAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBBW2WPvpWarReadyEnterAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBBW2WPvpWarReadyEnterAck* default_instance_;
};
// -------------------------------------------------------------------

class PBBW2WPvpWarExitReadyEnterAck : public ::google::protobuf::Message {
 public:
  PBBW2WPvpWarExitReadyEnterAck();
  virtual ~PBBW2WPvpWarExitReadyEnterAck();
  
  PBBW2WPvpWarExitReadyEnterAck(const PBBW2WPvpWarExitReadyEnterAck& from);
  
  inline PBBW2WPvpWarExitReadyEnterAck& operator=(const PBBW2WPvpWarExitReadyEnterAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBW2WPvpWarExitReadyEnterAck& default_instance();
  
  void Swap(PBBW2WPvpWarExitReadyEnterAck* other);
  
  // implements Message ----------------------------------------------
  
  PBBW2WPvpWarExitReadyEnterAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBW2WPvpWarExitReadyEnterAck& from);
  void MergeFrom(const PBBW2WPvpWarExitReadyEnterAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBBW2WPvpWarExitReadyEnterAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBBW2WPvpWarExitReadyEnterAck* default_instance_;
};
// -------------------------------------------------------------------

class PBBW2WPvpWarCompleteMatchAck : public ::google::protobuf::Message {
 public:
  PBBW2WPvpWarCompleteMatchAck();
  virtual ~PBBW2WPvpWarCompleteMatchAck();
  
  PBBW2WPvpWarCompleteMatchAck(const PBBW2WPvpWarCompleteMatchAck& from);
  
  inline PBBW2WPvpWarCompleteMatchAck& operator=(const PBBW2WPvpWarCompleteMatchAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBW2WPvpWarCompleteMatchAck& default_instance();
  
  void Swap(PBBW2WPvpWarCompleteMatchAck* other);
  
  // implements Message ----------------------------------------------
  
  PBBW2WPvpWarCompleteMatchAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBW2WPvpWarCompleteMatchAck& from);
  void MergeFrom(const PBBW2WPvpWarCompleteMatchAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPvpMember friend = 1;
  inline int friend__size() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 1;
  inline const ::PBPvpMember& friend_(int index) const;
  inline ::PBPvpMember* mutable_friend_(int index);
  inline ::PBPvpMember* add_friend_();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPvpMember >&
      friend_() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPvpMember >*
      mutable_friend_();
  
  // repeated .PBPvpMember enemy = 2;
  inline int enemy_size() const;
  inline void clear_enemy();
  static const int kEnemyFieldNumber = 2;
  inline const ::PBPvpMember& enemy(int index) const;
  inline ::PBPvpMember* mutable_enemy(int index);
  inline ::PBPvpMember* add_enemy();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPvpMember >&
      enemy() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPvpMember >*
      mutable_enemy();
  
  // @@protoc_insertion_point(class_scope:PBBW2WPvpWarCompleteMatchAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPvpMember > friend__;
  ::google::protobuf::RepeatedPtrField< ::PBPvpMember > enemy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBBW2WPvpWarCompleteMatchAck* default_instance_;
};
// -------------------------------------------------------------------

class PBPvpBannerCampScore : public ::google::protobuf::Message {
 public:
  PBPvpBannerCampScore();
  virtual ~PBPvpBannerCampScore();
  
  PBPvpBannerCampScore(const PBPvpBannerCampScore& from);
  
  inline PBPvpBannerCampScore& operator=(const PBPvpBannerCampScore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPvpBannerCampScore& default_instance();
  
  void Swap(PBPvpBannerCampScore* other);
  
  // implements Message ----------------------------------------------
  
  PBPvpBannerCampScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPvpBannerCampScore& from);
  void MergeFrom(const PBPvpBannerCampScore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 campid = 1;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 1;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPvpBannerCampScore)
 private:
  inline void set_has_campid();
  inline void clear_has_campid();
  inline void set_has_score();
  inline void clear_has_score();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 score_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBPvpBannerCampScore* default_instance_;
};
// -------------------------------------------------------------------

class PBPvpBannerPlayerInfo : public ::google::protobuf::Message {
 public:
  PBPvpBannerPlayerInfo();
  virtual ~PBPvpBannerPlayerInfo();
  
  PBPvpBannerPlayerInfo(const PBPvpBannerPlayerInfo& from);
  
  inline PBPvpBannerPlayerInfo& operator=(const PBPvpBannerPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPvpBannerPlayerInfo& default_instance();
  
  void Swap(PBPvpBannerPlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPvpBannerPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPvpBannerPlayerInfo& from);
  void MergeFrom(const PBPvpBannerPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 killcount = 2;
  inline bool has_killcount() const;
  inline void clear_killcount();
  static const int kKillcountFieldNumber = 2;
  inline ::google::protobuf::uint32 killcount() const;
  inline void set_killcount(::google::protobuf::uint32 value);
  
  // optional uint32 deadcount = 3;
  inline bool has_deadcount() const;
  inline void clear_deadcount();
  static const int kDeadcountFieldNumber = 3;
  inline ::google::protobuf::uint32 deadcount() const;
  inline void set_deadcount(::google::protobuf::uint32 value);
  
  // optional uint32 assistkillcount = 4;
  inline bool has_assistkillcount() const;
  inline void clear_assistkillcount();
  static const int kAssistkillcountFieldNumber = 4;
  inline ::google::protobuf::uint32 assistkillcount() const;
  inline void set_assistkillcount(::google::protobuf::uint32 value);
  
  // optional uint32 contri = 5;
  inline bool has_contri() const;
  inline void clear_contri();
  static const int kContriFieldNumber = 5;
  inline ::google::protobuf::uint32 contri() const;
  inline void set_contri(::google::protobuf::uint32 value);
  
  // optional uint32 godlikecount = 6;
  inline bool has_godlikecount() const;
  inline void clear_godlikecount();
  static const int kGodlikecountFieldNumber = 6;
  inline ::google::protobuf::uint32 godlikecount() const;
  inline void set_godlikecount(::google::protobuf::uint32 value);
  
  // optional uint32 megakillcount = 7;
  inline bool has_megakillcount() const;
  inline void clear_megakillcount();
  static const int kMegakillcountFieldNumber = 7;
  inline ::google::protobuf::uint32 megakillcount() const;
  inline void set_megakillcount(::google::protobuf::uint32 value);
  
  // optional uint32 ismvp = 8;
  inline bool has_ismvp() const;
  inline void clear_ismvp();
  static const int kIsmvpFieldNumber = 8;
  inline ::google::protobuf::uint32 ismvp() const;
  inline void set_ismvp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPvpBannerPlayerInfo)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_killcount();
  inline void clear_has_killcount();
  inline void set_has_deadcount();
  inline void clear_has_deadcount();
  inline void set_has_assistkillcount();
  inline void clear_has_assistkillcount();
  inline void set_has_contri();
  inline void clear_has_contri();
  inline void set_has_godlikecount();
  inline void clear_has_godlikecount();
  inline void set_has_megakillcount();
  inline void clear_has_megakillcount();
  inline void set_has_ismvp();
  inline void clear_has_ismvp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 killcount_;
  ::google::protobuf::uint32 deadcount_;
  ::google::protobuf::uint32 assistkillcount_;
  ::google::protobuf::uint32 contri_;
  ::google::protobuf::uint32 godlikecount_;
  ::google::protobuf::uint32 megakillcount_;
  ::google::protobuf::uint32 ismvp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBPvpBannerPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynBannerScore : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynBannerScore();
  virtual ~PBG2CCopymapSynBannerScore();
  
  PBG2CCopymapSynBannerScore(const PBG2CCopymapSynBannerScore& from);
  
  inline PBG2CCopymapSynBannerScore& operator=(const PBG2CCopymapSynBannerScore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynBannerScore& default_instance();
  
  void Swap(PBG2CCopymapSynBannerScore* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynBannerScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynBannerScore& from);
  void MergeFrom(const PBG2CCopymapSynBannerScore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPvpBannerCampScore campscore = 1;
  inline int campscore_size() const;
  inline void clear_campscore();
  static const int kCampscoreFieldNumber = 1;
  inline const ::PBPvpBannerCampScore& campscore(int index) const;
  inline ::PBPvpBannerCampScore* mutable_campscore(int index);
  inline ::PBPvpBannerCampScore* add_campscore();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >&
      campscore() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >*
      mutable_campscore();
  
  // repeated uint32 bannercampid = 2;
  inline int bannercampid_size() const;
  inline void clear_bannercampid();
  static const int kBannercampidFieldNumber = 2;
  inline ::google::protobuf::uint32 bannercampid(int index) const;
  inline void set_bannercampid(int index, ::google::protobuf::uint32 value);
  inline void add_bannercampid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      bannercampid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_bannercampid();
  
  // repeated uint32 buffID = 3;
  inline int buffid_size() const;
  inline void clear_buffid();
  static const int kBuffIDFieldNumber = 3;
  inline ::google::protobuf::uint32 buffid(int index) const;
  inline void set_buffid(int index, ::google::protobuf::uint32 value);
  inline void add_buffid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buffid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buffid();
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynBannerScore)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore > campscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > bannercampid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buffid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynBannerScore* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynBannerPlayerInfo : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynBannerPlayerInfo();
  virtual ~PBG2CCopymapSynBannerPlayerInfo();
  
  PBG2CCopymapSynBannerPlayerInfo(const PBG2CCopymapSynBannerPlayerInfo& from);
  
  inline PBG2CCopymapSynBannerPlayerInfo& operator=(const PBG2CCopymapSynBannerPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynBannerPlayerInfo& default_instance();
  
  void Swap(PBG2CCopymapSynBannerPlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynBannerPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynBannerPlayerInfo& from);
  void MergeFrom(const PBG2CCopymapSynBannerPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPvpBannerPlayerInfo pbinfo = 1;
  inline int pbinfo_size() const;
  inline void clear_pbinfo();
  static const int kPbinfoFieldNumber = 1;
  inline const ::PBPvpBannerPlayerInfo& pbinfo(int index) const;
  inline ::PBPvpBannerPlayerInfo* mutable_pbinfo(int index);
  inline ::PBPvpBannerPlayerInfo* add_pbinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >&
      pbinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >*
      mutable_pbinfo();
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynBannerPlayerInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo > pbinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynBannerPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynBannerResult : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynBannerResult();
  virtual ~PBG2CCopymapSynBannerResult();
  
  PBG2CCopymapSynBannerResult(const PBG2CCopymapSynBannerResult& from);
  
  inline PBG2CCopymapSynBannerResult& operator=(const PBG2CCopymapSynBannerResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynBannerResult& default_instance();
  
  void Swap(PBG2CCopymapSynBannerResult* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynBannerResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynBannerResult& from);
  void MergeFrom(const PBG2CCopymapSynBannerResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPvpBannerCampScore campscore = 1;
  inline int campscore_size() const;
  inline void clear_campscore();
  static const int kCampscoreFieldNumber = 1;
  inline const ::PBPvpBannerCampScore& campscore(int index) const;
  inline ::PBPvpBannerCampScore* mutable_campscore(int index);
  inline ::PBPvpBannerCampScore* add_campscore();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >&
      campscore() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >*
      mutable_campscore();
  
  // repeated .PBPvpBannerPlayerInfo pbinfo = 2;
  inline int pbinfo_size() const;
  inline void clear_pbinfo();
  static const int kPbinfoFieldNumber = 2;
  inline const ::PBPvpBannerPlayerInfo& pbinfo(int index) const;
  inline ::PBPvpBannerPlayerInfo* mutable_pbinfo(int index);
  inline ::PBPvpBannerPlayerInfo* add_pbinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >&
      pbinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >*
      mutable_pbinfo();
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynBannerResult)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore > campscore_;
  ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo > pbinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynBannerResult* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynBannerGodlike : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynBannerGodlike();
  virtual ~PBG2CCopymapSynBannerGodlike();
  
  PBG2CCopymapSynBannerGodlike(const PBG2CCopymapSynBannerGodlike& from);
  
  inline PBG2CCopymapSynBannerGodlike& operator=(const PBG2CCopymapSynBannerGodlike& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynBannerGodlike& default_instance();
  
  void Swap(PBG2CCopymapSynBannerGodlike* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynBannerGodlike* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynBannerGodlike& from);
  void MergeFrom(const PBG2CCopymapSynBannerGodlike& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional .PBPlayerDisplay target = 3;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 3;
  inline const ::PBPlayerDisplay& target() const;
  inline ::PBPlayerDisplay* mutable_target();
  inline ::PBPlayerDisplay* release_target();
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynBannerGodlike)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::PBPlayerDisplay* target_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynBannerGodlike* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynBannerMegakill : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynBannerMegakill();
  virtual ~PBG2CCopymapSynBannerMegakill();
  
  PBG2CCopymapSynBannerMegakill(const PBG2CCopymapSynBannerMegakill& from);
  
  inline PBG2CCopymapSynBannerMegakill& operator=(const PBG2CCopymapSynBannerMegakill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynBannerMegakill& default_instance();
  
  void Swap(PBG2CCopymapSynBannerMegakill* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynBannerMegakill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynBannerMegakill& from);
  void MergeFrom(const PBG2CCopymapSynBannerMegakill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional .PBPlayerDisplay target = 3;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 3;
  inline const ::PBPlayerDisplay& target() const;
  inline ::PBPlayerDisplay* mutable_target();
  inline ::PBPlayerDisplay* release_target();
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynBannerMegakill)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::PBPlayerDisplay* target_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynBannerMegakill* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynGetBanner : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynGetBanner();
  virtual ~PBG2CCopymapSynGetBanner();
  
  PBG2CCopymapSynGetBanner(const PBG2CCopymapSynGetBanner& from);
  
  inline PBG2CCopymapSynGetBanner& operator=(const PBG2CCopymapSynGetBanner& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynGetBanner& default_instance();
  
  void Swap(PBG2CCopymapSynGetBanner* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynGetBanner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynGetBanner& from);
  void MergeFrom(const PBG2CCopymapSynGetBanner& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynGetBanner)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynGetBanner* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynBannerKill : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynBannerKill();
  virtual ~PBG2CCopymapSynBannerKill();
  
  PBG2CCopymapSynBannerKill(const PBG2CCopymapSynBannerKill& from);
  
  inline PBG2CCopymapSynBannerKill& operator=(const PBG2CCopymapSynBannerKill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynBannerKill& default_instance();
  
  void Swap(PBG2CCopymapSynBannerKill* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynBannerKill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynBannerKill& from);
  void MergeFrom(const PBG2CCopymapSynBannerKill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay source = 1;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 1;
  inline const ::PBPlayerDisplay& source() const;
  inline ::PBPlayerDisplay* mutable_source();
  inline ::PBPlayerDisplay* release_source();
  
  // optional .PBPlayerDisplay target = 2;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 2;
  inline const ::PBPlayerDisplay& target() const;
  inline ::PBPlayerDisplay* mutable_target();
  inline ::PBPlayerDisplay* release_target();
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynBannerKill)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* source_;
  ::PBPlayerDisplay* target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynBannerKill* default_instance_;
};
// -------------------------------------------------------------------

class PBSinglePvpMember : public ::google::protobuf::Message {
 public:
  PBSinglePvpMember();
  virtual ~PBSinglePvpMember();
  
  PBSinglePvpMember(const PBSinglePvpMember& from);
  
  inline PBSinglePvpMember& operator=(const PBSinglePvpMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSinglePvpMember& default_instance();
  
  void Swap(PBSinglePvpMember* other);
  
  // implements Message ----------------------------------------------
  
  PBSinglePvpMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSinglePvpMember& from);
  void MergeFrom(const PBSinglePvpMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 singlepvpscore = 2;
  inline bool has_singlepvpscore() const;
  inline void clear_singlepvpscore();
  static const int kSinglepvpscoreFieldNumber = 2;
  inline ::google::protobuf::uint32 singlepvpscore() const;
  inline void set_singlepvpscore(::google::protobuf::uint32 value);
  
  // optional uint32 maxfightpower = 3;
  inline bool has_maxfightpower() const;
  inline void clear_maxfightpower();
  static const int kMaxfightpowerFieldNumber = 3;
  inline ::google::protobuf::uint32 maxfightpower() const;
  inline void set_maxfightpower(::google::protobuf::uint32 value);
  
  // optional uint32 wincount = 4;
  inline bool has_wincount() const;
  inline void clear_wincount();
  static const int kWincountFieldNumber = 4;
  inline ::google::protobuf::uint32 wincount() const;
  inline void set_wincount(::google::protobuf::uint32 value);
  
  // optional uint32 failcount = 5;
  inline bool has_failcount() const;
  inline void clear_failcount();
  static const int kFailcountFieldNumber = 5;
  inline ::google::protobuf::uint32 failcount() const;
  inline void set_failcount(::google::protobuf::uint32 value);
  
  // optional uint32 equalcount = 6;
  inline bool has_equalcount() const;
  inline void clear_equalcount();
  static const int kEqualcountFieldNumber = 6;
  inline ::google::protobuf::uint32 equalcount() const;
  inline void set_equalcount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSinglePvpMember)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_singlepvpscore();
  inline void clear_has_singlepvpscore();
  inline void set_has_maxfightpower();
  inline void clear_has_maxfightpower();
  inline void set_has_wincount();
  inline void clear_has_wincount();
  inline void set_has_failcount();
  inline void clear_has_failcount();
  inline void set_has_equalcount();
  inline void clear_has_equalcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 singlepvpscore_;
  ::google::protobuf::uint32 maxfightpower_;
  ::google::protobuf::uint32 wincount_;
  ::google::protobuf::uint32 failcount_;
  ::google::protobuf::uint32 equalcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBSinglePvpMember* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WSinglePvpExitMatch : public ::google::protobuf::Message {
 public:
  PBG2WSinglePvpExitMatch();
  virtual ~PBG2WSinglePvpExitMatch();
  
  PBG2WSinglePvpExitMatch(const PBG2WSinglePvpExitMatch& from);
  
  inline PBG2WSinglePvpExitMatch& operator=(const PBG2WSinglePvpExitMatch& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WSinglePvpExitMatch& default_instance();
  
  void Swap(PBG2WSinglePvpExitMatch* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WSinglePvpExitMatch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WSinglePvpExitMatch& from);
  void MergeFrom(const PBG2WSinglePvpExitMatch& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // @@protoc_insertion_point(class_scope:PBG2WSinglePvpExitMatch)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WSinglePvpExitMatch* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CCopymapSynSinglePvpResult : public ::google::protobuf::Message {
 public:
  PBG2CCopymapSynSinglePvpResult();
  virtual ~PBG2CCopymapSynSinglePvpResult();
  
  PBG2CCopymapSynSinglePvpResult(const PBG2CCopymapSynSinglePvpResult& from);
  
  inline PBG2CCopymapSynSinglePvpResult& operator=(const PBG2CCopymapSynSinglePvpResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CCopymapSynSinglePvpResult& default_instance();
  
  void Swap(PBG2CCopymapSynSinglePvpResult* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CCopymapSynSinglePvpResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CCopymapSynSinglePvpResult& from);
  void MergeFrom(const PBG2CCopymapSynSinglePvpResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 curscore = 2;
  inline bool has_curscore() const;
  inline void clear_curscore();
  static const int kCurscoreFieldNumber = 2;
  inline ::google::protobuf::uint32 curscore() const;
  inline void set_curscore(::google::protobuf::uint32 value);
  
  // optional uint32 oldscore = 3;
  inline bool has_oldscore() const;
  inline void clear_oldscore();
  static const int kOldscoreFieldNumber = 3;
  inline ::google::protobuf::uint32 oldscore() const;
  inline void set_oldscore(::google::protobuf::uint32 value);
  
  // optional uint32 honor = 4;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 4;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CCopymapSynSinglePvpResult)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_curscore();
  inline void clear_has_curscore();
  inline void set_has_oldscore();
  inline void clear_has_oldscore();
  inline void set_has_honor();
  inline void clear_has_honor();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 curscore_;
  ::google::protobuf::uint32 oldscore_;
  ::google::protobuf::uint32 honor_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CCopymapSynSinglePvpResult* default_instance_;
};
// -------------------------------------------------------------------

class PBCAGSinglePvpDayPrize : public ::google::protobuf::Message {
 public:
  PBCAGSinglePvpDayPrize();
  virtual ~PBCAGSinglePvpDayPrize();
  
  PBCAGSinglePvpDayPrize(const PBCAGSinglePvpDayPrize& from);
  
  inline PBCAGSinglePvpDayPrize& operator=(const PBCAGSinglePvpDayPrize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCAGSinglePvpDayPrize& default_instance();
  
  void Swap(PBCAGSinglePvpDayPrize* other);
  
  // implements Message ----------------------------------------------
  
  PBCAGSinglePvpDayPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCAGSinglePvpDayPrize& from);
  void MergeFrom(const PBCAGSinglePvpDayPrize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 daycount = 1;
  inline bool has_daycount() const;
  inline void clear_daycount();
  static const int kDaycountFieldNumber = 1;
  inline ::google::protobuf::uint32 daycount() const;
  inline void set_daycount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBCAGSinglePvpDayPrize)
 private:
  inline void set_has_daycount();
  inline void clear_has_daycount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 daycount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBCAGSinglePvpDayPrize* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CSinglePvpSynScore : public ::google::protobuf::Message {
 public:
  PBG2CSinglePvpSynScore();
  virtual ~PBG2CSinglePvpSynScore();
  
  PBG2CSinglePvpSynScore(const PBG2CSinglePvpSynScore& from);
  
  inline PBG2CSinglePvpSynScore& operator=(const PBG2CSinglePvpSynScore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CSinglePvpSynScore& default_instance();
  
  void Swap(PBG2CSinglePvpSynScore* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CSinglePvpSynScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CSinglePvpSynScore& from);
  void MergeFrom(const PBG2CSinglePvpSynScore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 singlepvpscore = 1;
  inline bool has_singlepvpscore() const;
  inline void clear_singlepvpscore();
  static const int kSinglepvpscoreFieldNumber = 1;
  inline ::google::protobuf::uint32 singlepvpscore() const;
  inline void set_singlepvpscore(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CSinglePvpSynScore)
 private:
  inline void set_has_singlepvpscore();
  inline void clear_has_singlepvpscore();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 singlepvpscore_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PvpWar_2eproto();
  friend void protobuf_AssignDesc_PvpWar_2eproto();
  friend void protobuf_ShutdownFile_PvpWar_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CSinglePvpSynScore* default_instance_;
};
// ===================================================================


// ===================================================================

// PBPvpMember

// optional .PBPlayerDisplay display = 1;
inline bool PBPvpMember::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPvpMember::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPvpMember::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPvpMember::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBPvpMember::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBPvpMember::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBPvpMember::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint64 maxfightpower = 2;
inline bool PBPvpMember::has_maxfightpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPvpMember::set_has_maxfightpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPvpMember::clear_has_maxfightpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPvpMember::clear_maxfightpower() {
  maxfightpower_ = GOOGLE_ULONGLONG(0);
  clear_has_maxfightpower();
}
inline ::google::protobuf::uint64 PBPvpMember::maxfightpower() const {
  return maxfightpower_;
}
inline void PBPvpMember::set_maxfightpower(::google::protobuf::uint64 value) {
  set_has_maxfightpower();
  maxfightpower_ = value;
}

// optional uint64 teamid = 3;
inline bool PBPvpMember::has_teamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPvpMember::set_has_teamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPvpMember::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPvpMember::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
  clear_has_teamid();
}
inline ::google::protobuf::uint64 PBPvpMember::teamid() const {
  return teamid_;
}
inline void PBPvpMember::set_teamid(::google::protobuf::uint64 value) {
  set_has_teamid();
  teamid_ = value;
}

// optional bool isready = 4;
inline bool PBPvpMember::has_isready() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPvpMember::set_has_isready() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPvpMember::clear_has_isready() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPvpMember::clear_isready() {
  isready_ = false;
  clear_has_isready();
}
inline bool PBPvpMember::isready() const {
  return isready_;
}
inline void PBPvpMember::set_isready(bool value) {
  set_has_isready();
  isready_ = value;
}

// -------------------------------------------------------------------

// PBC2GPvpEnterMatchAsk

// optional uint32 id = 1;
inline bool PBC2GPvpEnterMatchAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GPvpEnterMatchAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GPvpEnterMatchAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GPvpEnterMatchAsk::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GPvpEnterMatchAsk::id() const {
  return id_;
}
inline void PBC2GPvpEnterMatchAsk::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBG2CPvpEnterMatchAck

// optional uint32 id = 1;
inline bool PBG2CPvpEnterMatchAck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CPvpEnterMatchAck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CPvpEnterMatchAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CPvpEnterMatchAck::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CPvpEnterMatchAck::id() const {
  return id_;
}
inline void PBG2CPvpEnterMatchAck::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBG2CPvpExitMatchAck

// optional uint32 id = 1;
inline bool PBG2CPvpExitMatchAck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CPvpExitMatchAck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CPvpExitMatchAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CPvpExitMatchAck::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CPvpExitMatchAck::id() const {
  return id_;
}
inline void PBG2CPvpExitMatchAck::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 playerid = 2;
inline bool PBG2CPvpExitMatchAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CPvpExitMatchAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CPvpExitMatchAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CPvpExitMatchAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2CPvpExitMatchAck::playerid() const {
  return playerid_;
}
inline void PBG2CPvpExitMatchAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBS2C_PvpWar_ReadyAck

// optional uint32 playerid = 1;
inline bool PBS2C_PvpWar_ReadyAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBS2C_PvpWar_ReadyAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBS2C_PvpWar_ReadyAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBS2C_PvpWar_ReadyAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBS2C_PvpWar_ReadyAck::playerid() const {
  return playerid_;
}
inline void PBS2C_PvpWar_ReadyAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBS2C_PvpWar_ExitReadyAck

// optional uint32 playerid = 1;
inline bool PBS2C_PvpWar_ExitReadyAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBS2C_PvpWar_ExitReadyAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBS2C_PvpWar_ExitReadyAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBS2C_PvpWar_ExitReadyAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBS2C_PvpWar_ExitReadyAck::playerid() const {
  return playerid_;
}
inline void PBS2C_PvpWar_ExitReadyAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 nextentertime = 2;
inline bool PBS2C_PvpWar_ExitReadyAck::has_nextentertime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBS2C_PvpWar_ExitReadyAck::set_has_nextentertime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBS2C_PvpWar_ExitReadyAck::clear_has_nextentertime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBS2C_PvpWar_ExitReadyAck::clear_nextentertime() {
  nextentertime_ = 0u;
  clear_has_nextentertime();
}
inline ::google::protobuf::uint32 PBS2C_PvpWar_ExitReadyAck::nextentertime() const {
  return nextentertime_;
}
inline void PBS2C_PvpWar_ExitReadyAck::set_nextentertime(::google::protobuf::uint32 value) {
  set_has_nextentertime();
  nextentertime_ = value;
}

// -------------------------------------------------------------------

// PBW2BWPvpWarSingleMatchAsk

// optional .PBPvpMember member = 1;
inline bool PBW2BWPvpWarSingleMatchAsk::has_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2BWPvpWarSingleMatchAsk::set_has_member() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2BWPvpWarSingleMatchAsk::clear_has_member() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2BWPvpWarSingleMatchAsk::clear_member() {
  if (member_ != NULL) member_->::PBPvpMember::Clear();
  clear_has_member();
}
inline const ::PBPvpMember& PBW2BWPvpWarSingleMatchAsk::member() const {
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::PBPvpMember* PBW2BWPvpWarSingleMatchAsk::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::PBPvpMember;
  return member_;
}
inline ::PBPvpMember* PBW2BWPvpWarSingleMatchAsk::release_member() {
  clear_has_member();
  ::PBPvpMember* temp = member_;
  member_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBW2BWPvpWarTeamMatchAsk

// repeated .PBPvpMember member = 1;
inline int PBW2BWPvpWarTeamMatchAsk::member_size() const {
  return member_.size();
}
inline void PBW2BWPvpWarTeamMatchAsk::clear_member() {
  member_.Clear();
}
inline const ::PBPvpMember& PBW2BWPvpWarTeamMatchAsk::member(int index) const {
  return member_.Get(index);
}
inline ::PBPvpMember* PBW2BWPvpWarTeamMatchAsk::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::PBPvpMember* PBW2BWPvpWarTeamMatchAsk::add_member() {
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPvpMember >&
PBW2BWPvpWarTeamMatchAsk::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPvpMember >*
PBW2BWPvpWarTeamMatchAsk::mutable_member() {
  return &member_;
}

// optional uint32 maxfightpower = 2;
inline bool PBW2BWPvpWarTeamMatchAsk::has_maxfightpower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2BWPvpWarTeamMatchAsk::set_has_maxfightpower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2BWPvpWarTeamMatchAsk::clear_has_maxfightpower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2BWPvpWarTeamMatchAsk::clear_maxfightpower() {
  maxfightpower_ = 0u;
  clear_has_maxfightpower();
}
inline ::google::protobuf::uint32 PBW2BWPvpWarTeamMatchAsk::maxfightpower() const {
  return maxfightpower_;
}
inline void PBW2BWPvpWarTeamMatchAsk::set_maxfightpower(::google::protobuf::uint32 value) {
  set_has_maxfightpower();
  maxfightpower_ = value;
}

// -------------------------------------------------------------------

// PBW2BWPvpWarExitMatchAsk

// optional .PBPlayerDisplay display = 1;
inline bool PBW2BWPvpWarExitMatchAsk::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2BWPvpWarExitMatchAsk::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2BWPvpWarExitMatchAsk::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2BWPvpWarExitMatchAsk::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBW2BWPvpWarExitMatchAsk::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBW2BWPvpWarExitMatchAsk::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBW2BWPvpWarExitMatchAsk::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBW2BWPvpWarReadyEnterAsk

// optional .PBPlayerDisplay display = 1;
inline bool PBW2BWPvpWarReadyEnterAsk::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2BWPvpWarReadyEnterAsk::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2BWPvpWarReadyEnterAsk::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2BWPvpWarReadyEnterAsk::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBW2BWPvpWarReadyEnterAsk::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBW2BWPvpWarReadyEnterAsk::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBW2BWPvpWarReadyEnterAsk::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBW2BWPvpWarExitEnterAsk

// optional .PBPlayerDisplay display = 1;
inline bool PBW2BWPvpWarExitEnterAsk::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2BWPvpWarExitEnterAsk::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2BWPvpWarExitEnterAsk::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2BWPvpWarExitEnterAsk::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBW2BWPvpWarExitEnterAsk::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBW2BWPvpWarExitEnterAsk::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBW2BWPvpWarExitEnterAsk::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBBW2WPvpWarExitMatchAck

// optional uint32 playerid = 1;
inline bool PBBW2WPvpWarExitMatchAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBBW2WPvpWarExitMatchAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBBW2WPvpWarExitMatchAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBBW2WPvpWarExitMatchAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBBW2WPvpWarExitMatchAck::playerid() const {
  return playerid_;
}
inline void PBBW2WPvpWarExitMatchAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBBW2WPvpWarEnterMatchAck

// optional uint32 warid = 1;
inline bool PBBW2WPvpWarEnterMatchAck::has_warid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBBW2WPvpWarEnterMatchAck::set_has_warid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBBW2WPvpWarEnterMatchAck::clear_has_warid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBBW2WPvpWarEnterMatchAck::clear_warid() {
  warid_ = 0u;
  clear_has_warid();
}
inline ::google::protobuf::uint32 PBBW2WPvpWarEnterMatchAck::warid() const {
  return warid_;
}
inline void PBBW2WPvpWarEnterMatchAck::set_warid(::google::protobuf::uint32 value) {
  set_has_warid();
  warid_ = value;
}

// -------------------------------------------------------------------

// PBBW2WPvpWarReadyEnterAck

// optional uint32 playerid = 1;
inline bool PBBW2WPvpWarReadyEnterAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBBW2WPvpWarReadyEnterAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBBW2WPvpWarReadyEnterAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBBW2WPvpWarReadyEnterAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBBW2WPvpWarReadyEnterAck::playerid() const {
  return playerid_;
}
inline void PBBW2WPvpWarReadyEnterAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBBW2WPvpWarExitReadyEnterAck

// optional uint32 playerid = 1;
inline bool PBBW2WPvpWarExitReadyEnterAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBBW2WPvpWarExitReadyEnterAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBBW2WPvpWarExitReadyEnterAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBBW2WPvpWarExitReadyEnterAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBBW2WPvpWarExitReadyEnterAck::playerid() const {
  return playerid_;
}
inline void PBBW2WPvpWarExitReadyEnterAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBBW2WPvpWarCompleteMatchAck

// repeated .PBPvpMember friend = 1;
inline int PBBW2WPvpWarCompleteMatchAck::friend__size() const {
  return friend__.size();
}
inline void PBBW2WPvpWarCompleteMatchAck::clear_friend_() {
  friend__.Clear();
}
inline const ::PBPvpMember& PBBW2WPvpWarCompleteMatchAck::friend_(int index) const {
  return friend__.Get(index);
}
inline ::PBPvpMember* PBBW2WPvpWarCompleteMatchAck::mutable_friend_(int index) {
  return friend__.Mutable(index);
}
inline ::PBPvpMember* PBBW2WPvpWarCompleteMatchAck::add_friend_() {
  return friend__.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPvpMember >&
PBBW2WPvpWarCompleteMatchAck::friend_() const {
  return friend__;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPvpMember >*
PBBW2WPvpWarCompleteMatchAck::mutable_friend_() {
  return &friend__;
}

// repeated .PBPvpMember enemy = 2;
inline int PBBW2WPvpWarCompleteMatchAck::enemy_size() const {
  return enemy_.size();
}
inline void PBBW2WPvpWarCompleteMatchAck::clear_enemy() {
  enemy_.Clear();
}
inline const ::PBPvpMember& PBBW2WPvpWarCompleteMatchAck::enemy(int index) const {
  return enemy_.Get(index);
}
inline ::PBPvpMember* PBBW2WPvpWarCompleteMatchAck::mutable_enemy(int index) {
  return enemy_.Mutable(index);
}
inline ::PBPvpMember* PBBW2WPvpWarCompleteMatchAck::add_enemy() {
  return enemy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPvpMember >&
PBBW2WPvpWarCompleteMatchAck::enemy() const {
  return enemy_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPvpMember >*
PBBW2WPvpWarCompleteMatchAck::mutable_enemy() {
  return &enemy_;
}

// -------------------------------------------------------------------

// PBPvpBannerCampScore

// optional uint32 campid = 1;
inline bool PBPvpBannerCampScore::has_campid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPvpBannerCampScore::set_has_campid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPvpBannerCampScore::clear_has_campid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPvpBannerCampScore::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 PBPvpBannerCampScore::campid() const {
  return campid_;
}
inline void PBPvpBannerCampScore::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
}

// optional uint32 score = 2;
inline bool PBPvpBannerCampScore::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPvpBannerCampScore::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPvpBannerCampScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPvpBannerCampScore::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PBPvpBannerCampScore::score() const {
  return score_;
}
inline void PBPvpBannerCampScore::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// PBPvpBannerPlayerInfo

// optional .PBPlayerDisplay display = 1;
inline bool PBPvpBannerPlayerInfo::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPvpBannerPlayerInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPvpBannerPlayerInfo::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBPvpBannerPlayerInfo::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBPvpBannerPlayerInfo::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBPvpBannerPlayerInfo::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 killcount = 2;
inline bool PBPvpBannerPlayerInfo::has_killcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_killcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPvpBannerPlayerInfo::clear_has_killcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPvpBannerPlayerInfo::clear_killcount() {
  killcount_ = 0u;
  clear_has_killcount();
}
inline ::google::protobuf::uint32 PBPvpBannerPlayerInfo::killcount() const {
  return killcount_;
}
inline void PBPvpBannerPlayerInfo::set_killcount(::google::protobuf::uint32 value) {
  set_has_killcount();
  killcount_ = value;
}

// optional uint32 deadcount = 3;
inline bool PBPvpBannerPlayerInfo::has_deadcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_deadcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPvpBannerPlayerInfo::clear_has_deadcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPvpBannerPlayerInfo::clear_deadcount() {
  deadcount_ = 0u;
  clear_has_deadcount();
}
inline ::google::protobuf::uint32 PBPvpBannerPlayerInfo::deadcount() const {
  return deadcount_;
}
inline void PBPvpBannerPlayerInfo::set_deadcount(::google::protobuf::uint32 value) {
  set_has_deadcount();
  deadcount_ = value;
}

// optional uint32 assistkillcount = 4;
inline bool PBPvpBannerPlayerInfo::has_assistkillcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_assistkillcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPvpBannerPlayerInfo::clear_has_assistkillcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPvpBannerPlayerInfo::clear_assistkillcount() {
  assistkillcount_ = 0u;
  clear_has_assistkillcount();
}
inline ::google::protobuf::uint32 PBPvpBannerPlayerInfo::assistkillcount() const {
  return assistkillcount_;
}
inline void PBPvpBannerPlayerInfo::set_assistkillcount(::google::protobuf::uint32 value) {
  set_has_assistkillcount();
  assistkillcount_ = value;
}

// optional uint32 contri = 5;
inline bool PBPvpBannerPlayerInfo::has_contri() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_contri() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPvpBannerPlayerInfo::clear_has_contri() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPvpBannerPlayerInfo::clear_contri() {
  contri_ = 0u;
  clear_has_contri();
}
inline ::google::protobuf::uint32 PBPvpBannerPlayerInfo::contri() const {
  return contri_;
}
inline void PBPvpBannerPlayerInfo::set_contri(::google::protobuf::uint32 value) {
  set_has_contri();
  contri_ = value;
}

// optional uint32 godlikecount = 6;
inline bool PBPvpBannerPlayerInfo::has_godlikecount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_godlikecount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPvpBannerPlayerInfo::clear_has_godlikecount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPvpBannerPlayerInfo::clear_godlikecount() {
  godlikecount_ = 0u;
  clear_has_godlikecount();
}
inline ::google::protobuf::uint32 PBPvpBannerPlayerInfo::godlikecount() const {
  return godlikecount_;
}
inline void PBPvpBannerPlayerInfo::set_godlikecount(::google::protobuf::uint32 value) {
  set_has_godlikecount();
  godlikecount_ = value;
}

// optional uint32 megakillcount = 7;
inline bool PBPvpBannerPlayerInfo::has_megakillcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_megakillcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPvpBannerPlayerInfo::clear_has_megakillcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPvpBannerPlayerInfo::clear_megakillcount() {
  megakillcount_ = 0u;
  clear_has_megakillcount();
}
inline ::google::protobuf::uint32 PBPvpBannerPlayerInfo::megakillcount() const {
  return megakillcount_;
}
inline void PBPvpBannerPlayerInfo::set_megakillcount(::google::protobuf::uint32 value) {
  set_has_megakillcount();
  megakillcount_ = value;
}

// optional uint32 ismvp = 8;
inline bool PBPvpBannerPlayerInfo::has_ismvp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBPvpBannerPlayerInfo::set_has_ismvp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBPvpBannerPlayerInfo::clear_has_ismvp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBPvpBannerPlayerInfo::clear_ismvp() {
  ismvp_ = 0u;
  clear_has_ismvp();
}
inline ::google::protobuf::uint32 PBPvpBannerPlayerInfo::ismvp() const {
  return ismvp_;
}
inline void PBPvpBannerPlayerInfo::set_ismvp(::google::protobuf::uint32 value) {
  set_has_ismvp();
  ismvp_ = value;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynBannerScore

// repeated .PBPvpBannerCampScore campscore = 1;
inline int PBG2CCopymapSynBannerScore::campscore_size() const {
  return campscore_.size();
}
inline void PBG2CCopymapSynBannerScore::clear_campscore() {
  campscore_.Clear();
}
inline const ::PBPvpBannerCampScore& PBG2CCopymapSynBannerScore::campscore(int index) const {
  return campscore_.Get(index);
}
inline ::PBPvpBannerCampScore* PBG2CCopymapSynBannerScore::mutable_campscore(int index) {
  return campscore_.Mutable(index);
}
inline ::PBPvpBannerCampScore* PBG2CCopymapSynBannerScore::add_campscore() {
  return campscore_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >&
PBG2CCopymapSynBannerScore::campscore() const {
  return campscore_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >*
PBG2CCopymapSynBannerScore::mutable_campscore() {
  return &campscore_;
}

// repeated uint32 bannercampid = 2;
inline int PBG2CCopymapSynBannerScore::bannercampid_size() const {
  return bannercampid_.size();
}
inline void PBG2CCopymapSynBannerScore::clear_bannercampid() {
  bannercampid_.Clear();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynBannerScore::bannercampid(int index) const {
  return bannercampid_.Get(index);
}
inline void PBG2CCopymapSynBannerScore::set_bannercampid(int index, ::google::protobuf::uint32 value) {
  bannercampid_.Set(index, value);
}
inline void PBG2CCopymapSynBannerScore::add_bannercampid(::google::protobuf::uint32 value) {
  bannercampid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBG2CCopymapSynBannerScore::bannercampid() const {
  return bannercampid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBG2CCopymapSynBannerScore::mutable_bannercampid() {
  return &bannercampid_;
}

// repeated uint32 buffID = 3;
inline int PBG2CCopymapSynBannerScore::buffid_size() const {
  return buffid_.size();
}
inline void PBG2CCopymapSynBannerScore::clear_buffid() {
  buffid_.Clear();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynBannerScore::buffid(int index) const {
  return buffid_.Get(index);
}
inline void PBG2CCopymapSynBannerScore::set_buffid(int index, ::google::protobuf::uint32 value) {
  buffid_.Set(index, value);
}
inline void PBG2CCopymapSynBannerScore::add_buffid(::google::protobuf::uint32 value) {
  buffid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBG2CCopymapSynBannerScore::buffid() const {
  return buffid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBG2CCopymapSynBannerScore::mutable_buffid() {
  return &buffid_;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynBannerPlayerInfo

// repeated .PBPvpBannerPlayerInfo pbinfo = 1;
inline int PBG2CCopymapSynBannerPlayerInfo::pbinfo_size() const {
  return pbinfo_.size();
}
inline void PBG2CCopymapSynBannerPlayerInfo::clear_pbinfo() {
  pbinfo_.Clear();
}
inline const ::PBPvpBannerPlayerInfo& PBG2CCopymapSynBannerPlayerInfo::pbinfo(int index) const {
  return pbinfo_.Get(index);
}
inline ::PBPvpBannerPlayerInfo* PBG2CCopymapSynBannerPlayerInfo::mutable_pbinfo(int index) {
  return pbinfo_.Mutable(index);
}
inline ::PBPvpBannerPlayerInfo* PBG2CCopymapSynBannerPlayerInfo::add_pbinfo() {
  return pbinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >&
PBG2CCopymapSynBannerPlayerInfo::pbinfo() const {
  return pbinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >*
PBG2CCopymapSynBannerPlayerInfo::mutable_pbinfo() {
  return &pbinfo_;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynBannerResult

// repeated .PBPvpBannerCampScore campscore = 1;
inline int PBG2CCopymapSynBannerResult::campscore_size() const {
  return campscore_.size();
}
inline void PBG2CCopymapSynBannerResult::clear_campscore() {
  campscore_.Clear();
}
inline const ::PBPvpBannerCampScore& PBG2CCopymapSynBannerResult::campscore(int index) const {
  return campscore_.Get(index);
}
inline ::PBPvpBannerCampScore* PBG2CCopymapSynBannerResult::mutable_campscore(int index) {
  return campscore_.Mutable(index);
}
inline ::PBPvpBannerCampScore* PBG2CCopymapSynBannerResult::add_campscore() {
  return campscore_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >&
PBG2CCopymapSynBannerResult::campscore() const {
  return campscore_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerCampScore >*
PBG2CCopymapSynBannerResult::mutable_campscore() {
  return &campscore_;
}

// repeated .PBPvpBannerPlayerInfo pbinfo = 2;
inline int PBG2CCopymapSynBannerResult::pbinfo_size() const {
  return pbinfo_.size();
}
inline void PBG2CCopymapSynBannerResult::clear_pbinfo() {
  pbinfo_.Clear();
}
inline const ::PBPvpBannerPlayerInfo& PBG2CCopymapSynBannerResult::pbinfo(int index) const {
  return pbinfo_.Get(index);
}
inline ::PBPvpBannerPlayerInfo* PBG2CCopymapSynBannerResult::mutable_pbinfo(int index) {
  return pbinfo_.Mutable(index);
}
inline ::PBPvpBannerPlayerInfo* PBG2CCopymapSynBannerResult::add_pbinfo() {
  return pbinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >&
PBG2CCopymapSynBannerResult::pbinfo() const {
  return pbinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPvpBannerPlayerInfo >*
PBG2CCopymapSynBannerResult::mutable_pbinfo() {
  return &pbinfo_;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynBannerGodlike

// optional .PBPlayerDisplay display = 1;
inline bool PBG2CCopymapSynBannerGodlike::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CCopymapSynBannerGodlike::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CCopymapSynBannerGodlike::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CCopymapSynBannerGodlike::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2CCopymapSynBannerGodlike::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerGodlike::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerGodlike::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 count = 2;
inline bool PBG2CCopymapSynBannerGodlike::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CCopymapSynBannerGodlike::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CCopymapSynBannerGodlike::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CCopymapSynBannerGodlike::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynBannerGodlike::count() const {
  return count_;
}
inline void PBG2CCopymapSynBannerGodlike::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional .PBPlayerDisplay target = 3;
inline bool PBG2CCopymapSynBannerGodlike::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CCopymapSynBannerGodlike::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CCopymapSynBannerGodlike::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CCopymapSynBannerGodlike::clear_target() {
  if (target_ != NULL) target_->::PBPlayerDisplay::Clear();
  clear_has_target();
}
inline const ::PBPlayerDisplay& PBG2CCopymapSynBannerGodlike::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerGodlike::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBPlayerDisplay;
  return target_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerGodlike::release_target() {
  clear_has_target();
  ::PBPlayerDisplay* temp = target_;
  target_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynBannerMegakill

// optional .PBPlayerDisplay display = 1;
inline bool PBG2CCopymapSynBannerMegakill::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CCopymapSynBannerMegakill::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CCopymapSynBannerMegakill::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CCopymapSynBannerMegakill::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2CCopymapSynBannerMegakill::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerMegakill::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerMegakill::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 count = 2;
inline bool PBG2CCopymapSynBannerMegakill::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CCopymapSynBannerMegakill::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CCopymapSynBannerMegakill::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CCopymapSynBannerMegakill::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynBannerMegakill::count() const {
  return count_;
}
inline void PBG2CCopymapSynBannerMegakill::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional .PBPlayerDisplay target = 3;
inline bool PBG2CCopymapSynBannerMegakill::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CCopymapSynBannerMegakill::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CCopymapSynBannerMegakill::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CCopymapSynBannerMegakill::clear_target() {
  if (target_ != NULL) target_->::PBPlayerDisplay::Clear();
  clear_has_target();
}
inline const ::PBPlayerDisplay& PBG2CCopymapSynBannerMegakill::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerMegakill::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBPlayerDisplay;
  return target_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerMegakill::release_target() {
  clear_has_target();
  ::PBPlayerDisplay* temp = target_;
  target_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynGetBanner

// optional .PBPlayerDisplay display = 1;
inline bool PBG2CCopymapSynGetBanner::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CCopymapSynGetBanner::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CCopymapSynGetBanner::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CCopymapSynGetBanner::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2CCopymapSynGetBanner::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynGetBanner::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynGetBanner::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynBannerKill

// optional .PBPlayerDisplay source = 1;
inline bool PBG2CCopymapSynBannerKill::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CCopymapSynBannerKill::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CCopymapSynBannerKill::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CCopymapSynBannerKill::clear_source() {
  if (source_ != NULL) source_->::PBPlayerDisplay::Clear();
  clear_has_source();
}
inline const ::PBPlayerDisplay& PBG2CCopymapSynBannerKill::source() const {
  return source_ != NULL ? *source_ : *default_instance_->source_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerKill::mutable_source() {
  set_has_source();
  if (source_ == NULL) source_ = new ::PBPlayerDisplay;
  return source_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerKill::release_source() {
  clear_has_source();
  ::PBPlayerDisplay* temp = source_;
  source_ = NULL;
  return temp;
}

// optional .PBPlayerDisplay target = 2;
inline bool PBG2CCopymapSynBannerKill::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CCopymapSynBannerKill::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CCopymapSynBannerKill::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CCopymapSynBannerKill::clear_target() {
  if (target_ != NULL) target_->::PBPlayerDisplay::Clear();
  clear_has_target();
}
inline const ::PBPlayerDisplay& PBG2CCopymapSynBannerKill::target() const {
  return target_ != NULL ? *target_ : *default_instance_->target_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerKill::mutable_target() {
  set_has_target();
  if (target_ == NULL) target_ = new ::PBPlayerDisplay;
  return target_;
}
inline ::PBPlayerDisplay* PBG2CCopymapSynBannerKill::release_target() {
  clear_has_target();
  ::PBPlayerDisplay* temp = target_;
  target_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBSinglePvpMember

// optional .PBPlayerDisplay display = 1;
inline bool PBSinglePvpMember::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSinglePvpMember::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSinglePvpMember::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSinglePvpMember::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBSinglePvpMember::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBSinglePvpMember::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBSinglePvpMember::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 singlepvpscore = 2;
inline bool PBSinglePvpMember::has_singlepvpscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSinglePvpMember::set_has_singlepvpscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSinglePvpMember::clear_has_singlepvpscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSinglePvpMember::clear_singlepvpscore() {
  singlepvpscore_ = 0u;
  clear_has_singlepvpscore();
}
inline ::google::protobuf::uint32 PBSinglePvpMember::singlepvpscore() const {
  return singlepvpscore_;
}
inline void PBSinglePvpMember::set_singlepvpscore(::google::protobuf::uint32 value) {
  set_has_singlepvpscore();
  singlepvpscore_ = value;
}

// optional uint32 maxfightpower = 3;
inline bool PBSinglePvpMember::has_maxfightpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSinglePvpMember::set_has_maxfightpower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSinglePvpMember::clear_has_maxfightpower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSinglePvpMember::clear_maxfightpower() {
  maxfightpower_ = 0u;
  clear_has_maxfightpower();
}
inline ::google::protobuf::uint32 PBSinglePvpMember::maxfightpower() const {
  return maxfightpower_;
}
inline void PBSinglePvpMember::set_maxfightpower(::google::protobuf::uint32 value) {
  set_has_maxfightpower();
  maxfightpower_ = value;
}

// optional uint32 wincount = 4;
inline bool PBSinglePvpMember::has_wincount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBSinglePvpMember::set_has_wincount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBSinglePvpMember::clear_has_wincount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBSinglePvpMember::clear_wincount() {
  wincount_ = 0u;
  clear_has_wincount();
}
inline ::google::protobuf::uint32 PBSinglePvpMember::wincount() const {
  return wincount_;
}
inline void PBSinglePvpMember::set_wincount(::google::protobuf::uint32 value) {
  set_has_wincount();
  wincount_ = value;
}

// optional uint32 failcount = 5;
inline bool PBSinglePvpMember::has_failcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBSinglePvpMember::set_has_failcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBSinglePvpMember::clear_has_failcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBSinglePvpMember::clear_failcount() {
  failcount_ = 0u;
  clear_has_failcount();
}
inline ::google::protobuf::uint32 PBSinglePvpMember::failcount() const {
  return failcount_;
}
inline void PBSinglePvpMember::set_failcount(::google::protobuf::uint32 value) {
  set_has_failcount();
  failcount_ = value;
}

// optional uint32 equalcount = 6;
inline bool PBSinglePvpMember::has_equalcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBSinglePvpMember::set_has_equalcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBSinglePvpMember::clear_has_equalcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBSinglePvpMember::clear_equalcount() {
  equalcount_ = 0u;
  clear_has_equalcount();
}
inline ::google::protobuf::uint32 PBSinglePvpMember::equalcount() const {
  return equalcount_;
}
inline void PBSinglePvpMember::set_equalcount(::google::protobuf::uint32 value) {
  set_has_equalcount();
  equalcount_ = value;
}

// -------------------------------------------------------------------

// PBG2WSinglePvpExitMatch

// optional .PBPlayerDisplay display = 1;
inline bool PBG2WSinglePvpExitMatch::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WSinglePvpExitMatch::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WSinglePvpExitMatch::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WSinglePvpExitMatch::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2WSinglePvpExitMatch::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2WSinglePvpExitMatch::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2WSinglePvpExitMatch::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2CCopymapSynSinglePvpResult

// optional uint32 type = 1;
inline bool PBG2CCopymapSynSinglePvpResult::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CCopymapSynSinglePvpResult::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynSinglePvpResult::type() const {
  return type_;
}
inline void PBG2CCopymapSynSinglePvpResult::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 curscore = 2;
inline bool PBG2CCopymapSynSinglePvpResult::has_curscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CCopymapSynSinglePvpResult::set_has_curscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_has_curscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_curscore() {
  curscore_ = 0u;
  clear_has_curscore();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynSinglePvpResult::curscore() const {
  return curscore_;
}
inline void PBG2CCopymapSynSinglePvpResult::set_curscore(::google::protobuf::uint32 value) {
  set_has_curscore();
  curscore_ = value;
}

// optional uint32 oldscore = 3;
inline bool PBG2CCopymapSynSinglePvpResult::has_oldscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CCopymapSynSinglePvpResult::set_has_oldscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_has_oldscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_oldscore() {
  oldscore_ = 0u;
  clear_has_oldscore();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynSinglePvpResult::oldscore() const {
  return oldscore_;
}
inline void PBG2CCopymapSynSinglePvpResult::set_oldscore(::google::protobuf::uint32 value) {
  set_has_oldscore();
  oldscore_ = value;
}

// optional uint32 honor = 4;
inline bool PBG2CCopymapSynSinglePvpResult::has_honor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2CCopymapSynSinglePvpResult::set_has_honor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_has_honor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2CCopymapSynSinglePvpResult::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 PBG2CCopymapSynSinglePvpResult::honor() const {
  return honor_;
}
inline void PBG2CCopymapSynSinglePvpResult::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
}

// -------------------------------------------------------------------

// PBCAGSinglePvpDayPrize

// optional uint32 daycount = 1;
inline bool PBCAGSinglePvpDayPrize::has_daycount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCAGSinglePvpDayPrize::set_has_daycount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCAGSinglePvpDayPrize::clear_has_daycount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCAGSinglePvpDayPrize::clear_daycount() {
  daycount_ = 0u;
  clear_has_daycount();
}
inline ::google::protobuf::uint32 PBCAGSinglePvpDayPrize::daycount() const {
  return daycount_;
}
inline void PBCAGSinglePvpDayPrize::set_daycount(::google::protobuf::uint32 value) {
  set_has_daycount();
  daycount_ = value;
}

// -------------------------------------------------------------------

// PBG2CSinglePvpSynScore

// optional uint32 singlepvpscore = 1;
inline bool PBG2CSinglePvpSynScore::has_singlepvpscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CSinglePvpSynScore::set_has_singlepvpscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CSinglePvpSynScore::clear_has_singlepvpscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CSinglePvpSynScore::clear_singlepvpscore() {
  singlepvpscore_ = 0u;
  clear_has_singlepvpscore();
}
inline ::google::protobuf::uint32 PBG2CSinglePvpSynScore::singlepvpscore() const {
  return singlepvpscore_;
}
inline void PBG2CSinglePvpSynScore::set_singlepvpscore(::google::protobuf::uint32 value) {
  set_has_singlepvpscore();
  singlepvpscore_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PvpWar_2eproto__INCLUDED
