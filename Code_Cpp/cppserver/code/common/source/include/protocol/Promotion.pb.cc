// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Promotion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBOnePromotionCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBOnePromotionCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPlayerPromotion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPlayerPromotion_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2GPromotionUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2GPromotionUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBG2CPromotionUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBG2CPromotionUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBG2CPromotionUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBG2CPromotionUpdate_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBC2GPromotionLeftSecs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBC2GPromotionLeftSecs_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBG2CPromotionLeftSecs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBG2CPromotionLeftSecs_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* _emConstant_PromotionConditionType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emResultPromotion_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Promotion_2eproto() {
  protobuf_AddDesc_Promotion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Promotion.proto");
  GOOGLE_CHECK(file != NULL);
  PBOnePromotionCondition_descriptor_ = file->message_type(0);
  static const int PBOnePromotionCondition_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOnePromotionCondition, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOnePromotionCondition, value_),
  };
  PBOnePromotionCondition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBOnePromotionCondition_descriptor_,
      PBOnePromotionCondition::default_instance_,
      PBOnePromotionCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOnePromotionCondition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBOnePromotionCondition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBOnePromotionCondition));
  PBPlayerPromotion_descriptor_ = file->message_type(1);
  static const int PBPlayerPromotion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerPromotion, saveorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerPromotion, conditions_),
  };
  PBPlayerPromotion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBPlayerPromotion_descriptor_,
      PBPlayerPromotion::default_instance_,
      PBPlayerPromotion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerPromotion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerPromotion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBPlayerPromotion));
  PBC2GPromotionUp_descriptor_ = file->message_type(2);
  static const int PBC2GPromotionUp_offsets_[1] = {
  };
  PBC2GPromotionUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2GPromotionUp_descriptor_,
      PBC2GPromotionUp::default_instance_,
      PBC2GPromotionUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2GPromotionUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2GPromotionUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2GPromotionUp));
  PBG2CPromotionUp_descriptor_ = file->message_type(3);
  static const int PBG2CPromotionUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionUp, step_),
  };
  PBG2CPromotionUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBG2CPromotionUp_descriptor_,
      PBG2CPromotionUp::default_instance_,
      PBG2CPromotionUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBG2CPromotionUp));
  PBG2CPromotionUpdate_descriptor_ = file->message_type(4);
  static const int PBG2CPromotionUpdate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionUpdate, condition_),
  };
  PBG2CPromotionUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBG2CPromotionUpdate_descriptor_,
      PBG2CPromotionUpdate::default_instance_,
      PBG2CPromotionUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBG2CPromotionUpdate));
  PBC2GPromotionLeftSecs_descriptor_ = file->message_type(5);
  static const int PBC2GPromotionLeftSecs_offsets_[1] = {
  };
  PBC2GPromotionLeftSecs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBC2GPromotionLeftSecs_descriptor_,
      PBC2GPromotionLeftSecs::default_instance_,
      PBC2GPromotionLeftSecs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2GPromotionLeftSecs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBC2GPromotionLeftSecs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBC2GPromotionLeftSecs));
  PBG2CPromotionLeftSecs_descriptor_ = file->message_type(6);
  static const int PBG2CPromotionLeftSecs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionLeftSecs, leftsecs_),
  };
  PBG2CPromotionLeftSecs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBG2CPromotionLeftSecs_descriptor_,
      PBG2CPromotionLeftSecs::default_instance_,
      PBG2CPromotionLeftSecs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionLeftSecs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBG2CPromotionLeftSecs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBG2CPromotionLeftSecs));
  _emConstant_PromotionConditionType_descriptor_ = file->enum_type(0);
  _emResultPromotion_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Promotion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBOnePromotionCondition_descriptor_, &PBOnePromotionCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBPlayerPromotion_descriptor_, &PBPlayerPromotion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2GPromotionUp_descriptor_, &PBC2GPromotionUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBG2CPromotionUp_descriptor_, &PBG2CPromotionUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBG2CPromotionUpdate_descriptor_, &PBG2CPromotionUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBC2GPromotionLeftSecs_descriptor_, &PBC2GPromotionLeftSecs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBG2CPromotionLeftSecs_descriptor_, &PBG2CPromotionLeftSecs::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Promotion_2eproto() {
  delete PBOnePromotionCondition::default_instance_;
  delete PBOnePromotionCondition_reflection_;
  delete PBPlayerPromotion::default_instance_;
  delete PBPlayerPromotion_reflection_;
  delete PBC2GPromotionUp::default_instance_;
  delete PBC2GPromotionUp_reflection_;
  delete PBG2CPromotionUp::default_instance_;
  delete PBG2CPromotionUp_reflection_;
  delete PBG2CPromotionUpdate::default_instance_;
  delete PBG2CPromotionUpdate_reflection_;
  delete PBC2GPromotionLeftSecs::default_instance_;
  delete PBC2GPromotionLeftSecs_reflection_;
  delete PBG2CPromotionLeftSecs::default_instance_;
  delete PBG2CPromotionLeftSecs_reflection_;
}

void protobuf_AddDesc_Promotion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017Promotion.proto\"{\n\027PBOnePromotionCondi"
    "tion\022Q\n\004Type\030\001 \001(\0162#._emConstant_Promoti"
    "onConditionType:\036PromotionConditionType_"
    "Unknown\022\r\n\005Value\030\002 \001(\005\"T\n\021PBPlayerPromot"
    "ion\022\021\n\tsaveorder\030\001 \001(\r\022,\n\nConditions\030\002 \003"
    "(\0132\030.PBOnePromotionCondition\"\022\n\020PBC2GPro"
    "motionUp\" \n\020PBG2CPromotionUp\022\014\n\004Step\030\001 \001"
    "(\005\"C\n\024PBG2CPromotionUpdate\022+\n\tCondition\030"
    "\001 \001(\0132\030.PBOnePromotionCondition\"\030\n\026PBC2G"
    "PromotionLeftSecs\"*\n\026PBG2CPromotionLeftS"
    "ecs\022\020\n\010LeftSecs\030\001 \001(\005*\310\002\n\"_emConstant_Pr"
    "omotionConditionType\022\"\n\036PromotionConditi"
    "onType_Unknown\020\000\022 \n\034PromotionConditionTy"
    "pe_Force\020\001\022\"\n\036PromotionConditionType_Col"
    "lect\020\002\022\036\n\032PromotionConditionType_Use\020\003\022#"
    "\n\037PromotionConditionType_Identity\020\004\022(\n$P"
    "romotionConditionType_IdentityDaily\020\005\022%\n"
    "!PromotionConditionType_GuildDaily\020\006\022\"\n\036"
    "PromotionConditionType_Copymap\020\007*\251\001\n\022_em"
    "ResultPromotion\022\035\n\031R_ResultPromotion_Suc"
    "ceed\020\000\022\033\n\027R_ResultPromotion_Level\020\001\022\037\n\033R"
    "_ResultPromotion_Condition\020\002\022\032\n\026R_Result"
    "Promotion_Time\020\003\022\032\n\026R_ResultPromotion_Fu"
    "ll\020\004", 924);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Promotion.proto", &protobuf_RegisterTypes);
  PBOnePromotionCondition::default_instance_ = new PBOnePromotionCondition();
  PBPlayerPromotion::default_instance_ = new PBPlayerPromotion();
  PBC2GPromotionUp::default_instance_ = new PBC2GPromotionUp();
  PBG2CPromotionUp::default_instance_ = new PBG2CPromotionUp();
  PBG2CPromotionUpdate::default_instance_ = new PBG2CPromotionUpdate();
  PBC2GPromotionLeftSecs::default_instance_ = new PBC2GPromotionLeftSecs();
  PBG2CPromotionLeftSecs::default_instance_ = new PBG2CPromotionLeftSecs();
  PBOnePromotionCondition::default_instance_->InitAsDefaultInstance();
  PBPlayerPromotion::default_instance_->InitAsDefaultInstance();
  PBC2GPromotionUp::default_instance_->InitAsDefaultInstance();
  PBG2CPromotionUp::default_instance_->InitAsDefaultInstance();
  PBG2CPromotionUpdate::default_instance_->InitAsDefaultInstance();
  PBC2GPromotionLeftSecs::default_instance_->InitAsDefaultInstance();
  PBG2CPromotionLeftSecs::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Promotion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Promotion_2eproto {
  StaticDescriptorInitializer_Promotion_2eproto() {
    protobuf_AddDesc_Promotion_2eproto();
  }
} static_descriptor_initializer_Promotion_2eproto_;

const ::google::protobuf::EnumDescriptor* _emConstant_PromotionConditionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emConstant_PromotionConditionType_descriptor_;
}
bool _emConstant_PromotionConditionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emResultPromotion_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emResultPromotion_descriptor_;
}
bool _emResultPromotion_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int PBOnePromotionCondition::kTypeFieldNumber;
const int PBOnePromotionCondition::kValueFieldNumber;
#endif  // !_MSC_VER

PBOnePromotionCondition::PBOnePromotionCondition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBOnePromotionCondition::InitAsDefaultInstance() {
}

PBOnePromotionCondition::PBOnePromotionCondition(const PBOnePromotionCondition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBOnePromotionCondition::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBOnePromotionCondition::~PBOnePromotionCondition() {
  SharedDtor();
}

void PBOnePromotionCondition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBOnePromotionCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBOnePromotionCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBOnePromotionCondition_descriptor_;
}

const PBOnePromotionCondition& PBOnePromotionCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Promotion_2eproto();  return *default_instance_;
}

PBOnePromotionCondition* PBOnePromotionCondition::default_instance_ = NULL;

PBOnePromotionCondition* PBOnePromotionCondition::New() const {
  return new PBOnePromotionCondition;
}

void PBOnePromotionCondition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBOnePromotionCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional ._emConstant_PromotionConditionType Type = 1 [default = PromotionConditionType_Unknown];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (_emConstant_PromotionConditionType_IsValid(value)) {
            set_type(static_cast< _emConstant_PromotionConditionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Value;
        break;
      }
      
      // optional int32 Value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBOnePromotionCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional ._emConstant_PromotionConditionType Type = 1 [default = PromotionConditionType_Unknown];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // optional int32 Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBOnePromotionCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional ._emConstant_PromotionConditionType Type = 1 [default = PromotionConditionType_Unknown];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // optional int32 Value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBOnePromotionCondition::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional ._emConstant_PromotionConditionType Type = 1 [default = PromotionConditionType_Unknown];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // optional int32 Value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBOnePromotionCondition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBOnePromotionCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBOnePromotionCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBOnePromotionCondition::MergeFrom(const PBOnePromotionCondition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBOnePromotionCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBOnePromotionCondition::CopyFrom(const PBOnePromotionCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBOnePromotionCondition::IsInitialized() const {
  
  return true;
}

void PBOnePromotionCondition::Swap(PBOnePromotionCondition* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBOnePromotionCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBOnePromotionCondition_descriptor_;
  metadata.reflection = PBOnePromotionCondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBPlayerPromotion::kSaveorderFieldNumber;
const int PBPlayerPromotion::kConditionsFieldNumber;
#endif  // !_MSC_VER

PBPlayerPromotion::PBPlayerPromotion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBPlayerPromotion::InitAsDefaultInstance() {
}

PBPlayerPromotion::PBPlayerPromotion(const PBPlayerPromotion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBPlayerPromotion::SharedCtor() {
  _cached_size_ = 0;
  saveorder_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBPlayerPromotion::~PBPlayerPromotion() {
  SharedDtor();
}

void PBPlayerPromotion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBPlayerPromotion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPlayerPromotion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPlayerPromotion_descriptor_;
}

const PBPlayerPromotion& PBPlayerPromotion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Promotion_2eproto();  return *default_instance_;
}

PBPlayerPromotion* PBPlayerPromotion::default_instance_ = NULL;

PBPlayerPromotion* PBPlayerPromotion::New() const {
  return new PBPlayerPromotion;
}

void PBPlayerPromotion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    saveorder_ = 0u;
  }
  conditions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBPlayerPromotion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 saveorder = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &saveorder_)));
          set_has_saveorder();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Conditions;
        break;
      }
      
      // repeated .PBOnePromotionCondition Conditions = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Conditions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_conditions()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Conditions;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBPlayerPromotion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 saveorder = 1;
  if (has_saveorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->saveorder(), output);
  }
  
  // repeated .PBOnePromotionCondition Conditions = 2;
  for (int i = 0; i < this->conditions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->conditions(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBPlayerPromotion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 saveorder = 1;
  if (has_saveorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->saveorder(), target);
  }
  
  // repeated .PBOnePromotionCondition Conditions = 2;
  for (int i = 0; i < this->conditions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->conditions(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBPlayerPromotion::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 saveorder = 1;
    if (has_saveorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->saveorder());
    }
    
  }
  // repeated .PBOnePromotionCondition Conditions = 2;
  total_size += 1 * this->conditions_size();
  for (int i = 0; i < this->conditions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->conditions(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPlayerPromotion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBPlayerPromotion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBPlayerPromotion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBPlayerPromotion::MergeFrom(const PBPlayerPromotion& from) {
  GOOGLE_CHECK_NE(&from, this);
  conditions_.MergeFrom(from.conditions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_saveorder()) {
      set_saveorder(from.saveorder());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBPlayerPromotion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPlayerPromotion::CopyFrom(const PBPlayerPromotion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPlayerPromotion::IsInitialized() const {
  
  return true;
}

void PBPlayerPromotion::Swap(PBPlayerPromotion* other) {
  if (other != this) {
    std::swap(saveorder_, other->saveorder_);
    conditions_.Swap(&other->conditions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBPlayerPromotion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPlayerPromotion_descriptor_;
  metadata.reflection = PBPlayerPromotion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBC2GPromotionUp::PBC2GPromotionUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBC2GPromotionUp::InitAsDefaultInstance() {
}

PBC2GPromotionUp::PBC2GPromotionUp(const PBC2GPromotionUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBC2GPromotionUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2GPromotionUp::~PBC2GPromotionUp() {
  SharedDtor();
}

void PBC2GPromotionUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2GPromotionUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2GPromotionUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2GPromotionUp_descriptor_;
}

const PBC2GPromotionUp& PBC2GPromotionUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Promotion_2eproto();  return *default_instance_;
}

PBC2GPromotionUp* PBC2GPromotionUp::default_instance_ = NULL;

PBC2GPromotionUp* PBC2GPromotionUp::New() const {
  return new PBC2GPromotionUp;
}

void PBC2GPromotionUp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2GPromotionUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PBC2GPromotionUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBC2GPromotionUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBC2GPromotionUp::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2GPromotionUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2GPromotionUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2GPromotionUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2GPromotionUp::MergeFrom(const PBC2GPromotionUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2GPromotionUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2GPromotionUp::CopyFrom(const PBC2GPromotionUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2GPromotionUp::IsInitialized() const {
  
  return true;
}

void PBC2GPromotionUp::Swap(PBC2GPromotionUp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2GPromotionUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2GPromotionUp_descriptor_;
  metadata.reflection = PBC2GPromotionUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBG2CPromotionUp::kStepFieldNumber;
#endif  // !_MSC_VER

PBG2CPromotionUp::PBG2CPromotionUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBG2CPromotionUp::InitAsDefaultInstance() {
}

PBG2CPromotionUp::PBG2CPromotionUp(const PBG2CPromotionUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBG2CPromotionUp::SharedCtor() {
  _cached_size_ = 0;
  step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBG2CPromotionUp::~PBG2CPromotionUp() {
  SharedDtor();
}

void PBG2CPromotionUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBG2CPromotionUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBG2CPromotionUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBG2CPromotionUp_descriptor_;
}

const PBG2CPromotionUp& PBG2CPromotionUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Promotion_2eproto();  return *default_instance_;
}

PBG2CPromotionUp* PBG2CPromotionUp::default_instance_ = NULL;

PBG2CPromotionUp* PBG2CPromotionUp::New() const {
  return new PBG2CPromotionUp;
}

void PBG2CPromotionUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    step_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBG2CPromotionUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBG2CPromotionUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Step = 1;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->step(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBG2CPromotionUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Step = 1;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->step(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBG2CPromotionUp::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Step = 1;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBG2CPromotionUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBG2CPromotionUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBG2CPromotionUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBG2CPromotionUp::MergeFrom(const PBG2CPromotionUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_step()) {
      set_step(from.step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBG2CPromotionUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBG2CPromotionUp::CopyFrom(const PBG2CPromotionUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBG2CPromotionUp::IsInitialized() const {
  
  return true;
}

void PBG2CPromotionUp::Swap(PBG2CPromotionUp* other) {
  if (other != this) {
    std::swap(step_, other->step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBG2CPromotionUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBG2CPromotionUp_descriptor_;
  metadata.reflection = PBG2CPromotionUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBG2CPromotionUpdate::kConditionFieldNumber;
#endif  // !_MSC_VER

PBG2CPromotionUpdate::PBG2CPromotionUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBG2CPromotionUpdate::InitAsDefaultInstance() {
  condition_ = const_cast< ::PBOnePromotionCondition*>(&::PBOnePromotionCondition::default_instance());
}

PBG2CPromotionUpdate::PBG2CPromotionUpdate(const PBG2CPromotionUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBG2CPromotionUpdate::SharedCtor() {
  _cached_size_ = 0;
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBG2CPromotionUpdate::~PBG2CPromotionUpdate() {
  SharedDtor();
}

void PBG2CPromotionUpdate::SharedDtor() {
  if (this != default_instance_) {
    delete condition_;
  }
}

void PBG2CPromotionUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBG2CPromotionUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBG2CPromotionUpdate_descriptor_;
}

const PBG2CPromotionUpdate& PBG2CPromotionUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Promotion_2eproto();  return *default_instance_;
}

PBG2CPromotionUpdate* PBG2CPromotionUpdate::default_instance_ = NULL;

PBG2CPromotionUpdate* PBG2CPromotionUpdate::New() const {
  return new PBG2CPromotionUpdate;
}

void PBG2CPromotionUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_condition()) {
      if (condition_ != NULL) condition_->::PBOnePromotionCondition::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBG2CPromotionUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBOnePromotionCondition Condition = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBG2CPromotionUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PBOnePromotionCondition Condition = 1;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->condition(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBG2CPromotionUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBOnePromotionCondition Condition = 1;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->condition(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBG2CPromotionUpdate::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBOnePromotionCondition Condition = 1;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBG2CPromotionUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBG2CPromotionUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBG2CPromotionUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBG2CPromotionUpdate::MergeFrom(const PBG2CPromotionUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      mutable_condition()->::PBOnePromotionCondition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBG2CPromotionUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBG2CPromotionUpdate::CopyFrom(const PBG2CPromotionUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBG2CPromotionUpdate::IsInitialized() const {
  
  return true;
}

void PBG2CPromotionUpdate::Swap(PBG2CPromotionUpdate* other) {
  if (other != this) {
    std::swap(condition_, other->condition_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBG2CPromotionUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBG2CPromotionUpdate_descriptor_;
  metadata.reflection = PBG2CPromotionUpdate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

PBC2GPromotionLeftSecs::PBC2GPromotionLeftSecs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBC2GPromotionLeftSecs::InitAsDefaultInstance() {
}

PBC2GPromotionLeftSecs::PBC2GPromotionLeftSecs(const PBC2GPromotionLeftSecs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBC2GPromotionLeftSecs::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBC2GPromotionLeftSecs::~PBC2GPromotionLeftSecs() {
  SharedDtor();
}

void PBC2GPromotionLeftSecs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBC2GPromotionLeftSecs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBC2GPromotionLeftSecs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBC2GPromotionLeftSecs_descriptor_;
}

const PBC2GPromotionLeftSecs& PBC2GPromotionLeftSecs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Promotion_2eproto();  return *default_instance_;
}

PBC2GPromotionLeftSecs* PBC2GPromotionLeftSecs::default_instance_ = NULL;

PBC2GPromotionLeftSecs* PBC2GPromotionLeftSecs::New() const {
  return new PBC2GPromotionLeftSecs;
}

void PBC2GPromotionLeftSecs::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBC2GPromotionLeftSecs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void PBC2GPromotionLeftSecs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBC2GPromotionLeftSecs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBC2GPromotionLeftSecs::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBC2GPromotionLeftSecs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBC2GPromotionLeftSecs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBC2GPromotionLeftSecs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBC2GPromotionLeftSecs::MergeFrom(const PBC2GPromotionLeftSecs& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBC2GPromotionLeftSecs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBC2GPromotionLeftSecs::CopyFrom(const PBC2GPromotionLeftSecs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBC2GPromotionLeftSecs::IsInitialized() const {
  
  return true;
}

void PBC2GPromotionLeftSecs::Swap(PBC2GPromotionLeftSecs* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBC2GPromotionLeftSecs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBC2GPromotionLeftSecs_descriptor_;
  metadata.reflection = PBC2GPromotionLeftSecs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBG2CPromotionLeftSecs::kLeftSecsFieldNumber;
#endif  // !_MSC_VER

PBG2CPromotionLeftSecs::PBG2CPromotionLeftSecs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBG2CPromotionLeftSecs::InitAsDefaultInstance() {
}

PBG2CPromotionLeftSecs::PBG2CPromotionLeftSecs(const PBG2CPromotionLeftSecs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBG2CPromotionLeftSecs::SharedCtor() {
  _cached_size_ = 0;
  leftsecs_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBG2CPromotionLeftSecs::~PBG2CPromotionLeftSecs() {
  SharedDtor();
}

void PBG2CPromotionLeftSecs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBG2CPromotionLeftSecs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBG2CPromotionLeftSecs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBG2CPromotionLeftSecs_descriptor_;
}

const PBG2CPromotionLeftSecs& PBG2CPromotionLeftSecs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Promotion_2eproto();  return *default_instance_;
}

PBG2CPromotionLeftSecs* PBG2CPromotionLeftSecs::default_instance_ = NULL;

PBG2CPromotionLeftSecs* PBG2CPromotionLeftSecs::New() const {
  return new PBG2CPromotionLeftSecs;
}

void PBG2CPromotionLeftSecs::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    leftsecs_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBG2CPromotionLeftSecs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 LeftSecs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leftsecs_)));
          set_has_leftsecs();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBG2CPromotionLeftSecs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 LeftSecs = 1;
  if (has_leftsecs()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->leftsecs(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBG2CPromotionLeftSecs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 LeftSecs = 1;
  if (has_leftsecs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->leftsecs(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBG2CPromotionLeftSecs::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 LeftSecs = 1;
    if (has_leftsecs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leftsecs());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBG2CPromotionLeftSecs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBG2CPromotionLeftSecs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBG2CPromotionLeftSecs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBG2CPromotionLeftSecs::MergeFrom(const PBG2CPromotionLeftSecs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leftsecs()) {
      set_leftsecs(from.leftsecs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBG2CPromotionLeftSecs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBG2CPromotionLeftSecs::CopyFrom(const PBG2CPromotionLeftSecs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBG2CPromotionLeftSecs::IsInitialized() const {
  
  return true;
}

void PBG2CPromotionLeftSecs::Swap(PBG2CPromotionLeftSecs* other) {
  if (other != this) {
    std::swap(leftsecs_, other->leftsecs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBG2CPromotionLeftSecs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBG2CPromotionLeftSecs_descriptor_;
  metadata.reflection = PBG2CPromotionLeftSecs_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
