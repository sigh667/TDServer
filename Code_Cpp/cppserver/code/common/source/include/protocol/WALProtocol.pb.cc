// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "WALProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* _emPW2L_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emW2L_Protocol_Operator_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emPL2W_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emL2W_Operator_Protocol_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_WALProtocol_2eproto() {
  protobuf_AddDesc_WALProtocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "WALProtocol.proto");
  GOOGLE_CHECK(file != NULL);
  _emPW2L_Protocol_descriptor_ = file->enum_type(0);
  _emW2L_Protocol_Operator_descriptor_ = file->enum_type(1);
  _emPL2W_Protocol_descriptor_ = file->enum_type(2);
  _emL2W_Operator_Protocol_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_WALProtocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_WALProtocol_2eproto() {
}

void protobuf_AddDesc_WALProtocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021WALProtocol.proto*G\n\020_emPW2L_Protocol\022"
    "\033\n\027P_W2L_Protocol_Operator\020\000\022\026\n\022P_W2L_Pr"
    "otocol_Max\020\001*\313\001\n\030_emW2L_Protocol_Operato"
    "r\022 \n\034W2L_Operator_AccountLoginAsk\020\000\022\036\n\032W"
    "2L_Operator_AccountLogout\020\001\022\037\n\033W2L_Opera"
    "tor_AccountUnlogin\020\002\022\032\n\026W2L_Operator_Gam"
    "eEnter\020\003\022\032\n\026W2L_Operator_GameLeave\020\004\022\024\n\020"
    "W2L_Operator_Max\020\005*G\n\020_emPL2W_Protocol\022\033"
    "\n\027P_L2W_Protocol_Operator\020\000\022\026\n\022P_L2W_Pro"
    "tocol_Max\020\001*\313\001\n\030_emL2W_Operator_Protocol"
    "\022 \n\034L2W_Operator_AccountLoginAck\020\000\022\036\n\032L2"
    "W_Operator_AccountLogout\020\001\022\037\n\033L2W_Operat"
    "or_AccountUnlogin\020\002\022\032\n\026L2W_Operator_Game"
    "Enter\020\003\022\032\n\026L2W_Operator_GameLeave\020\004\022\024\n\020L"
    "2W_Operator_Max\020\005", 577);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WALProtocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_WALProtocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_WALProtocol_2eproto {
  StaticDescriptorInitializer_WALProtocol_2eproto() {
    protobuf_AddDesc_WALProtocol_2eproto();
  }
} static_descriptor_initializer_WALProtocol_2eproto_;

const ::google::protobuf::EnumDescriptor* _emPW2L_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPW2L_Protocol_descriptor_;
}
bool _emPW2L_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emW2L_Protocol_Operator_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emW2L_Protocol_Operator_descriptor_;
}
bool _emW2L_Protocol_Operator_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emPL2W_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPL2W_Protocol_descriptor_;
}
bool _emPL2W_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emL2W_Operator_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emL2W_Operator_Protocol_descriptor_;
}
bool _emL2W_Operator_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
