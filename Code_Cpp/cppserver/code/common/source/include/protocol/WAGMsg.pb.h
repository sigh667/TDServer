// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WAGMsg.proto

#ifndef PROTOBUF_WAGMsg_2eproto__INCLUDED
#define PROTOBUF_WAGMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "PlayerStruct.pb.h"
#include "GameStruct.pb.h"
#include "GhostStruct.pb.h"
#include "Faction.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WAGMsg_2eproto();
void protobuf_AssignDesc_WAGMsg_2eproto();
void protobuf_ShutdownFile_WAGMsg_2eproto();

class PBCreateCellParam;
class PBW2GSceneCreateCell;
class PBG2WSceneRegisterCell;
class PBG2WSceneCloseCell;
class PBG2WScenePlayerCount;
class PBG2WPlayerFlyMapAsk;
class PBW2GPlayerFlyMapAck;
class PBW2GPlayerExitAsk;
class PBG2WPlayerExitAck;
class PBG2WPlayerLogout;
class PBW2GPlayerSaveDone;
class PBG2WCopymapCreate;
class PBG2WCopymapUpdateState;
class PBW2GCopymapEnter;
class PBW2GCopymapExit;
class PBW2GCopymapPlayerInfo;
class PBW2GCopymapKickPlayer;
class PBG2WCopymapInvite;
class PBG2WCopymapAcceptInvite;
class PBG2WCopymapTeamMemberInfo;
class PBG2WCopymapAllCopymapCount;
class PBG2WCopymapOneCopymapCount;
class PBG2WGMWorldStartTime;
class PBG2WPlayerData;
class PBDartBuffInfo;
class PBDartMemberInfo;
class PBDartCarInfoRT;
class PBDartFlyTarget;
class PBG2WDartCarFlyAsk;
class PBW2GDartCarFlyAck;
class PBW2GDartCarFlyCreateNtf;
class PBG2WDartCarUpdateAsk;
class PBG2WDartCarDeleteAsk;
class PBW2GDartCarRobFinishedAck;
class PBG2WDartCarRobFinishedAsk;
class PBG2WDartCarLeaveRobAsk;
class PBW2GDartCarMemberLeaveNtf;
class PBG2WFindDartCarAsk;
class PBW2GFindDartCarAck;
class PBG2WFactionBossHurtUpdate;
class PBG2WCommonTreasurePrizeAsk;
class PBW2GCommonTreasurePrizeAck;
class PBW2GCorpsChangeJobAck;
class PBW2GCommonForbitSpeak;
class PBG2WManorBattleFieldFighterCountAsk;
class PBG2WManorBattleFieldEnterAsk;
class PBW2GManorBattleFieldFightCountNtf;
class PBW2GManorBattleFieldEnterAck;
class PBG2WManorSetActivityAsk;
class ManorCopymapNtfElites;
class PBW2GManorCopymapNtf;

// ===================================================================

class PBCreateCellParam : public ::google::protobuf::Message {
 public:
  PBCreateCellParam();
  virtual ~PBCreateCellParam();
  
  PBCreateCellParam(const PBCreateCellParam& from);
  
  inline PBCreateCellParam& operator=(const PBCreateCellParam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCreateCellParam& default_instance();
  
  void Swap(PBCreateCellParam* other);
  
  // implements Message ----------------------------------------------
  
  PBCreateCellParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCreateCellParam& from);
  void MergeFrom(const PBCreateCellParam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 npcid = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcidFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
  // optional .PBDartCarInfoRT dartInfo = 3;
  inline bool has_dartinfo() const;
  inline void clear_dartinfo();
  static const int kDartInfoFieldNumber = 3;
  inline const ::PBDartCarInfoRT& dartinfo() const;
  inline ::PBDartCarInfoRT* mutable_dartinfo();
  inline ::PBDartCarInfoRT* release_dartinfo();
  
  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional bool isteamfore = 5;
  inline bool has_isteamfore() const;
  inline void clear_isteamfore();
  static const int kIsteamforeFieldNumber = 5;
  inline bool isteamfore() const;
  inline void set_isteamfore(bool value);
  
  // repeated .PBPlayerDisplay friend = 6;
  inline int friend__size() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 6;
  inline const ::PBPlayerDisplay& friend_(int index) const;
  inline ::PBPlayerDisplay* mutable_friend_(int index);
  inline ::PBPlayerDisplay* add_friend_();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >&
      friend_() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >*
      mutable_friend_();
  
  // repeated .PBPlayerDisplay enermy = 7;
  inline int enermy_size() const;
  inline void clear_enermy();
  static const int kEnermyFieldNumber = 7;
  inline const ::PBPlayerDisplay& enermy(int index) const;
  inline ::PBPlayerDisplay* mutable_enermy(int index);
  inline ::PBPlayerDisplay* add_enermy();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >&
      enermy() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >*
      mutable_enermy();
  
  // optional uint32 pvpwarid = 8;
  inline bool has_pvpwarid() const;
  inline void clear_pvpwarid();
  static const int kPvpwaridFieldNumber = 8;
  inline ::google::protobuf::uint32 pvpwarid() const;
  inline void set_pvpwarid(::google::protobuf::uint32 value);
  
  // optional uint32 cash = 9;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 9;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // optional .PBManorInfo manor = 10;
  inline bool has_manor() const;
  inline void clear_manor();
  static const int kManorFieldNumber = 10;
  inline const ::PBManorInfo& manor() const;
  inline ::PBManorInfo* mutable_manor();
  inline ::PBManorInfo* release_manor();
  
  // optional bool ismanordefender = 11;
  inline bool has_ismanordefender() const;
  inline void clear_ismanordefender();
  static const int kIsmanordefenderFieldNumber = 11;
  inline bool ismanordefender() const;
  inline void set_ismanordefender(bool value);
  
  // optional uint32 manorregionid = 12;
  inline bool has_manorregionid() const;
  inline void clear_manorregionid();
  static const int kManorregionidFieldNumber = 12;
  inline ::google::protobuf::uint32 manorregionid() const;
  inline void set_manorregionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBCreateCellParam)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_dartinfo();
  inline void clear_has_dartinfo();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_isteamfore();
  inline void clear_has_isteamfore();
  inline void set_has_pvpwarid();
  inline void clear_has_pvpwarid();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_manor();
  inline void clear_has_manor();
  inline void set_has_ismanordefender();
  inline void clear_has_ismanordefender();
  inline void set_has_manorregionid();
  inline void clear_has_manorregionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::PBDartCarInfoRT* dartinfo_;
  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay > friend__;
  ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay > enermy_;
  ::google::protobuf::uint32 pvpwarid_;
  bool isteamfore_;
  bool ismanordefender_;
  ::PBManorInfo* manor_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 manorregionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBCreateCellParam* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GSceneCreateCell : public ::google::protobuf::Message {
 public:
  PBW2GSceneCreateCell();
  virtual ~PBW2GSceneCreateCell();
  
  PBW2GSceneCreateCell(const PBW2GSceneCreateCell& from);
  
  inline PBW2GSceneCreateCell& operator=(const PBW2GSceneCreateCell& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GSceneCreateCell& default_instance();
  
  void Swap(PBW2GSceneCreateCell* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GSceneCreateCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GSceneCreateCell& from);
  void MergeFrom(const PBW2GSceneCreateCell& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneCellID = 2;
  inline bool has_scenecellid() const;
  inline void clear_scenecellid();
  static const int kSceneCellIDFieldNumber = 2;
  inline ::google::protobuf::uint32 scenecellid() const;
  inline void set_scenecellid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 3;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 3;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional .PBCreateCellParam param = 4;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 4;
  inline const ::PBCreateCellParam& param() const;
  inline ::PBCreateCellParam* mutable_param();
  inline ::PBCreateCellParam* release_param();
  
  // @@protoc_insertion_point(class_scope:PBW2GSceneCreateCell)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenecellid();
  inline void clear_has_scenecellid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 scenecellid_;
  ::google::protobuf::uint64 scenedynid_;
  ::PBCreateCellParam* param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GSceneCreateCell* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WSceneRegisterCell : public ::google::protobuf::Message {
 public:
  PBG2WSceneRegisterCell();
  virtual ~PBG2WSceneRegisterCell();
  
  PBG2WSceneRegisterCell(const PBG2WSceneRegisterCell& from);
  
  inline PBG2WSceneRegisterCell& operator=(const PBG2WSceneRegisterCell& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WSceneRegisterCell& default_instance();
  
  void Swap(PBG2WSceneRegisterCell* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WSceneRegisterCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WSceneRegisterCell& from);
  void MergeFrom(const PBG2WSceneRegisterCell& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 3;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 3;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional uint32 sceneCellID = 2;
  inline bool has_scenecellid() const;
  inline void clear_scenecellid();
  static const int kSceneCellIDFieldNumber = 2;
  inline ::google::protobuf::uint32 scenecellid() const;
  inline void set_scenecellid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WSceneRegisterCell)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_scenecellid();
  inline void clear_has_scenecellid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 scenedynid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 scenecellid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WSceneRegisterCell* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WSceneCloseCell : public ::google::protobuf::Message {
 public:
  PBG2WSceneCloseCell();
  virtual ~PBG2WSceneCloseCell();
  
  PBG2WSceneCloseCell(const PBG2WSceneCloseCell& from);
  
  inline PBG2WSceneCloseCell& operator=(const PBG2WSceneCloseCell& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WSceneCloseCell& default_instance();
  
  void Swap(PBG2WSceneCloseCell* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WSceneCloseCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WSceneCloseCell& from);
  void MergeFrom(const PBG2WSceneCloseCell& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 2;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 2;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WSceneCloseCell)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 scenedynid_;
  ::google::protobuf::uint32 sceneid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WSceneCloseCell* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WScenePlayerCount : public ::google::protobuf::Message {
 public:
  PBG2WScenePlayerCount();
  virtual ~PBG2WScenePlayerCount();
  
  PBG2WScenePlayerCount(const PBG2WScenePlayerCount& from);
  
  inline PBG2WScenePlayerCount& operator=(const PBG2WScenePlayerCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WScenePlayerCount& default_instance();
  
  void Swap(PBG2WScenePlayerCount* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WScenePlayerCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WScenePlayerCount& from);
  void MergeFrom(const PBG2WScenePlayerCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 2;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 2;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional uint32 playerCount = 3;
  inline bool has_playercount() const;
  inline void clear_playercount();
  static const int kPlayerCountFieldNumber = 3;
  inline ::google::protobuf::uint32 playercount() const;
  inline void set_playercount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WScenePlayerCount)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_playercount();
  inline void clear_has_playercount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 scenedynid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 playercount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WScenePlayerCount* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WPlayerFlyMapAsk : public ::google::protobuf::Message {
 public:
  PBG2WPlayerFlyMapAsk();
  virtual ~PBG2WPlayerFlyMapAsk();
  
  PBG2WPlayerFlyMapAsk(const PBG2WPlayerFlyMapAsk& from);
  
  inline PBG2WPlayerFlyMapAsk& operator=(const PBG2WPlayerFlyMapAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WPlayerFlyMapAsk& default_instance();
  
  void Swap(PBG2WPlayerFlyMapAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WPlayerFlyMapAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WPlayerFlyMapAsk& from);
  void MergeFrom(const PBG2WPlayerFlyMapAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneID = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 3;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 3;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional uint32 sceneCellID = 4;
  inline bool has_scenecellid() const;
  inline void clear_scenecellid();
  static const int kSceneCellIDFieldNumber = 4;
  inline ::google::protobuf::uint32 scenecellid() const;
  inline void set_scenecellid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneRegionID = 5;
  inline bool has_sceneregionid() const;
  inline void clear_sceneregionid();
  static const int kSceneRegionIDFieldNumber = 5;
  inline ::google::protobuf::uint32 sceneregionid() const;
  inline void set_sceneregionid(::google::protobuf::uint32 value);
  
  // optional bool fixpos = 6;
  inline bool has_fixpos() const;
  inline void clear_fixpos();
  static const int kFixposFieldNumber = 6;
  inline bool fixpos() const;
  inline void set_fixpos(bool value);
  
  // optional float posx = 7;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 7;
  inline float posx() const;
  inline void set_posx(float value);
  
  // optional float posy = 8;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 8;
  inline float posy() const;
  inline void set_posy(float value);
  
  // @@protoc_insertion_point(class_scope:PBG2WPlayerFlyMapAsk)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_scenecellid();
  inline void clear_has_scenecellid();
  inline void set_has_sceneregionid();
  inline void clear_has_sceneregionid();
  inline void set_has_fixpos();
  inline void clear_has_fixpos();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  ::google::protobuf::uint32 scenecellid_;
  ::google::protobuf::uint32 sceneregionid_;
  bool fixpos_;
  float posx_;
  float posy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WPlayerFlyMapAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GPlayerFlyMapAck : public ::google::protobuf::Message {
 public:
  PBW2GPlayerFlyMapAck();
  virtual ~PBW2GPlayerFlyMapAck();
  
  PBW2GPlayerFlyMapAck(const PBW2GPlayerFlyMapAck& from);
  
  inline PBW2GPlayerFlyMapAck& operator=(const PBW2GPlayerFlyMapAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GPlayerFlyMapAck& default_instance();
  
  void Swap(PBW2GPlayerFlyMapAck* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GPlayerFlyMapAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GPlayerFlyMapAck& from);
  void MergeFrom(const PBW2GPlayerFlyMapAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneID = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 3;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 3;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional uint32 sceneCellID = 4;
  inline bool has_scenecellid() const;
  inline void clear_scenecellid();
  static const int kSceneCellIDFieldNumber = 4;
  inline ::google::protobuf::uint32 scenecellid() const;
  inline void set_scenecellid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneRegionID = 5;
  inline bool has_sceneregionid() const;
  inline void clear_sceneregionid();
  static const int kSceneRegionIDFieldNumber = 5;
  inline ::google::protobuf::uint32 sceneregionid() const;
  inline void set_sceneregionid(::google::protobuf::uint32 value);
  
  // optional bool fixpos = 6;
  inline bool has_fixpos() const;
  inline void clear_fixpos();
  static const int kFixposFieldNumber = 6;
  inline bool fixpos() const;
  inline void set_fixpos(bool value);
  
  // optional float posx = 7;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 7;
  inline float posx() const;
  inline void set_posx(float value);
  
  // optional float posy = 8;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 8;
  inline float posy() const;
  inline void set_posy(float value);
  
  // optional .PBServerInfo pbSvrInfo = 9;
  inline bool has_pbsvrinfo() const;
  inline void clear_pbsvrinfo();
  static const int kPbSvrInfoFieldNumber = 9;
  inline const ::PBServerInfo& pbsvrinfo() const;
  inline ::PBServerInfo* mutable_pbsvrinfo();
  inline ::PBServerInfo* release_pbsvrinfo();
  
  // optional string host = 10;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 10;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional uint32 port = 11;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 11;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GPlayerFlyMapAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_scenecellid();
  inline void clear_has_scenecellid();
  inline void set_has_sceneregionid();
  inline void clear_has_sceneregionid();
  inline void set_has_fixpos();
  inline void clear_has_fixpos();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_pbsvrinfo();
  inline void clear_has_pbsvrinfo();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  ::google::protobuf::uint32 scenecellid_;
  ::google::protobuf::uint32 sceneregionid_;
  bool fixpos_;
  float posx_;
  ::PBServerInfo* pbsvrinfo_;
  float posy_;
  ::google::protobuf::uint32 port_;
  ::std::string* host_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GPlayerFlyMapAck* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GPlayerExitAsk : public ::google::protobuf::Message {
 public:
  PBW2GPlayerExitAsk();
  virtual ~PBW2GPlayerExitAsk();
  
  PBW2GPlayerExitAsk(const PBW2GPlayerExitAsk& from);
  
  inline PBW2GPlayerExitAsk& operator=(const PBW2GPlayerExitAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GPlayerExitAsk& default_instance();
  
  void Swap(PBW2GPlayerExitAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GPlayerExitAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GPlayerExitAsk& from);
  void MergeFrom(const PBW2GPlayerExitAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint64 loginsn = 3;
  inline bool has_loginsn() const;
  inline void clear_loginsn();
  static const int kLoginsnFieldNumber = 3;
  inline ::google::protobuf::uint64 loginsn() const;
  inline void set_loginsn(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GPlayerExitAsk)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_loginsn();
  inline void clear_has_loginsn();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint64 loginsn_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GPlayerExitAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WPlayerExitAck : public ::google::protobuf::Message {
 public:
  PBG2WPlayerExitAck();
  virtual ~PBG2WPlayerExitAck();
  
  PBG2WPlayerExitAck(const PBG2WPlayerExitAck& from);
  
  inline PBG2WPlayerExitAck& operator=(const PBG2WPlayerExitAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WPlayerExitAck& default_instance();
  
  void Swap(PBG2WPlayerExitAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WPlayerExitAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WPlayerExitAck& from);
  void MergeFrom(const PBG2WPlayerExitAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint64 loginsn = 3;
  inline bool has_loginsn() const;
  inline void clear_loginsn();
  static const int kLoginsnFieldNumber = 3;
  inline ::google::protobuf::uint64 loginsn() const;
  inline void set_loginsn(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WPlayerExitAck)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_loginsn();
  inline void clear_has_loginsn();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint64 loginsn_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WPlayerExitAck* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WPlayerLogout : public ::google::protobuf::Message {
 public:
  PBG2WPlayerLogout();
  virtual ~PBG2WPlayerLogout();
  
  PBG2WPlayerLogout(const PBG2WPlayerLogout& from);
  
  inline PBG2WPlayerLogout& operator=(const PBG2WPlayerLogout& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WPlayerLogout& default_instance();
  
  void Swap(PBG2WPlayerLogout* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WPlayerLogout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WPlayerLogout& from);
  void MergeFrom(const PBG2WPlayerLogout& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint64 loginsn = 2;
  inline bool has_loginsn() const;
  inline void clear_loginsn();
  static const int kLoginsnFieldNumber = 2;
  inline ::google::protobuf::uint64 loginsn() const;
  inline void set_loginsn(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WPlayerLogout)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_loginsn();
  inline void clear_has_loginsn();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 loginsn_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WPlayerLogout* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GPlayerSaveDone : public ::google::protobuf::Message {
 public:
  PBW2GPlayerSaveDone();
  virtual ~PBW2GPlayerSaveDone();
  
  PBW2GPlayerSaveDone(const PBW2GPlayerSaveDone& from);
  
  inline PBW2GPlayerSaveDone& operator=(const PBW2GPlayerSaveDone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GPlayerSaveDone& default_instance();
  
  void Swap(PBW2GPlayerSaveDone* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GPlayerSaveDone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GPlayerSaveDone& from);
  void MergeFrom(const PBW2GPlayerSaveDone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 saveorder = 3;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 3;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GPlayerSaveDone)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GPlayerSaveDone* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCopymapCreate : public ::google::protobuf::Message {
 public:
  PBG2WCopymapCreate();
  virtual ~PBG2WCopymapCreate();
  
  PBG2WCopymapCreate(const PBG2WCopymapCreate& from);
  
  inline PBG2WCopymapCreate& operator=(const PBG2WCopymapCreate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCopymapCreate& default_instance();
  
  void Swap(PBG2WCopymapCreate* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCopymapCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCopymapCreate& from);
  void MergeFrom(const PBG2WCopymapCreate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional .PBCreateCellParam param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::PBCreateCellParam& param() const;
  inline ::PBCreateCellParam* mutable_param();
  inline ::PBCreateCellParam* release_param();
  
  // @@protoc_insertion_point(class_scope:PBG2WCopymapCreate)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBCreateCellParam* param_;
  ::google::protobuf::uint32 copymapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCopymapCreate* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCopymapUpdateState : public ::google::protobuf::Message {
 public:
  PBG2WCopymapUpdateState();
  virtual ~PBG2WCopymapUpdateState();
  
  PBG2WCopymapUpdateState(const PBG2WCopymapUpdateState& from);
  
  inline PBG2WCopymapUpdateState& operator=(const PBG2WCopymapUpdateState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCopymapUpdateState& default_instance();
  
  void Swap(PBG2WCopymapUpdateState* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCopymapUpdateState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCopymapUpdateState& from);
  void MergeFrom(const PBG2WCopymapUpdateState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneid = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 2;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WCopymapUpdateState)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_state();
  inline void clear_has_state();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 dynid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCopymapUpdateState* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GCopymapEnter : public ::google::protobuf::Message {
 public:
  PBW2GCopymapEnter();
  virtual ~PBW2GCopymapEnter();
  
  PBW2GCopymapEnter(const PBW2GCopymapEnter& from);
  
  inline PBW2GCopymapEnter& operator=(const PBW2GCopymapEnter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GCopymapEnter& default_instance();
  
  void Swap(PBW2GCopymapEnter* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GCopymapEnter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GCopymapEnter& from);
  void MergeFrom(const PBW2GCopymapEnter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneid = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 cellid = 2;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 2;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 3;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 3;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional uint32 playerid = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GCopymapEnter)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint64 dynid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GCopymapEnter* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GCopymapExit : public ::google::protobuf::Message {
 public:
  PBW2GCopymapExit();
  virtual ~PBW2GCopymapExit();
  
  PBW2GCopymapExit(const PBW2GCopymapExit& from);
  
  inline PBW2GCopymapExit& operator=(const PBW2GCopymapExit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GCopymapExit& default_instance();
  
  void Swap(PBW2GCopymapExit* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GCopymapExit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GCopymapExit& from);
  void MergeFrom(const PBW2GCopymapExit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GCopymapExit)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GCopymapExit* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GCopymapPlayerInfo : public ::google::protobuf::Message {
 public:
  PBW2GCopymapPlayerInfo();
  virtual ~PBW2GCopymapPlayerInfo();
  
  PBW2GCopymapPlayerInfo(const PBW2GCopymapPlayerInfo& from);
  
  inline PBW2GCopymapPlayerInfo& operator=(const PBW2GCopymapPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GCopymapPlayerInfo& default_instance();
  
  void Swap(PBW2GCopymapPlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GCopymapPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GCopymapPlayerInfo& from);
  void MergeFrom(const PBW2GCopymapPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneid = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 2;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional .PBPlayerDisplay display = 3;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 3;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GCopymapPlayerInfo)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 dynid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 reason_;
  ::PBPlayerDisplay* display_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GCopymapPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GCopymapKickPlayer : public ::google::protobuf::Message {
 public:
  PBW2GCopymapKickPlayer();
  virtual ~PBW2GCopymapKickPlayer();
  
  PBW2GCopymapKickPlayer(const PBW2GCopymapKickPlayer& from);
  
  inline PBW2GCopymapKickPlayer& operator=(const PBW2GCopymapKickPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GCopymapKickPlayer& default_instance();
  
  void Swap(PBW2GCopymapKickPlayer* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GCopymapKickPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GCopymapKickPlayer& from);
  void MergeFrom(const PBW2GCopymapKickPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneid = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 2;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional uint32 playerid = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GCopymapKickPlayer)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 dynid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GCopymapKickPlayer* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCopymapInvite : public ::google::protobuf::Message {
 public:
  PBG2WCopymapInvite();
  virtual ~PBG2WCopymapInvite();
  
  PBG2WCopymapInvite(const PBG2WCopymapInvite& from);
  
  inline PBG2WCopymapInvite& operator=(const PBG2WCopymapInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCopymapInvite& default_instance();
  
  void Swap(PBG2WCopymapInvite* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCopymapInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCopymapInvite& from);
  void MergeFrom(const PBG2WCopymapInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 targetid = 3;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WCopymapInvite)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 targetid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCopymapInvite* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCopymapAcceptInvite : public ::google::protobuf::Message {
 public:
  PBG2WCopymapAcceptInvite();
  virtual ~PBG2WCopymapAcceptInvite();
  
  PBG2WCopymapAcceptInvite(const PBG2WCopymapAcceptInvite& from);
  
  inline PBG2WCopymapAcceptInvite& operator=(const PBG2WCopymapAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCopymapAcceptInvite& default_instance();
  
  void Swap(PBG2WCopymapAcceptInvite* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCopymapAcceptInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCopymapAcceptInvite& from);
  void MergeFrom(const PBG2WCopymapAcceptInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 targetid = 3;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetidFieldNumber = 3;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);
  
  // optional bool accept = 4;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 4;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:PBG2WCopymapAcceptInvite)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 targetid_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCopymapAcceptInvite* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCopymapTeamMemberInfo : public ::google::protobuf::Message {
 public:
  PBG2WCopymapTeamMemberInfo();
  virtual ~PBG2WCopymapTeamMemberInfo();
  
  PBG2WCopymapTeamMemberInfo(const PBG2WCopymapTeamMemberInfo& from);
  
  inline PBG2WCopymapTeamMemberInfo& operator=(const PBG2WCopymapTeamMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCopymapTeamMemberInfo& default_instance();
  
  void Swap(PBG2WCopymapTeamMemberInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCopymapTeamMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCopymapTeamMemberInfo& from);
  void MergeFrom(const PBG2WCopymapTeamMemberInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WCopymapTeamMemberInfo)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCopymapTeamMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCopymapAllCopymapCount : public ::google::protobuf::Message {
 public:
  PBG2WCopymapAllCopymapCount();
  virtual ~PBG2WCopymapAllCopymapCount();
  
  PBG2WCopymapAllCopymapCount(const PBG2WCopymapAllCopymapCount& from);
  
  inline PBG2WCopymapAllCopymapCount& operator=(const PBG2WCopymapAllCopymapCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCopymapAllCopymapCount& default_instance();
  
  void Swap(PBG2WCopymapAllCopymapCount* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCopymapAllCopymapCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCopymapAllCopymapCount& from);
  void MergeFrom(const PBG2WCopymapAllCopymapCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional .PBPlayerCopymap info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PBPlayerCopymap& info() const;
  inline ::PBPlayerCopymap* mutable_info();
  inline ::PBPlayerCopymap* release_info();
  
  // @@protoc_insertion_point(class_scope:PBG2WCopymapAllCopymapCount)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerCopymap* info_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCopymapAllCopymapCount* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCopymapOneCopymapCount : public ::google::protobuf::Message {
 public:
  PBG2WCopymapOneCopymapCount();
  virtual ~PBG2WCopymapOneCopymapCount();
  
  PBG2WCopymapOneCopymapCount(const PBG2WCopymapOneCopymapCount& from);
  
  inline PBG2WCopymapOneCopymapCount& operator=(const PBG2WCopymapOneCopymapCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCopymapOneCopymapCount& default_instance();
  
  void Swap(PBG2WCopymapOneCopymapCount* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCopymapOneCopymapCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCopymapOneCopymapCount& from);
  void MergeFrom(const PBG2WCopymapOneCopymapCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional .PBCopymapInfo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PBCopymapInfo& info() const;
  inline ::PBCopymapInfo* mutable_info();
  inline ::PBCopymapInfo* release_info();
  
  // @@protoc_insertion_point(class_scope:PBG2WCopymapOneCopymapCount)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBCopymapInfo* info_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCopymapOneCopymapCount* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WGMWorldStartTime : public ::google::protobuf::Message {
 public:
  PBG2WGMWorldStartTime();
  virtual ~PBG2WGMWorldStartTime();
  
  PBG2WGMWorldStartTime(const PBG2WGMWorldStartTime& from);
  
  inline PBG2WGMWorldStartTime& operator=(const PBG2WGMWorldStartTime& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WGMWorldStartTime& default_instance();
  
  void Swap(PBG2WGMWorldStartTime* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WGMWorldStartTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WGMWorldStartTime& from);
  void MergeFrom(const PBG2WGMWorldStartTime& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 stamp = 1;
  inline bool has_stamp() const;
  inline void clear_stamp();
  static const int kStampFieldNumber = 1;
  inline ::google::protobuf::uint64 stamp() const;
  inline void set_stamp(::google::protobuf::uint64 value);
  
  // optional uint32 logicworldid = 2;
  inline bool has_logicworldid() const;
  inline void clear_logicworldid();
  static const int kLogicworldidFieldNumber = 2;
  inline ::google::protobuf::uint32 logicworldid() const;
  inline void set_logicworldid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WGMWorldStartTime)
 private:
  inline void set_has_stamp();
  inline void clear_has_stamp();
  inline void set_has_logicworldid();
  inline void clear_has_logicworldid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 stamp_;
  ::google::protobuf::uint32 logicworldid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WGMWorldStartTime* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WPlayerData : public ::google::protobuf::Message {
 public:
  PBG2WPlayerData();
  virtual ~PBG2WPlayerData();
  
  PBG2WPlayerData(const PBG2WPlayerData& from);
  
  inline PBG2WPlayerData& operator=(const PBG2WPlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WPlayerData& default_instance();
  
  void Swap(PBG2WPlayerData* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WPlayerData& from);
  void MergeFrom(const PBG2WPlayerData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay playerdisplay = 1;
  inline bool has_playerdisplay() const;
  inline void clear_playerdisplay();
  static const int kPlayerdisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& playerdisplay() const;
  inline ::PBPlayerDisplay* mutable_playerdisplay();
  inline ::PBPlayerDisplay* release_playerdisplay();
  
  // optional uint32 fightpowr = 2;
  inline bool has_fightpowr() const;
  inline void clear_fightpowr();
  static const int kFightpowrFieldNumber = 2;
  inline ::google::protobuf::uint32 fightpowr() const;
  inline void set_fightpowr(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WPlayerData)
 private:
  inline void set_has_playerdisplay();
  inline void clear_has_playerdisplay();
  inline void set_has_fightpowr();
  inline void clear_has_fightpowr();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* playerdisplay_;
  ::google::protobuf::uint32 fightpowr_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WPlayerData* default_instance_;
};
// -------------------------------------------------------------------

class PBDartBuffInfo : public ::google::protobuf::Message {
 public:
  PBDartBuffInfo();
  virtual ~PBDartBuffInfo();
  
  PBDartBuffInfo(const PBDartBuffInfo& from);
  
  inline PBDartBuffInfo& operator=(const PBDartBuffInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDartBuffInfo& default_instance();
  
  void Swap(PBDartBuffInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBDartBuffInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDartBuffInfo& from);
  void MergeFrom(const PBDartBuffInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 DartBuffId = 1;
  inline bool has_dartbuffid() const;
  inline void clear_dartbuffid();
  static const int kDartBuffIdFieldNumber = 1;
  inline ::google::protobuf::uint32 dartbuffid() const;
  inline void set_dartbuffid(::google::protobuf::uint32 value);
  
  // optional uint64 RemoveTime = 2;
  inline bool has_removetime() const;
  inline void clear_removetime();
  static const int kRemoveTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 removetime() const;
  inline void set_removetime(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBDartBuffInfo)
 private:
  inline void set_has_dartbuffid();
  inline void clear_has_dartbuffid();
  inline void set_has_removetime();
  inline void clear_has_removetime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 removetime_;
  ::google::protobuf::uint32 dartbuffid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDartBuffInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBDartMemberInfo : public ::google::protobuf::Message {
 public:
  PBDartMemberInfo();
  virtual ~PBDartMemberInfo();
  
  PBDartMemberInfo(const PBDartMemberInfo& from);
  
  inline PBDartMemberInfo& operator=(const PBDartMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDartMemberInfo& default_instance();
  
  void Swap(PBDartMemberInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBDartMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDartMemberInfo& from);
  void MergeFrom(const PBDartMemberInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 PlayerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 addSupply = 2;
  inline bool has_addsupply() const;
  inline void clear_addsupply();
  static const int kAddSupplyFieldNumber = 2;
  inline ::google::protobuf::uint32 addsupply() const;
  inline void set_addsupply(::google::protobuf::uint32 value);
  
  // optional .PBPlayerAvatar avatar = 3;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  inline const ::PBPlayerAvatar& avatar() const;
  inline ::PBPlayerAvatar* mutable_avatar();
  inline ::PBPlayerAvatar* release_avatar();
  
  // optional uint32 identitypersonalprize = 4;
  inline bool has_identitypersonalprize() const;
  inline void clear_identitypersonalprize();
  static const int kIdentitypersonalprizeFieldNumber = 4;
  inline ::google::protobuf::uint32 identitypersonalprize() const;
  inline void set_identitypersonalprize(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBDartMemberInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_addsupply();
  inline void clear_has_addsupply();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_identitypersonalprize();
  inline void clear_has_identitypersonalprize();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 addsupply_;
  ::PBPlayerAvatar* avatar_;
  ::google::protobuf::uint32 identitypersonalprize_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDartMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBDartCarInfoRT : public ::google::protobuf::Message {
 public:
  PBDartCarInfoRT();
  virtual ~PBDartCarInfoRT();
  
  PBDartCarInfoRT(const PBDartCarInfoRT& from);
  
  inline PBDartCarInfoRT& operator=(const PBDartCarInfoRT& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDartCarInfoRT& default_instance();
  
  void Swap(PBDartCarInfoRT* other);
  
  // implements Message ----------------------------------------------
  
  PBDartCarInfoRT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDartCarInfoRT& from);
  void MergeFrom(const PBDartCarInfoRT& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // optional uint32 dartID = 2;
  inline bool has_dartid() const;
  inline void clear_dartid();
  static const int kDartIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dartid() const;
  inline void set_dartid(::google::protobuf::uint32 value);
  
  // optional uint32 dartLeaderPlayerID = 3;
  inline bool has_dartleaderplayerid() const;
  inline void clear_dartleaderplayerid();
  static const int kDartLeaderPlayerIDFieldNumber = 3;
  inline ::google::protobuf::uint32 dartleaderplayerid() const;
  inline void set_dartleaderplayerid(::google::protobuf::uint32 value);
  
  // optional uint64 lastCheckTime = 4;
  inline bool has_lastchecktime() const;
  inline void clear_lastchecktime();
  static const int kLastCheckTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 lastchecktime() const;
  inline void set_lastchecktime(::google::protobuf::uint64 value);
  
  // optional uint32 leftSecond = 5;
  inline bool has_leftsecond() const;
  inline void clear_leftsecond();
  static const int kLeftSecondFieldNumber = 5;
  inline ::google::protobuf::uint32 leftsecond() const;
  inline void set_leftsecond(::google::protobuf::uint32 value);
  
  // optional uint32 totalSecond = 6;
  inline bool has_totalsecond() const;
  inline void clear_totalsecond();
  static const int kTotalSecondFieldNumber = 6;
  inline ::google::protobuf::uint32 totalsecond() const;
  inline void set_totalsecond(::google::protobuf::uint32 value);
  
  // optional uint32 status = 7;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 prizeTimes = 8;
  inline bool has_prizetimes() const;
  inline void clear_prizetimes();
  static const int kPrizeTimesFieldNumber = 8;
  inline ::google::protobuf::uint32 prizetimes() const;
  inline void set_prizetimes(::google::protobuf::uint32 value);
  
  // optional uint32 robTriggerTime = 9;
  inline bool has_robtriggertime() const;
  inline void clear_robtriggertime();
  static const int kRobTriggerTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 robtriggertime() const;
  inline void set_robtriggertime(::google::protobuf::uint32 value);
  
  // repeated .PBDartMemberInfo dartMembersInfo = 10;
  inline int dartmembersinfo_size() const;
  inline void clear_dartmembersinfo();
  static const int kDartMembersInfoFieldNumber = 10;
  inline const ::PBDartMemberInfo& dartmembersinfo(int index) const;
  inline ::PBDartMemberInfo* mutable_dartmembersinfo(int index);
  inline ::PBDartMemberInfo* add_dartmembersinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBDartMemberInfo >&
      dartmembersinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDartMemberInfo >*
      mutable_dartmembersinfo();
  
  // optional uint32 dartPathIndex = 11;
  inline bool has_dartpathindex() const;
  inline void clear_dartpathindex();
  static const int kDartPathIndexFieldNumber = 11;
  inline ::google::protobuf::uint32 dartpathindex() const;
  inline void set_dartpathindex(::google::protobuf::uint32 value);
  
  // repeated .PBDartBuffInfo gainedDartBuffID = 12;
  inline int gaineddartbuffid_size() const;
  inline void clear_gaineddartbuffid();
  static const int kGainedDartBuffIDFieldNumber = 12;
  inline const ::PBDartBuffInfo& gaineddartbuffid(int index) const;
  inline ::PBDartBuffInfo* mutable_gaineddartbuffid(int index);
  inline ::PBDartBuffInfo* add_gaineddartbuffid();
  inline const ::google::protobuf::RepeatedPtrField< ::PBDartBuffInfo >&
      gaineddartbuffid() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDartBuffInfo >*
      mutable_gaineddartbuffid();
  
  // optional uint32 enterSceneTime = 13;
  inline bool has_enterscenetime() const;
  inline void clear_enterscenetime();
  static const int kEnterSceneTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 enterscenetime() const;
  inline void set_enterscenetime(::google::protobuf::uint32 value);
  
  // optional uint32 sceneID = 14;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 14;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneCellID = 15;
  inline bool has_scenecellid() const;
  inline void clear_scenecellid();
  static const int kSceneCellIDFieldNumber = 15;
  inline ::google::protobuf::uint32 scenecellid() const;
  inline void set_scenecellid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 16;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 16;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional float x = 17;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 17;
  inline float x() const;
  inline void set_x(float value);
  
  // optional float y = 18;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 18;
  inline float y() const;
  inline void set_y(float value);
  
  // optional float dir = 19;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 19;
  inline float dir() const;
  inline void set_dir(float value);
  
  // @@protoc_insertion_point(class_scope:PBDartCarInfoRT)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  inline void set_has_dartid();
  inline void clear_has_dartid();
  inline void set_has_dartleaderplayerid();
  inline void clear_has_dartleaderplayerid();
  inline void set_has_lastchecktime();
  inline void clear_has_lastchecktime();
  inline void set_has_leftsecond();
  inline void clear_has_leftsecond();
  inline void set_has_totalsecond();
  inline void clear_has_totalsecond();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_prizetimes();
  inline void clear_has_prizetimes();
  inline void set_has_robtriggertime();
  inline void clear_has_robtriggertime();
  inline void set_has_dartpathindex();
  inline void clear_has_dartpathindex();
  inline void set_has_enterscenetime();
  inline void clear_has_enterscenetime();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenecellid();
  inline void clear_has_scenecellid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_dir();
  inline void clear_has_dir();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  ::google::protobuf::uint32 dartid_;
  ::google::protobuf::uint32 dartleaderplayerid_;
  ::google::protobuf::uint64 lastchecktime_;
  ::google::protobuf::uint32 leftsecond_;
  ::google::protobuf::uint32 totalsecond_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 prizetimes_;
  ::google::protobuf::RepeatedPtrField< ::PBDartMemberInfo > dartmembersinfo_;
  ::google::protobuf::uint32 robtriggertime_;
  ::google::protobuf::uint32 dartpathindex_;
  ::google::protobuf::RepeatedPtrField< ::PBDartBuffInfo > gaineddartbuffid_;
  ::google::protobuf::uint32 enterscenetime_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  ::google::protobuf::uint32 scenecellid_;
  float x_;
  float y_;
  float dir_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDartCarInfoRT* default_instance_;
};
// -------------------------------------------------------------------

class PBDartFlyTarget : public ::google::protobuf::Message {
 public:
  PBDartFlyTarget();
  virtual ~PBDartFlyTarget();
  
  PBDartFlyTarget(const PBDartFlyTarget& from);
  
  inline PBDartFlyTarget& operator=(const PBDartFlyTarget& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDartFlyTarget& default_instance();
  
  void Swap(PBDartFlyTarget* other);
  
  // implements Message ----------------------------------------------
  
  PBDartFlyTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDartFlyTarget& from);
  void MergeFrom(const PBDartFlyTarget& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 cellID = 2;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellIDFieldNumber = 2;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);
  
  // optional float x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);
  
  // optional float y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);
  
  // @@protoc_insertion_point(class_scope:PBDartFlyTarget)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 cellid_;
  float x_;
  float y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDartFlyTarget* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WDartCarFlyAsk : public ::google::protobuf::Message {
 public:
  PBG2WDartCarFlyAsk();
  virtual ~PBG2WDartCarFlyAsk();
  
  PBG2WDartCarFlyAsk(const PBG2WDartCarFlyAsk& from);
  
  inline PBG2WDartCarFlyAsk& operator=(const PBG2WDartCarFlyAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WDartCarFlyAsk& default_instance();
  
  void Swap(PBG2WDartCarFlyAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WDartCarFlyAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WDartCarFlyAsk& from);
  void MergeFrom(const PBG2WDartCarFlyAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBDartFlyTarget flyPoint = 1;
  inline bool has_flypoint() const;
  inline void clear_flypoint();
  static const int kFlyPointFieldNumber = 1;
  inline const ::PBDartFlyTarget& flypoint() const;
  inline ::PBDartFlyTarget* mutable_flypoint();
  inline ::PBDartFlyTarget* release_flypoint();
  
  // optional .PBDartCarInfoRT dartCarInfoRT = 2;
  inline bool has_dartcarinfort() const;
  inline void clear_dartcarinfort();
  static const int kDartCarInfoRTFieldNumber = 2;
  inline const ::PBDartCarInfoRT& dartcarinfort() const;
  inline ::PBDartCarInfoRT* mutable_dartcarinfort();
  inline ::PBDartCarInfoRT* release_dartcarinfort();
  
  // @@protoc_insertion_point(class_scope:PBG2WDartCarFlyAsk)
 private:
  inline void set_has_flypoint();
  inline void clear_has_flypoint();
  inline void set_has_dartcarinfort();
  inline void clear_has_dartcarinfort();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBDartFlyTarget* flypoint_;
  ::PBDartCarInfoRT* dartcarinfort_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WDartCarFlyAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GDartCarFlyAck : public ::google::protobuf::Message {
 public:
  PBW2GDartCarFlyAck();
  virtual ~PBW2GDartCarFlyAck();
  
  PBW2GDartCarFlyAck(const PBW2GDartCarFlyAck& from);
  
  inline PBW2GDartCarFlyAck& operator=(const PBW2GDartCarFlyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GDartCarFlyAck& default_instance();
  
  void Swap(PBW2GDartCarFlyAck* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GDartCarFlyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GDartCarFlyAck& from);
  void MergeFrom(const PBW2GDartCarFlyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 targetSceneID = 1;
  inline bool has_targetsceneid() const;
  inline void clear_targetsceneid();
  static const int kTargetSceneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 targetsceneid() const;
  inline void set_targetsceneid(::google::protobuf::uint32 value);
  
  // optional uint64 targetSceneDynID = 2;
  inline bool has_targetscenedynid() const;
  inline void clear_targetscenedynid();
  static const int kTargetSceneDynIDFieldNumber = 2;
  inline ::google::protobuf::uint64 targetscenedynid() const;
  inline void set_targetscenedynid(::google::protobuf::uint64 value);
  
  // optional uint32 sourceSceneID = 3;
  inline bool has_sourcesceneid() const;
  inline void clear_sourcesceneid();
  static const int kSourceSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 sourcesceneid() const;
  inline void set_sourcesceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sourceSceneDynID = 4;
  inline bool has_sourcescenedynid() const;
  inline void clear_sourcescenedynid();
  static const int kSourceSceneDynIDFieldNumber = 4;
  inline ::google::protobuf::uint64 sourcescenedynid() const;
  inline void set_sourcescenedynid(::google::protobuf::uint64 value);
  
  // optional uint64 globalDartID = 5;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 5;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GDartCarFlyAck)
 private:
  inline void set_has_targetsceneid();
  inline void clear_has_targetsceneid();
  inline void set_has_targetscenedynid();
  inline void clear_has_targetscenedynid();
  inline void set_has_sourcesceneid();
  inline void clear_has_sourcesceneid();
  inline void set_has_sourcescenedynid();
  inline void clear_has_sourcescenedynid();
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 targetscenedynid_;
  ::google::protobuf::uint32 targetsceneid_;
  ::google::protobuf::uint32 sourcesceneid_;
  ::google::protobuf::uint64 sourcescenedynid_;
  ::google::protobuf::uint64 globaldartid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GDartCarFlyAck* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GDartCarFlyCreateNtf : public ::google::protobuf::Message {
 public:
  PBW2GDartCarFlyCreateNtf();
  virtual ~PBW2GDartCarFlyCreateNtf();
  
  PBW2GDartCarFlyCreateNtf(const PBW2GDartCarFlyCreateNtf& from);
  
  inline PBW2GDartCarFlyCreateNtf& operator=(const PBW2GDartCarFlyCreateNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GDartCarFlyCreateNtf& default_instance();
  
  void Swap(PBW2GDartCarFlyCreateNtf* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GDartCarFlyCreateNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GDartCarFlyCreateNtf& from);
  void MergeFrom(const PBW2GDartCarFlyCreateNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 2;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 2;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional .PBDartCarInfoRT dartCarInfoRT = 3;
  inline bool has_dartcarinfort() const;
  inline void clear_dartcarinfort();
  static const int kDartCarInfoRTFieldNumber = 3;
  inline const ::PBDartCarInfoRT& dartcarinfort() const;
  inline ::PBDartCarInfoRT* mutable_dartcarinfort();
  inline ::PBDartCarInfoRT* release_dartcarinfort();
  
  // @@protoc_insertion_point(class_scope:PBW2GDartCarFlyCreateNtf)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_dartcarinfort();
  inline void clear_has_dartcarinfort();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 scenedynid_;
  ::PBDartCarInfoRT* dartcarinfort_;
  ::google::protobuf::uint32 sceneid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GDartCarFlyCreateNtf* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WDartCarUpdateAsk : public ::google::protobuf::Message {
 public:
  PBG2WDartCarUpdateAsk();
  virtual ~PBG2WDartCarUpdateAsk();
  
  PBG2WDartCarUpdateAsk(const PBG2WDartCarUpdateAsk& from);
  
  inline PBG2WDartCarUpdateAsk& operator=(const PBG2WDartCarUpdateAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WDartCarUpdateAsk& default_instance();
  
  void Swap(PBG2WDartCarUpdateAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WDartCarUpdateAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WDartCarUpdateAsk& from);
  void MergeFrom(const PBG2WDartCarUpdateAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBDartCarInfoRT dartCarInfoRT = 1;
  inline bool has_dartcarinfort() const;
  inline void clear_dartcarinfort();
  static const int kDartCarInfoRTFieldNumber = 1;
  inline const ::PBDartCarInfoRT& dartcarinfort() const;
  inline ::PBDartCarInfoRT* mutable_dartcarinfort();
  inline ::PBDartCarInfoRT* release_dartcarinfort();
  
  // repeated uint32 leftMembersPlayerID = 2;
  inline int leftmembersplayerid_size() const;
  inline void clear_leftmembersplayerid();
  static const int kLeftMembersPlayerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 leftmembersplayerid(int index) const;
  inline void set_leftmembersplayerid(int index, ::google::protobuf::uint32 value);
  inline void add_leftmembersplayerid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      leftmembersplayerid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_leftmembersplayerid();
  
  // @@protoc_insertion_point(class_scope:PBG2WDartCarUpdateAsk)
 private:
  inline void set_has_dartcarinfort();
  inline void clear_has_dartcarinfort();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBDartCarInfoRT* dartcarinfort_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > leftmembersplayerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WDartCarUpdateAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WDartCarDeleteAsk : public ::google::protobuf::Message {
 public:
  PBG2WDartCarDeleteAsk();
  virtual ~PBG2WDartCarDeleteAsk();
  
  PBG2WDartCarDeleteAsk(const PBG2WDartCarDeleteAsk& from);
  
  inline PBG2WDartCarDeleteAsk& operator=(const PBG2WDartCarDeleteAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WDartCarDeleteAsk& default_instance();
  
  void Swap(PBG2WDartCarDeleteAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WDartCarDeleteAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WDartCarDeleteAsk& from);
  void MergeFrom(const PBG2WDartCarDeleteAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WDartCarDeleteAsk)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WDartCarDeleteAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GDartCarRobFinishedAck : public ::google::protobuf::Message {
 public:
  PBW2GDartCarRobFinishedAck();
  virtual ~PBW2GDartCarRobFinishedAck();
  
  PBW2GDartCarRobFinishedAck(const PBW2GDartCarRobFinishedAck& from);
  
  inline PBW2GDartCarRobFinishedAck& operator=(const PBW2GDartCarRobFinishedAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GDartCarRobFinishedAck& default_instance();
  
  void Swap(PBW2GDartCarRobFinishedAck* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GDartCarRobFinishedAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GDartCarRobFinishedAck& from);
  void MergeFrom(const PBW2GDartCarRobFinishedAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // optional uint32 newStatus = 2;
  inline bool has_newstatus() const;
  inline void clear_newstatus();
  static const int kNewStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 newstatus() const;
  inline void set_newstatus(::google::protobuf::uint32 value);
  
  // optional uint32 sceneID = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 4;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 4;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GDartCarRobFinishedAck)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  inline void set_has_newstatus();
  inline void clear_has_newstatus();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  ::google::protobuf::uint32 newstatus_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GDartCarRobFinishedAck* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WDartCarRobFinishedAsk : public ::google::protobuf::Message {
 public:
  PBG2WDartCarRobFinishedAsk();
  virtual ~PBG2WDartCarRobFinishedAsk();
  
  PBG2WDartCarRobFinishedAsk(const PBG2WDartCarRobFinishedAsk& from);
  
  inline PBG2WDartCarRobFinishedAsk& operator=(const PBG2WDartCarRobFinishedAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WDartCarRobFinishedAsk& default_instance();
  
  void Swap(PBG2WDartCarRobFinishedAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WDartCarRobFinishedAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WDartCarRobFinishedAsk& from);
  void MergeFrom(const PBG2WDartCarRobFinishedAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // optional uint32 newStatus = 2;
  inline bool has_newstatus() const;
  inline void clear_newstatus();
  static const int kNewStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 newstatus() const;
  inline void set_newstatus(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WDartCarRobFinishedAsk)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  inline void set_has_newstatus();
  inline void clear_has_newstatus();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  ::google::protobuf::uint32 newstatus_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WDartCarRobFinishedAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WDartCarLeaveRobAsk : public ::google::protobuf::Message {
 public:
  PBG2WDartCarLeaveRobAsk();
  virtual ~PBG2WDartCarLeaveRobAsk();
  
  PBG2WDartCarLeaveRobAsk(const PBG2WDartCarLeaveRobAsk& from);
  
  inline PBG2WDartCarLeaveRobAsk& operator=(const PBG2WDartCarLeaveRobAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WDartCarLeaveRobAsk& default_instance();
  
  void Swap(PBG2WDartCarLeaveRobAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WDartCarLeaveRobAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WDartCarLeaveRobAsk& from);
  void MergeFrom(const PBG2WDartCarLeaveRobAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // optional uint32 playerID = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WDartCarLeaveRobAsk)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WDartCarLeaveRobAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GDartCarMemberLeaveNtf : public ::google::protobuf::Message {
 public:
  PBW2GDartCarMemberLeaveNtf();
  virtual ~PBW2GDartCarMemberLeaveNtf();
  
  PBW2GDartCarMemberLeaveNtf(const PBW2GDartCarMemberLeaveNtf& from);
  
  inline PBW2GDartCarMemberLeaveNtf& operator=(const PBW2GDartCarMemberLeaveNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GDartCarMemberLeaveNtf& default_instance();
  
  void Swap(PBW2GDartCarMemberLeaveNtf* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GDartCarMemberLeaveNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GDartCarMemberLeaveNtf& from);
  void MergeFrom(const PBW2GDartCarMemberLeaveNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // optional uint32 playerID = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneID = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 4;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 4;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GDartCarMemberLeaveNtf)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GDartCarMemberLeaveNtf* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WFindDartCarAsk : public ::google::protobuf::Message {
 public:
  PBG2WFindDartCarAsk();
  virtual ~PBG2WFindDartCarAsk();
  
  PBG2WFindDartCarAsk(const PBG2WFindDartCarAsk& from);
  
  inline PBG2WFindDartCarAsk& operator=(const PBG2WFindDartCarAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WFindDartCarAsk& default_instance();
  
  void Swap(PBG2WFindDartCarAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WFindDartCarAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WFindDartCarAsk& from);
  void MergeFrom(const PBG2WFindDartCarAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // optional uint32 playerID = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneID = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 4;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 4;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WFindDartCarAsk)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WFindDartCarAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GFindDartCarAck : public ::google::protobuf::Message {
 public:
  PBW2GFindDartCarAck();
  virtual ~PBW2GFindDartCarAck();
  
  PBW2GFindDartCarAck(const PBW2GFindDartCarAck& from);
  
  inline PBW2GFindDartCarAck& operator=(const PBW2GFindDartCarAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GFindDartCarAck& default_instance();
  
  void Swap(PBW2GFindDartCarAck* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GFindDartCarAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GFindDartCarAck& from);
  void MergeFrom(const PBW2GFindDartCarAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 globalDartID = 1;
  inline bool has_globaldartid() const;
  inline void clear_globaldartid();
  static const int kGlobalDartIDFieldNumber = 1;
  inline ::google::protobuf::uint64 globaldartid() const;
  inline void set_globaldartid(::google::protobuf::uint64 value);
  
  // optional uint32 playerID = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneID = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 sceneDynID = 4;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kSceneDynIDFieldNumber = 4;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional float x = 5;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline float x() const;
  inline void set_x(float value);
  
  // optional float y = 6;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline float y() const;
  inline void set_y(float value);
  
  // optional uint32 targetsceneID = 7;
  inline bool has_targetsceneid() const;
  inline void clear_targetsceneid();
  static const int kTargetsceneIDFieldNumber = 7;
  inline ::google::protobuf::uint32 targetsceneid() const;
  inline void set_targetsceneid(::google::protobuf::uint32 value);
  
  // optional uint64 targetsceneDynID = 8;
  inline bool has_targetscenedynid() const;
  inline void clear_targetscenedynid();
  static const int kTargetsceneDynIDFieldNumber = 8;
  inline ::google::protobuf::uint64 targetscenedynid() const;
  inline void set_targetscenedynid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GFindDartCarAck)
 private:
  inline void set_has_globaldartid();
  inline void clear_has_globaldartid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_targetsceneid();
  inline void clear_has_targetsceneid();
  inline void set_has_targetscenedynid();
  inline void clear_has_targetscenedynid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 globaldartid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  float x_;
  float y_;
  ::google::protobuf::uint64 targetscenedynid_;
  ::google::protobuf::uint32 targetsceneid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GFindDartCarAck* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WFactionBossHurtUpdate : public ::google::protobuf::Message {
 public:
  PBG2WFactionBossHurtUpdate();
  virtual ~PBG2WFactionBossHurtUpdate();
  
  PBG2WFactionBossHurtUpdate(const PBG2WFactionBossHurtUpdate& from);
  
  inline PBG2WFactionBossHurtUpdate& operator=(const PBG2WFactionBossHurtUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WFactionBossHurtUpdate& default_instance();
  
  void Swap(PBG2WFactionBossHurtUpdate* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WFactionBossHurtUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WFactionBossHurtUpdate& from);
  void MergeFrom(const PBG2WFactionBossHurtUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint64 hurt = 2;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 2;
  inline ::google::protobuf::uint64 hurt() const;
  inline void set_hurt(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WFactionBossHurtUpdate)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint64 hurt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WFactionBossHurtUpdate* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WCommonTreasurePrizeAsk : public ::google::protobuf::Message {
 public:
  PBG2WCommonTreasurePrizeAsk();
  virtual ~PBG2WCommonTreasurePrizeAsk();
  
  PBG2WCommonTreasurePrizeAsk(const PBG2WCommonTreasurePrizeAsk& from);
  
  inline PBG2WCommonTreasurePrizeAsk& operator=(const PBG2WCommonTreasurePrizeAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WCommonTreasurePrizeAsk& default_instance();
  
  void Swap(PBG2WCommonTreasurePrizeAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WCommonTreasurePrizeAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WCommonTreasurePrizeAsk& from);
  void MergeFrom(const PBG2WCommonTreasurePrizeAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 treasuretype = 2;
  inline bool has_treasuretype() const;
  inline void clear_treasuretype();
  static const int kTreasuretypeFieldNumber = 2;
  inline ::google::protobuf::uint32 treasuretype() const;
  inline void set_treasuretype(::google::protobuf::uint32 value);
  
  // optional uint32 treasureid = 3;
  inline bool has_treasureid() const;
  inline void clear_treasureid();
  static const int kTreasureidFieldNumber = 3;
  inline ::google::protobuf::uint32 treasureid() const;
  inline void set_treasureid(::google::protobuf::uint32 value);
  
  // optional float posx = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 4;
  inline float posx() const;
  inline void set_posx(float value);
  
  // optional float posy = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 5;
  inline float posy() const;
  inline void set_posy(float value);
  
  // @@protoc_insertion_point(class_scope:PBG2WCommonTreasurePrizeAsk)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_treasuretype();
  inline void clear_has_treasuretype();
  inline void set_has_treasureid();
  inline void clear_has_treasureid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 treasuretype_;
  ::google::protobuf::uint32 treasureid_;
  float posx_;
  float posy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WCommonTreasurePrizeAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GCommonTreasurePrizeAck : public ::google::protobuf::Message {
 public:
  PBW2GCommonTreasurePrizeAck();
  virtual ~PBW2GCommonTreasurePrizeAck();
  
  PBW2GCommonTreasurePrizeAck(const PBW2GCommonTreasurePrizeAck& from);
  
  inline PBW2GCommonTreasurePrizeAck& operator=(const PBW2GCommonTreasurePrizeAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GCommonTreasurePrizeAck& default_instance();
  
  void Swap(PBW2GCommonTreasurePrizeAck* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GCommonTreasurePrizeAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GCommonTreasurePrizeAck& from);
  void MergeFrom(const PBW2GCommonTreasurePrizeAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 prizeid = 2;
  inline bool has_prizeid() const;
  inline void clear_prizeid();
  static const int kPrizeidFieldNumber = 2;
  inline ::google::protobuf::uint32 prizeid() const;
  inline void set_prizeid(::google::protobuf::uint32 value);
  
  // optional uint32 treasureid = 3;
  inline bool has_treasureid() const;
  inline void clear_treasureid();
  static const int kTreasureidFieldNumber = 3;
  inline ::google::protobuf::uint32 treasureid() const;
  inline void set_treasureid(::google::protobuf::uint32 value);
  
  // optional float posx = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 4;
  inline float posx() const;
  inline void set_posx(float value);
  
  // optional float posy = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 5;
  inline float posy() const;
  inline void set_posy(float value);
  
  // @@protoc_insertion_point(class_scope:PBW2GCommonTreasurePrizeAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_prizeid();
  inline void clear_has_prizeid();
  inline void set_has_treasureid();
  inline void clear_has_treasureid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 prizeid_;
  ::google::protobuf::uint32 treasureid_;
  float posx_;
  float posy_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GCommonTreasurePrizeAck* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GCorpsChangeJobAck : public ::google::protobuf::Message {
 public:
  PBW2GCorpsChangeJobAck();
  virtual ~PBW2GCorpsChangeJobAck();
  
  PBW2GCorpsChangeJobAck(const PBW2GCorpsChangeJobAck& from);
  
  inline PBW2GCorpsChangeJobAck& operator=(const PBW2GCorpsChangeJobAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GCorpsChangeJobAck& default_instance();
  
  void Swap(PBW2GCorpsChangeJobAck* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GCorpsChangeJobAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GCorpsChangeJobAck& from);
  void MergeFrom(const PBW2GCorpsChangeJobAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 addjob = 2;
  inline bool has_addjob() const;
  inline void clear_addjob();
  static const int kAddjobFieldNumber = 2;
  inline ::google::protobuf::uint32 addjob() const;
  inline void set_addjob(::google::protobuf::uint32 value);
  
  // optional uint32 deljob = 3;
  inline bool has_deljob() const;
  inline void clear_deljob();
  static const int kDeljobFieldNumber = 3;
  inline ::google::protobuf::uint32 deljob() const;
  inline void set_deljob(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GCorpsChangeJobAck)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_addjob();
  inline void clear_has_addjob();
  inline void set_has_deljob();
  inline void clear_has_deljob();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 addjob_;
  ::google::protobuf::uint32 deljob_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GCorpsChangeJobAck* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GCommonForbitSpeak : public ::google::protobuf::Message {
 public:
  PBW2GCommonForbitSpeak();
  virtual ~PBW2GCommonForbitSpeak();
  
  PBW2GCommonForbitSpeak(const PBW2GCommonForbitSpeak& from);
  
  inline PBW2GCommonForbitSpeak& operator=(const PBW2GCommonForbitSpeak& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GCommonForbitSpeak& default_instance();
  
  void Swap(PBW2GCommonForbitSpeak* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GCommonForbitSpeak* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GCommonForbitSpeak& from);
  void MergeFrom(const PBW2GCommonForbitSpeak& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::uint32 channel() const;
  inline void set_channel(::google::protobuf::uint32 value);
  
  // optional uint32 forbittime = 2;
  inline bool has_forbittime() const;
  inline void clear_forbittime();
  static const int kForbittimeFieldNumber = 2;
  inline ::google::protobuf::uint32 forbittime() const;
  inline void set_forbittime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GCommonForbitSpeak)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_forbittime();
  inline void clear_has_forbittime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 channel_;
  ::google::protobuf::uint32 forbittime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GCommonForbitSpeak* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WManorBattleFieldFighterCountAsk : public ::google::protobuf::Message {
 public:
  PBG2WManorBattleFieldFighterCountAsk();
  virtual ~PBG2WManorBattleFieldFighterCountAsk();
  
  PBG2WManorBattleFieldFighterCountAsk(const PBG2WManorBattleFieldFighterCountAsk& from);
  
  inline PBG2WManorBattleFieldFighterCountAsk& operator=(const PBG2WManorBattleFieldFighterCountAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WManorBattleFieldFighterCountAsk& default_instance();
  
  void Swap(PBG2WManorBattleFieldFighterCountAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WManorBattleFieldFighterCountAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WManorBattleFieldFighterCountAsk& from);
  void MergeFrom(const PBG2WManorBattleFieldFighterCountAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 manorid = 1;
  inline bool has_manorid() const;
  inline void clear_manorid();
  static const int kManoridFieldNumber = 1;
  inline ::google::protobuf::uint32 manorid() const;
  inline void set_manorid(::google::protobuf::uint32 value);
  
  // optional uint32 regionid = 2;
  inline bool has_regionid() const;
  inline void clear_regionid();
  static const int kRegionidFieldNumber = 2;
  inline ::google::protobuf::uint32 regionid() const;
  inline void set_regionid(::google::protobuf::uint32 value);
  
  // optional .PBManorBattleFieldReport defenderreport = 3;
  inline bool has_defenderreport() const;
  inline void clear_defenderreport();
  static const int kDefenderreportFieldNumber = 3;
  inline const ::PBManorBattleFieldReport& defenderreport() const;
  inline ::PBManorBattleFieldReport* mutable_defenderreport();
  inline ::PBManorBattleFieldReport* release_defenderreport();
  
  // optional .PBManorBattleFieldReport challengerreport = 4;
  inline bool has_challengerreport() const;
  inline void clear_challengerreport();
  static const int kChallengerreportFieldNumber = 4;
  inline const ::PBManorBattleFieldReport& challengerreport() const;
  inline ::PBManorBattleFieldReport* mutable_challengerreport();
  inline ::PBManorBattleFieldReport* release_challengerreport();
  
  // @@protoc_insertion_point(class_scope:PBG2WManorBattleFieldFighterCountAsk)
 private:
  inline void set_has_manorid();
  inline void clear_has_manorid();
  inline void set_has_regionid();
  inline void clear_has_regionid();
  inline void set_has_defenderreport();
  inline void clear_has_defenderreport();
  inline void set_has_challengerreport();
  inline void clear_has_challengerreport();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manorid_;
  ::google::protobuf::uint32 regionid_;
  ::PBManorBattleFieldReport* defenderreport_;
  ::PBManorBattleFieldReport* challengerreport_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WManorBattleFieldFighterCountAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WManorBattleFieldEnterAsk : public ::google::protobuf::Message {
 public:
  PBG2WManorBattleFieldEnterAsk();
  virtual ~PBG2WManorBattleFieldEnterAsk();
  
  PBG2WManorBattleFieldEnterAsk(const PBG2WManorBattleFieldEnterAsk& from);
  
  inline PBG2WManorBattleFieldEnterAsk& operator=(const PBG2WManorBattleFieldEnterAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WManorBattleFieldEnterAsk& default_instance();
  
  void Swap(PBG2WManorBattleFieldEnterAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WManorBattleFieldEnterAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WManorBattleFieldEnterAsk& from);
  void MergeFrom(const PBG2WManorBattleFieldEnterAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 manorid = 1;
  inline bool has_manorid() const;
  inline void clear_manorid();
  static const int kManoridFieldNumber = 1;
  inline ::google::protobuf::uint32 manorid() const;
  inline void set_manorid(::google::protobuf::uint32 value);
  
  // optional uint32 regionid = 2;
  inline bool has_regionid() const;
  inline void clear_regionid();
  static const int kRegionidFieldNumber = 2;
  inline ::google::protobuf::uint32 regionid() const;
  inline void set_regionid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2WManorBattleFieldEnterAsk)
 private:
  inline void set_has_manorid();
  inline void clear_has_manorid();
  inline void set_has_regionid();
  inline void clear_has_regionid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manorid_;
  ::google::protobuf::uint32 regionid_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WManorBattleFieldEnterAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GManorBattleFieldFightCountNtf : public ::google::protobuf::Message {
 public:
  PBW2GManorBattleFieldFightCountNtf();
  virtual ~PBW2GManorBattleFieldFightCountNtf();
  
  PBW2GManorBattleFieldFightCountNtf(const PBW2GManorBattleFieldFightCountNtf& from);
  
  inline PBW2GManorBattleFieldFightCountNtf& operator=(const PBW2GManorBattleFieldFightCountNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GManorBattleFieldFightCountNtf& default_instance();
  
  void Swap(PBW2GManorBattleFieldFightCountNtf* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GManorBattleFieldFightCountNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GManorBattleFieldFightCountNtf& from);
  void MergeFrom(const PBW2GManorBattleFieldFightCountNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 manorid = 1;
  inline bool has_manorid() const;
  inline void clear_manorid();
  static const int kManoridFieldNumber = 1;
  inline ::google::protobuf::uint32 manorid() const;
  inline void set_manorid(::google::protobuf::uint32 value);
  
  // optional uint32 regionid = 2;
  inline bool has_regionid() const;
  inline void clear_regionid();
  static const int kRegionidFieldNumber = 2;
  inline ::google::protobuf::uint32 regionid() const;
  inline void set_regionid(::google::protobuf::uint32 value);
  
  // optional uint32 defendercount = 3;
  inline bool has_defendercount() const;
  inline void clear_defendercount();
  static const int kDefendercountFieldNumber = 3;
  inline ::google::protobuf::uint32 defendercount() const;
  inline void set_defendercount(::google::protobuf::uint32 value);
  
  // optional uint32 challengercount = 4;
  inline bool has_challengercount() const;
  inline void clear_challengercount();
  static const int kChallengercountFieldNumber = 4;
  inline ::google::protobuf::uint32 challengercount() const;
  inline void set_challengercount(::google::protobuf::uint32 value);
  
  // optional uint32 sceneid = 5;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 5;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 6;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 6;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional uint32 defenderscore = 7;
  inline bool has_defenderscore() const;
  inline void clear_defenderscore();
  static const int kDefenderscoreFieldNumber = 7;
  inline ::google::protobuf::uint32 defenderscore() const;
  inline void set_defenderscore(::google::protobuf::uint32 value);
  
  // optional uint32 challengerscore = 8;
  inline bool has_challengerscore() const;
  inline void clear_challengerscore();
  static const int kChallengerscoreFieldNumber = 8;
  inline ::google::protobuf::uint32 challengerscore() const;
  inline void set_challengerscore(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GManorBattleFieldFightCountNtf)
 private:
  inline void set_has_manorid();
  inline void clear_has_manorid();
  inline void set_has_regionid();
  inline void clear_has_regionid();
  inline void set_has_defendercount();
  inline void clear_has_defendercount();
  inline void set_has_challengercount();
  inline void clear_has_challengercount();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_defenderscore();
  inline void clear_has_defenderscore();
  inline void set_has_challengerscore();
  inline void clear_has_challengerscore();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manorid_;
  ::google::protobuf::uint32 regionid_;
  ::google::protobuf::uint32 defendercount_;
  ::google::protobuf::uint32 challengercount_;
  ::google::protobuf::uint64 dynid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 defenderscore_;
  ::google::protobuf::uint32 challengerscore_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GManorBattleFieldFightCountNtf* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GManorBattleFieldEnterAck : public ::google::protobuf::Message {
 public:
  PBW2GManorBattleFieldEnterAck();
  virtual ~PBW2GManorBattleFieldEnterAck();
  
  PBW2GManorBattleFieldEnterAck(const PBW2GManorBattleFieldEnterAck& from);
  
  inline PBW2GManorBattleFieldEnterAck& operator=(const PBW2GManorBattleFieldEnterAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GManorBattleFieldEnterAck& default_instance();
  
  void Swap(PBW2GManorBattleFieldEnterAck* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GManorBattleFieldEnterAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GManorBattleFieldEnterAck& from);
  void MergeFrom(const PBW2GManorBattleFieldEnterAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:PBW2GManorBattleFieldEnterAck)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GManorBattleFieldEnterAck* default_instance_;
};
// -------------------------------------------------------------------

class PBG2WManorSetActivityAsk : public ::google::protobuf::Message {
 public:
  PBG2WManorSetActivityAsk();
  virtual ~PBG2WManorSetActivityAsk();
  
  PBG2WManorSetActivityAsk(const PBG2WManorSetActivityAsk& from);
  
  inline PBG2WManorSetActivityAsk& operator=(const PBG2WManorSetActivityAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2WManorSetActivityAsk& default_instance();
  
  void Swap(PBG2WManorSetActivityAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBG2WManorSetActivityAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2WManorSetActivityAsk& from);
  void MergeFrom(const PBG2WManorSetActivityAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool setapply = 1;
  inline bool has_setapply() const;
  inline void clear_setapply();
  static const int kSetapplyFieldNumber = 1;
  inline bool setapply() const;
  inline void set_setapply(bool value);
  
  // optional bool setfight = 2;
  inline bool has_setfight() const;
  inline void clear_setfight();
  static const int kSetfightFieldNumber = 2;
  inline bool setfight() const;
  inline void set_setfight(bool value);
  
  // @@protoc_insertion_point(class_scope:PBG2WManorSetActivityAsk)
 private:
  inline void set_has_setapply();
  inline void clear_has_setapply();
  inline void set_has_setfight();
  inline void clear_has_setfight();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool setapply_;
  bool setfight_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2WManorSetActivityAsk* default_instance_;
};
// -------------------------------------------------------------------

class ManorCopymapNtfElites : public ::google::protobuf::Message {
 public:
  ManorCopymapNtfElites();
  virtual ~ManorCopymapNtfElites();
  
  ManorCopymapNtfElites(const ManorCopymapNtfElites& from);
  
  inline ManorCopymapNtfElites& operator=(const ManorCopymapNtfElites& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorCopymapNtfElites& default_instance();
  
  void Swap(ManorCopymapNtfElites* other);
  
  // implements Message ----------------------------------------------
  
  ManorCopymapNtfElites* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorCopymapNtfElites& from);
  void MergeFrom(const ManorCopymapNtfElites& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 elite = 1;
  inline int elite_size() const;
  inline void clear_elite();
  static const int kEliteFieldNumber = 1;
  inline ::google::protobuf::uint32 elite(int index) const;
  inline void set_elite(int index, ::google::protobuf::uint32 value);
  inline void add_elite(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      elite() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_elite();
  
  // @@protoc_insertion_point(class_scope:ManorCopymapNtfElites)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > elite_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static ManorCopymapNtfElites* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GManorCopymapNtf : public ::google::protobuf::Message {
 public:
  PBW2GManorCopymapNtf();
  virtual ~PBW2GManorCopymapNtf();
  
  PBW2GManorCopymapNtf(const PBW2GManorCopymapNtf& from);
  
  inline PBW2GManorCopymapNtf& operator=(const PBW2GManorCopymapNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GManorCopymapNtf& default_instance();
  
  void Swap(PBW2GManorCopymapNtf* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GManorCopymapNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GManorCopymapNtf& from);
  void MergeFrom(const PBW2GManorCopymapNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 manorid = 1;
  inline bool has_manorid() const;
  inline void clear_manorid();
  static const int kManoridFieldNumber = 1;
  inline ::google::protobuf::uint32 manorid() const;
  inline void set_manorid(::google::protobuf::uint32 value);
  
  // optional uint32 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 3;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 3;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional uint32 cellid = 4;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 4;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);
  
  // optional .ManorCopymapNtfElites elites = 5;
  inline bool has_elites() const;
  inline void clear_elites();
  static const int kElitesFieldNumber = 5;
  inline const ::ManorCopymapNtfElites& elites() const;
  inline ::ManorCopymapNtfElites* mutable_elites();
  inline ::ManorCopymapNtfElites* release_elites();
  
  // optional .PBManorInfo manorInfo = 6;
  inline bool has_manorinfo() const;
  inline void clear_manorinfo();
  static const int kManorInfoFieldNumber = 6;
  inline const ::PBManorInfo& manorinfo() const;
  inline ::PBManorInfo* mutable_manorinfo();
  inline ::PBManorInfo* release_manorinfo();
  
  // optional bool closeactivity = 7;
  inline bool has_closeactivity() const;
  inline void clear_closeactivity();
  static const int kCloseactivityFieldNumber = 7;
  inline bool closeactivity() const;
  inline void set_closeactivity(bool value);
  
  // optional bool stopfight = 8;
  inline bool has_stopfight() const;
  inline void clear_stopfight();
  static const int kStopfightFieldNumber = 8;
  inline bool stopfight() const;
  inline void set_stopfight(bool value);
  
  // @@protoc_insertion_point(class_scope:PBW2GManorCopymapNtf)
 private:
  inline void set_has_manorid();
  inline void clear_has_manorid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_elites();
  inline void clear_has_elites();
  inline void set_has_manorinfo();
  inline void clear_has_manorinfo();
  inline void set_has_closeactivity();
  inline void clear_has_closeactivity();
  inline void set_has_stopfight();
  inline void clear_has_stopfight();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manorid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 dynid_;
  ::ManorCopymapNtfElites* elites_;
  ::PBManorInfo* manorinfo_;
  ::google::protobuf::uint32 cellid_;
  bool closeactivity_;
  bool stopfight_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_WAGMsg_2eproto();
  friend void protobuf_AssignDesc_WAGMsg_2eproto();
  friend void protobuf_ShutdownFile_WAGMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GManorCopymapNtf* default_instance_;
};
// ===================================================================


// ===================================================================

// PBCreateCellParam

// optional .PBPlayerDisplay display = 1;
inline bool PBCreateCellParam::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCreateCellParam::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCreateCellParam::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCreateCellParam::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBCreateCellParam::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBCreateCellParam::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBCreateCellParam::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 npcid = 2;
inline bool PBCreateCellParam::has_npcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCreateCellParam::set_has_npcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCreateCellParam::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCreateCellParam::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 PBCreateCellParam::npcid() const {
  return npcid_;
}
inline void PBCreateCellParam::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
}

// optional .PBDartCarInfoRT dartInfo = 3;
inline bool PBCreateCellParam::has_dartinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBCreateCellParam::set_has_dartinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBCreateCellParam::clear_has_dartinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBCreateCellParam::clear_dartinfo() {
  if (dartinfo_ != NULL) dartinfo_->::PBDartCarInfoRT::Clear();
  clear_has_dartinfo();
}
inline const ::PBDartCarInfoRT& PBCreateCellParam::dartinfo() const {
  return dartinfo_ != NULL ? *dartinfo_ : *default_instance_->dartinfo_;
}
inline ::PBDartCarInfoRT* PBCreateCellParam::mutable_dartinfo() {
  set_has_dartinfo();
  if (dartinfo_ == NULL) dartinfo_ = new ::PBDartCarInfoRT;
  return dartinfo_;
}
inline ::PBDartCarInfoRT* PBCreateCellParam::release_dartinfo() {
  clear_has_dartinfo();
  ::PBDartCarInfoRT* temp = dartinfo_;
  dartinfo_ = NULL;
  return temp;
}

// optional uint32 level = 4;
inline bool PBCreateCellParam::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBCreateCellParam::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBCreateCellParam::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBCreateCellParam::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBCreateCellParam::level() const {
  return level_;
}
inline void PBCreateCellParam::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional bool isteamfore = 5;
inline bool PBCreateCellParam::has_isteamfore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBCreateCellParam::set_has_isteamfore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBCreateCellParam::clear_has_isteamfore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBCreateCellParam::clear_isteamfore() {
  isteamfore_ = false;
  clear_has_isteamfore();
}
inline bool PBCreateCellParam::isteamfore() const {
  return isteamfore_;
}
inline void PBCreateCellParam::set_isteamfore(bool value) {
  set_has_isteamfore();
  isteamfore_ = value;
}

// repeated .PBPlayerDisplay friend = 6;
inline int PBCreateCellParam::friend__size() const {
  return friend__.size();
}
inline void PBCreateCellParam::clear_friend_() {
  friend__.Clear();
}
inline const ::PBPlayerDisplay& PBCreateCellParam::friend_(int index) const {
  return friend__.Get(index);
}
inline ::PBPlayerDisplay* PBCreateCellParam::mutable_friend_(int index) {
  return friend__.Mutable(index);
}
inline ::PBPlayerDisplay* PBCreateCellParam::add_friend_() {
  return friend__.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >&
PBCreateCellParam::friend_() const {
  return friend__;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >*
PBCreateCellParam::mutable_friend_() {
  return &friend__;
}

// repeated .PBPlayerDisplay enermy = 7;
inline int PBCreateCellParam::enermy_size() const {
  return enermy_.size();
}
inline void PBCreateCellParam::clear_enermy() {
  enermy_.Clear();
}
inline const ::PBPlayerDisplay& PBCreateCellParam::enermy(int index) const {
  return enermy_.Get(index);
}
inline ::PBPlayerDisplay* PBCreateCellParam::mutable_enermy(int index) {
  return enermy_.Mutable(index);
}
inline ::PBPlayerDisplay* PBCreateCellParam::add_enermy() {
  return enermy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >&
PBCreateCellParam::enermy() const {
  return enermy_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerDisplay >*
PBCreateCellParam::mutable_enermy() {
  return &enermy_;
}

// optional uint32 pvpwarid = 8;
inline bool PBCreateCellParam::has_pvpwarid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBCreateCellParam::set_has_pvpwarid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBCreateCellParam::clear_has_pvpwarid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBCreateCellParam::clear_pvpwarid() {
  pvpwarid_ = 0u;
  clear_has_pvpwarid();
}
inline ::google::protobuf::uint32 PBCreateCellParam::pvpwarid() const {
  return pvpwarid_;
}
inline void PBCreateCellParam::set_pvpwarid(::google::protobuf::uint32 value) {
  set_has_pvpwarid();
  pvpwarid_ = value;
}

// optional uint32 cash = 9;
inline bool PBCreateCellParam::has_cash() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBCreateCellParam::set_has_cash() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBCreateCellParam::clear_has_cash() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBCreateCellParam::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 PBCreateCellParam::cash() const {
  return cash_;
}
inline void PBCreateCellParam::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// optional .PBManorInfo manor = 10;
inline bool PBCreateCellParam::has_manor() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBCreateCellParam::set_has_manor() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBCreateCellParam::clear_has_manor() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBCreateCellParam::clear_manor() {
  if (manor_ != NULL) manor_->::PBManorInfo::Clear();
  clear_has_manor();
}
inline const ::PBManorInfo& PBCreateCellParam::manor() const {
  return manor_ != NULL ? *manor_ : *default_instance_->manor_;
}
inline ::PBManorInfo* PBCreateCellParam::mutable_manor() {
  set_has_manor();
  if (manor_ == NULL) manor_ = new ::PBManorInfo;
  return manor_;
}
inline ::PBManorInfo* PBCreateCellParam::release_manor() {
  clear_has_manor();
  ::PBManorInfo* temp = manor_;
  manor_ = NULL;
  return temp;
}

// optional bool ismanordefender = 11;
inline bool PBCreateCellParam::has_ismanordefender() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBCreateCellParam::set_has_ismanordefender() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBCreateCellParam::clear_has_ismanordefender() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBCreateCellParam::clear_ismanordefender() {
  ismanordefender_ = false;
  clear_has_ismanordefender();
}
inline bool PBCreateCellParam::ismanordefender() const {
  return ismanordefender_;
}
inline void PBCreateCellParam::set_ismanordefender(bool value) {
  set_has_ismanordefender();
  ismanordefender_ = value;
}

// optional uint32 manorregionid = 12;
inline bool PBCreateCellParam::has_manorregionid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBCreateCellParam::set_has_manorregionid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBCreateCellParam::clear_has_manorregionid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBCreateCellParam::clear_manorregionid() {
  manorregionid_ = 0u;
  clear_has_manorregionid();
}
inline ::google::protobuf::uint32 PBCreateCellParam::manorregionid() const {
  return manorregionid_;
}
inline void PBCreateCellParam::set_manorregionid(::google::protobuf::uint32 value) {
  set_has_manorregionid();
  manorregionid_ = value;
}

// -------------------------------------------------------------------

// PBW2GSceneCreateCell

// optional uint32 sceneID = 1;
inline bool PBW2GSceneCreateCell::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GSceneCreateCell::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GSceneCreateCell::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GSceneCreateCell::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GSceneCreateCell::sceneid() const {
  return sceneid_;
}
inline void PBW2GSceneCreateCell::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 sceneCellID = 2;
inline bool PBW2GSceneCreateCell::has_scenecellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GSceneCreateCell::set_has_scenecellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GSceneCreateCell::clear_has_scenecellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GSceneCreateCell::clear_scenecellid() {
  scenecellid_ = 0u;
  clear_has_scenecellid();
}
inline ::google::protobuf::uint32 PBW2GSceneCreateCell::scenecellid() const {
  return scenecellid_;
}
inline void PBW2GSceneCreateCell::set_scenecellid(::google::protobuf::uint32 value) {
  set_has_scenecellid();
  scenecellid_ = value;
}

// optional uint64 sceneDynID = 3;
inline bool PBW2GSceneCreateCell::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GSceneCreateCell::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GSceneCreateCell::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GSceneCreateCell::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBW2GSceneCreateCell::scenedynid() const {
  return scenedynid_;
}
inline void PBW2GSceneCreateCell::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional .PBCreateCellParam param = 4;
inline bool PBW2GSceneCreateCell::has_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GSceneCreateCell::set_has_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GSceneCreateCell::clear_has_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GSceneCreateCell::clear_param() {
  if (param_ != NULL) param_->::PBCreateCellParam::Clear();
  clear_has_param();
}
inline const ::PBCreateCellParam& PBW2GSceneCreateCell::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::PBCreateCellParam* PBW2GSceneCreateCell::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::PBCreateCellParam;
  return param_;
}
inline ::PBCreateCellParam* PBW2GSceneCreateCell::release_param() {
  clear_has_param();
  ::PBCreateCellParam* temp = param_;
  param_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2WSceneRegisterCell

// optional uint32 sceneID = 1;
inline bool PBG2WSceneRegisterCell::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WSceneRegisterCell::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WSceneRegisterCell::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WSceneRegisterCell::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBG2WSceneRegisterCell::sceneid() const {
  return sceneid_;
}
inline void PBG2WSceneRegisterCell::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 3;
inline bool PBG2WSceneRegisterCell::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WSceneRegisterCell::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WSceneRegisterCell::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WSceneRegisterCell::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBG2WSceneRegisterCell::scenedynid() const {
  return scenedynid_;
}
inline void PBG2WSceneRegisterCell::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional uint32 sceneCellID = 2;
inline bool PBG2WSceneRegisterCell::has_scenecellid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WSceneRegisterCell::set_has_scenecellid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WSceneRegisterCell::clear_has_scenecellid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WSceneRegisterCell::clear_scenecellid() {
  scenecellid_ = 0u;
  clear_has_scenecellid();
}
inline ::google::protobuf::uint32 PBG2WSceneRegisterCell::scenecellid() const {
  return scenecellid_;
}
inline void PBG2WSceneRegisterCell::set_scenecellid(::google::protobuf::uint32 value) {
  set_has_scenecellid();
  scenecellid_ = value;
}

// -------------------------------------------------------------------

// PBG2WSceneCloseCell

// optional uint32 sceneID = 1;
inline bool PBG2WSceneCloseCell::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WSceneCloseCell::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WSceneCloseCell::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WSceneCloseCell::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBG2WSceneCloseCell::sceneid() const {
  return sceneid_;
}
inline void PBG2WSceneCloseCell::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 2;
inline bool PBG2WSceneCloseCell::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WSceneCloseCell::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WSceneCloseCell::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WSceneCloseCell::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBG2WSceneCloseCell::scenedynid() const {
  return scenedynid_;
}
inline void PBG2WSceneCloseCell::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// -------------------------------------------------------------------

// PBG2WScenePlayerCount

// optional uint32 sceneID = 1;
inline bool PBG2WScenePlayerCount::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WScenePlayerCount::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WScenePlayerCount::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WScenePlayerCount::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBG2WScenePlayerCount::sceneid() const {
  return sceneid_;
}
inline void PBG2WScenePlayerCount::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 2;
inline bool PBG2WScenePlayerCount::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WScenePlayerCount::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WScenePlayerCount::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WScenePlayerCount::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBG2WScenePlayerCount::scenedynid() const {
  return scenedynid_;
}
inline void PBG2WScenePlayerCount::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional uint32 playerCount = 3;
inline bool PBG2WScenePlayerCount::has_playercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WScenePlayerCount::set_has_playercount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WScenePlayerCount::clear_has_playercount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WScenePlayerCount::clear_playercount() {
  playercount_ = 0u;
  clear_has_playercount();
}
inline ::google::protobuf::uint32 PBG2WScenePlayerCount::playercount() const {
  return playercount_;
}
inline void PBG2WScenePlayerCount::set_playercount(::google::protobuf::uint32 value) {
  set_has_playercount();
  playercount_ = value;
}

// -------------------------------------------------------------------

// PBG2WPlayerFlyMapAsk

// optional uint32 playerID = 1;
inline bool PBG2WPlayerFlyMapAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WPlayerFlyMapAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WPlayerFlyMapAsk::playerid() const {
  return playerid_;
}
inline void PBG2WPlayerFlyMapAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 sceneID = 2;
inline bool PBG2WPlayerFlyMapAsk::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WPlayerFlyMapAsk::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBG2WPlayerFlyMapAsk::sceneid() const {
  return sceneid_;
}
inline void PBG2WPlayerFlyMapAsk::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 3;
inline bool PBG2WPlayerFlyMapAsk::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WPlayerFlyMapAsk::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBG2WPlayerFlyMapAsk::scenedynid() const {
  return scenedynid_;
}
inline void PBG2WPlayerFlyMapAsk::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional uint32 sceneCellID = 4;
inline bool PBG2WPlayerFlyMapAsk::has_scenecellid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_scenecellid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_scenecellid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2WPlayerFlyMapAsk::clear_scenecellid() {
  scenecellid_ = 0u;
  clear_has_scenecellid();
}
inline ::google::protobuf::uint32 PBG2WPlayerFlyMapAsk::scenecellid() const {
  return scenecellid_;
}
inline void PBG2WPlayerFlyMapAsk::set_scenecellid(::google::protobuf::uint32 value) {
  set_has_scenecellid();
  scenecellid_ = value;
}

// optional uint32 sceneRegionID = 5;
inline bool PBG2WPlayerFlyMapAsk::has_sceneregionid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_sceneregionid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_sceneregionid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBG2WPlayerFlyMapAsk::clear_sceneregionid() {
  sceneregionid_ = 0u;
  clear_has_sceneregionid();
}
inline ::google::protobuf::uint32 PBG2WPlayerFlyMapAsk::sceneregionid() const {
  return sceneregionid_;
}
inline void PBG2WPlayerFlyMapAsk::set_sceneregionid(::google::protobuf::uint32 value) {
  set_has_sceneregionid();
  sceneregionid_ = value;
}

// optional bool fixpos = 6;
inline bool PBG2WPlayerFlyMapAsk::has_fixpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_fixpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_fixpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBG2WPlayerFlyMapAsk::clear_fixpos() {
  fixpos_ = false;
  clear_has_fixpos();
}
inline bool PBG2WPlayerFlyMapAsk::fixpos() const {
  return fixpos_;
}
inline void PBG2WPlayerFlyMapAsk::set_fixpos(bool value) {
  set_has_fixpos();
  fixpos_ = value;
}

// optional float posx = 7;
inline bool PBG2WPlayerFlyMapAsk::has_posx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_posx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_posx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBG2WPlayerFlyMapAsk::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float PBG2WPlayerFlyMapAsk::posx() const {
  return posx_;
}
inline void PBG2WPlayerFlyMapAsk::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// optional float posy = 8;
inline bool PBG2WPlayerFlyMapAsk::has_posy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBG2WPlayerFlyMapAsk::set_has_posy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBG2WPlayerFlyMapAsk::clear_has_posy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBG2WPlayerFlyMapAsk::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float PBG2WPlayerFlyMapAsk::posy() const {
  return posy_;
}
inline void PBG2WPlayerFlyMapAsk::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// -------------------------------------------------------------------

// PBW2GPlayerFlyMapAck

// optional uint32 playerID = 1;
inline bool PBW2GPlayerFlyMapAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GPlayerFlyMapAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GPlayerFlyMapAck::playerid() const {
  return playerid_;
}
inline void PBW2GPlayerFlyMapAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 sceneID = 2;
inline bool PBW2GPlayerFlyMapAck::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GPlayerFlyMapAck::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GPlayerFlyMapAck::sceneid() const {
  return sceneid_;
}
inline void PBW2GPlayerFlyMapAck::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 3;
inline bool PBW2GPlayerFlyMapAck::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GPlayerFlyMapAck::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBW2GPlayerFlyMapAck::scenedynid() const {
  return scenedynid_;
}
inline void PBW2GPlayerFlyMapAck::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional uint32 sceneCellID = 4;
inline bool PBW2GPlayerFlyMapAck::has_scenecellid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_scenecellid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_scenecellid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GPlayerFlyMapAck::clear_scenecellid() {
  scenecellid_ = 0u;
  clear_has_scenecellid();
}
inline ::google::protobuf::uint32 PBW2GPlayerFlyMapAck::scenecellid() const {
  return scenecellid_;
}
inline void PBW2GPlayerFlyMapAck::set_scenecellid(::google::protobuf::uint32 value) {
  set_has_scenecellid();
  scenecellid_ = value;
}

// optional uint32 sceneRegionID = 5;
inline bool PBW2GPlayerFlyMapAck::has_sceneregionid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_sceneregionid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_sceneregionid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GPlayerFlyMapAck::clear_sceneregionid() {
  sceneregionid_ = 0u;
  clear_has_sceneregionid();
}
inline ::google::protobuf::uint32 PBW2GPlayerFlyMapAck::sceneregionid() const {
  return sceneregionid_;
}
inline void PBW2GPlayerFlyMapAck::set_sceneregionid(::google::protobuf::uint32 value) {
  set_has_sceneregionid();
  sceneregionid_ = value;
}

// optional bool fixpos = 6;
inline bool PBW2GPlayerFlyMapAck::has_fixpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_fixpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_fixpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBW2GPlayerFlyMapAck::clear_fixpos() {
  fixpos_ = false;
  clear_has_fixpos();
}
inline bool PBW2GPlayerFlyMapAck::fixpos() const {
  return fixpos_;
}
inline void PBW2GPlayerFlyMapAck::set_fixpos(bool value) {
  set_has_fixpos();
  fixpos_ = value;
}

// optional float posx = 7;
inline bool PBW2GPlayerFlyMapAck::has_posx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_posx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_posx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBW2GPlayerFlyMapAck::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float PBW2GPlayerFlyMapAck::posx() const {
  return posx_;
}
inline void PBW2GPlayerFlyMapAck::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// optional float posy = 8;
inline bool PBW2GPlayerFlyMapAck::has_posy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_posy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_posy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBW2GPlayerFlyMapAck::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float PBW2GPlayerFlyMapAck::posy() const {
  return posy_;
}
inline void PBW2GPlayerFlyMapAck::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// optional .PBServerInfo pbSvrInfo = 9;
inline bool PBW2GPlayerFlyMapAck::has_pbsvrinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_pbsvrinfo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_pbsvrinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBW2GPlayerFlyMapAck::clear_pbsvrinfo() {
  if (pbsvrinfo_ != NULL) pbsvrinfo_->::PBServerInfo::Clear();
  clear_has_pbsvrinfo();
}
inline const ::PBServerInfo& PBW2GPlayerFlyMapAck::pbsvrinfo() const {
  return pbsvrinfo_ != NULL ? *pbsvrinfo_ : *default_instance_->pbsvrinfo_;
}
inline ::PBServerInfo* PBW2GPlayerFlyMapAck::mutable_pbsvrinfo() {
  set_has_pbsvrinfo();
  if (pbsvrinfo_ == NULL) pbsvrinfo_ = new ::PBServerInfo;
  return pbsvrinfo_;
}
inline ::PBServerInfo* PBW2GPlayerFlyMapAck::release_pbsvrinfo() {
  clear_has_pbsvrinfo();
  ::PBServerInfo* temp = pbsvrinfo_;
  pbsvrinfo_ = NULL;
  return temp;
}

// optional string host = 10;
inline bool PBW2GPlayerFlyMapAck::has_host() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_host() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_host() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBW2GPlayerFlyMapAck::clear_host() {
  if (host_ != &::google::protobuf::internal::kEmptyString) {
    host_->clear();
  }
  clear_has_host();
}
inline const ::std::string& PBW2GPlayerFlyMapAck::host() const {
  return *host_;
}
inline void PBW2GPlayerFlyMapAck::set_host(const ::std::string& value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::kEmptyString) {
    host_ = new ::std::string;
  }
  host_->assign(value);
}
inline void PBW2GPlayerFlyMapAck::set_host(const char* value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::kEmptyString) {
    host_ = new ::std::string;
  }
  host_->assign(value);
}
inline void PBW2GPlayerFlyMapAck::set_host(const char* value, size_t size) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::kEmptyString) {
    host_ = new ::std::string;
  }
  host_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBW2GPlayerFlyMapAck::mutable_host() {
  set_has_host();
  if (host_ == &::google::protobuf::internal::kEmptyString) {
    host_ = new ::std::string;
  }
  return host_;
}
inline ::std::string* PBW2GPlayerFlyMapAck::release_host() {
  clear_has_host();
  if (host_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = host_;
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 port = 11;
inline bool PBW2GPlayerFlyMapAck::has_port() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBW2GPlayerFlyMapAck::set_has_port() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBW2GPlayerFlyMapAck::clear_has_port() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBW2GPlayerFlyMapAck::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 PBW2GPlayerFlyMapAck::port() const {
  return port_;
}
inline void PBW2GPlayerFlyMapAck::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// PBW2GPlayerExitAsk

// optional uint32 accountid = 1;
inline bool PBW2GPlayerExitAsk::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GPlayerExitAsk::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GPlayerExitAsk::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GPlayerExitAsk::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PBW2GPlayerExitAsk::accountid() const {
  return accountid_;
}
inline void PBW2GPlayerExitAsk::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBW2GPlayerExitAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GPlayerExitAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GPlayerExitAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GPlayerExitAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GPlayerExitAsk::playerid() const {
  return playerid_;
}
inline void PBW2GPlayerExitAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 loginsn = 3;
inline bool PBW2GPlayerExitAsk::has_loginsn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GPlayerExitAsk::set_has_loginsn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GPlayerExitAsk::clear_has_loginsn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GPlayerExitAsk::clear_loginsn() {
  loginsn_ = GOOGLE_ULONGLONG(0);
  clear_has_loginsn();
}
inline ::google::protobuf::uint64 PBW2GPlayerExitAsk::loginsn() const {
  return loginsn_;
}
inline void PBW2GPlayerExitAsk::set_loginsn(::google::protobuf::uint64 value) {
  set_has_loginsn();
  loginsn_ = value;
}

// -------------------------------------------------------------------

// PBG2WPlayerExitAck

// optional uint32 accountid = 1;
inline bool PBG2WPlayerExitAck::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WPlayerExitAck::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WPlayerExitAck::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WPlayerExitAck::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PBG2WPlayerExitAck::accountid() const {
  return accountid_;
}
inline void PBG2WPlayerExitAck::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBG2WPlayerExitAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WPlayerExitAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WPlayerExitAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WPlayerExitAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WPlayerExitAck::playerid() const {
  return playerid_;
}
inline void PBG2WPlayerExitAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 loginsn = 3;
inline bool PBG2WPlayerExitAck::has_loginsn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WPlayerExitAck::set_has_loginsn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WPlayerExitAck::clear_has_loginsn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WPlayerExitAck::clear_loginsn() {
  loginsn_ = GOOGLE_ULONGLONG(0);
  clear_has_loginsn();
}
inline ::google::protobuf::uint64 PBG2WPlayerExitAck::loginsn() const {
  return loginsn_;
}
inline void PBG2WPlayerExitAck::set_loginsn(::google::protobuf::uint64 value) {
  set_has_loginsn();
  loginsn_ = value;
}

// -------------------------------------------------------------------

// PBG2WPlayerLogout

// optional uint32 playerid = 1;
inline bool PBG2WPlayerLogout::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WPlayerLogout::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WPlayerLogout::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WPlayerLogout::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WPlayerLogout::playerid() const {
  return playerid_;
}
inline void PBG2WPlayerLogout::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 loginsn = 2;
inline bool PBG2WPlayerLogout::has_loginsn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WPlayerLogout::set_has_loginsn() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WPlayerLogout::clear_has_loginsn() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WPlayerLogout::clear_loginsn() {
  loginsn_ = GOOGLE_ULONGLONG(0);
  clear_has_loginsn();
}
inline ::google::protobuf::uint64 PBG2WPlayerLogout::loginsn() const {
  return loginsn_;
}
inline void PBG2WPlayerLogout::set_loginsn(::google::protobuf::uint64 value) {
  set_has_loginsn();
  loginsn_ = value;
}

// -------------------------------------------------------------------

// PBW2GPlayerSaveDone

// optional uint32 playerid = 1;
inline bool PBW2GPlayerSaveDone::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GPlayerSaveDone::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GPlayerSaveDone::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GPlayerSaveDone::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GPlayerSaveDone::playerid() const {
  return playerid_;
}
inline void PBW2GPlayerSaveDone::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 type = 2;
inline bool PBW2GPlayerSaveDone::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GPlayerSaveDone::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GPlayerSaveDone::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GPlayerSaveDone::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBW2GPlayerSaveDone::type() const {
  return type_;
}
inline void PBW2GPlayerSaveDone::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 saveorder = 3;
inline bool PBW2GPlayerSaveDone::has_saveorder() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GPlayerSaveDone::set_has_saveorder() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GPlayerSaveDone::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GPlayerSaveDone::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBW2GPlayerSaveDone::saveorder() const {
  return saveorder_;
}
inline void PBW2GPlayerSaveDone::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// -------------------------------------------------------------------

// PBG2WCopymapCreate

// optional uint32 copymapid = 1;
inline bool PBG2WCopymapCreate::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCopymapCreate::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCopymapCreate::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCopymapCreate::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBG2WCopymapCreate::copymapid() const {
  return copymapid_;
}
inline void PBG2WCopymapCreate::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional .PBCreateCellParam param = 2;
inline bool PBG2WCopymapCreate::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCopymapCreate::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCopymapCreate::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCopymapCreate::clear_param() {
  if (param_ != NULL) param_->::PBCreateCellParam::Clear();
  clear_has_param();
}
inline const ::PBCreateCellParam& PBG2WCopymapCreate::param() const {
  return param_ != NULL ? *param_ : *default_instance_->param_;
}
inline ::PBCreateCellParam* PBG2WCopymapCreate::mutable_param() {
  set_has_param();
  if (param_ == NULL) param_ = new ::PBCreateCellParam;
  return param_;
}
inline ::PBCreateCellParam* PBG2WCopymapCreate::release_param() {
  clear_has_param();
  ::PBCreateCellParam* temp = param_;
  param_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2WCopymapUpdateState

// optional uint32 sceneid = 1;
inline bool PBG2WCopymapUpdateState::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCopymapUpdateState::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCopymapUpdateState::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCopymapUpdateState::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBG2WCopymapUpdateState::sceneid() const {
  return sceneid_;
}
inline void PBG2WCopymapUpdateState::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dynid = 2;
inline bool PBG2WCopymapUpdateState::has_dynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCopymapUpdateState::set_has_dynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCopymapUpdateState::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCopymapUpdateState::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBG2WCopymapUpdateState::dynid() const {
  return dynid_;
}
inline void PBG2WCopymapUpdateState::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional uint32 state = 3;
inline bool PBG2WCopymapUpdateState::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WCopymapUpdateState::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WCopymapUpdateState::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WCopymapUpdateState::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 PBG2WCopymapUpdateState::state() const {
  return state_;
}
inline void PBG2WCopymapUpdateState::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// PBW2GCopymapEnter

// optional uint32 sceneid = 1;
inline bool PBW2GCopymapEnter::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GCopymapEnter::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GCopymapEnter::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GCopymapEnter::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GCopymapEnter::sceneid() const {
  return sceneid_;
}
inline void PBW2GCopymapEnter::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 cellid = 2;
inline bool PBW2GCopymapEnter::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GCopymapEnter::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GCopymapEnter::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GCopymapEnter::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 PBW2GCopymapEnter::cellid() const {
  return cellid_;
}
inline void PBW2GCopymapEnter::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional uint64 dynid = 3;
inline bool PBW2GCopymapEnter::has_dynid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GCopymapEnter::set_has_dynid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GCopymapEnter::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GCopymapEnter::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBW2GCopymapEnter::dynid() const {
  return dynid_;
}
inline void PBW2GCopymapEnter::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional uint32 playerid = 4;
inline bool PBW2GCopymapEnter::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GCopymapEnter::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GCopymapEnter::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GCopymapEnter::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GCopymapEnter::playerid() const {
  return playerid_;
}
inline void PBW2GCopymapEnter::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 reason = 5;
inline bool PBW2GCopymapEnter::has_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GCopymapEnter::set_has_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GCopymapEnter::clear_has_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GCopymapEnter::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 PBW2GCopymapEnter::reason() const {
  return reason_;
}
inline void PBW2GCopymapEnter::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// PBW2GCopymapExit

// optional uint32 playerid = 1;
inline bool PBW2GCopymapExit::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GCopymapExit::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GCopymapExit::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GCopymapExit::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GCopymapExit::playerid() const {
  return playerid_;
}
inline void PBW2GCopymapExit::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBW2GCopymapPlayerInfo

// optional uint32 sceneid = 1;
inline bool PBW2GCopymapPlayerInfo::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GCopymapPlayerInfo::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GCopymapPlayerInfo::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GCopymapPlayerInfo::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GCopymapPlayerInfo::sceneid() const {
  return sceneid_;
}
inline void PBW2GCopymapPlayerInfo::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dynid = 2;
inline bool PBW2GCopymapPlayerInfo::has_dynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GCopymapPlayerInfo::set_has_dynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GCopymapPlayerInfo::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GCopymapPlayerInfo::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBW2GCopymapPlayerInfo::dynid() const {
  return dynid_;
}
inline void PBW2GCopymapPlayerInfo::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional .PBPlayerDisplay display = 3;
inline bool PBW2GCopymapPlayerInfo::has_display() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GCopymapPlayerInfo::set_has_display() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GCopymapPlayerInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GCopymapPlayerInfo::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBW2GCopymapPlayerInfo::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBW2GCopymapPlayerInfo::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBW2GCopymapPlayerInfo::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 reason = 4;
inline bool PBW2GCopymapPlayerInfo::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GCopymapPlayerInfo::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GCopymapPlayerInfo::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GCopymapPlayerInfo::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 PBW2GCopymapPlayerInfo::reason() const {
  return reason_;
}
inline void PBW2GCopymapPlayerInfo::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// PBW2GCopymapKickPlayer

// optional uint32 sceneid = 1;
inline bool PBW2GCopymapKickPlayer::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GCopymapKickPlayer::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GCopymapKickPlayer::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GCopymapKickPlayer::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GCopymapKickPlayer::sceneid() const {
  return sceneid_;
}
inline void PBW2GCopymapKickPlayer::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dynid = 2;
inline bool PBW2GCopymapKickPlayer::has_dynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GCopymapKickPlayer::set_has_dynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GCopymapKickPlayer::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GCopymapKickPlayer::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBW2GCopymapKickPlayer::dynid() const {
  return dynid_;
}
inline void PBW2GCopymapKickPlayer::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional uint32 playerid = 3;
inline bool PBW2GCopymapKickPlayer::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GCopymapKickPlayer::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GCopymapKickPlayer::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GCopymapKickPlayer::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GCopymapKickPlayer::playerid() const {
  return playerid_;
}
inline void PBW2GCopymapKickPlayer::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBG2WCopymapInvite

// optional uint32 copymapid = 1;
inline bool PBG2WCopymapInvite::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCopymapInvite::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCopymapInvite::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCopymapInvite::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBG2WCopymapInvite::copymapid() const {
  return copymapid_;
}
inline void PBG2WCopymapInvite::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBG2WCopymapInvite::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCopymapInvite::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCopymapInvite::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCopymapInvite::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WCopymapInvite::playerid() const {
  return playerid_;
}
inline void PBG2WCopymapInvite::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 targetid = 3;
inline bool PBG2WCopymapInvite::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WCopymapInvite::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WCopymapInvite::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WCopymapInvite::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 PBG2WCopymapInvite::targetid() const {
  return targetid_;
}
inline void PBG2WCopymapInvite::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
}

// -------------------------------------------------------------------

// PBG2WCopymapAcceptInvite

// optional uint32 copymapid = 1;
inline bool PBG2WCopymapAcceptInvite::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCopymapAcceptInvite::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCopymapAcceptInvite::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCopymapAcceptInvite::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBG2WCopymapAcceptInvite::copymapid() const {
  return copymapid_;
}
inline void PBG2WCopymapAcceptInvite::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBG2WCopymapAcceptInvite::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCopymapAcceptInvite::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCopymapAcceptInvite::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCopymapAcceptInvite::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WCopymapAcceptInvite::playerid() const {
  return playerid_;
}
inline void PBG2WCopymapAcceptInvite::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 targetid = 3;
inline bool PBG2WCopymapAcceptInvite::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WCopymapAcceptInvite::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WCopymapAcceptInvite::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WCopymapAcceptInvite::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 PBG2WCopymapAcceptInvite::targetid() const {
  return targetid_;
}
inline void PBG2WCopymapAcceptInvite::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional bool accept = 4;
inline bool PBG2WCopymapAcceptInvite::has_accept() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2WCopymapAcceptInvite::set_has_accept() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2WCopymapAcceptInvite::clear_has_accept() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2WCopymapAcceptInvite::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool PBG2WCopymapAcceptInvite::accept() const {
  return accept_;
}
inline void PBG2WCopymapAcceptInvite::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// PBG2WCopymapTeamMemberInfo

// optional uint32 copymapid = 1;
inline bool PBG2WCopymapTeamMemberInfo::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCopymapTeamMemberInfo::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCopymapTeamMemberInfo::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCopymapTeamMemberInfo::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBG2WCopymapTeamMemberInfo::copymapid() const {
  return copymapid_;
}
inline void PBG2WCopymapTeamMemberInfo::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBG2WCopymapTeamMemberInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCopymapTeamMemberInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCopymapTeamMemberInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCopymapTeamMemberInfo::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WCopymapTeamMemberInfo::playerid() const {
  return playerid_;
}
inline void PBG2WCopymapTeamMemberInfo::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBG2WCopymapAllCopymapCount

// optional uint32 playerid = 1;
inline bool PBG2WCopymapAllCopymapCount::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCopymapAllCopymapCount::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCopymapAllCopymapCount::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCopymapAllCopymapCount::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WCopymapAllCopymapCount::playerid() const {
  return playerid_;
}
inline void PBG2WCopymapAllCopymapCount::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional .PBPlayerCopymap info = 2;
inline bool PBG2WCopymapAllCopymapCount::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCopymapAllCopymapCount::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCopymapAllCopymapCount::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCopymapAllCopymapCount::clear_info() {
  if (info_ != NULL) info_->::PBPlayerCopymap::Clear();
  clear_has_info();
}
inline const ::PBPlayerCopymap& PBG2WCopymapAllCopymapCount::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::PBPlayerCopymap* PBG2WCopymapAllCopymapCount::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::PBPlayerCopymap;
  return info_;
}
inline ::PBPlayerCopymap* PBG2WCopymapAllCopymapCount::release_info() {
  clear_has_info();
  ::PBPlayerCopymap* temp = info_;
  info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2WCopymapOneCopymapCount

// optional uint32 playerid = 1;
inline bool PBG2WCopymapOneCopymapCount::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCopymapOneCopymapCount::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCopymapOneCopymapCount::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCopymapOneCopymapCount::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WCopymapOneCopymapCount::playerid() const {
  return playerid_;
}
inline void PBG2WCopymapOneCopymapCount::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional .PBCopymapInfo info = 2;
inline bool PBG2WCopymapOneCopymapCount::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCopymapOneCopymapCount::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCopymapOneCopymapCount::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCopymapOneCopymapCount::clear_info() {
  if (info_ != NULL) info_->::PBCopymapInfo::Clear();
  clear_has_info();
}
inline const ::PBCopymapInfo& PBG2WCopymapOneCopymapCount::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::PBCopymapInfo* PBG2WCopymapOneCopymapCount::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::PBCopymapInfo;
  return info_;
}
inline ::PBCopymapInfo* PBG2WCopymapOneCopymapCount::release_info() {
  clear_has_info();
  ::PBCopymapInfo* temp = info_;
  info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2WGMWorldStartTime

// optional uint64 stamp = 1;
inline bool PBG2WGMWorldStartTime::has_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WGMWorldStartTime::set_has_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WGMWorldStartTime::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WGMWorldStartTime::clear_stamp() {
  stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_stamp();
}
inline ::google::protobuf::uint64 PBG2WGMWorldStartTime::stamp() const {
  return stamp_;
}
inline void PBG2WGMWorldStartTime::set_stamp(::google::protobuf::uint64 value) {
  set_has_stamp();
  stamp_ = value;
}

// optional uint32 logicworldid = 2;
inline bool PBG2WGMWorldStartTime::has_logicworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WGMWorldStartTime::set_has_logicworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WGMWorldStartTime::clear_has_logicworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WGMWorldStartTime::clear_logicworldid() {
  logicworldid_ = 0u;
  clear_has_logicworldid();
}
inline ::google::protobuf::uint32 PBG2WGMWorldStartTime::logicworldid() const {
  return logicworldid_;
}
inline void PBG2WGMWorldStartTime::set_logicworldid(::google::protobuf::uint32 value) {
  set_has_logicworldid();
  logicworldid_ = value;
}

// -------------------------------------------------------------------

// PBG2WPlayerData

// optional .PBPlayerDisplay playerdisplay = 1;
inline bool PBG2WPlayerData::has_playerdisplay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WPlayerData::set_has_playerdisplay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WPlayerData::clear_has_playerdisplay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WPlayerData::clear_playerdisplay() {
  if (playerdisplay_ != NULL) playerdisplay_->::PBPlayerDisplay::Clear();
  clear_has_playerdisplay();
}
inline const ::PBPlayerDisplay& PBG2WPlayerData::playerdisplay() const {
  return playerdisplay_ != NULL ? *playerdisplay_ : *default_instance_->playerdisplay_;
}
inline ::PBPlayerDisplay* PBG2WPlayerData::mutable_playerdisplay() {
  set_has_playerdisplay();
  if (playerdisplay_ == NULL) playerdisplay_ = new ::PBPlayerDisplay;
  return playerdisplay_;
}
inline ::PBPlayerDisplay* PBG2WPlayerData::release_playerdisplay() {
  clear_has_playerdisplay();
  ::PBPlayerDisplay* temp = playerdisplay_;
  playerdisplay_ = NULL;
  return temp;
}

// optional uint32 fightpowr = 2;
inline bool PBG2WPlayerData::has_fightpowr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WPlayerData::set_has_fightpowr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WPlayerData::clear_has_fightpowr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WPlayerData::clear_fightpowr() {
  fightpowr_ = 0u;
  clear_has_fightpowr();
}
inline ::google::protobuf::uint32 PBG2WPlayerData::fightpowr() const {
  return fightpowr_;
}
inline void PBG2WPlayerData::set_fightpowr(::google::protobuf::uint32 value) {
  set_has_fightpowr();
  fightpowr_ = value;
}

// -------------------------------------------------------------------

// PBDartBuffInfo

// optional uint32 DartBuffId = 1;
inline bool PBDartBuffInfo::has_dartbuffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDartBuffInfo::set_has_dartbuffid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDartBuffInfo::clear_has_dartbuffid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDartBuffInfo::clear_dartbuffid() {
  dartbuffid_ = 0u;
  clear_has_dartbuffid();
}
inline ::google::protobuf::uint32 PBDartBuffInfo::dartbuffid() const {
  return dartbuffid_;
}
inline void PBDartBuffInfo::set_dartbuffid(::google::protobuf::uint32 value) {
  set_has_dartbuffid();
  dartbuffid_ = value;
}

// optional uint64 RemoveTime = 2;
inline bool PBDartBuffInfo::has_removetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDartBuffInfo::set_has_removetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDartBuffInfo::clear_has_removetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDartBuffInfo::clear_removetime() {
  removetime_ = GOOGLE_ULONGLONG(0);
  clear_has_removetime();
}
inline ::google::protobuf::uint64 PBDartBuffInfo::removetime() const {
  return removetime_;
}
inline void PBDartBuffInfo::set_removetime(::google::protobuf::uint64 value) {
  set_has_removetime();
  removetime_ = value;
}

// -------------------------------------------------------------------

// PBDartMemberInfo

// optional uint32 PlayerId = 1;
inline bool PBDartMemberInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDartMemberInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDartMemberInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDartMemberInfo::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBDartMemberInfo::playerid() const {
  return playerid_;
}
inline void PBDartMemberInfo::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 addSupply = 2;
inline bool PBDartMemberInfo::has_addsupply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDartMemberInfo::set_has_addsupply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDartMemberInfo::clear_has_addsupply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDartMemberInfo::clear_addsupply() {
  addsupply_ = 0u;
  clear_has_addsupply();
}
inline ::google::protobuf::uint32 PBDartMemberInfo::addsupply() const {
  return addsupply_;
}
inline void PBDartMemberInfo::set_addsupply(::google::protobuf::uint32 value) {
  set_has_addsupply();
  addsupply_ = value;
}

// optional .PBPlayerAvatar avatar = 3;
inline bool PBDartMemberInfo::has_avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBDartMemberInfo::set_has_avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBDartMemberInfo::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBDartMemberInfo::clear_avatar() {
  if (avatar_ != NULL) avatar_->::PBPlayerAvatar::Clear();
  clear_has_avatar();
}
inline const ::PBPlayerAvatar& PBDartMemberInfo::avatar() const {
  return avatar_ != NULL ? *avatar_ : *default_instance_->avatar_;
}
inline ::PBPlayerAvatar* PBDartMemberInfo::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == NULL) avatar_ = new ::PBPlayerAvatar;
  return avatar_;
}
inline ::PBPlayerAvatar* PBDartMemberInfo::release_avatar() {
  clear_has_avatar();
  ::PBPlayerAvatar* temp = avatar_;
  avatar_ = NULL;
  return temp;
}

// optional uint32 identitypersonalprize = 4;
inline bool PBDartMemberInfo::has_identitypersonalprize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBDartMemberInfo::set_has_identitypersonalprize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBDartMemberInfo::clear_has_identitypersonalprize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBDartMemberInfo::clear_identitypersonalprize() {
  identitypersonalprize_ = 0u;
  clear_has_identitypersonalprize();
}
inline ::google::protobuf::uint32 PBDartMemberInfo::identitypersonalprize() const {
  return identitypersonalprize_;
}
inline void PBDartMemberInfo::set_identitypersonalprize(::google::protobuf::uint32 value) {
  set_has_identitypersonalprize();
  identitypersonalprize_ = value;
}

// -------------------------------------------------------------------

// PBDartCarInfoRT

// optional uint64 globalDartID = 1;
inline bool PBDartCarInfoRT::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDartCarInfoRT::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDartCarInfoRT::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDartCarInfoRT::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBDartCarInfoRT::globaldartid() const {
  return globaldartid_;
}
inline void PBDartCarInfoRT::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// optional uint32 dartID = 2;
inline bool PBDartCarInfoRT::has_dartid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDartCarInfoRT::set_has_dartid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDartCarInfoRT::clear_has_dartid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDartCarInfoRT::clear_dartid() {
  dartid_ = 0u;
  clear_has_dartid();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::dartid() const {
  return dartid_;
}
inline void PBDartCarInfoRT::set_dartid(::google::protobuf::uint32 value) {
  set_has_dartid();
  dartid_ = value;
}

// optional uint32 dartLeaderPlayerID = 3;
inline bool PBDartCarInfoRT::has_dartleaderplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBDartCarInfoRT::set_has_dartleaderplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBDartCarInfoRT::clear_has_dartleaderplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBDartCarInfoRT::clear_dartleaderplayerid() {
  dartleaderplayerid_ = 0u;
  clear_has_dartleaderplayerid();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::dartleaderplayerid() const {
  return dartleaderplayerid_;
}
inline void PBDartCarInfoRT::set_dartleaderplayerid(::google::protobuf::uint32 value) {
  set_has_dartleaderplayerid();
  dartleaderplayerid_ = value;
}

// optional uint64 lastCheckTime = 4;
inline bool PBDartCarInfoRT::has_lastchecktime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBDartCarInfoRT::set_has_lastchecktime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBDartCarInfoRT::clear_has_lastchecktime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBDartCarInfoRT::clear_lastchecktime() {
  lastchecktime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastchecktime();
}
inline ::google::protobuf::uint64 PBDartCarInfoRT::lastchecktime() const {
  return lastchecktime_;
}
inline void PBDartCarInfoRT::set_lastchecktime(::google::protobuf::uint64 value) {
  set_has_lastchecktime();
  lastchecktime_ = value;
}

// optional uint32 leftSecond = 5;
inline bool PBDartCarInfoRT::has_leftsecond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBDartCarInfoRT::set_has_leftsecond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBDartCarInfoRT::clear_has_leftsecond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBDartCarInfoRT::clear_leftsecond() {
  leftsecond_ = 0u;
  clear_has_leftsecond();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::leftsecond() const {
  return leftsecond_;
}
inline void PBDartCarInfoRT::set_leftsecond(::google::protobuf::uint32 value) {
  set_has_leftsecond();
  leftsecond_ = value;
}

// optional uint32 totalSecond = 6;
inline bool PBDartCarInfoRT::has_totalsecond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBDartCarInfoRT::set_has_totalsecond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBDartCarInfoRT::clear_has_totalsecond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBDartCarInfoRT::clear_totalsecond() {
  totalsecond_ = 0u;
  clear_has_totalsecond();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::totalsecond() const {
  return totalsecond_;
}
inline void PBDartCarInfoRT::set_totalsecond(::google::protobuf::uint32 value) {
  set_has_totalsecond();
  totalsecond_ = value;
}

// optional uint32 status = 7;
inline bool PBDartCarInfoRT::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBDartCarInfoRT::set_has_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBDartCarInfoRT::clear_has_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBDartCarInfoRT::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::status() const {
  return status_;
}
inline void PBDartCarInfoRT::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 prizeTimes = 8;
inline bool PBDartCarInfoRT::has_prizetimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBDartCarInfoRT::set_has_prizetimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBDartCarInfoRT::clear_has_prizetimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBDartCarInfoRT::clear_prizetimes() {
  prizetimes_ = 0u;
  clear_has_prizetimes();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::prizetimes() const {
  return prizetimes_;
}
inline void PBDartCarInfoRT::set_prizetimes(::google::protobuf::uint32 value) {
  set_has_prizetimes();
  prizetimes_ = value;
}

// optional uint32 robTriggerTime = 9;
inline bool PBDartCarInfoRT::has_robtriggertime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBDartCarInfoRT::set_has_robtriggertime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBDartCarInfoRT::clear_has_robtriggertime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBDartCarInfoRT::clear_robtriggertime() {
  robtriggertime_ = 0u;
  clear_has_robtriggertime();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::robtriggertime() const {
  return robtriggertime_;
}
inline void PBDartCarInfoRT::set_robtriggertime(::google::protobuf::uint32 value) {
  set_has_robtriggertime();
  robtriggertime_ = value;
}

// repeated .PBDartMemberInfo dartMembersInfo = 10;
inline int PBDartCarInfoRT::dartmembersinfo_size() const {
  return dartmembersinfo_.size();
}
inline void PBDartCarInfoRT::clear_dartmembersinfo() {
  dartmembersinfo_.Clear();
}
inline const ::PBDartMemberInfo& PBDartCarInfoRT::dartmembersinfo(int index) const {
  return dartmembersinfo_.Get(index);
}
inline ::PBDartMemberInfo* PBDartCarInfoRT::mutable_dartmembersinfo(int index) {
  return dartmembersinfo_.Mutable(index);
}
inline ::PBDartMemberInfo* PBDartCarInfoRT::add_dartmembersinfo() {
  return dartmembersinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDartMemberInfo >&
PBDartCarInfoRT::dartmembersinfo() const {
  return dartmembersinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDartMemberInfo >*
PBDartCarInfoRT::mutable_dartmembersinfo() {
  return &dartmembersinfo_;
}

// optional uint32 dartPathIndex = 11;
inline bool PBDartCarInfoRT::has_dartpathindex() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBDartCarInfoRT::set_has_dartpathindex() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBDartCarInfoRT::clear_has_dartpathindex() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBDartCarInfoRT::clear_dartpathindex() {
  dartpathindex_ = 0u;
  clear_has_dartpathindex();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::dartpathindex() const {
  return dartpathindex_;
}
inline void PBDartCarInfoRT::set_dartpathindex(::google::protobuf::uint32 value) {
  set_has_dartpathindex();
  dartpathindex_ = value;
}

// repeated .PBDartBuffInfo gainedDartBuffID = 12;
inline int PBDartCarInfoRT::gaineddartbuffid_size() const {
  return gaineddartbuffid_.size();
}
inline void PBDartCarInfoRT::clear_gaineddartbuffid() {
  gaineddartbuffid_.Clear();
}
inline const ::PBDartBuffInfo& PBDartCarInfoRT::gaineddartbuffid(int index) const {
  return gaineddartbuffid_.Get(index);
}
inline ::PBDartBuffInfo* PBDartCarInfoRT::mutable_gaineddartbuffid(int index) {
  return gaineddartbuffid_.Mutable(index);
}
inline ::PBDartBuffInfo* PBDartCarInfoRT::add_gaineddartbuffid() {
  return gaineddartbuffid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDartBuffInfo >&
PBDartCarInfoRT::gaineddartbuffid() const {
  return gaineddartbuffid_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDartBuffInfo >*
PBDartCarInfoRT::mutable_gaineddartbuffid() {
  return &gaineddartbuffid_;
}

// optional uint32 enterSceneTime = 13;
inline bool PBDartCarInfoRT::has_enterscenetime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBDartCarInfoRT::set_has_enterscenetime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBDartCarInfoRT::clear_has_enterscenetime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBDartCarInfoRT::clear_enterscenetime() {
  enterscenetime_ = 0u;
  clear_has_enterscenetime();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::enterscenetime() const {
  return enterscenetime_;
}
inline void PBDartCarInfoRT::set_enterscenetime(::google::protobuf::uint32 value) {
  set_has_enterscenetime();
  enterscenetime_ = value;
}

// optional uint32 sceneID = 14;
inline bool PBDartCarInfoRT::has_sceneid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PBDartCarInfoRT::set_has_sceneid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PBDartCarInfoRT::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PBDartCarInfoRT::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::sceneid() const {
  return sceneid_;
}
inline void PBDartCarInfoRT::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 sceneCellID = 15;
inline bool PBDartCarInfoRT::has_scenecellid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PBDartCarInfoRT::set_has_scenecellid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PBDartCarInfoRT::clear_has_scenecellid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PBDartCarInfoRT::clear_scenecellid() {
  scenecellid_ = 0u;
  clear_has_scenecellid();
}
inline ::google::protobuf::uint32 PBDartCarInfoRT::scenecellid() const {
  return scenecellid_;
}
inline void PBDartCarInfoRT::set_scenecellid(::google::protobuf::uint32 value) {
  set_has_scenecellid();
  scenecellid_ = value;
}

// optional uint64 sceneDynID = 16;
inline bool PBDartCarInfoRT::has_scenedynid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PBDartCarInfoRT::set_has_scenedynid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PBDartCarInfoRT::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PBDartCarInfoRT::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBDartCarInfoRT::scenedynid() const {
  return scenedynid_;
}
inline void PBDartCarInfoRT::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional float x = 17;
inline bool PBDartCarInfoRT::has_x() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PBDartCarInfoRT::set_has_x() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PBDartCarInfoRT::clear_has_x() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PBDartCarInfoRT::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PBDartCarInfoRT::x() const {
  return x_;
}
inline void PBDartCarInfoRT::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 18;
inline bool PBDartCarInfoRT::has_y() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PBDartCarInfoRT::set_has_y() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PBDartCarInfoRT::clear_has_y() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PBDartCarInfoRT::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PBDartCarInfoRT::y() const {
  return y_;
}
inline void PBDartCarInfoRT::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional float dir = 19;
inline bool PBDartCarInfoRT::has_dir() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PBDartCarInfoRT::set_has_dir() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PBDartCarInfoRT::clear_has_dir() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PBDartCarInfoRT::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float PBDartCarInfoRT::dir() const {
  return dir_;
}
inline void PBDartCarInfoRT::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// -------------------------------------------------------------------

// PBDartFlyTarget

// optional uint32 sceneID = 1;
inline bool PBDartFlyTarget::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDartFlyTarget::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDartFlyTarget::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDartFlyTarget::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBDartFlyTarget::sceneid() const {
  return sceneid_;
}
inline void PBDartFlyTarget::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 cellID = 2;
inline bool PBDartFlyTarget::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDartFlyTarget::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDartFlyTarget::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDartFlyTarget::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 PBDartFlyTarget::cellid() const {
  return cellid_;
}
inline void PBDartFlyTarget::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional float x = 3;
inline bool PBDartFlyTarget::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBDartFlyTarget::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBDartFlyTarget::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBDartFlyTarget::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PBDartFlyTarget::x() const {
  return x_;
}
inline void PBDartFlyTarget::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 4;
inline bool PBDartFlyTarget::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBDartFlyTarget::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBDartFlyTarget::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBDartFlyTarget::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PBDartFlyTarget::y() const {
  return y_;
}
inline void PBDartFlyTarget::set_y(float value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// PBG2WDartCarFlyAsk

// optional .PBDartFlyTarget flyPoint = 1;
inline bool PBG2WDartCarFlyAsk::has_flypoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WDartCarFlyAsk::set_has_flypoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WDartCarFlyAsk::clear_has_flypoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WDartCarFlyAsk::clear_flypoint() {
  if (flypoint_ != NULL) flypoint_->::PBDartFlyTarget::Clear();
  clear_has_flypoint();
}
inline const ::PBDartFlyTarget& PBG2WDartCarFlyAsk::flypoint() const {
  return flypoint_ != NULL ? *flypoint_ : *default_instance_->flypoint_;
}
inline ::PBDartFlyTarget* PBG2WDartCarFlyAsk::mutable_flypoint() {
  set_has_flypoint();
  if (flypoint_ == NULL) flypoint_ = new ::PBDartFlyTarget;
  return flypoint_;
}
inline ::PBDartFlyTarget* PBG2WDartCarFlyAsk::release_flypoint() {
  clear_has_flypoint();
  ::PBDartFlyTarget* temp = flypoint_;
  flypoint_ = NULL;
  return temp;
}

// optional .PBDartCarInfoRT dartCarInfoRT = 2;
inline bool PBG2WDartCarFlyAsk::has_dartcarinfort() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WDartCarFlyAsk::set_has_dartcarinfort() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WDartCarFlyAsk::clear_has_dartcarinfort() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WDartCarFlyAsk::clear_dartcarinfort() {
  if (dartcarinfort_ != NULL) dartcarinfort_->::PBDartCarInfoRT::Clear();
  clear_has_dartcarinfort();
}
inline const ::PBDartCarInfoRT& PBG2WDartCarFlyAsk::dartcarinfort() const {
  return dartcarinfort_ != NULL ? *dartcarinfort_ : *default_instance_->dartcarinfort_;
}
inline ::PBDartCarInfoRT* PBG2WDartCarFlyAsk::mutable_dartcarinfort() {
  set_has_dartcarinfort();
  if (dartcarinfort_ == NULL) dartcarinfort_ = new ::PBDartCarInfoRT;
  return dartcarinfort_;
}
inline ::PBDartCarInfoRT* PBG2WDartCarFlyAsk::release_dartcarinfort() {
  clear_has_dartcarinfort();
  ::PBDartCarInfoRT* temp = dartcarinfort_;
  dartcarinfort_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBW2GDartCarFlyAck

// optional uint32 targetSceneID = 1;
inline bool PBW2GDartCarFlyAck::has_targetsceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GDartCarFlyAck::set_has_targetsceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GDartCarFlyAck::clear_has_targetsceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GDartCarFlyAck::clear_targetsceneid() {
  targetsceneid_ = 0u;
  clear_has_targetsceneid();
}
inline ::google::protobuf::uint32 PBW2GDartCarFlyAck::targetsceneid() const {
  return targetsceneid_;
}
inline void PBW2GDartCarFlyAck::set_targetsceneid(::google::protobuf::uint32 value) {
  set_has_targetsceneid();
  targetsceneid_ = value;
}

// optional uint64 targetSceneDynID = 2;
inline bool PBW2GDartCarFlyAck::has_targetscenedynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GDartCarFlyAck::set_has_targetscenedynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GDartCarFlyAck::clear_has_targetscenedynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GDartCarFlyAck::clear_targetscenedynid() {
  targetscenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetscenedynid();
}
inline ::google::protobuf::uint64 PBW2GDartCarFlyAck::targetscenedynid() const {
  return targetscenedynid_;
}
inline void PBW2GDartCarFlyAck::set_targetscenedynid(::google::protobuf::uint64 value) {
  set_has_targetscenedynid();
  targetscenedynid_ = value;
}

// optional uint32 sourceSceneID = 3;
inline bool PBW2GDartCarFlyAck::has_sourcesceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GDartCarFlyAck::set_has_sourcesceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GDartCarFlyAck::clear_has_sourcesceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GDartCarFlyAck::clear_sourcesceneid() {
  sourcesceneid_ = 0u;
  clear_has_sourcesceneid();
}
inline ::google::protobuf::uint32 PBW2GDartCarFlyAck::sourcesceneid() const {
  return sourcesceneid_;
}
inline void PBW2GDartCarFlyAck::set_sourcesceneid(::google::protobuf::uint32 value) {
  set_has_sourcesceneid();
  sourcesceneid_ = value;
}

// optional uint64 sourceSceneDynID = 4;
inline bool PBW2GDartCarFlyAck::has_sourcescenedynid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GDartCarFlyAck::set_has_sourcescenedynid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GDartCarFlyAck::clear_has_sourcescenedynid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GDartCarFlyAck::clear_sourcescenedynid() {
  sourcescenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_sourcescenedynid();
}
inline ::google::protobuf::uint64 PBW2GDartCarFlyAck::sourcescenedynid() const {
  return sourcescenedynid_;
}
inline void PBW2GDartCarFlyAck::set_sourcescenedynid(::google::protobuf::uint64 value) {
  set_has_sourcescenedynid();
  sourcescenedynid_ = value;
}

// optional uint64 globalDartID = 5;
inline bool PBW2GDartCarFlyAck::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GDartCarFlyAck::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GDartCarFlyAck::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GDartCarFlyAck::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBW2GDartCarFlyAck::globaldartid() const {
  return globaldartid_;
}
inline void PBW2GDartCarFlyAck::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// -------------------------------------------------------------------

// PBW2GDartCarFlyCreateNtf

// optional uint32 sceneID = 1;
inline bool PBW2GDartCarFlyCreateNtf::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GDartCarFlyCreateNtf::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GDartCarFlyCreateNtf::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GDartCarFlyCreateNtf::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GDartCarFlyCreateNtf::sceneid() const {
  return sceneid_;
}
inline void PBW2GDartCarFlyCreateNtf::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 2;
inline bool PBW2GDartCarFlyCreateNtf::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GDartCarFlyCreateNtf::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GDartCarFlyCreateNtf::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GDartCarFlyCreateNtf::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBW2GDartCarFlyCreateNtf::scenedynid() const {
  return scenedynid_;
}
inline void PBW2GDartCarFlyCreateNtf::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional .PBDartCarInfoRT dartCarInfoRT = 3;
inline bool PBW2GDartCarFlyCreateNtf::has_dartcarinfort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GDartCarFlyCreateNtf::set_has_dartcarinfort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GDartCarFlyCreateNtf::clear_has_dartcarinfort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GDartCarFlyCreateNtf::clear_dartcarinfort() {
  if (dartcarinfort_ != NULL) dartcarinfort_->::PBDartCarInfoRT::Clear();
  clear_has_dartcarinfort();
}
inline const ::PBDartCarInfoRT& PBW2GDartCarFlyCreateNtf::dartcarinfort() const {
  return dartcarinfort_ != NULL ? *dartcarinfort_ : *default_instance_->dartcarinfort_;
}
inline ::PBDartCarInfoRT* PBW2GDartCarFlyCreateNtf::mutable_dartcarinfort() {
  set_has_dartcarinfort();
  if (dartcarinfort_ == NULL) dartcarinfort_ = new ::PBDartCarInfoRT;
  return dartcarinfort_;
}
inline ::PBDartCarInfoRT* PBW2GDartCarFlyCreateNtf::release_dartcarinfort() {
  clear_has_dartcarinfort();
  ::PBDartCarInfoRT* temp = dartcarinfort_;
  dartcarinfort_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2WDartCarUpdateAsk

// optional .PBDartCarInfoRT dartCarInfoRT = 1;
inline bool PBG2WDartCarUpdateAsk::has_dartcarinfort() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WDartCarUpdateAsk::set_has_dartcarinfort() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WDartCarUpdateAsk::clear_has_dartcarinfort() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WDartCarUpdateAsk::clear_dartcarinfort() {
  if (dartcarinfort_ != NULL) dartcarinfort_->::PBDartCarInfoRT::Clear();
  clear_has_dartcarinfort();
}
inline const ::PBDartCarInfoRT& PBG2WDartCarUpdateAsk::dartcarinfort() const {
  return dartcarinfort_ != NULL ? *dartcarinfort_ : *default_instance_->dartcarinfort_;
}
inline ::PBDartCarInfoRT* PBG2WDartCarUpdateAsk::mutable_dartcarinfort() {
  set_has_dartcarinfort();
  if (dartcarinfort_ == NULL) dartcarinfort_ = new ::PBDartCarInfoRT;
  return dartcarinfort_;
}
inline ::PBDartCarInfoRT* PBG2WDartCarUpdateAsk::release_dartcarinfort() {
  clear_has_dartcarinfort();
  ::PBDartCarInfoRT* temp = dartcarinfort_;
  dartcarinfort_ = NULL;
  return temp;
}

// repeated uint32 leftMembersPlayerID = 2;
inline int PBG2WDartCarUpdateAsk::leftmembersplayerid_size() const {
  return leftmembersplayerid_.size();
}
inline void PBG2WDartCarUpdateAsk::clear_leftmembersplayerid() {
  leftmembersplayerid_.Clear();
}
inline ::google::protobuf::uint32 PBG2WDartCarUpdateAsk::leftmembersplayerid(int index) const {
  return leftmembersplayerid_.Get(index);
}
inline void PBG2WDartCarUpdateAsk::set_leftmembersplayerid(int index, ::google::protobuf::uint32 value) {
  leftmembersplayerid_.Set(index, value);
}
inline void PBG2WDartCarUpdateAsk::add_leftmembersplayerid(::google::protobuf::uint32 value) {
  leftmembersplayerid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBG2WDartCarUpdateAsk::leftmembersplayerid() const {
  return leftmembersplayerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBG2WDartCarUpdateAsk::mutable_leftmembersplayerid() {
  return &leftmembersplayerid_;
}

// -------------------------------------------------------------------

// PBG2WDartCarDeleteAsk

// optional uint64 globalDartID = 1;
inline bool PBG2WDartCarDeleteAsk::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WDartCarDeleteAsk::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WDartCarDeleteAsk::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WDartCarDeleteAsk::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBG2WDartCarDeleteAsk::globaldartid() const {
  return globaldartid_;
}
inline void PBG2WDartCarDeleteAsk::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// -------------------------------------------------------------------

// PBW2GDartCarRobFinishedAck

// optional uint64 globalDartID = 1;
inline bool PBW2GDartCarRobFinishedAck::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GDartCarRobFinishedAck::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GDartCarRobFinishedAck::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GDartCarRobFinishedAck::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBW2GDartCarRobFinishedAck::globaldartid() const {
  return globaldartid_;
}
inline void PBW2GDartCarRobFinishedAck::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// optional uint32 newStatus = 2;
inline bool PBW2GDartCarRobFinishedAck::has_newstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GDartCarRobFinishedAck::set_has_newstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GDartCarRobFinishedAck::clear_has_newstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GDartCarRobFinishedAck::clear_newstatus() {
  newstatus_ = 0u;
  clear_has_newstatus();
}
inline ::google::protobuf::uint32 PBW2GDartCarRobFinishedAck::newstatus() const {
  return newstatus_;
}
inline void PBW2GDartCarRobFinishedAck::set_newstatus(::google::protobuf::uint32 value) {
  set_has_newstatus();
  newstatus_ = value;
}

// optional uint32 sceneID = 3;
inline bool PBW2GDartCarRobFinishedAck::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GDartCarRobFinishedAck::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GDartCarRobFinishedAck::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GDartCarRobFinishedAck::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GDartCarRobFinishedAck::sceneid() const {
  return sceneid_;
}
inline void PBW2GDartCarRobFinishedAck::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 4;
inline bool PBW2GDartCarRobFinishedAck::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GDartCarRobFinishedAck::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GDartCarRobFinishedAck::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GDartCarRobFinishedAck::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBW2GDartCarRobFinishedAck::scenedynid() const {
  return scenedynid_;
}
inline void PBW2GDartCarRobFinishedAck::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// -------------------------------------------------------------------

// PBG2WDartCarRobFinishedAsk

// optional uint64 globalDartID = 1;
inline bool PBG2WDartCarRobFinishedAsk::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WDartCarRobFinishedAsk::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WDartCarRobFinishedAsk::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WDartCarRobFinishedAsk::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBG2WDartCarRobFinishedAsk::globaldartid() const {
  return globaldartid_;
}
inline void PBG2WDartCarRobFinishedAsk::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// optional uint32 newStatus = 2;
inline bool PBG2WDartCarRobFinishedAsk::has_newstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WDartCarRobFinishedAsk::set_has_newstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WDartCarRobFinishedAsk::clear_has_newstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WDartCarRobFinishedAsk::clear_newstatus() {
  newstatus_ = 0u;
  clear_has_newstatus();
}
inline ::google::protobuf::uint32 PBG2WDartCarRobFinishedAsk::newstatus() const {
  return newstatus_;
}
inline void PBG2WDartCarRobFinishedAsk::set_newstatus(::google::protobuf::uint32 value) {
  set_has_newstatus();
  newstatus_ = value;
}

// -------------------------------------------------------------------

// PBG2WDartCarLeaveRobAsk

// optional uint64 globalDartID = 1;
inline bool PBG2WDartCarLeaveRobAsk::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WDartCarLeaveRobAsk::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WDartCarLeaveRobAsk::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WDartCarLeaveRobAsk::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBG2WDartCarLeaveRobAsk::globaldartid() const {
  return globaldartid_;
}
inline void PBG2WDartCarLeaveRobAsk::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// optional uint32 playerID = 2;
inline bool PBG2WDartCarLeaveRobAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WDartCarLeaveRobAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WDartCarLeaveRobAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WDartCarLeaveRobAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WDartCarLeaveRobAsk::playerid() const {
  return playerid_;
}
inline void PBG2WDartCarLeaveRobAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBW2GDartCarMemberLeaveNtf

// optional uint64 globalDartID = 1;
inline bool PBW2GDartCarMemberLeaveNtf::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GDartCarMemberLeaveNtf::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBW2GDartCarMemberLeaveNtf::globaldartid() const {
  return globaldartid_;
}
inline void PBW2GDartCarMemberLeaveNtf::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// optional uint32 playerID = 2;
inline bool PBW2GDartCarMemberLeaveNtf::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GDartCarMemberLeaveNtf::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GDartCarMemberLeaveNtf::playerid() const {
  return playerid_;
}
inline void PBW2GDartCarMemberLeaveNtf::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 sceneID = 3;
inline bool PBW2GDartCarMemberLeaveNtf::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GDartCarMemberLeaveNtf::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GDartCarMemberLeaveNtf::sceneid() const {
  return sceneid_;
}
inline void PBW2GDartCarMemberLeaveNtf::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 4;
inline bool PBW2GDartCarMemberLeaveNtf::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GDartCarMemberLeaveNtf::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GDartCarMemberLeaveNtf::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBW2GDartCarMemberLeaveNtf::scenedynid() const {
  return scenedynid_;
}
inline void PBW2GDartCarMemberLeaveNtf::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// -------------------------------------------------------------------

// PBG2WFindDartCarAsk

// optional uint64 globalDartID = 1;
inline bool PBG2WFindDartCarAsk::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WFindDartCarAsk::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WFindDartCarAsk::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WFindDartCarAsk::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBG2WFindDartCarAsk::globaldartid() const {
  return globaldartid_;
}
inline void PBG2WFindDartCarAsk::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// optional uint32 playerID = 2;
inline bool PBG2WFindDartCarAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WFindDartCarAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WFindDartCarAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WFindDartCarAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WFindDartCarAsk::playerid() const {
  return playerid_;
}
inline void PBG2WFindDartCarAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 sceneID = 3;
inline bool PBG2WFindDartCarAsk::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WFindDartCarAsk::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WFindDartCarAsk::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WFindDartCarAsk::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBG2WFindDartCarAsk::sceneid() const {
  return sceneid_;
}
inline void PBG2WFindDartCarAsk::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 4;
inline bool PBG2WFindDartCarAsk::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2WFindDartCarAsk::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2WFindDartCarAsk::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2WFindDartCarAsk::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBG2WFindDartCarAsk::scenedynid() const {
  return scenedynid_;
}
inline void PBG2WFindDartCarAsk::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// -------------------------------------------------------------------

// PBW2GFindDartCarAck

// optional uint64 globalDartID = 1;
inline bool PBW2GFindDartCarAck::has_globaldartid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_globaldartid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GFindDartCarAck::clear_has_globaldartid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GFindDartCarAck::clear_globaldartid() {
  globaldartid_ = GOOGLE_ULONGLONG(0);
  clear_has_globaldartid();
}
inline ::google::protobuf::uint64 PBW2GFindDartCarAck::globaldartid() const {
  return globaldartid_;
}
inline void PBW2GFindDartCarAck::set_globaldartid(::google::protobuf::uint64 value) {
  set_has_globaldartid();
  globaldartid_ = value;
}

// optional uint32 playerID = 2;
inline bool PBW2GFindDartCarAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GFindDartCarAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GFindDartCarAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GFindDartCarAck::playerid() const {
  return playerid_;
}
inline void PBW2GFindDartCarAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 sceneID = 3;
inline bool PBW2GFindDartCarAck::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GFindDartCarAck::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GFindDartCarAck::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GFindDartCarAck::sceneid() const {
  return sceneid_;
}
inline void PBW2GFindDartCarAck::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 sceneDynID = 4;
inline bool PBW2GFindDartCarAck::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GFindDartCarAck::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GFindDartCarAck::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBW2GFindDartCarAck::scenedynid() const {
  return scenedynid_;
}
inline void PBW2GFindDartCarAck::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional float x = 5;
inline bool PBW2GFindDartCarAck::has_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GFindDartCarAck::clear_has_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GFindDartCarAck::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PBW2GFindDartCarAck::x() const {
  return x_;
}
inline void PBW2GFindDartCarAck::set_x(float value) {
  set_has_x();
  x_ = value;
}

// optional float y = 6;
inline bool PBW2GFindDartCarAck::has_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBW2GFindDartCarAck::clear_has_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBW2GFindDartCarAck::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PBW2GFindDartCarAck::y() const {
  return y_;
}
inline void PBW2GFindDartCarAck::set_y(float value) {
  set_has_y();
  y_ = value;
}

// optional uint32 targetsceneID = 7;
inline bool PBW2GFindDartCarAck::has_targetsceneid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_targetsceneid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBW2GFindDartCarAck::clear_has_targetsceneid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBW2GFindDartCarAck::clear_targetsceneid() {
  targetsceneid_ = 0u;
  clear_has_targetsceneid();
}
inline ::google::protobuf::uint32 PBW2GFindDartCarAck::targetsceneid() const {
  return targetsceneid_;
}
inline void PBW2GFindDartCarAck::set_targetsceneid(::google::protobuf::uint32 value) {
  set_has_targetsceneid();
  targetsceneid_ = value;
}

// optional uint64 targetsceneDynID = 8;
inline bool PBW2GFindDartCarAck::has_targetscenedynid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBW2GFindDartCarAck::set_has_targetscenedynid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBW2GFindDartCarAck::clear_has_targetscenedynid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBW2GFindDartCarAck::clear_targetscenedynid() {
  targetscenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetscenedynid();
}
inline ::google::protobuf::uint64 PBW2GFindDartCarAck::targetscenedynid() const {
  return targetscenedynid_;
}
inline void PBW2GFindDartCarAck::set_targetscenedynid(::google::protobuf::uint64 value) {
  set_has_targetscenedynid();
  targetscenedynid_ = value;
}

// -------------------------------------------------------------------

// PBG2WFactionBossHurtUpdate

// optional .PBPlayerDisplay display = 1;
inline bool PBG2WFactionBossHurtUpdate::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WFactionBossHurtUpdate::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WFactionBossHurtUpdate::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WFactionBossHurtUpdate::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBG2WFactionBossHurtUpdate::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBG2WFactionBossHurtUpdate::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBG2WFactionBossHurtUpdate::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint64 hurt = 2;
inline bool PBG2WFactionBossHurtUpdate::has_hurt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WFactionBossHurtUpdate::set_has_hurt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WFactionBossHurtUpdate::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WFactionBossHurtUpdate::clear_hurt() {
  hurt_ = GOOGLE_ULONGLONG(0);
  clear_has_hurt();
}
inline ::google::protobuf::uint64 PBG2WFactionBossHurtUpdate::hurt() const {
  return hurt_;
}
inline void PBG2WFactionBossHurtUpdate::set_hurt(::google::protobuf::uint64 value) {
  set_has_hurt();
  hurt_ = value;
}

// -------------------------------------------------------------------

// PBG2WCommonTreasurePrizeAsk

// optional uint32 playerid = 1;
inline bool PBG2WCommonTreasurePrizeAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WCommonTreasurePrizeAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WCommonTreasurePrizeAsk::playerid() const {
  return playerid_;
}
inline void PBG2WCommonTreasurePrizeAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 treasuretype = 2;
inline bool PBG2WCommonTreasurePrizeAsk::has_treasuretype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WCommonTreasurePrizeAsk::set_has_treasuretype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_has_treasuretype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_treasuretype() {
  treasuretype_ = 0u;
  clear_has_treasuretype();
}
inline ::google::protobuf::uint32 PBG2WCommonTreasurePrizeAsk::treasuretype() const {
  return treasuretype_;
}
inline void PBG2WCommonTreasurePrizeAsk::set_treasuretype(::google::protobuf::uint32 value) {
  set_has_treasuretype();
  treasuretype_ = value;
}

// optional uint32 treasureid = 3;
inline bool PBG2WCommonTreasurePrizeAsk::has_treasureid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WCommonTreasurePrizeAsk::set_has_treasureid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_has_treasureid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_treasureid() {
  treasureid_ = 0u;
  clear_has_treasureid();
}
inline ::google::protobuf::uint32 PBG2WCommonTreasurePrizeAsk::treasureid() const {
  return treasureid_;
}
inline void PBG2WCommonTreasurePrizeAsk::set_treasureid(::google::protobuf::uint32 value) {
  set_has_treasureid();
  treasureid_ = value;
}

// optional float posx = 4;
inline bool PBG2WCommonTreasurePrizeAsk::has_posx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2WCommonTreasurePrizeAsk::set_has_posx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_has_posx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float PBG2WCommonTreasurePrizeAsk::posx() const {
  return posx_;
}
inline void PBG2WCommonTreasurePrizeAsk::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// optional float posy = 5;
inline bool PBG2WCommonTreasurePrizeAsk::has_posy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBG2WCommonTreasurePrizeAsk::set_has_posy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_has_posy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBG2WCommonTreasurePrizeAsk::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float PBG2WCommonTreasurePrizeAsk::posy() const {
  return posy_;
}
inline void PBG2WCommonTreasurePrizeAsk::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// -------------------------------------------------------------------

// PBW2GCommonTreasurePrizeAck

// optional uint32 playerid = 1;
inline bool PBW2GCommonTreasurePrizeAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GCommonTreasurePrizeAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GCommonTreasurePrizeAck::playerid() const {
  return playerid_;
}
inline void PBW2GCommonTreasurePrizeAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 prizeid = 2;
inline bool PBW2GCommonTreasurePrizeAck::has_prizeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GCommonTreasurePrizeAck::set_has_prizeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_has_prizeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_prizeid() {
  prizeid_ = 0u;
  clear_has_prizeid();
}
inline ::google::protobuf::uint32 PBW2GCommonTreasurePrizeAck::prizeid() const {
  return prizeid_;
}
inline void PBW2GCommonTreasurePrizeAck::set_prizeid(::google::protobuf::uint32 value) {
  set_has_prizeid();
  prizeid_ = value;
}

// optional uint32 treasureid = 3;
inline bool PBW2GCommonTreasurePrizeAck::has_treasureid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GCommonTreasurePrizeAck::set_has_treasureid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_has_treasureid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_treasureid() {
  treasureid_ = 0u;
  clear_has_treasureid();
}
inline ::google::protobuf::uint32 PBW2GCommonTreasurePrizeAck::treasureid() const {
  return treasureid_;
}
inline void PBW2GCommonTreasurePrizeAck::set_treasureid(::google::protobuf::uint32 value) {
  set_has_treasureid();
  treasureid_ = value;
}

// optional float posx = 4;
inline bool PBW2GCommonTreasurePrizeAck::has_posx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GCommonTreasurePrizeAck::set_has_posx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_has_posx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float PBW2GCommonTreasurePrizeAck::posx() const {
  return posx_;
}
inline void PBW2GCommonTreasurePrizeAck::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// optional float posy = 5;
inline bool PBW2GCommonTreasurePrizeAck::has_posy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GCommonTreasurePrizeAck::set_has_posy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_has_posy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GCommonTreasurePrizeAck::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float PBW2GCommonTreasurePrizeAck::posy() const {
  return posy_;
}
inline void PBW2GCommonTreasurePrizeAck::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// -------------------------------------------------------------------

// PBW2GCorpsChangeJobAck

// optional uint32 playerid = 1;
inline bool PBW2GCorpsChangeJobAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GCorpsChangeJobAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GCorpsChangeJobAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GCorpsChangeJobAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GCorpsChangeJobAck::playerid() const {
  return playerid_;
}
inline void PBW2GCorpsChangeJobAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 addjob = 2;
inline bool PBW2GCorpsChangeJobAck::has_addjob() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GCorpsChangeJobAck::set_has_addjob() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GCorpsChangeJobAck::clear_has_addjob() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GCorpsChangeJobAck::clear_addjob() {
  addjob_ = 0u;
  clear_has_addjob();
}
inline ::google::protobuf::uint32 PBW2GCorpsChangeJobAck::addjob() const {
  return addjob_;
}
inline void PBW2GCorpsChangeJobAck::set_addjob(::google::protobuf::uint32 value) {
  set_has_addjob();
  addjob_ = value;
}

// optional uint32 deljob = 3;
inline bool PBW2GCorpsChangeJobAck::has_deljob() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GCorpsChangeJobAck::set_has_deljob() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GCorpsChangeJobAck::clear_has_deljob() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GCorpsChangeJobAck::clear_deljob() {
  deljob_ = 0u;
  clear_has_deljob();
}
inline ::google::protobuf::uint32 PBW2GCorpsChangeJobAck::deljob() const {
  return deljob_;
}
inline void PBW2GCorpsChangeJobAck::set_deljob(::google::protobuf::uint32 value) {
  set_has_deljob();
  deljob_ = value;
}

// -------------------------------------------------------------------

// PBW2GCommonForbitSpeak

// optional uint32 channel = 1;
inline bool PBW2GCommonForbitSpeak::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GCommonForbitSpeak::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GCommonForbitSpeak::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GCommonForbitSpeak::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 PBW2GCommonForbitSpeak::channel() const {
  return channel_;
}
inline void PBW2GCommonForbitSpeak::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
}

// optional uint32 forbittime = 2;
inline bool PBW2GCommonForbitSpeak::has_forbittime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GCommonForbitSpeak::set_has_forbittime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GCommonForbitSpeak::clear_has_forbittime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GCommonForbitSpeak::clear_forbittime() {
  forbittime_ = 0u;
  clear_has_forbittime();
}
inline ::google::protobuf::uint32 PBW2GCommonForbitSpeak::forbittime() const {
  return forbittime_;
}
inline void PBW2GCommonForbitSpeak::set_forbittime(::google::protobuf::uint32 value) {
  set_has_forbittime();
  forbittime_ = value;
}

// -------------------------------------------------------------------

// PBG2WManorBattleFieldFighterCountAsk

// optional uint32 manorid = 1;
inline bool PBG2WManorBattleFieldFighterCountAsk::has_manorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WManorBattleFieldFighterCountAsk::set_has_manorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_has_manorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_manorid() {
  manorid_ = 0u;
  clear_has_manorid();
}
inline ::google::protobuf::uint32 PBG2WManorBattleFieldFighterCountAsk::manorid() const {
  return manorid_;
}
inline void PBG2WManorBattleFieldFighterCountAsk::set_manorid(::google::protobuf::uint32 value) {
  set_has_manorid();
  manorid_ = value;
}

// optional uint32 regionid = 2;
inline bool PBG2WManorBattleFieldFighterCountAsk::has_regionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WManorBattleFieldFighterCountAsk::set_has_regionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_has_regionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_regionid() {
  regionid_ = 0u;
  clear_has_regionid();
}
inline ::google::protobuf::uint32 PBG2WManorBattleFieldFighterCountAsk::regionid() const {
  return regionid_;
}
inline void PBG2WManorBattleFieldFighterCountAsk::set_regionid(::google::protobuf::uint32 value) {
  set_has_regionid();
  regionid_ = value;
}

// optional .PBManorBattleFieldReport defenderreport = 3;
inline bool PBG2WManorBattleFieldFighterCountAsk::has_defenderreport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WManorBattleFieldFighterCountAsk::set_has_defenderreport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_has_defenderreport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_defenderreport() {
  if (defenderreport_ != NULL) defenderreport_->::PBManorBattleFieldReport::Clear();
  clear_has_defenderreport();
}
inline const ::PBManorBattleFieldReport& PBG2WManorBattleFieldFighterCountAsk::defenderreport() const {
  return defenderreport_ != NULL ? *defenderreport_ : *default_instance_->defenderreport_;
}
inline ::PBManorBattleFieldReport* PBG2WManorBattleFieldFighterCountAsk::mutable_defenderreport() {
  set_has_defenderreport();
  if (defenderreport_ == NULL) defenderreport_ = new ::PBManorBattleFieldReport;
  return defenderreport_;
}
inline ::PBManorBattleFieldReport* PBG2WManorBattleFieldFighterCountAsk::release_defenderreport() {
  clear_has_defenderreport();
  ::PBManorBattleFieldReport* temp = defenderreport_;
  defenderreport_ = NULL;
  return temp;
}

// optional .PBManorBattleFieldReport challengerreport = 4;
inline bool PBG2WManorBattleFieldFighterCountAsk::has_challengerreport() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2WManorBattleFieldFighterCountAsk::set_has_challengerreport() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_has_challengerreport() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2WManorBattleFieldFighterCountAsk::clear_challengerreport() {
  if (challengerreport_ != NULL) challengerreport_->::PBManorBattleFieldReport::Clear();
  clear_has_challengerreport();
}
inline const ::PBManorBattleFieldReport& PBG2WManorBattleFieldFighterCountAsk::challengerreport() const {
  return challengerreport_ != NULL ? *challengerreport_ : *default_instance_->challengerreport_;
}
inline ::PBManorBattleFieldReport* PBG2WManorBattleFieldFighterCountAsk::mutable_challengerreport() {
  set_has_challengerreport();
  if (challengerreport_ == NULL) challengerreport_ = new ::PBManorBattleFieldReport;
  return challengerreport_;
}
inline ::PBManorBattleFieldReport* PBG2WManorBattleFieldFighterCountAsk::release_challengerreport() {
  clear_has_challengerreport();
  ::PBManorBattleFieldReport* temp = challengerreport_;
  challengerreport_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2WManorBattleFieldEnterAsk

// optional uint32 manorid = 1;
inline bool PBG2WManorBattleFieldEnterAsk::has_manorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WManorBattleFieldEnterAsk::set_has_manorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WManorBattleFieldEnterAsk::clear_has_manorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WManorBattleFieldEnterAsk::clear_manorid() {
  manorid_ = 0u;
  clear_has_manorid();
}
inline ::google::protobuf::uint32 PBG2WManorBattleFieldEnterAsk::manorid() const {
  return manorid_;
}
inline void PBG2WManorBattleFieldEnterAsk::set_manorid(::google::protobuf::uint32 value) {
  set_has_manorid();
  manorid_ = value;
}

// optional uint32 regionid = 2;
inline bool PBG2WManorBattleFieldEnterAsk::has_regionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WManorBattleFieldEnterAsk::set_has_regionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WManorBattleFieldEnterAsk::clear_has_regionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WManorBattleFieldEnterAsk::clear_regionid() {
  regionid_ = 0u;
  clear_has_regionid();
}
inline ::google::protobuf::uint32 PBG2WManorBattleFieldEnterAsk::regionid() const {
  return regionid_;
}
inline void PBG2WManorBattleFieldEnterAsk::set_regionid(::google::protobuf::uint32 value) {
  set_has_regionid();
  regionid_ = value;
}

// optional uint32 playerid = 3;
inline bool PBG2WManorBattleFieldEnterAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2WManorBattleFieldEnterAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2WManorBattleFieldEnterAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2WManorBattleFieldEnterAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2WManorBattleFieldEnterAsk::playerid() const {
  return playerid_;
}
inline void PBG2WManorBattleFieldEnterAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBW2GManorBattleFieldFightCountNtf

// optional uint32 manorid = 1;
inline bool PBW2GManorBattleFieldFightCountNtf::has_manorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_manorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_manorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_manorid() {
  manorid_ = 0u;
  clear_has_manorid();
}
inline ::google::protobuf::uint32 PBW2GManorBattleFieldFightCountNtf::manorid() const {
  return manorid_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_manorid(::google::protobuf::uint32 value) {
  set_has_manorid();
  manorid_ = value;
}

// optional uint32 regionid = 2;
inline bool PBW2GManorBattleFieldFightCountNtf::has_regionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_regionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_regionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_regionid() {
  regionid_ = 0u;
  clear_has_regionid();
}
inline ::google::protobuf::uint32 PBW2GManorBattleFieldFightCountNtf::regionid() const {
  return regionid_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_regionid(::google::protobuf::uint32 value) {
  set_has_regionid();
  regionid_ = value;
}

// optional uint32 defendercount = 3;
inline bool PBW2GManorBattleFieldFightCountNtf::has_defendercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_defendercount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_defendercount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_defendercount() {
  defendercount_ = 0u;
  clear_has_defendercount();
}
inline ::google::protobuf::uint32 PBW2GManorBattleFieldFightCountNtf::defendercount() const {
  return defendercount_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_defendercount(::google::protobuf::uint32 value) {
  set_has_defendercount();
  defendercount_ = value;
}

// optional uint32 challengercount = 4;
inline bool PBW2GManorBattleFieldFightCountNtf::has_challengercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_challengercount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_challengercount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_challengercount() {
  challengercount_ = 0u;
  clear_has_challengercount();
}
inline ::google::protobuf::uint32 PBW2GManorBattleFieldFightCountNtf::challengercount() const {
  return challengercount_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_challengercount(::google::protobuf::uint32 value) {
  set_has_challengercount();
  challengercount_ = value;
}

// optional uint32 sceneid = 5;
inline bool PBW2GManorBattleFieldFightCountNtf::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GManorBattleFieldFightCountNtf::sceneid() const {
  return sceneid_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dynid = 6;
inline bool PBW2GManorBattleFieldFightCountNtf::has_dynid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_dynid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBW2GManorBattleFieldFightCountNtf::dynid() const {
  return dynid_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional uint32 defenderscore = 7;
inline bool PBW2GManorBattleFieldFightCountNtf::has_defenderscore() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_defenderscore() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_defenderscore() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_defenderscore() {
  defenderscore_ = 0u;
  clear_has_defenderscore();
}
inline ::google::protobuf::uint32 PBW2GManorBattleFieldFightCountNtf::defenderscore() const {
  return defenderscore_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_defenderscore(::google::protobuf::uint32 value) {
  set_has_defenderscore();
  defenderscore_ = value;
}

// optional uint32 challengerscore = 8;
inline bool PBW2GManorBattleFieldFightCountNtf::has_challengerscore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_has_challengerscore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_has_challengerscore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBW2GManorBattleFieldFightCountNtf::clear_challengerscore() {
  challengerscore_ = 0u;
  clear_has_challengerscore();
}
inline ::google::protobuf::uint32 PBW2GManorBattleFieldFightCountNtf::challengerscore() const {
  return challengerscore_;
}
inline void PBW2GManorBattleFieldFightCountNtf::set_challengerscore(::google::protobuf::uint32 value) {
  set_has_challengerscore();
  challengerscore_ = value;
}

// -------------------------------------------------------------------

// PBW2GManorBattleFieldEnterAck

// -------------------------------------------------------------------

// PBG2WManorSetActivityAsk

// optional bool setapply = 1;
inline bool PBG2WManorSetActivityAsk::has_setapply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2WManorSetActivityAsk::set_has_setapply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2WManorSetActivityAsk::clear_has_setapply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2WManorSetActivityAsk::clear_setapply() {
  setapply_ = false;
  clear_has_setapply();
}
inline bool PBG2WManorSetActivityAsk::setapply() const {
  return setapply_;
}
inline void PBG2WManorSetActivityAsk::set_setapply(bool value) {
  set_has_setapply();
  setapply_ = value;
}

// optional bool setfight = 2;
inline bool PBG2WManorSetActivityAsk::has_setfight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2WManorSetActivityAsk::set_has_setfight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2WManorSetActivityAsk::clear_has_setfight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2WManorSetActivityAsk::clear_setfight() {
  setfight_ = false;
  clear_has_setfight();
}
inline bool PBG2WManorSetActivityAsk::setfight() const {
  return setfight_;
}
inline void PBG2WManorSetActivityAsk::set_setfight(bool value) {
  set_has_setfight();
  setfight_ = value;
}

// -------------------------------------------------------------------

// ManorCopymapNtfElites

// repeated uint32 elite = 1;
inline int ManorCopymapNtfElites::elite_size() const {
  return elite_.size();
}
inline void ManorCopymapNtfElites::clear_elite() {
  elite_.Clear();
}
inline ::google::protobuf::uint32 ManorCopymapNtfElites::elite(int index) const {
  return elite_.Get(index);
}
inline void ManorCopymapNtfElites::set_elite(int index, ::google::protobuf::uint32 value) {
  elite_.Set(index, value);
}
inline void ManorCopymapNtfElites::add_elite(::google::protobuf::uint32 value) {
  elite_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ManorCopymapNtfElites::elite() const {
  return elite_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ManorCopymapNtfElites::mutable_elite() {
  return &elite_;
}

// -------------------------------------------------------------------

// PBW2GManorCopymapNtf

// optional uint32 manorid = 1;
inline bool PBW2GManorCopymapNtf::has_manorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_manorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GManorCopymapNtf::clear_has_manorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GManorCopymapNtf::clear_manorid() {
  manorid_ = 0u;
  clear_has_manorid();
}
inline ::google::protobuf::uint32 PBW2GManorCopymapNtf::manorid() const {
  return manorid_;
}
inline void PBW2GManorCopymapNtf::set_manorid(::google::protobuf::uint32 value) {
  set_has_manorid();
  manorid_ = value;
}

// optional uint32 sceneid = 2;
inline bool PBW2GManorCopymapNtf::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GManorCopymapNtf::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GManorCopymapNtf::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBW2GManorCopymapNtf::sceneid() const {
  return sceneid_;
}
inline void PBW2GManorCopymapNtf::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dynid = 3;
inline bool PBW2GManorCopymapNtf::has_dynid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_dynid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GManorCopymapNtf::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GManorCopymapNtf::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBW2GManorCopymapNtf::dynid() const {
  return dynid_;
}
inline void PBW2GManorCopymapNtf::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional uint32 cellid = 4;
inline bool PBW2GManorCopymapNtf::has_cellid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_cellid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GManorCopymapNtf::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GManorCopymapNtf::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 PBW2GManorCopymapNtf::cellid() const {
  return cellid_;
}
inline void PBW2GManorCopymapNtf::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional .ManorCopymapNtfElites elites = 5;
inline bool PBW2GManorCopymapNtf::has_elites() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_elites() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GManorCopymapNtf::clear_has_elites() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GManorCopymapNtf::clear_elites() {
  if (elites_ != NULL) elites_->::ManorCopymapNtfElites::Clear();
  clear_has_elites();
}
inline const ::ManorCopymapNtfElites& PBW2GManorCopymapNtf::elites() const {
  return elites_ != NULL ? *elites_ : *default_instance_->elites_;
}
inline ::ManorCopymapNtfElites* PBW2GManorCopymapNtf::mutable_elites() {
  set_has_elites();
  if (elites_ == NULL) elites_ = new ::ManorCopymapNtfElites;
  return elites_;
}
inline ::ManorCopymapNtfElites* PBW2GManorCopymapNtf::release_elites() {
  clear_has_elites();
  ::ManorCopymapNtfElites* temp = elites_;
  elites_ = NULL;
  return temp;
}

// optional .PBManorInfo manorInfo = 6;
inline bool PBW2GManorCopymapNtf::has_manorinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_manorinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBW2GManorCopymapNtf::clear_has_manorinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBW2GManorCopymapNtf::clear_manorinfo() {
  if (manorinfo_ != NULL) manorinfo_->::PBManorInfo::Clear();
  clear_has_manorinfo();
}
inline const ::PBManorInfo& PBW2GManorCopymapNtf::manorinfo() const {
  return manorinfo_ != NULL ? *manorinfo_ : *default_instance_->manorinfo_;
}
inline ::PBManorInfo* PBW2GManorCopymapNtf::mutable_manorinfo() {
  set_has_manorinfo();
  if (manorinfo_ == NULL) manorinfo_ = new ::PBManorInfo;
  return manorinfo_;
}
inline ::PBManorInfo* PBW2GManorCopymapNtf::release_manorinfo() {
  clear_has_manorinfo();
  ::PBManorInfo* temp = manorinfo_;
  manorinfo_ = NULL;
  return temp;
}

// optional bool closeactivity = 7;
inline bool PBW2GManorCopymapNtf::has_closeactivity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_closeactivity() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBW2GManorCopymapNtf::clear_has_closeactivity() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBW2GManorCopymapNtf::clear_closeactivity() {
  closeactivity_ = false;
  clear_has_closeactivity();
}
inline bool PBW2GManorCopymapNtf::closeactivity() const {
  return closeactivity_;
}
inline void PBW2GManorCopymapNtf::set_closeactivity(bool value) {
  set_has_closeactivity();
  closeactivity_ = value;
}

// optional bool stopfight = 8;
inline bool PBW2GManorCopymapNtf::has_stopfight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBW2GManorCopymapNtf::set_has_stopfight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBW2GManorCopymapNtf::clear_has_stopfight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBW2GManorCopymapNtf::clear_stopfight() {
  stopfight_ = false;
  clear_has_stopfight();
}
inline bool PBW2GManorCopymapNtf::stopfight() const {
  return stopfight_;
}
inline void PBW2GManorCopymapNtf::set_stopfight(bool value) {
  set_has_stopfight();
  stopfight_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WAGMsg_2eproto__INCLUDED
