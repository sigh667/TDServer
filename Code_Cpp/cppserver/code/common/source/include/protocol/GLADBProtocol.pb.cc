// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GLADBProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* _emPGL2DB_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emGL2DB_Operator_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _em_GL2DB_Event_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emPDB2GL_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emDB2GL_Operator_Protocol_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_GLADBProtocol_2eproto() {
  protobuf_AddDesc_GLADBProtocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GLADBProtocol.proto");
  GOOGLE_CHECK(file != NULL);
  _emPGL2DB_Protocol_descriptor_ = file->enum_type(0);
  _emGL2DB_Operator_Protocol_descriptor_ = file->enum_type(1);
  _em_GL2DB_Event_descriptor_ = file->enum_type(2);
  _emPDB2GL_Protocol_descriptor_ = file->enum_type(3);
  _emDB2GL_Operator_Protocol_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GLADBProtocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_GLADBProtocol_2eproto() {
}

void protobuf_AddDesc_GLADBProtocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023GLADBProtocol.proto**\n\022_emPGL2DB_Proto"
    "col\022\024\n\020P_GL2DB_Operator\020\000*^\n\032_emGL2DB_Op"
    "erator_Protocol\022 \n\034GL2DB_Operator_StartL"
    "oad_Ask\020\000\022\036\n\032GL2DB_Operator_DBBlock_Ask\020"
    "\001*\327\002\n\017_em_GL2DB_Event\022\033\n\027GL2DB_Event_Glo"
    "bal_Load\020\000\022\033\n\027GL2DB_Event_Global_Save\020\001\022"
    "\037\n\033GL2DB_Event_DataPlayer_Load\020\002\022\037\n\033GL2D"
    "B_Event_DataPlayer_Save\020\003\022 \n\034GL2DB_Event"
    "_AuctionItem_Load\020\004\022 \n\034GL2DB_Event_Aucti"
    "onItem_Save\020\005\022\"\n\036GL2DB_Event_AuctionItem"
    "_Delete\020\006\022\036\n\032GL2DB_Event_SaleMoney_Load\020"
    "\007\022\036\n\032GL2DB_Event_SaleMoney_Save\020\010\022 \n\034GL2"
    "DB_Event_SaleMoney_Delete\020\t**\n\022_emPDB2GL"
    "_Protocol\022\024\n\020P_DB2GL_Operator\020\000*\307\001\n\032_emD"
    "B2GL_Operator_Protocol\022\035\n\031DB2GL_Operator"
    "_DBRecv_Ack\020\000\022\036\n\032DB2GL_Operator_Global_L"
    "oad\020\001\022\"\n\036DB2GL_Operator_DataPlayer_Load\020"
    "\002\022#\n\037DB2GL_Operator_AuctionItem_Load\020\003\022!"
    "\n\035DB2GL_Operator_SaleMoney_Load\020\004", 753);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GLADBProtocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GLADBProtocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GLADBProtocol_2eproto {
  StaticDescriptorInitializer_GLADBProtocol_2eproto() {
    protobuf_AddDesc_GLADBProtocol_2eproto();
  }
} static_descriptor_initializer_GLADBProtocol_2eproto_;

const ::google::protobuf::EnumDescriptor* _emPGL2DB_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPGL2DB_Protocol_descriptor_;
}
bool _emPGL2DB_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emGL2DB_Operator_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emGL2DB_Operator_Protocol_descriptor_;
}
bool _emGL2DB_Operator_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _em_GL2DB_Event_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _em_GL2DB_Event_descriptor_;
}
bool _em_GL2DB_Event_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emPDB2GL_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPDB2GL_Protocol_descriptor_;
}
bool _emPDB2GL_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emDB2GL_Operator_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emDB2GL_Operator_Protocol_descriptor_;
}
bool _emDB2GL_Operator_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
