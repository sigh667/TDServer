// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgOperate.proto

#ifndef PROTOBUF_MsgOperate_2eproto__INCLUDED
#define PROTOBUF_MsgOperate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MsgOperate_2eproto();
void protobuf_AssignDesc_MsgOperate_2eproto();
void protobuf_ShutdownFile_MsgOperate_2eproto();

class VerifyAsk;
class VerifyAck;
class PingAsk;
class PingAck;
class BadNotify;

enum _e_P_OperateFlag {
  P_SO_Verify_Ask = 0,
  P_SO_Ping_Ask = 1,
  P_SO_Login_Ask = 2,
  P_SO_Verify_Ack = 3,
  P_SO_Ping_Ack = 4,
  P_SO_Disconnect = 5,
  P_SO_Bad_Notify = 6,
  P_SO_Kick_Notify = 7,
  P_SO_Login_Ack = 8,
  P_SO_TimeoutRead = 9,
  P_SO_TimeoutWrite = 10
};
bool _e_P_OperateFlag_IsValid(int value);
const _e_P_OperateFlag _e_P_OperateFlag_MIN = P_SO_Verify_Ask;
const _e_P_OperateFlag _e_P_OperateFlag_MAX = P_SO_TimeoutWrite;
const int _e_P_OperateFlag_ARRAYSIZE = _e_P_OperateFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* _e_P_OperateFlag_descriptor();
inline const ::std::string& _e_P_OperateFlag_Name(_e_P_OperateFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    _e_P_OperateFlag_descriptor(), value);
}
inline bool _e_P_OperateFlag_Parse(
    const ::std::string& name, _e_P_OperateFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<_e_P_OperateFlag>(
    _e_P_OperateFlag_descriptor(), name, value);
}
enum _emNetResult {
  NetResult_Succeed = 0,
  NetResult_Fail = 1,
  NetResult_SizeError = 2,
  NetResult_VersionError = 3,
  NetResult_SendError = 4,
  NetResult_DBError = 5,
  NetResult_Online = 6,
  NetResult_Offline = 7,
  NetResult_Complete = 8,
  NetResult_Max = 9,
  R_Login_Loging = 10,
  R_Login_Wait = 11,
  R_Login_PwdError = 12,
  R_Login_Disable = 13,
  R_Login_Freeze = 14,
  R_Login_Timeout = 15,
  R_Login_DBError = 16,
  R_Login_Reloging = 17,
  R_Login_Entering = 18,
  R_Login_ServerID = 19,
  R_Login_OnlineMax = 20,
  R_Login_Kickout = 21,
  R_PlayerCreate_Ignore = 22,
  R_PlayerCreate_Full = 23,
  R_PlayerCreate_JobError = 24,
  R_PlayerCreate_BadWord = 25,
  R_PlayerCreate_Createing = 26,
  R_PlayerCreate_Wait = 27,
  R_PlayerCreate_Useed = 28,
  R_PlayerCreate_NotLength = 29,
  R_PlayerDelete_NoPlayerID = 30,
  R_EnterScene_Close = 31,
  R_PlayerCheckName_Checking = 32,
  R_PlayerCheckName_Wait = 33,
  R_PlayerCheckName_Count = 34,
  R_PlayerCreate_IllegalCharacter = 35
};
bool _emNetResult_IsValid(int value);
const _emNetResult _emNetResult_MIN = NetResult_Succeed;
const _emNetResult _emNetResult_MAX = R_PlayerCreate_IllegalCharacter;
const int _emNetResult_ARRAYSIZE = _emNetResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* _emNetResult_descriptor();
inline const ::std::string& _emNetResult_Name(_emNetResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    _emNetResult_descriptor(), value);
}
inline bool _emNetResult_Parse(
    const ::std::string& name, _emNetResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<_emNetResult>(
    _emNetResult_descriptor(), name, value);
}
// ===================================================================

class VerifyAsk : public ::google::protobuf::Message {
 public:
  VerifyAsk();
  virtual ~VerifyAsk();
  
  VerifyAsk(const VerifyAsk& from);
  
  inline VerifyAsk& operator=(const VerifyAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyAsk& default_instance();
  
  void Swap(VerifyAsk* other);
  
  // implements Message ----------------------------------------------
  
  VerifyAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VerifyAsk& from);
  void MergeFrom(const VerifyAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 mainVersion = 1;
  inline bool has_mainversion() const;
  inline void clear_mainversion();
  static const int kMainVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 mainversion() const;
  inline void set_mainversion(::google::protobuf::uint32 value);
  
  // optional uint32 subVersion = 2;
  inline bool has_subversion() const;
  inline void clear_subversion();
  static const int kSubVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 subversion() const;
  inline void set_subversion(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:VerifyAsk)
 private:
  inline void set_has_mainversion();
  inline void clear_has_mainversion();
  inline void set_has_subversion();
  inline void clear_has_subversion();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mainversion_;
  ::google::protobuf::uint32 subversion_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_MsgOperate_2eproto();
  friend void protobuf_AssignDesc_MsgOperate_2eproto();
  friend void protobuf_ShutdownFile_MsgOperate_2eproto();
  
  void InitAsDefaultInstance();
  static VerifyAsk* default_instance_;
};
// -------------------------------------------------------------------

class VerifyAck : public ::google::protobuf::Message {
 public:
  VerifyAck();
  virtual ~VerifyAck();
  
  VerifyAck(const VerifyAck& from);
  
  inline VerifyAck& operator=(const VerifyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyAck& default_instance();
  
  void Swap(VerifyAck* other);
  
  // implements Message ----------------------------------------------
  
  VerifyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VerifyAck& from);
  void MergeFrom(const VerifyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint64 key() const;
  inline void set_key(::google::protobuf::uint64 value);
  
  // optional uint64 systemTick = 2;
  inline bool has_systemtick() const;
  inline void clear_systemtick();
  static const int kSystemTickFieldNumber = 2;
  inline ::google::protobuf::uint64 systemtick() const;
  inline void set_systemtick(::google::protobuf::uint64 value);
  
  // optional uint32 systemTime = 3;
  inline bool has_systemtime() const;
  inline void clear_systemtime();
  static const int kSystemTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 systemtime() const;
  inline void set_systemtime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:VerifyAck)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_systemtick();
  inline void clear_has_systemtick();
  inline void set_has_systemtime();
  inline void clear_has_systemtime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 systemtick_;
  ::google::protobuf::uint32 systemtime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_MsgOperate_2eproto();
  friend void protobuf_AssignDesc_MsgOperate_2eproto();
  friend void protobuf_ShutdownFile_MsgOperate_2eproto();
  
  void InitAsDefaultInstance();
  static VerifyAck* default_instance_;
};
// -------------------------------------------------------------------

class PingAsk : public ::google::protobuf::Message {
 public:
  PingAsk();
  virtual ~PingAsk();
  
  PingAsk(const PingAsk& from);
  
  inline PingAsk& operator=(const PingAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PingAsk& default_instance();
  
  void Swap(PingAsk* other);
  
  // implements Message ----------------------------------------------
  
  PingAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingAsk& from);
  void MergeFrom(const PingAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 order = 1;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PingAsk)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 order_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_MsgOperate_2eproto();
  friend void protobuf_AssignDesc_MsgOperate_2eproto();
  friend void protobuf_ShutdownFile_MsgOperate_2eproto();
  
  void InitAsDefaultInstance();
  static PingAsk* default_instance_;
};
// -------------------------------------------------------------------

class PingAck : public ::google::protobuf::Message {
 public:
  PingAck();
  virtual ~PingAck();
  
  PingAck(const PingAck& from);
  
  inline PingAck& operator=(const PingAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PingAck& default_instance();
  
  void Swap(PingAck* other);
  
  // implements Message ----------------------------------------------
  
  PingAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingAck& from);
  void MergeFrom(const PingAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 order = 1;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint64 systemTick = 2;
  inline bool has_systemtick() const;
  inline void clear_systemtick();
  static const int kSystemTickFieldNumber = 2;
  inline ::google::protobuf::uint64 systemtick() const;
  inline void set_systemtick(::google::protobuf::uint64 value);
  
  // optional uint32 systemTime = 3;
  inline bool has_systemtime() const;
  inline void clear_systemtime();
  static const int kSystemTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 systemtime() const;
  inline void set_systemtime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PingAck)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_systemtick();
  inline void clear_has_systemtick();
  inline void set_has_systemtime();
  inline void clear_has_systemtime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 systemtick_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 systemtime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_MsgOperate_2eproto();
  friend void protobuf_AssignDesc_MsgOperate_2eproto();
  friend void protobuf_ShutdownFile_MsgOperate_2eproto();
  
  void InitAsDefaultInstance();
  static PingAck* default_instance_;
};
// -------------------------------------------------------------------

class BadNotify : public ::google::protobuf::Message {
 public:
  BadNotify();
  virtual ~BadNotify();
  
  BadNotify(const BadNotify& from);
  
  inline BadNotify& operator=(const BadNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BadNotify& default_instance();
  
  void Swap(BadNotify* other);
  
  // implements Message ----------------------------------------------
  
  BadNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BadNotify& from);
  void MergeFrom(const BadNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 packetSize = 1;
  inline bool has_packetsize() const;
  inline void clear_packetsize();
  static const int kPacketSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 packetsize() const;
  inline void set_packetsize(::google::protobuf::uint32 value);
  
  // optional uint32 mainProtocol = 2;
  inline bool has_mainprotocol() const;
  inline void clear_mainprotocol();
  static const int kMainProtocolFieldNumber = 2;
  inline ::google::protobuf::uint32 mainprotocol() const;
  inline void set_mainprotocol(::google::protobuf::uint32 value);
  
  // optional uint32 protocol = 3;
  inline bool has_protocol() const;
  inline void clear_protocol();
  static const int kProtocolFieldNumber = 3;
  inline ::google::protobuf::uint32 protocol() const;
  inline void set_protocol(::google::protobuf::uint32 value);
  
  // optional uint32 eventFlag = 4;
  inline bool has_eventflag() const;
  inline void clear_eventflag();
  static const int kEventFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 eventflag() const;
  inline void set_eventflag(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BadNotify)
 private:
  inline void set_has_packetsize();
  inline void clear_has_packetsize();
  inline void set_has_mainprotocol();
  inline void clear_has_mainprotocol();
  inline void set_has_protocol();
  inline void clear_has_protocol();
  inline void set_has_eventflag();
  inline void clear_has_eventflag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 packetsize_;
  ::google::protobuf::uint32 mainprotocol_;
  ::google::protobuf::uint32 protocol_;
  ::google::protobuf::uint32 eventflag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_MsgOperate_2eproto();
  friend void protobuf_AssignDesc_MsgOperate_2eproto();
  friend void protobuf_ShutdownFile_MsgOperate_2eproto();
  
  void InitAsDefaultInstance();
  static BadNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// VerifyAsk

// optional uint32 mainVersion = 1;
inline bool VerifyAsk::has_mainversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyAsk::set_has_mainversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyAsk::clear_has_mainversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyAsk::clear_mainversion() {
  mainversion_ = 0u;
  clear_has_mainversion();
}
inline ::google::protobuf::uint32 VerifyAsk::mainversion() const {
  return mainversion_;
}
inline void VerifyAsk::set_mainversion(::google::protobuf::uint32 value) {
  set_has_mainversion();
  mainversion_ = value;
}

// optional uint32 subVersion = 2;
inline bool VerifyAsk::has_subversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyAsk::set_has_subversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyAsk::clear_has_subversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyAsk::clear_subversion() {
  subversion_ = 0u;
  clear_has_subversion();
}
inline ::google::protobuf::uint32 VerifyAsk::subversion() const {
  return subversion_;
}
inline void VerifyAsk::set_subversion(::google::protobuf::uint32 value) {
  set_has_subversion();
  subversion_ = value;
}

// -------------------------------------------------------------------

// VerifyAck

// optional uint64 key = 1;
inline bool VerifyAck::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyAck::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyAck::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyAck::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 VerifyAck::key() const {
  return key_;
}
inline void VerifyAck::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
}

// optional uint64 systemTick = 2;
inline bool VerifyAck::has_systemtick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyAck::set_has_systemtick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyAck::clear_has_systemtick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyAck::clear_systemtick() {
  systemtick_ = GOOGLE_ULONGLONG(0);
  clear_has_systemtick();
}
inline ::google::protobuf::uint64 VerifyAck::systemtick() const {
  return systemtick_;
}
inline void VerifyAck::set_systemtick(::google::protobuf::uint64 value) {
  set_has_systemtick();
  systemtick_ = value;
}

// optional uint32 systemTime = 3;
inline bool VerifyAck::has_systemtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyAck::set_has_systemtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyAck::clear_has_systemtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyAck::clear_systemtime() {
  systemtime_ = 0u;
  clear_has_systemtime();
}
inline ::google::protobuf::uint32 VerifyAck::systemtime() const {
  return systemtime_;
}
inline void VerifyAck::set_systemtime(::google::protobuf::uint32 value) {
  set_has_systemtime();
  systemtime_ = value;
}

// -------------------------------------------------------------------

// PingAsk

// optional uint32 order = 1;
inline bool PingAsk::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingAsk::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingAsk::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingAsk::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PingAsk::order() const {
  return order_;
}
inline void PingAsk::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// PingAck

// optional uint32 order = 1;
inline bool PingAck::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingAck::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingAck::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingAck::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PingAck::order() const {
  return order_;
}
inline void PingAck::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// optional uint64 systemTick = 2;
inline bool PingAck::has_systemtick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PingAck::set_has_systemtick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PingAck::clear_has_systemtick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PingAck::clear_systemtick() {
  systemtick_ = GOOGLE_ULONGLONG(0);
  clear_has_systemtick();
}
inline ::google::protobuf::uint64 PingAck::systemtick() const {
  return systemtick_;
}
inline void PingAck::set_systemtick(::google::protobuf::uint64 value) {
  set_has_systemtick();
  systemtick_ = value;
}

// optional uint32 systemTime = 3;
inline bool PingAck::has_systemtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PingAck::set_has_systemtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PingAck::clear_has_systemtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PingAck::clear_systemtime() {
  systemtime_ = 0u;
  clear_has_systemtime();
}
inline ::google::protobuf::uint32 PingAck::systemtime() const {
  return systemtime_;
}
inline void PingAck::set_systemtime(::google::protobuf::uint32 value) {
  set_has_systemtime();
  systemtime_ = value;
}

// -------------------------------------------------------------------

// BadNotify

// optional uint32 packetSize = 1;
inline bool BadNotify::has_packetsize() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BadNotify::set_has_packetsize() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BadNotify::clear_has_packetsize() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BadNotify::clear_packetsize() {
  packetsize_ = 0u;
  clear_has_packetsize();
}
inline ::google::protobuf::uint32 BadNotify::packetsize() const {
  return packetsize_;
}
inline void BadNotify::set_packetsize(::google::protobuf::uint32 value) {
  set_has_packetsize();
  packetsize_ = value;
}

// optional uint32 mainProtocol = 2;
inline bool BadNotify::has_mainprotocol() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BadNotify::set_has_mainprotocol() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BadNotify::clear_has_mainprotocol() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BadNotify::clear_mainprotocol() {
  mainprotocol_ = 0u;
  clear_has_mainprotocol();
}
inline ::google::protobuf::uint32 BadNotify::mainprotocol() const {
  return mainprotocol_;
}
inline void BadNotify::set_mainprotocol(::google::protobuf::uint32 value) {
  set_has_mainprotocol();
  mainprotocol_ = value;
}

// optional uint32 protocol = 3;
inline bool BadNotify::has_protocol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BadNotify::set_has_protocol() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BadNotify::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BadNotify::clear_protocol() {
  protocol_ = 0u;
  clear_has_protocol();
}
inline ::google::protobuf::uint32 BadNotify::protocol() const {
  return protocol_;
}
inline void BadNotify::set_protocol(::google::protobuf::uint32 value) {
  set_has_protocol();
  protocol_ = value;
}

// optional uint32 eventFlag = 4;
inline bool BadNotify::has_eventflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BadNotify::set_has_eventflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BadNotify::clear_has_eventflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BadNotify::clear_eventflag() {
  eventflag_ = 0u;
  clear_has_eventflag();
}
inline ::google::protobuf::uint32 BadNotify::eventflag() const {
  return eventflag_;
}
inline void BadNotify::set_eventflag(::google::protobuf::uint32 value) {
  set_has_eventflag();
  eventflag_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< _e_P_OperateFlag>() {
  return _e_P_OperateFlag_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< _emNetResult>() {
  return _emNetResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgOperate_2eproto__INCLUDED
