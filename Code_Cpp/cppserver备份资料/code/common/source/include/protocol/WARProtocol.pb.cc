// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "WARProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* _emPW2R_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emW2R_Operator_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emPR2W_Protocol_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* _emR2W_Operator_Protocol_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_WARProtocol_2eproto() {
  protobuf_AddDesc_WARProtocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "WARProtocol.proto");
  GOOGLE_CHECK(file != NULL);
  _emPW2R_Protocol_descriptor_ = file->enum_type(0);
  _emW2R_Operator_Protocol_descriptor_ = file->enum_type(1);
  _emPR2W_Protocol_descriptor_ = file->enum_type(2);
  _emR2W_Operator_Protocol_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_WARProtocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_WARProtocol_2eproto() {
}

void protobuf_AddDesc_WARProtocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021WARProtocol.proto*&\n\020_emPW2R_Protocol\022"
    "\022\n\016P_W2R_Operator\020\000*R\n\030_emW2R_Operator_P"
    "rotocol\022\031\n\025W2R_Operator_Register\020\000\022\033\n\027W2"
    "R_Operator_RegFaction\020\001*&\n\020_emPR2W_Proto"
    "col\022\022\n\016P_R2W_Operator\020\000*R\n\030_emR2W_Operat"
    "or_Protocol\022\031\n\025R2W_Operator_Register\020\000\022\033"
    "\n\027R2W_Operator_RegFaction\020\001", 267);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WARProtocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_WARProtocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_WARProtocol_2eproto {
  StaticDescriptorInitializer_WARProtocol_2eproto() {
    protobuf_AddDesc_WARProtocol_2eproto();
  }
} static_descriptor_initializer_WARProtocol_2eproto_;

const ::google::protobuf::EnumDescriptor* _emPW2R_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPW2R_Protocol_descriptor_;
}
bool _emPW2R_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emW2R_Operator_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emW2R_Operator_Protocol_descriptor_;
}
bool _emW2R_Operator_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emPR2W_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emPR2W_Protocol_descriptor_;
}
bool _emPR2W_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* _emR2W_Operator_Protocol_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return _emR2W_Operator_Protocol_descriptor_;
}
bool _emR2W_Operator_Protocol_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
