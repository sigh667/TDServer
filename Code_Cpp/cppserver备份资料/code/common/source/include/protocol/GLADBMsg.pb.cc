// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GLADBMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBGL2DBStartLoadAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGL2DBStartLoadAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDB2GLDataPlayer_Load_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDB2GLDataPlayer_Load_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGL2DBSaleMoney_Delete_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGL2DBSaleMoney_Delete_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDB2GLSaleMoney_Load_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDB2GLSaleMoney_Load_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGL2DBAuctionItem_Delete_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGL2DBAuctionItem_Delete_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBDB2GLAuctionItem_Load_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBDB2GLAuctionItem_Load_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GLADBMsg_2eproto() {
  protobuf_AddDesc_GLADBMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GLADBMsg.proto");
  GOOGLE_CHECK(file != NULL);
  PBGL2DBStartLoadAsk_descriptor_ = file->message_type(0);
  static const int PBGL2DBStartLoadAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBStartLoadAsk, worldid_),
  };
  PBGL2DBStartLoadAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBGL2DBStartLoadAsk_descriptor_,
      PBGL2DBStartLoadAsk::default_instance_,
      PBGL2DBStartLoadAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBStartLoadAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBStartLoadAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBGL2DBStartLoadAsk));
  PBDB2GLDataPlayer_Load_descriptor_ = file->message_type(1);
  static const int PBDB2GLDataPlayer_Load_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLDataPlayer_Load, player_),
  };
  PBDB2GLDataPlayer_Load_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDB2GLDataPlayer_Load_descriptor_,
      PBDB2GLDataPlayer_Load::default_instance_,
      PBDB2GLDataPlayer_Load_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLDataPlayer_Load, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLDataPlayer_Load, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDB2GLDataPlayer_Load));
  PBGL2DBSaleMoney_Delete_descriptor_ = file->message_type(2);
  static const int PBGL2DBSaleMoney_Delete_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBSaleMoney_Delete, saleorderid_),
  };
  PBGL2DBSaleMoney_Delete_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBGL2DBSaleMoney_Delete_descriptor_,
      PBGL2DBSaleMoney_Delete::default_instance_,
      PBGL2DBSaleMoney_Delete_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBSaleMoney_Delete, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBSaleMoney_Delete, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBGL2DBSaleMoney_Delete));
  PBDB2GLSaleMoney_Load_descriptor_ = file->message_type(3);
  static const int PBDB2GLSaleMoney_Load_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLSaleMoney_Load, salemoney_),
  };
  PBDB2GLSaleMoney_Load_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDB2GLSaleMoney_Load_descriptor_,
      PBDB2GLSaleMoney_Load::default_instance_,
      PBDB2GLSaleMoney_Load_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLSaleMoney_Load, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLSaleMoney_Load, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDB2GLSaleMoney_Load));
  PBGL2DBAuctionItem_Delete_descriptor_ = file->message_type(4);
  static const int PBGL2DBAuctionItem_Delete_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBAuctionItem_Delete, saleorderid_),
  };
  PBGL2DBAuctionItem_Delete_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBGL2DBAuctionItem_Delete_descriptor_,
      PBGL2DBAuctionItem_Delete::default_instance_,
      PBGL2DBAuctionItem_Delete_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBAuctionItem_Delete, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGL2DBAuctionItem_Delete, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBGL2DBAuctionItem_Delete));
  PBDB2GLAuctionItem_Load_descriptor_ = file->message_type(5);
  static const int PBDB2GLAuctionItem_Load_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLAuctionItem_Load, item_),
  };
  PBDB2GLAuctionItem_Load_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBDB2GLAuctionItem_Load_descriptor_,
      PBDB2GLAuctionItem_Load::default_instance_,
      PBDB2GLAuctionItem_Load_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLAuctionItem_Load, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDB2GLAuctionItem_Load, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBDB2GLAuctionItem_Load));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GLADBMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBGL2DBStartLoadAsk_descriptor_, &PBGL2DBStartLoadAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDB2GLDataPlayer_Load_descriptor_, &PBDB2GLDataPlayer_Load::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBGL2DBSaleMoney_Delete_descriptor_, &PBGL2DBSaleMoney_Delete::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDB2GLSaleMoney_Load_descriptor_, &PBDB2GLSaleMoney_Load::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBGL2DBAuctionItem_Delete_descriptor_, &PBGL2DBAuctionItem_Delete::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBDB2GLAuctionItem_Load_descriptor_, &PBDB2GLAuctionItem_Load::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GLADBMsg_2eproto() {
  delete PBGL2DBStartLoadAsk::default_instance_;
  delete PBGL2DBStartLoadAsk_reflection_;
  delete PBDB2GLDataPlayer_Load::default_instance_;
  delete PBDB2GLDataPlayer_Load_reflection_;
  delete PBGL2DBSaleMoney_Delete::default_instance_;
  delete PBGL2DBSaleMoney_Delete_reflection_;
  delete PBDB2GLSaleMoney_Load::default_instance_;
  delete PBDB2GLSaleMoney_Load_reflection_;
  delete PBGL2DBAuctionItem_Delete::default_instance_;
  delete PBGL2DBAuctionItem_Delete_reflection_;
  delete PBDB2GLAuctionItem_Load::default_instance_;
  delete PBDB2GLAuctionItem_Load_reflection_;
}

void protobuf_AddDesc_GLADBMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_PlayerStruct_2eproto();
  ::protobuf_AddDesc_AccountStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016GLADBMsg.proto\032\022PlayerStruct.proto\032\023Ac"
    "countStruct.proto\"&\n\023PBGL2DBStartLoadAsk"
    "\022\017\n\007worldid\030\001 \003(\r\"(\n\026PBDB2GLDataPlayer_L"
    "oad\022\016\n\006player\030\001 \003(\014\".\n\027PBGL2DBSaleMoney_"
    "Delete\022\023\n\013saleorderid\030\001 \001(\004\">\n\025PBDB2GLSa"
    "leMoney_Load\022%\n\tsalemoney\030\001 \003(\0132\022.PBSale"
    "MoneyInfoEx\"0\n\031PBGL2DBAuctionItem_Delete"
    "\022\023\n\013saleorderid\030\001 \001(\004\"=\n\027PBDB2GLAuctionI"
    "tem_Load\022\"\n\004item\030\001 \003(\0132\024.PBAuctionItemIn"
    "foEx", 364);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GLADBMsg.proto", &protobuf_RegisterTypes);
  PBGL2DBStartLoadAsk::default_instance_ = new PBGL2DBStartLoadAsk();
  PBDB2GLDataPlayer_Load::default_instance_ = new PBDB2GLDataPlayer_Load();
  PBGL2DBSaleMoney_Delete::default_instance_ = new PBGL2DBSaleMoney_Delete();
  PBDB2GLSaleMoney_Load::default_instance_ = new PBDB2GLSaleMoney_Load();
  PBGL2DBAuctionItem_Delete::default_instance_ = new PBGL2DBAuctionItem_Delete();
  PBDB2GLAuctionItem_Load::default_instance_ = new PBDB2GLAuctionItem_Load();
  PBGL2DBStartLoadAsk::default_instance_->InitAsDefaultInstance();
  PBDB2GLDataPlayer_Load::default_instance_->InitAsDefaultInstance();
  PBGL2DBSaleMoney_Delete::default_instance_->InitAsDefaultInstance();
  PBDB2GLSaleMoney_Load::default_instance_->InitAsDefaultInstance();
  PBGL2DBAuctionItem_Delete::default_instance_->InitAsDefaultInstance();
  PBDB2GLAuctionItem_Load::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GLADBMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GLADBMsg_2eproto {
  StaticDescriptorInitializer_GLADBMsg_2eproto() {
    protobuf_AddDesc_GLADBMsg_2eproto();
  }
} static_descriptor_initializer_GLADBMsg_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int PBGL2DBStartLoadAsk::kWorldidFieldNumber;
#endif  // !_MSC_VER

PBGL2DBStartLoadAsk::PBGL2DBStartLoadAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBGL2DBStartLoadAsk::InitAsDefaultInstance() {
}

PBGL2DBStartLoadAsk::PBGL2DBStartLoadAsk(const PBGL2DBStartLoadAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBGL2DBStartLoadAsk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBGL2DBStartLoadAsk::~PBGL2DBStartLoadAsk() {
  SharedDtor();
}

void PBGL2DBStartLoadAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBGL2DBStartLoadAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGL2DBStartLoadAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGL2DBStartLoadAsk_descriptor_;
}

const PBGL2DBStartLoadAsk& PBGL2DBStartLoadAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GLADBMsg_2eproto();  return *default_instance_;
}

PBGL2DBStartLoadAsk* PBGL2DBStartLoadAsk::default_instance_ = NULL;

PBGL2DBStartLoadAsk* PBGL2DBStartLoadAsk::New() const {
  return new PBGL2DBStartLoadAsk;
}

void PBGL2DBStartLoadAsk::Clear() {
  worldid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBGL2DBStartLoadAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 worldid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_worldid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_worldid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_worldid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_worldid;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBGL2DBStartLoadAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 worldid = 1;
  for (int i = 0; i < this->worldid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->worldid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBGL2DBStartLoadAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 worldid = 1;
  for (int i = 0; i < this->worldid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->worldid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBGL2DBStartLoadAsk::ByteSize() const {
  int total_size = 0;
  
  // repeated uint32 worldid = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->worldid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->worldid(i));
    }
    total_size += 1 * this->worldid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGL2DBStartLoadAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBGL2DBStartLoadAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBGL2DBStartLoadAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBGL2DBStartLoadAsk::MergeFrom(const PBGL2DBStartLoadAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  worldid_.MergeFrom(from.worldid_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBGL2DBStartLoadAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGL2DBStartLoadAsk::CopyFrom(const PBGL2DBStartLoadAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGL2DBStartLoadAsk::IsInitialized() const {
  
  return true;
}

void PBGL2DBStartLoadAsk::Swap(PBGL2DBStartLoadAsk* other) {
  if (other != this) {
    worldid_.Swap(&other->worldid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBGL2DBStartLoadAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGL2DBStartLoadAsk_descriptor_;
  metadata.reflection = PBGL2DBStartLoadAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDB2GLDataPlayer_Load::kPlayerFieldNumber;
#endif  // !_MSC_VER

PBDB2GLDataPlayer_Load::PBDB2GLDataPlayer_Load()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDB2GLDataPlayer_Load::InitAsDefaultInstance() {
}

PBDB2GLDataPlayer_Load::PBDB2GLDataPlayer_Load(const PBDB2GLDataPlayer_Load& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDB2GLDataPlayer_Load::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDB2GLDataPlayer_Load::~PBDB2GLDataPlayer_Load() {
  SharedDtor();
}

void PBDB2GLDataPlayer_Load::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDB2GLDataPlayer_Load::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDB2GLDataPlayer_Load::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDB2GLDataPlayer_Load_descriptor_;
}

const PBDB2GLDataPlayer_Load& PBDB2GLDataPlayer_Load::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GLADBMsg_2eproto();  return *default_instance_;
}

PBDB2GLDataPlayer_Load* PBDB2GLDataPlayer_Load::default_instance_ = NULL;

PBDB2GLDataPlayer_Load* PBDB2GLDataPlayer_Load::New() const {
  return new PBDB2GLDataPlayer_Load;
}

void PBDB2GLDataPlayer_Load::Clear() {
  player_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDB2GLDataPlayer_Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes player = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_player()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_player;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDB2GLDataPlayer_Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated bytes player = 1;
  for (int i = 0; i < this->player_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->player(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDB2GLDataPlayer_Load::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated bytes player = 1;
  for (int i = 0; i < this->player_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->player(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDB2GLDataPlayer_Load::ByteSize() const {
  int total_size = 0;
  
  // repeated bytes player = 1;
  total_size += 1 * this->player_size();
  for (int i = 0; i < this->player_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->player(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDB2GLDataPlayer_Load::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDB2GLDataPlayer_Load* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDB2GLDataPlayer_Load*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDB2GLDataPlayer_Load::MergeFrom(const PBDB2GLDataPlayer_Load& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_.MergeFrom(from.player_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDB2GLDataPlayer_Load::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDB2GLDataPlayer_Load::CopyFrom(const PBDB2GLDataPlayer_Load& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDB2GLDataPlayer_Load::IsInitialized() const {
  
  return true;
}

void PBDB2GLDataPlayer_Load::Swap(PBDB2GLDataPlayer_Load* other) {
  if (other != this) {
    player_.Swap(&other->player_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDB2GLDataPlayer_Load::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDB2GLDataPlayer_Load_descriptor_;
  metadata.reflection = PBDB2GLDataPlayer_Load_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBGL2DBSaleMoney_Delete::kSaleorderidFieldNumber;
#endif  // !_MSC_VER

PBGL2DBSaleMoney_Delete::PBGL2DBSaleMoney_Delete()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBGL2DBSaleMoney_Delete::InitAsDefaultInstance() {
}

PBGL2DBSaleMoney_Delete::PBGL2DBSaleMoney_Delete(const PBGL2DBSaleMoney_Delete& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBGL2DBSaleMoney_Delete::SharedCtor() {
  _cached_size_ = 0;
  saleorderid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBGL2DBSaleMoney_Delete::~PBGL2DBSaleMoney_Delete() {
  SharedDtor();
}

void PBGL2DBSaleMoney_Delete::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBGL2DBSaleMoney_Delete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGL2DBSaleMoney_Delete::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGL2DBSaleMoney_Delete_descriptor_;
}

const PBGL2DBSaleMoney_Delete& PBGL2DBSaleMoney_Delete::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GLADBMsg_2eproto();  return *default_instance_;
}

PBGL2DBSaleMoney_Delete* PBGL2DBSaleMoney_Delete::default_instance_ = NULL;

PBGL2DBSaleMoney_Delete* PBGL2DBSaleMoney_Delete::New() const {
  return new PBGL2DBSaleMoney_Delete;
}

void PBGL2DBSaleMoney_Delete::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    saleorderid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBGL2DBSaleMoney_Delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 saleorderid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &saleorderid_)));
          set_has_saleorderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBGL2DBSaleMoney_Delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 saleorderid = 1;
  if (has_saleorderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->saleorderid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBGL2DBSaleMoney_Delete::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 saleorderid = 1;
  if (has_saleorderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->saleorderid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBGL2DBSaleMoney_Delete::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 saleorderid = 1;
    if (has_saleorderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->saleorderid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGL2DBSaleMoney_Delete::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBGL2DBSaleMoney_Delete* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBGL2DBSaleMoney_Delete*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBGL2DBSaleMoney_Delete::MergeFrom(const PBGL2DBSaleMoney_Delete& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_saleorderid()) {
      set_saleorderid(from.saleorderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBGL2DBSaleMoney_Delete::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGL2DBSaleMoney_Delete::CopyFrom(const PBGL2DBSaleMoney_Delete& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGL2DBSaleMoney_Delete::IsInitialized() const {
  
  return true;
}

void PBGL2DBSaleMoney_Delete::Swap(PBGL2DBSaleMoney_Delete* other) {
  if (other != this) {
    std::swap(saleorderid_, other->saleorderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBGL2DBSaleMoney_Delete::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGL2DBSaleMoney_Delete_descriptor_;
  metadata.reflection = PBGL2DBSaleMoney_Delete_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDB2GLSaleMoney_Load::kSalemoneyFieldNumber;
#endif  // !_MSC_VER

PBDB2GLSaleMoney_Load::PBDB2GLSaleMoney_Load()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDB2GLSaleMoney_Load::InitAsDefaultInstance() {
}

PBDB2GLSaleMoney_Load::PBDB2GLSaleMoney_Load(const PBDB2GLSaleMoney_Load& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDB2GLSaleMoney_Load::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDB2GLSaleMoney_Load::~PBDB2GLSaleMoney_Load() {
  SharedDtor();
}

void PBDB2GLSaleMoney_Load::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDB2GLSaleMoney_Load::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDB2GLSaleMoney_Load::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDB2GLSaleMoney_Load_descriptor_;
}

const PBDB2GLSaleMoney_Load& PBDB2GLSaleMoney_Load::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GLADBMsg_2eproto();  return *default_instance_;
}

PBDB2GLSaleMoney_Load* PBDB2GLSaleMoney_Load::default_instance_ = NULL;

PBDB2GLSaleMoney_Load* PBDB2GLSaleMoney_Load::New() const {
  return new PBDB2GLSaleMoney_Load;
}

void PBDB2GLSaleMoney_Load::Clear() {
  salemoney_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDB2GLSaleMoney_Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBSaleMoneyInfoEx salemoney = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_salemoney:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_salemoney()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_salemoney;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDB2GLSaleMoney_Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBSaleMoneyInfoEx salemoney = 1;
  for (int i = 0; i < this->salemoney_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->salemoney(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDB2GLSaleMoney_Load::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBSaleMoneyInfoEx salemoney = 1;
  for (int i = 0; i < this->salemoney_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->salemoney(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDB2GLSaleMoney_Load::ByteSize() const {
  int total_size = 0;
  
  // repeated .PBSaleMoneyInfoEx salemoney = 1;
  total_size += 1 * this->salemoney_size();
  for (int i = 0; i < this->salemoney_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->salemoney(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDB2GLSaleMoney_Load::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDB2GLSaleMoney_Load* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDB2GLSaleMoney_Load*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDB2GLSaleMoney_Load::MergeFrom(const PBDB2GLSaleMoney_Load& from) {
  GOOGLE_CHECK_NE(&from, this);
  salemoney_.MergeFrom(from.salemoney_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDB2GLSaleMoney_Load::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDB2GLSaleMoney_Load::CopyFrom(const PBDB2GLSaleMoney_Load& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDB2GLSaleMoney_Load::IsInitialized() const {
  
  return true;
}

void PBDB2GLSaleMoney_Load::Swap(PBDB2GLSaleMoney_Load* other) {
  if (other != this) {
    salemoney_.Swap(&other->salemoney_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDB2GLSaleMoney_Load::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDB2GLSaleMoney_Load_descriptor_;
  metadata.reflection = PBDB2GLSaleMoney_Load_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBGL2DBAuctionItem_Delete::kSaleorderidFieldNumber;
#endif  // !_MSC_VER

PBGL2DBAuctionItem_Delete::PBGL2DBAuctionItem_Delete()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBGL2DBAuctionItem_Delete::InitAsDefaultInstance() {
}

PBGL2DBAuctionItem_Delete::PBGL2DBAuctionItem_Delete(const PBGL2DBAuctionItem_Delete& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBGL2DBAuctionItem_Delete::SharedCtor() {
  _cached_size_ = 0;
  saleorderid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBGL2DBAuctionItem_Delete::~PBGL2DBAuctionItem_Delete() {
  SharedDtor();
}

void PBGL2DBAuctionItem_Delete::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBGL2DBAuctionItem_Delete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGL2DBAuctionItem_Delete::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGL2DBAuctionItem_Delete_descriptor_;
}

const PBGL2DBAuctionItem_Delete& PBGL2DBAuctionItem_Delete::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GLADBMsg_2eproto();  return *default_instance_;
}

PBGL2DBAuctionItem_Delete* PBGL2DBAuctionItem_Delete::default_instance_ = NULL;

PBGL2DBAuctionItem_Delete* PBGL2DBAuctionItem_Delete::New() const {
  return new PBGL2DBAuctionItem_Delete;
}

void PBGL2DBAuctionItem_Delete::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    saleorderid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBGL2DBAuctionItem_Delete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 saleorderid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &saleorderid_)));
          set_has_saleorderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBGL2DBAuctionItem_Delete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 saleorderid = 1;
  if (has_saleorderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->saleorderid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBGL2DBAuctionItem_Delete::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 saleorderid = 1;
  if (has_saleorderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->saleorderid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBGL2DBAuctionItem_Delete::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 saleorderid = 1;
    if (has_saleorderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->saleorderid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGL2DBAuctionItem_Delete::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBGL2DBAuctionItem_Delete* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBGL2DBAuctionItem_Delete*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBGL2DBAuctionItem_Delete::MergeFrom(const PBGL2DBAuctionItem_Delete& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_saleorderid()) {
      set_saleorderid(from.saleorderid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBGL2DBAuctionItem_Delete::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGL2DBAuctionItem_Delete::CopyFrom(const PBGL2DBAuctionItem_Delete& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBGL2DBAuctionItem_Delete::IsInitialized() const {
  
  return true;
}

void PBGL2DBAuctionItem_Delete::Swap(PBGL2DBAuctionItem_Delete* other) {
  if (other != this) {
    std::swap(saleorderid_, other->saleorderid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBGL2DBAuctionItem_Delete::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGL2DBAuctionItem_Delete_descriptor_;
  metadata.reflection = PBGL2DBAuctionItem_Delete_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBDB2GLAuctionItem_Load::kItemFieldNumber;
#endif  // !_MSC_VER

PBDB2GLAuctionItem_Load::PBDB2GLAuctionItem_Load()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBDB2GLAuctionItem_Load::InitAsDefaultInstance() {
}

PBDB2GLAuctionItem_Load::PBDB2GLAuctionItem_Load(const PBDB2GLAuctionItem_Load& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBDB2GLAuctionItem_Load::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBDB2GLAuctionItem_Load::~PBDB2GLAuctionItem_Load() {
  SharedDtor();
}

void PBDB2GLAuctionItem_Load::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBDB2GLAuctionItem_Load::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDB2GLAuctionItem_Load::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBDB2GLAuctionItem_Load_descriptor_;
}

const PBDB2GLAuctionItem_Load& PBDB2GLAuctionItem_Load::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GLADBMsg_2eproto();  return *default_instance_;
}

PBDB2GLAuctionItem_Load* PBDB2GLAuctionItem_Load::default_instance_ = NULL;

PBDB2GLAuctionItem_Load* PBDB2GLAuctionItem_Load::New() const {
  return new PBDB2GLAuctionItem_Load;
}

void PBDB2GLAuctionItem_Load::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBDB2GLAuctionItem_Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBAuctionItemInfoEx item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBDB2GLAuctionItem_Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PBAuctionItemInfoEx item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBDB2GLAuctionItem_Load::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PBAuctionItemInfoEx item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBDB2GLAuctionItem_Load::ByteSize() const {
  int total_size = 0;
  
  // repeated .PBAuctionItemInfoEx item = 1;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDB2GLAuctionItem_Load::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBDB2GLAuctionItem_Load* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBDB2GLAuctionItem_Load*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBDB2GLAuctionItem_Load::MergeFrom(const PBDB2GLAuctionItem_Load& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBDB2GLAuctionItem_Load::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDB2GLAuctionItem_Load::CopyFrom(const PBDB2GLAuctionItem_Load& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDB2GLAuctionItem_Load::IsInitialized() const {
  
  return true;
}

void PBDB2GLAuctionItem_Load::Swap(PBDB2GLAuctionItem_Load* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBDB2GLAuctionItem_Load::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBDB2GLAuctionItem_Load_descriptor_;
  metadata.reflection = PBDB2GLAuctionItem_Load_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
