// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerStruct.proto

#ifndef PROTOBUF_PlayerStruct_2eproto__INCLUDED
#define PROTOBUF_PlayerStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "AccountStruct.pb.h"
#include "GameStruct.pb.h"
#include "GameDefine.pb.h"
#include "Faction.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerStruct_2eproto();
void protobuf_AssignDesc_PlayerStruct_2eproto();
void protobuf_ShutdownFile_PlayerStruct_2eproto();

class PBPlayerDisplay;
class PBPlayerShape;
class PBPlayerShapeData;
class PBPlayerFashionData;
class PBPlayerAvatar;
class PBPlayerMoney;
class PBEnergy;
class PBEquipLucky;
class PBCopymapDayCount;
class PBTeamTaskDayCount;
class PBForbidSpeak;
class PBPlayerBase;
class PBCoolingInfo;
class PBCooling;
class PBSystemSkill;
class PBSystemBuff;
class PBSystemCounter;
class PBSystemSwitch;
class PBPlayerColletion;
class PBPrize;
class PBPlayerPrize;
class PBPlayerTrade;
class PBQuestItem;
class PBQuest;
class PBQuestCompleted;
class PBPlayerQuest;
class PBWenTaoSchemeInfo;
class PBWenTaoScheme;
class PBBingFa;
class PBPlayerWenTao;
class PBWulueZhanlue;
class PBWulueScheme;
class PBPlayerWulue;
class PBCopymapInfo;
class PBPlayerCopymap;
class PBIdentitySetInfo;
class PBIdentitySkillInfo;
class PBPlayerIdentity;
class PBPlayerWuxuePageInfo;
class PBPlayerWuxueSchemeInfo;
class PBPlayerWuxue;
class PBPlayerDart;
class PBPlayerFactionBoss;
class PBPlayerTitleInfo;
class PBPlayerClassfiyTitle;
class PBPlayerTitle;
class PBPlayerDazuoguaji;
class PBFashion;
class PBPlayerFashion;
class PBEquipColumn;
class PBPlayerEquipColumn;
class PBPlayerGreatWallTrain;
class PBActivityInfo;
class PBPlayerActivity;
class PBLlayerRelive;
class PBPlayerClimbTowerItem;
class PBPlayerClimbTower;
class PBPlayerPvpData;
class PBPlayerPvp;
class PBPlayerLoginWealData;
class PBPlayerWeal;
class PBSinglePvpRecord;
class PBPlayerSinglePvp;
class PBPlayerCommon;
class PBPlayerManor;
class PBPlayerSystem;
class PBPlayerGlobalBase;
class PBSaleMoneyInfo;
class PBSaleMoneyLog;
class PBPlayerGlobalSaleMoney;
class PBPlayerGlobalSaleMoneySave;
class PBSaleMoneyInfoEx;
class PBSaleMoneyStatistics;
class PBSaleMoneyRecentTradeLog;
class PBSaleMoneyPriceData;
class PBAuctionItemInfo;
class PBAuctionLog;
class PBPlayerGlobalAuction;
class PBPlayerGlobalAuctionSave;
class PBAuctionItemAve;
class PBAuctionItemInfoEx;
class PBAuctionPriceData;
class PBPlayerGlobal;
class PBPlayerGlobalData;
class PBItemUseCount;
class PBEquipMakeSkilled;
class PBEquipMakeVigour;
class PBEquipMakeOEM;
class PBPlayerBag;
class PBGoods;
class PBPlayerStore;
class PBClientData;
class PBMailSaleMoneyBuy;
class PBMailSaleMoneySale;
class PBMailSaleMoneyBuyReturn;
class PBMailSaleMoneySaleReturn;
class PBMailAuctionLockRet;
class PBMailAuctionSaleTimeOut;
class PBMailAuctionSaleGet;
class PBMailAuctionBuyGet;
class PBMailPromote;
class PBMailFactionBoss;
class PBMailWorldBoss;
class PBMailCopymapCashReward;
class PBMailSinglePvpFirstPrize;
class PBMailSinglePvpDayPrize;
class PBMailSinglePvpWeekPrize;
class PBMailManorTitleGet;
class PBMailManorResult;
class PBMailFactionInfo;
class PBMailTopListInfo;
class PBMail;
class PBPlayerMail;
class PBFriendInfo;
class PBFriendGroup;
class PBPlayerFriend;
class PBFactionBossPersonalTop;
class PBFactionBossFactionTop;
class PBFactionBossUnionTop;
class PBPlayerData;
class PBPlayerEquipData;
class PBGhostGameAttr;
class PBPlayerView;
class PBSinglePvpInfo;
class PBWorldBossKillInfo;
class PBWorldBossKill;
class PBWTopListInfo;
class PBTopListList;
class PBGlobalServerData;
class PBWorldFactionBossData;
class PBTreasureValueInfo;
class PBWorldTreasureData;
class PBCorpsMemberInfo;
class PBCorpsInfo;
class PBWorldCorpsData;
class PBWorldServerData;

// ===================================================================

class PBPlayerDisplay : public ::google::protobuf::Message {
 public:
  PBPlayerDisplay();
  virtual ~PBPlayerDisplay();
  
  PBPlayerDisplay(const PBPlayerDisplay& from);
  
  inline PBPlayerDisplay& operator=(const PBPlayerDisplay& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerDisplay& default_instance();
  
  void Swap(PBPlayerDisplay* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerDisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerDisplay& from);
  void MergeFrom(const PBPlayerDisplay& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string playername = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 playerlevel = 3;
  inline bool has_playerlevel() const;
  inline void clear_playerlevel();
  static const int kPlayerlevelFieldNumber = 3;
  inline ::google::protobuf::uint32 playerlevel() const;
  inline void set_playerlevel(::google::protobuf::uint32 value);
  
  // optional uint32 worldid = 4;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 4;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 logicworldid = 5;
  inline bool has_logicworldid() const;
  inline void clear_logicworldid();
  static const int kLogicworldidFieldNumber = 5;
  inline ::google::protobuf::uint32 logicworldid() const;
  inline void set_logicworldid(::google::protobuf::uint32 value);
  
  // optional uint32 job = 6;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 6;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // optional uint32 gender = 7;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 7;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // optional uint32 campid = 8;
  inline bool has_campid() const;
  inline void clear_campid();
  static const int kCampidFieldNumber = 8;
  inline ::google::protobuf::uint32 campid() const;
  inline void set_campid(::google::protobuf::uint32 value);
  
  // optional string factionname = 9;
  inline bool has_factionname() const;
  inline void clear_factionname();
  static const int kFactionnameFieldNumber = 9;
  inline const ::std::string& factionname() const;
  inline void set_factionname(const ::std::string& value);
  inline void set_factionname(const char* value);
  inline void set_factionname(const char* value, size_t size);
  inline ::std::string* mutable_factionname();
  inline ::std::string* release_factionname();
  
  // optional string aliancename = 10;
  inline bool has_aliancename() const;
  inline void clear_aliancename();
  static const int kAliancenameFieldNumber = 10;
  inline const ::std::string& aliancename() const;
  inline void set_aliancename(const ::std::string& value);
  inline void set_aliancename(const char* value);
  inline void set_aliancename(const char* value, size_t size);
  inline ::std::string* mutable_aliancename();
  inline ::std::string* release_aliancename();
  
  // optional uint32 Corps = 11;
  inline bool has_corps() const;
  inline void clear_corps();
  static const int kCorpsFieldNumber = 11;
  inline ::google::protobuf::uint32 corps() const;
  inline void set_corps(::google::protobuf::uint32 value);
  
  // optional uint32 stageid = 12;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageidFieldNumber = 12;
  inline ::google::protobuf::uint32 stageid() const;
  inline void set_stageid(::google::protobuf::uint32 value);
  
  // optional uint32 titleid = 13;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleidFieldNumber = 13;
  inline ::google::protobuf::uint32 titleid() const;
  inline void set_titleid(::google::protobuf::uint32 value);
  
  // optional uint32 factionid = 14;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 14;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 identity = 15;
  inline bool has_identity() const;
  inline void clear_identity();
  static const int kIdentityFieldNumber = 15;
  inline ::google::protobuf::uint32 identity() const;
  inline void set_identity(::google::protobuf::uint32 value);
  
  // optional string factionbanner = 16;
  inline bool has_factionbanner() const;
  inline void clear_factionbanner();
  static const int kFactionbannerFieldNumber = 16;
  inline const ::std::string& factionbanner() const;
  inline void set_factionbanner(const ::std::string& value);
  inline void set_factionbanner(const char* value);
  inline void set_factionbanner(const char* value, size_t size);
  inline ::std::string* mutable_factionbanner();
  inline ::std::string* release_factionbanner();
  
  // @@protoc_insertion_point(class_scope:PBPlayerDisplay)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playerlevel();
  inline void clear_has_playerlevel();
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_logicworldid();
  inline void clear_has_logicworldid();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_campid();
  inline void clear_has_campid();
  inline void set_has_factionname();
  inline void clear_has_factionname();
  inline void set_has_aliancename();
  inline void clear_has_aliancename();
  inline void set_has_corps();
  inline void clear_has_corps();
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_identity();
  inline void clear_has_identity();
  inline void set_has_factionbanner();
  inline void clear_has_factionbanner();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* playername_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 playerlevel_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 logicworldid_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 gender_;
  ::std::string* factionname_;
  ::google::protobuf::uint32 campid_;
  ::google::protobuf::uint32 corps_;
  ::std::string* aliancename_;
  ::google::protobuf::uint32 stageid_;
  ::google::protobuf::uint32 titleid_;
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 identity_;
  ::std::string* factionbanner_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerDisplay* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerShape : public ::google::protobuf::Message {
 public:
  PBPlayerShape();
  virtual ~PBPlayerShape();
  
  PBPlayerShape(const PBPlayerShape& from);
  
  inline PBPlayerShape& operator=(const PBPlayerShape& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerShape& default_instance();
  
  void Swap(PBPlayerShape* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerShape* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerShape& from);
  void MergeFrom(const PBPlayerShape& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerShape)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerShape* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerShapeData : public ::google::protobuf::Message {
 public:
  PBPlayerShapeData();
  virtual ~PBPlayerShapeData();
  
  PBPlayerShapeData(const PBPlayerShapeData& from);
  
  inline PBPlayerShapeData& operator=(const PBPlayerShapeData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerShapeData& default_instance();
  
  void Swap(PBPlayerShapeData* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerShapeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerShapeData& from);
  void MergeFrom(const PBPlayerShapeData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 value = 1;
  inline int value_size() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint32 value(int index) const;
  inline void set_value(int index, ::google::protobuf::uint32 value);
  inline void add_value(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_value();
  
  // @@protoc_insertion_point(class_scope:PBPlayerShapeData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerShapeData* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFashionData : public ::google::protobuf::Message {
 public:
  PBPlayerFashionData();
  virtual ~PBPlayerFashionData();
  
  PBPlayerFashionData(const PBPlayerFashionData& from);
  
  inline PBPlayerFashionData& operator=(const PBPlayerFashionData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFashionData& default_instance();
  
  void Swap(PBPlayerFashionData* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFashionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFashionData& from);
  void MergeFrom(const PBPlayerFashionData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 fashionid = 1;
  inline int fashionid_size() const;
  inline void clear_fashionid();
  static const int kFashionidFieldNumber = 1;
  inline ::google::protobuf::uint32 fashionid(int index) const;
  inline void set_fashionid(int index, ::google::protobuf::uint32 value);
  inline void add_fashionid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fashionid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fashionid();
  
  // @@protoc_insertion_point(class_scope:PBPlayerFashionData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fashionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFashionData* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerAvatar : public ::google::protobuf::Message {
 public:
  PBPlayerAvatar();
  virtual ~PBPlayerAvatar();
  
  PBPlayerAvatar(const PBPlayerAvatar& from);
  
  inline PBPlayerAvatar& operator=(const PBPlayerAvatar& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerAvatar& default_instance();
  
  void Swap(PBPlayerAvatar* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerAvatar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerAvatar& from);
  void MergeFrom(const PBPlayerAvatar& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional .PBPlayerShapeData shapedata = 2;
  inline bool has_shapedata() const;
  inline void clear_shapedata();
  static const int kShapedataFieldNumber = 2;
  inline const ::PBPlayerShapeData& shapedata() const;
  inline ::PBPlayerShapeData* mutable_shapedata();
  inline ::PBPlayerShapeData* release_shapedata();
  
  // optional .PBPlayerFashionData fashiondata = 3;
  inline bool has_fashiondata() const;
  inline void clear_fashiondata();
  static const int kFashiondataFieldNumber = 3;
  inline const ::PBPlayerFashionData& fashiondata() const;
  inline ::PBPlayerFashionData* mutable_fashiondata();
  inline ::PBPlayerFashionData* release_fashiondata();
  
  // @@protoc_insertion_point(class_scope:PBPlayerAvatar)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_shapedata();
  inline void clear_has_shapedata();
  inline void set_has_fashiondata();
  inline void clear_has_fashiondata();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::PBPlayerShapeData* shapedata_;
  ::PBPlayerFashionData* fashiondata_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerAvatar* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerMoney : public ::google::protobuf::Message {
 public:
  PBPlayerMoney();
  virtual ~PBPlayerMoney();
  
  PBPlayerMoney(const PBPlayerMoney& from);
  
  inline PBPlayerMoney& operator=(const PBPlayerMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerMoney& default_instance();
  
  void Swap(PBPlayerMoney* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerMoney& from);
  void MergeFrom(const PBPlayerMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerMoney)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerMoney* default_instance_;
};
// -------------------------------------------------------------------

class PBEnergy : public ::google::protobuf::Message {
 public:
  PBEnergy();
  virtual ~PBEnergy();
  
  PBEnergy(const PBEnergy& from);
  
  inline PBEnergy& operator=(const PBEnergy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEnergy& default_instance();
  
  void Swap(PBEnergy* other);
  
  // implements Message ----------------------------------------------
  
  PBEnergy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEnergy& from);
  void MergeFrom(const PBEnergy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PBEnergy)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBEnergy* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipLucky : public ::google::protobuf::Message {
 public:
  PBEquipLucky();
  virtual ~PBEquipLucky();
  
  PBEquipLucky(const PBEquipLucky& from);
  
  inline PBEquipLucky& operator=(const PBEquipLucky& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipLucky& default_instance();
  
  void Swap(PBEquipLucky* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipLucky* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipLucky& from);
  void MergeFrom(const PBEquipLucky& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PBEquipLucky)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBEquipLucky* default_instance_;
};
// -------------------------------------------------------------------

class PBCopymapDayCount : public ::google::protobuf::Message {
 public:
  PBCopymapDayCount();
  virtual ~PBCopymapDayCount();
  
  PBCopymapDayCount(const PBCopymapDayCount& from);
  
  inline PBCopymapDayCount& operator=(const PBCopymapDayCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCopymapDayCount& default_instance();
  
  void Swap(PBCopymapDayCount* other);
  
  // implements Message ----------------------------------------------
  
  PBCopymapDayCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCopymapDayCount& from);
  void MergeFrom(const PBCopymapDayCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PBCopymapDayCount)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBCopymapDayCount* default_instance_;
};
// -------------------------------------------------------------------

class PBTeamTaskDayCount : public ::google::protobuf::Message {
 public:
  PBTeamTaskDayCount();
  virtual ~PBTeamTaskDayCount();
  
  PBTeamTaskDayCount(const PBTeamTaskDayCount& from);
  
  inline PBTeamTaskDayCount& operator=(const PBTeamTaskDayCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTeamTaskDayCount& default_instance();
  
  void Swap(PBTeamTaskDayCount* other);
  
  // implements Message ----------------------------------------------
  
  PBTeamTaskDayCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTeamTaskDayCount& from);
  void MergeFrom(const PBTeamTaskDayCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PBTeamTaskDayCount)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBTeamTaskDayCount* default_instance_;
};
// -------------------------------------------------------------------

class PBForbidSpeak : public ::google::protobuf::Message {
 public:
  PBForbidSpeak();
  virtual ~PBForbidSpeak();
  
  PBForbidSpeak(const PBForbidSpeak& from);
  
  inline PBForbidSpeak& operator=(const PBForbidSpeak& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBForbidSpeak& default_instance();
  
  void Swap(PBForbidSpeak* other);
  
  // implements Message ----------------------------------------------
  
  PBForbidSpeak* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBForbidSpeak& from);
  void MergeFrom(const PBForbidSpeak& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::uint32 channel() const;
  inline void set_channel(::google::protobuf::uint32 value);
  
  // optional uint32 nexttime = 2;
  inline bool has_nexttime() const;
  inline void clear_nexttime();
  static const int kNexttimeFieldNumber = 2;
  inline ::google::protobuf::uint32 nexttime() const;
  inline void set_nexttime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBForbidSpeak)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_nexttime();
  inline void clear_has_nexttime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 channel_;
  ::google::protobuf::uint32 nexttime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBForbidSpeak* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerBase : public ::google::protobuf::Message {
 public:
  PBPlayerBase();
  virtual ~PBPlayerBase();
  
  PBPlayerBase(const PBPlayerBase& from);
  
  inline PBPlayerBase& operator=(const PBPlayerBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerBase& default_instance();
  
  void Swap(PBPlayerBase* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerBase& from);
  void MergeFrom(const PBPlayerBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // optional .PBPlayerDisplay playerdisplay = 2;
  inline bool has_playerdisplay() const;
  inline void clear_playerdisplay();
  static const int kPlayerdisplayFieldNumber = 2;
  inline const ::PBPlayerDisplay& playerdisplay() const;
  inline ::PBPlayerDisplay* mutable_playerdisplay();
  inline ::PBPlayerDisplay* release_playerdisplay();
  
  // optional uint32 accountid = 3;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 3;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 playermark = 4;
  inline bool has_playermark() const;
  inline void clear_playermark();
  static const int kPlayermarkFieldNumber = 4;
  inline ::google::protobuf::uint32 playermark() const;
  inline void set_playermark(::google::protobuf::uint32 value);
  
  // optional uint32 sceneid = 5;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 5;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 cellid = 6;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 6;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);
  
  // optional uint64 scenedynid = 7;
  inline bool has_scenedynid() const;
  inline void clear_scenedynid();
  static const int kScenedynidFieldNumber = 7;
  inline ::google::protobuf::uint64 scenedynid() const;
  inline void set_scenedynid(::google::protobuf::uint64 value);
  
  // optional float posx = 8;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 8;
  inline float posx() const;
  inline void set_posx(float value);
  
  // optional float posy = 9;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 9;
  inline float posy() const;
  inline void set_posy(float value);
  
  // optional float dir = 10;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 10;
  inline float dir() const;
  inline void set_dir(float value);
  
  // optional uint32 lastlogintime = 11;
  inline bool has_lastlogintime() const;
  inline void clear_lastlogintime();
  static const int kLastlogintimeFieldNumber = 11;
  inline ::google::protobuf::uint32 lastlogintime() const;
  inline void set_lastlogintime(::google::protobuf::uint32 value);
  
  // optional uint32 lastlogouttime = 12;
  inline bool has_lastlogouttime() const;
  inline void clear_lastlogouttime();
  static const int kLastlogouttimeFieldNumber = 12;
  inline ::google::protobuf::uint32 lastlogouttime() const;
  inline void set_lastlogouttime(::google::protobuf::uint32 value);
  
  // optional uint32 createtime = 13;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 13;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);
  
  // optional uint32 pktype = 14;
  inline bool has_pktype() const;
  inline void clear_pktype();
  static const int kPktypeFieldNumber = 14;
  inline ::google::protobuf::uint32 pktype() const;
  inline void set_pktype(::google::protobuf::uint32 value);
  
  // optional uint32 pkvalue = 15;
  inline bool has_pkvalue() const;
  inline void clear_pkvalue();
  static const int kPkvalueFieldNumber = 15;
  inline ::google::protobuf::uint32 pkvalue() const;
  inline void set_pkvalue(::google::protobuf::uint32 value);
  
  // optional uint64 exp = 16;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 16;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint64 wisdom = 17;
  inline bool has_wisdom() const;
  inline void clear_wisdom();
  static const int kWisdomFieldNumber = 17;
  inline ::google::protobuf::uint64 wisdom() const;
  inline void set_wisdom(::google::protobuf::uint64 value);
  
  // repeated .PBPlayerMoney money = 18;
  inline int money_size() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 18;
  inline const ::PBPlayerMoney& money(int index) const;
  inline ::PBPlayerMoney* mutable_money(int index);
  inline ::PBPlayerMoney* add_money();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerMoney >&
      money() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerMoney >*
      mutable_money();
  
  // optional uint32 spawnid = 19;
  inline bool has_spawnid() const;
  inline void clear_spawnid();
  static const int kSpawnidFieldNumber = 19;
  inline ::google::protobuf::uint32 spawnid() const;
  inline void set_spawnid(::google::protobuf::uint32 value);
  
  // optional int32 curhp = 20;
  inline bool has_curhp() const;
  inline void clear_curhp();
  static const int kCurhpFieldNumber = 20;
  inline ::google::protobuf::int32 curhp() const;
  inline void set_curhp(::google::protobuf::int32 value);
  
  // repeated .PBEnergy curenergy = 21;
  inline int curenergy_size() const;
  inline void clear_curenergy();
  static const int kCurenergyFieldNumber = 21;
  inline const ::PBEnergy& curenergy(int index) const;
  inline ::PBEnergy* mutable_curenergy(int index);
  inline ::PBEnergy* add_curenergy();
  inline const ::google::protobuf::RepeatedPtrField< ::PBEnergy >&
      curenergy() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEnergy >*
      mutable_curenergy();
  
  // optional uint32 onlinetime = 22;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlinetimeFieldNumber = 22;
  inline ::google::protobuf::uint32 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::uint32 value);
  
  // optional bytes onlyindex = 23;
  inline bool has_onlyindex() const;
  inline void clear_onlyindex();
  static const int kOnlyindexFieldNumber = 23;
  inline const ::std::string& onlyindex() const;
  inline void set_onlyindex(const ::std::string& value);
  inline void set_onlyindex(const char* value);
  inline void set_onlyindex(const void* value, size_t size);
  inline ::std::string* mutable_onlyindex();
  inline ::std::string* release_onlyindex();
  
  // optional bytes onlydayindex = 24;
  inline bool has_onlydayindex() const;
  inline void clear_onlydayindex();
  static const int kOnlydayindexFieldNumber = 24;
  inline const ::std::string& onlydayindex() const;
  inline void set_onlydayindex(const ::std::string& value);
  inline void set_onlydayindex(const char* value);
  inline void set_onlydayindex(const void* value, size_t size);
  inline ::std::string* mutable_onlydayindex();
  inline ::std::string* release_onlydayindex();
  
  // optional bytes onlyweekindex = 25;
  inline bool has_onlyweekindex() const;
  inline void clear_onlyweekindex();
  static const int kOnlyweekindexFieldNumber = 25;
  inline const ::std::string& onlyweekindex() const;
  inline void set_onlyweekindex(const ::std::string& value);
  inline void set_onlyweekindex(const char* value);
  inline void set_onlyweekindex(const void* value, size_t size);
  inline ::std::string* mutable_onlyweekindex();
  inline ::std::string* release_onlyweekindex();
  
  // optional bytes onlymonthindex = 26;
  inline bool has_onlymonthindex() const;
  inline void clear_onlymonthindex();
  static const int kOnlymonthindexFieldNumber = 26;
  inline const ::std::string& onlymonthindex() const;
  inline void set_onlymonthindex(const ::std::string& value);
  inline void set_onlymonthindex(const char* value);
  inline void set_onlymonthindex(const void* value, size_t size);
  inline ::std::string* mutable_onlymonthindex();
  inline ::std::string* release_onlymonthindex();
  
  // optional uint32 itemsequence = 27;
  inline bool has_itemsequence() const;
  inline void clear_itemsequence();
  static const int kItemsequenceFieldNumber = 27;
  inline ::google::protobuf::uint32 itemsequence() const;
  inline void set_itemsequence(::google::protobuf::uint32 value);
  
  // optional .PBPlayerShapeData shapedata = 28;
  inline bool has_shapedata() const;
  inline void clear_shapedata();
  static const int kShapedataFieldNumber = 28;
  inline const ::PBPlayerShapeData& shapedata() const;
  inline ::PBPlayerShapeData* mutable_shapedata();
  inline ::PBPlayerShapeData* release_shapedata();
  
  // optional uint32 killtime = 29;
  inline bool has_killtime() const;
  inline void clear_killtime();
  static const int kKilltimeFieldNumber = 29;
  inline ::google::protobuf::uint32 killtime() const;
  inline void set_killtime(::google::protobuf::uint32 value);
  
  // optional uint32 equiplucky = 30;
  inline bool has_equiplucky() const;
  inline void clear_equiplucky();
  static const int kEquipluckyFieldNumber = 30;
  inline ::google::protobuf::uint32 equiplucky() const;
  inline void set_equiplucky(::google::protobuf::uint32 value);
  
  // optional uint32 fightpower = 31;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 31;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // optional uint32 mountid = 32;
  inline bool has_mountid() const;
  inline void clear_mountid();
  static const int kMountidFieldNumber = 32;
  inline ::google::protobuf::uint32 mountid() const;
  inline void set_mountid(::google::protobuf::uint32 value);
  
  // optional uint32 old_sceneid = 33;
  inline bool has_old_sceneid() const;
  inline void clear_old_sceneid();
  static const int kOldSceneidFieldNumber = 33;
  inline ::google::protobuf::uint32 old_sceneid() const;
  inline void set_old_sceneid(::google::protobuf::uint32 value);
  
  // optional uint32 old_cellid = 34;
  inline bool has_old_cellid() const;
  inline void clear_old_cellid();
  static const int kOldCellidFieldNumber = 34;
  inline ::google::protobuf::uint32 old_cellid() const;
  inline void set_old_cellid(::google::protobuf::uint32 value);
  
  // optional uint64 old_scenedynid = 35;
  inline bool has_old_scenedynid() const;
  inline void clear_old_scenedynid();
  static const int kOldScenedynidFieldNumber = 35;
  inline ::google::protobuf::uint64 old_scenedynid() const;
  inline void set_old_scenedynid(::google::protobuf::uint64 value);
  
  // optional float old_posx = 36;
  inline bool has_old_posx() const;
  inline void clear_old_posx();
  static const int kOldPosxFieldNumber = 36;
  inline float old_posx() const;
  inline void set_old_posx(float value);
  
  // optional float old_posy = 37;
  inline bool has_old_posy() const;
  inline void clear_old_posy();
  static const int kOldPosyFieldNumber = 37;
  inline float old_posy() const;
  inline void set_old_posy(float value);
  
  // optional float old_dir = 38;
  inline bool has_old_dir() const;
  inline void clear_old_dir();
  static const int kOldDirFieldNumber = 38;
  inline float old_dir() const;
  inline void set_old_dir(float value);
  
  // optional uint64 suffervalue = 39;
  inline bool has_suffervalue() const;
  inline void clear_suffervalue();
  static const int kSuffervalueFieldNumber = 39;
  inline ::google::protobuf::uint64 suffervalue() const;
  inline void set_suffervalue(::google::protobuf::uint64 value);
  
  // optional uint64 bingfuexp = 40;
  inline bool has_bingfuexp() const;
  inline void clear_bingfuexp();
  static const int kBingfuexpFieldNumber = 40;
  inline ::google::protobuf::uint64 bingfuexp() const;
  inline void set_bingfuexp(::google::protobuf::uint64 value);
  
  // repeated .PBCopymapDayCount copymapcount = 41;
  inline int copymapcount_size() const;
  inline void clear_copymapcount();
  static const int kCopymapcountFieldNumber = 41;
  inline const ::PBCopymapDayCount& copymapcount(int index) const;
  inline ::PBCopymapDayCount* mutable_copymapcount(int index);
  inline ::PBCopymapDayCount* add_copymapcount();
  inline const ::google::protobuf::RepeatedPtrField< ::PBCopymapDayCount >&
      copymapcount() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCopymapDayCount >*
      mutable_copymapcount();
  
  // optional .PBPlayerFashionData fashiondata = 42;
  inline bool has_fashiondata() const;
  inline void clear_fashiondata();
  static const int kFashiondataFieldNumber = 42;
  inline const ::PBPlayerFashionData& fashiondata() const;
  inline ::PBPlayerFashionData* mutable_fashiondata();
  inline ::PBPlayerFashionData* release_fashiondata();
  
  // repeated .PBTeamTaskDayCount teamtaskcount = 44;
  inline int teamtaskcount_size() const;
  inline void clear_teamtaskcount();
  static const int kTeamtaskcountFieldNumber = 44;
  inline const ::PBTeamTaskDayCount& teamtaskcount(int index) const;
  inline ::PBTeamTaskDayCount* mutable_teamtaskcount(int index);
  inline ::PBTeamTaskDayCount* add_teamtaskcount();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTeamTaskDayCount >&
      teamtaskcount() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTeamTaskDayCount >*
      mutable_teamtaskcount();
  
  // optional uint32 maxfightpower = 45;
  inline bool has_maxfightpower() const;
  inline void clear_maxfightpower();
  static const int kMaxfightpowerFieldNumber = 45;
  inline ::google::protobuf::uint32 maxfightpower() const;
  inline void set_maxfightpower(::google::protobuf::uint32 value);
  
  // optional uint32 corpsjob = 46;
  inline bool has_corpsjob() const;
  inline void clear_corpsjob();
  static const int kCorpsjobFieldNumber = 46;
  inline ::google::protobuf::uint32 corpsjob() const;
  inline void set_corpsjob(::google::protobuf::uint32 value);
  
  // repeated .PBForbidSpeak forbidspeak = 47;
  inline int forbidspeak_size() const;
  inline void clear_forbidspeak();
  static const int kForbidspeakFieldNumber = 47;
  inline const ::PBForbidSpeak& forbidspeak(int index) const;
  inline ::PBForbidSpeak* mutable_forbidspeak(int index);
  inline ::PBForbidSpeak* add_forbidspeak();
  inline const ::google::protobuf::RepeatedPtrField< ::PBForbidSpeak >&
      forbidspeak() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBForbidSpeak >*
      mutable_forbidspeak();
  
  // optional uint32 dailycleantime = 48;
  inline bool has_dailycleantime() const;
  inline void clear_dailycleantime();
  static const int kDailycleantimeFieldNumber = 48;
  inline ::google::protobuf::uint32 dailycleantime() const;
  inline void set_dailycleantime(::google::protobuf::uint32 value);
  
  // optional uint32 weeklycleantime = 49;
  inline bool has_weeklycleantime() const;
  inline void clear_weeklycleantime();
  static const int kWeeklycleantimeFieldNumber = 49;
  inline ::google::protobuf::uint32 weeklycleantime() const;
  inline void set_weeklycleantime(::google::protobuf::uint32 value);
  
  // optional uint32 monthlycleantime = 50;
  inline bool has_monthlycleantime() const;
  inline void clear_monthlycleantime();
  static const int kMonthlycleantimeFieldNumber = 50;
  inline ::google::protobuf::uint32 monthlycleantime() const;
  inline void set_monthlycleantime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerBase)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  inline void set_has_playerdisplay();
  inline void clear_has_playerdisplay();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_playermark();
  inline void clear_has_playermark();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_scenedynid();
  inline void clear_has_scenedynid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_lastlogintime();
  inline void clear_has_lastlogintime();
  inline void set_has_lastlogouttime();
  inline void clear_has_lastlogouttime();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_pktype();
  inline void clear_has_pktype();
  inline void set_has_pkvalue();
  inline void clear_has_pkvalue();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_wisdom();
  inline void clear_has_wisdom();
  inline void set_has_spawnid();
  inline void clear_has_spawnid();
  inline void set_has_curhp();
  inline void clear_has_curhp();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();
  inline void set_has_onlyindex();
  inline void clear_has_onlyindex();
  inline void set_has_onlydayindex();
  inline void clear_has_onlydayindex();
  inline void set_has_onlyweekindex();
  inline void clear_has_onlyweekindex();
  inline void set_has_onlymonthindex();
  inline void clear_has_onlymonthindex();
  inline void set_has_itemsequence();
  inline void clear_has_itemsequence();
  inline void set_has_shapedata();
  inline void clear_has_shapedata();
  inline void set_has_killtime();
  inline void clear_has_killtime();
  inline void set_has_equiplucky();
  inline void clear_has_equiplucky();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_mountid();
  inline void clear_has_mountid();
  inline void set_has_old_sceneid();
  inline void clear_has_old_sceneid();
  inline void set_has_old_cellid();
  inline void clear_has_old_cellid();
  inline void set_has_old_scenedynid();
  inline void clear_has_old_scenedynid();
  inline void set_has_old_posx();
  inline void clear_has_old_posx();
  inline void set_has_old_posy();
  inline void clear_has_old_posy();
  inline void set_has_old_dir();
  inline void clear_has_old_dir();
  inline void set_has_suffervalue();
  inline void clear_has_suffervalue();
  inline void set_has_bingfuexp();
  inline void clear_has_bingfuexp();
  inline void set_has_fashiondata();
  inline void clear_has_fashiondata();
  inline void set_has_maxfightpower();
  inline void clear_has_maxfightpower();
  inline void set_has_corpsjob();
  inline void clear_has_corpsjob();
  inline void set_has_dailycleantime();
  inline void clear_has_dailycleantime();
  inline void set_has_weeklycleantime();
  inline void clear_has_weeklycleantime();
  inline void set_has_monthlycleantime();
  inline void clear_has_monthlycleantime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* playerdisplay_;
  ::google::protobuf::uint32 saveorder_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 playermark_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint64 scenedynid_;
  ::google::protobuf::uint32 cellid_;
  float posx_;
  float posy_;
  float dir_;
  ::google::protobuf::uint32 lastlogintime_;
  ::google::protobuf::uint32 lastlogouttime_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 pktype_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint64 wisdom_;
  ::google::protobuf::uint32 pkvalue_;
  ::google::protobuf::uint32 spawnid_;
  ::google::protobuf::RepeatedPtrField< ::PBPlayerMoney > money_;
  ::google::protobuf::RepeatedPtrField< ::PBEnergy > curenergy_;
  ::google::protobuf::int32 curhp_;
  ::google::protobuf::uint32 onlinetime_;
  ::std::string* onlyindex_;
  ::std::string* onlydayindex_;
  ::std::string* onlyweekindex_;
  ::std::string* onlymonthindex_;
  ::PBPlayerShapeData* shapedata_;
  ::google::protobuf::uint32 itemsequence_;
  ::google::protobuf::uint32 killtime_;
  ::google::protobuf::uint32 equiplucky_;
  ::google::protobuf::uint32 fightpower_;
  ::google::protobuf::uint32 mountid_;
  ::google::protobuf::uint32 old_sceneid_;
  ::google::protobuf::uint64 old_scenedynid_;
  ::google::protobuf::uint32 old_cellid_;
  float old_posx_;
  float old_posy_;
  float old_dir_;
  ::google::protobuf::uint64 suffervalue_;
  ::google::protobuf::uint64 bingfuexp_;
  ::google::protobuf::RepeatedPtrField< ::PBCopymapDayCount > copymapcount_;
  ::PBPlayerFashionData* fashiondata_;
  ::google::protobuf::RepeatedPtrField< ::PBTeamTaskDayCount > teamtaskcount_;
  ::google::protobuf::uint32 maxfightpower_;
  ::google::protobuf::uint32 corpsjob_;
  ::google::protobuf::RepeatedPtrField< ::PBForbidSpeak > forbidspeak_;
  ::google::protobuf::uint32 dailycleantime_;
  ::google::protobuf::uint32 weeklycleantime_;
  ::google::protobuf::uint32 monthlycleantime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(49 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerBase* default_instance_;
};
// -------------------------------------------------------------------

class PBCoolingInfo : public ::google::protobuf::Message {
 public:
  PBCoolingInfo();
  virtual ~PBCoolingInfo();
  
  PBCoolingInfo(const PBCoolingInfo& from);
  
  inline PBCoolingInfo& operator=(const PBCoolingInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCoolingInfo& default_instance();
  
  void Swap(PBCoolingInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBCoolingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCoolingInfo& from);
  void MergeFrom(const PBCoolingInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint64 begin = 3;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 3;
  inline ::google::protobuf::uint64 begin() const;
  inline void set_begin(::google::protobuf::uint64 value);
  
  // optional uint64 end = 4;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 4;
  inline ::google::protobuf::uint64 end() const;
  inline void set_end(::google::protobuf::uint64 value);
  
  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBCoolingInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_end();
  inline void clear_has_end();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint64 begin_;
  ::google::protobuf::uint64 end_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBCoolingInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBCooling : public ::google::protobuf::Message {
 public:
  PBCooling();
  virtual ~PBCooling();
  
  PBCooling(const PBCooling& from);
  
  inline PBCooling& operator=(const PBCooling& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCooling& default_instance();
  
  void Swap(PBCooling* other);
  
  // implements Message ----------------------------------------------
  
  PBCooling* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCooling& from);
  void MergeFrom(const PBCooling& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBCoolingInfo cooling = 1;
  inline int cooling_size() const;
  inline void clear_cooling();
  static const int kCoolingFieldNumber = 1;
  inline const ::PBCoolingInfo& cooling(int index) const;
  inline ::PBCoolingInfo* mutable_cooling(int index);
  inline ::PBCoolingInfo* add_cooling();
  inline const ::google::protobuf::RepeatedPtrField< ::PBCoolingInfo >&
      cooling() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCoolingInfo >*
      mutable_cooling();
  
  // @@protoc_insertion_point(class_scope:PBCooling)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBCoolingInfo > cooling_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBCooling* default_instance_;
};
// -------------------------------------------------------------------

class PBSystemSkill : public ::google::protobuf::Message {
 public:
  PBSystemSkill();
  virtual ~PBSystemSkill();
  
  PBSystemSkill(const PBSystemSkill& from);
  
  inline PBSystemSkill& operator=(const PBSystemSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSystemSkill& default_instance();
  
  void Swap(PBSystemSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBSystemSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSystemSkill& from);
  void MergeFrom(const PBSystemSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSkill pbskill = 1;
  inline int pbskill_size() const;
  inline void clear_pbskill();
  static const int kPbskillFieldNumber = 1;
  inline const ::PBSkill& pbskill(int index) const;
  inline ::PBSkill* mutable_pbskill(int index);
  inline ::PBSkill* add_pbskill();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSkill >&
      pbskill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSkill >*
      mutable_pbskill();
  
  // @@protoc_insertion_point(class_scope:PBSystemSkill)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSkill > pbskill_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSystemSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBSystemBuff : public ::google::protobuf::Message {
 public:
  PBSystemBuff();
  virtual ~PBSystemBuff();
  
  PBSystemBuff(const PBSystemBuff& from);
  
  inline PBSystemBuff& operator=(const PBSystemBuff& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSystemBuff& default_instance();
  
  void Swap(PBSystemBuff* other);
  
  // implements Message ----------------------------------------------
  
  PBSystemBuff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSystemBuff& from);
  void MergeFrom(const PBSystemBuff& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBBuff pbbuff = 1;
  inline int pbbuff_size() const;
  inline void clear_pbbuff();
  static const int kPbbuffFieldNumber = 1;
  inline const ::PBBuff& pbbuff(int index) const;
  inline ::PBBuff* mutable_pbbuff(int index);
  inline ::PBBuff* add_pbbuff();
  inline const ::google::protobuf::RepeatedPtrField< ::PBBuff >&
      pbbuff() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBuff >*
      mutable_pbbuff();
  
  // @@protoc_insertion_point(class_scope:PBSystemBuff)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBBuff > pbbuff_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSystemBuff* default_instance_;
};
// -------------------------------------------------------------------

class PBSystemCounter : public ::google::protobuf::Message {
 public:
  PBSystemCounter();
  virtual ~PBSystemCounter();
  
  PBSystemCounter(const PBSystemCounter& from);
  
  inline PBSystemCounter& operator=(const PBSystemCounter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSystemCounter& default_instance();
  
  void Swap(PBSystemCounter* other);
  
  // implements Message ----------------------------------------------
  
  PBSystemCounter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSystemCounter& from);
  void MergeFrom(const PBSystemCounter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBCounter pbcounter = 1;
  inline int pbcounter_size() const;
  inline void clear_pbcounter();
  static const int kPbcounterFieldNumber = 1;
  inline const ::PBCounter& pbcounter(int index) const;
  inline ::PBCounter* mutable_pbcounter(int index);
  inline ::PBCounter* add_pbcounter();
  inline const ::google::protobuf::RepeatedPtrField< ::PBCounter >&
      pbcounter() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCounter >*
      mutable_pbcounter();
  
  // @@protoc_insertion_point(class_scope:PBSystemCounter)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBCounter > pbcounter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSystemCounter* default_instance_;
};
// -------------------------------------------------------------------

class PBSystemSwitch : public ::google::protobuf::Message {
 public:
  PBSystemSwitch();
  virtual ~PBSystemSwitch();
  
  PBSystemSwitch(const PBSystemSwitch& from);
  
  inline PBSystemSwitch& operator=(const PBSystemSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSystemSwitch& default_instance();
  
  void Swap(PBSystemSwitch* other);
  
  // implements Message ----------------------------------------------
  
  PBSystemSwitch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSystemSwitch& from);
  void MergeFrom(const PBSystemSwitch& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();
  
  // @@protoc_insertion_point(class_scope:PBSystemSwitch)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSystemSwitch* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerColletion : public ::google::protobuf::Message {
 public:
  PBPlayerColletion();
  virtual ~PBPlayerColletion();
  
  PBPlayerColletion(const PBPlayerColletion& from);
  
  inline PBPlayerColletion& operator=(const PBPlayerColletion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerColletion& default_instance();
  
  void Swap(PBPlayerColletion* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerColletion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerColletion& from);
  void MergeFrom(const PBPlayerColletion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBColletionData pbcolletion = 1;
  inline int pbcolletion_size() const;
  inline void clear_pbcolletion();
  static const int kPbcolletionFieldNumber = 1;
  inline const ::PBColletionData& pbcolletion(int index) const;
  inline ::PBColletionData* mutable_pbcolletion(int index);
  inline ::PBColletionData* add_pbcolletion();
  inline const ::google::protobuf::RepeatedPtrField< ::PBColletionData >&
      pbcolletion() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBColletionData >*
      mutable_pbcolletion();
  
  // @@protoc_insertion_point(class_scope:PBPlayerColletion)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBColletionData > pbcolletion_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerColletion* default_instance_;
};
// -------------------------------------------------------------------

class PBPrize : public ::google::protobuf::Message {
 public:
  PBPrize();
  virtual ~PBPrize();
  
  PBPrize(const PBPrize& from);
  
  inline PBPrize& operator=(const PBPrize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPrize& default_instance();
  
  void Swap(PBPrize* other);
  
  // implements Message ----------------------------------------------
  
  PBPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPrize& from);
  void MergeFrom(const PBPrize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 instancesn = 1;
  inline bool has_instancesn() const;
  inline void clear_instancesn();
  static const int kInstancesnFieldNumber = 1;
  inline ::google::protobuf::uint64 instancesn() const;
  inline void set_instancesn(::google::protobuf::uint64 value);
  
  // optional uint32 prizeid = 2;
  inline bool has_prizeid() const;
  inline void clear_prizeid();
  static const int kPrizeidFieldNumber = 2;
  inline ::google::protobuf::uint32 prizeid() const;
  inline void set_prizeid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPrize)
 private:
  inline void set_has_instancesn();
  inline void clear_has_instancesn();
  inline void set_has_prizeid();
  inline void clear_has_prizeid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 instancesn_;
  ::google::protobuf::uint32 prizeid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPrize* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerPrize : public ::google::protobuf::Message {
 public:
  PBPlayerPrize();
  virtual ~PBPlayerPrize();
  
  PBPlayerPrize(const PBPlayerPrize& from);
  
  inline PBPlayerPrize& operator=(const PBPlayerPrize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerPrize& default_instance();
  
  void Swap(PBPlayerPrize* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerPrize& from);
  void MergeFrom(const PBPlayerPrize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 cursn = 1;
  inline bool has_cursn() const;
  inline void clear_cursn();
  static const int kCursnFieldNumber = 1;
  inline ::google::protobuf::uint64 cursn() const;
  inline void set_cursn(::google::protobuf::uint64 value);
  
  // repeated .PBPrize pbprize = 2;
  inline int pbprize_size() const;
  inline void clear_pbprize();
  static const int kPbprizeFieldNumber = 2;
  inline const ::PBPrize& pbprize(int index) const;
  inline ::PBPrize* mutable_pbprize(int index);
  inline ::PBPrize* add_pbprize();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPrize >&
      pbprize() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPrize >*
      mutable_pbprize();
  
  // @@protoc_insertion_point(class_scope:PBPlayerPrize)
 private:
  inline void set_has_cursn();
  inline void clear_has_cursn();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 cursn_;
  ::google::protobuf::RepeatedPtrField< ::PBPrize > pbprize_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerPrize* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerTrade : public ::google::protobuf::Message {
 public:
  PBPlayerTrade();
  virtual ~PBPlayerTrade();
  
  PBPlayerTrade(const PBPlayerTrade& from);
  
  inline PBPlayerTrade& operator=(const PBPlayerTrade& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerTrade& default_instance();
  
  void Swap(PBPlayerTrade* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerTrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerTrade& from);
  void MergeFrom(const PBPlayerTrade& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 can_get_sliver = 1;
  inline bool has_can_get_sliver() const;
  inline void clear_can_get_sliver();
  static const int kCanGetSliverFieldNumber = 1;
  inline ::google::protobuf::uint64 can_get_sliver() const;
  inline void set_can_get_sliver(::google::protobuf::uint64 value);
  
  // optional uint64 can_give_sliver = 2;
  inline bool has_can_give_sliver() const;
  inline void clear_can_give_sliver();
  static const int kCanGiveSliverFieldNumber = 2;
  inline ::google::protobuf::uint64 can_give_sliver() const;
  inline void set_can_give_sliver(::google::protobuf::uint64 value);
  
  // optional uint32 recover_get_time = 3;
  inline bool has_recover_get_time() const;
  inline void clear_recover_get_time();
  static const int kRecoverGetTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 recover_get_time() const;
  inline void set_recover_get_time(::google::protobuf::uint32 value);
  
  // optional uint32 recover_give_time = 4;
  inline bool has_recover_give_time() const;
  inline void clear_recover_give_time();
  static const int kRecoverGiveTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 recover_give_time() const;
  inline void set_recover_give_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerTrade)
 private:
  inline void set_has_can_get_sliver();
  inline void clear_has_can_get_sliver();
  inline void set_has_can_give_sliver();
  inline void clear_has_can_give_sliver();
  inline void set_has_recover_get_time();
  inline void clear_has_recover_get_time();
  inline void set_has_recover_give_time();
  inline void clear_has_recover_give_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 can_get_sliver_;
  ::google::protobuf::uint64 can_give_sliver_;
  ::google::protobuf::uint32 recover_get_time_;
  ::google::protobuf::uint32 recover_give_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerTrade* default_instance_;
};
// -------------------------------------------------------------------

class PBQuestItem : public ::google::protobuf::Message {
 public:
  PBQuestItem();
  virtual ~PBQuestItem();
  
  PBQuestItem(const PBQuestItem& from);
  
  inline PBQuestItem& operator=(const PBQuestItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBQuestItem& default_instance();
  
  void Swap(PBQuestItem* other);
  
  // implements Message ----------------------------------------------
  
  PBQuestItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBQuestItem& from);
  void MergeFrom(const PBQuestItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 tarid = 1;
  inline bool has_tarid() const;
  inline void clear_tarid();
  static const int kTaridFieldNumber = 1;
  inline ::google::protobuf::uint32 tarid() const;
  inline void set_tarid(::google::protobuf::uint32 value);
  
  // optional uint32 curcount = 2;
  inline bool has_curcount() const;
  inline void clear_curcount();
  static const int kCurcountFieldNumber = 2;
  inline ::google::protobuf::uint32 curcount() const;
  inline void set_curcount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBQuestItem)
 private:
  inline void set_has_tarid();
  inline void clear_has_tarid();
  inline void set_has_curcount();
  inline void clear_has_curcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 tarid_;
  ::google::protobuf::uint32 curcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBQuestItem* default_instance_;
};
// -------------------------------------------------------------------

class PBQuest : public ::google::protobuf::Message {
 public:
  PBQuest();
  virtual ~PBQuest();
  
  PBQuest(const PBQuest& from);
  
  inline PBQuest& operator=(const PBQuest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBQuest& default_instance();
  
  void Swap(PBQuest* other);
  
  // implements Message ----------------------------------------------
  
  PBQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBQuest& from);
  void MergeFrom(const PBQuest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);
  
  // optional uint32 accepttime = 2;
  inline bool has_accepttime() const;
  inline void clear_accepttime();
  static const int kAccepttimeFieldNumber = 2;
  inline ::google::protobuf::uint32 accepttime() const;
  inline void set_accepttime(::google::protobuf::uint32 value);
  
  // repeated .PBQuestItem item = 3;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::PBQuestItem& item(int index) const;
  inline ::PBQuestItem* mutable_item(int index);
  inline ::PBQuestItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::PBQuestItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBQuestItem >*
      mutable_item();
  
  // optional uint32 param = 4;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 4;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBQuest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_accepttime();
  inline void clear_has_accepttime();
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 questid_;
  ::google::protobuf::uint32 accepttime_;
  ::google::protobuf::RepeatedPtrField< ::PBQuestItem > item_;
  ::google::protobuf::uint32 param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBQuest* default_instance_;
};
// -------------------------------------------------------------------

class PBQuestCompleted : public ::google::protobuf::Message {
 public:
  PBQuestCompleted();
  virtual ~PBQuestCompleted();
  
  PBQuestCompleted(const PBQuestCompleted& from);
  
  inline PBQuestCompleted& operator=(const PBQuestCompleted& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBQuestCompleted& default_instance();
  
  void Swap(PBQuestCompleted* other);
  
  // implements Message ----------------------------------------------
  
  PBQuestCompleted* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBQuestCompleted& from);
  void MergeFrom(const PBQuestCompleted& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 questid = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 1;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBQuestCompleted)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 questid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBQuestCompleted* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerQuest : public ::google::protobuf::Message {
 public:
  PBPlayerQuest();
  virtual ~PBPlayerQuest();
  
  PBPlayerQuest(const PBPlayerQuest& from);
  
  inline PBPlayerQuest& operator=(const PBPlayerQuest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerQuest& default_instance();
  
  void Swap(PBPlayerQuest* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerQuest& from);
  void MergeFrom(const PBPlayerQuest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // repeated .PBQuest quest = 2;
  inline int quest_size() const;
  inline void clear_quest();
  static const int kQuestFieldNumber = 2;
  inline const ::PBQuest& quest(int index) const;
  inline ::PBQuest* mutable_quest(int index);
  inline ::PBQuest* add_quest();
  inline const ::google::protobuf::RepeatedPtrField< ::PBQuest >&
      quest() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBQuest >*
      mutable_quest();
  
  // repeated .PBQuestCompleted completedinfo = 3;
  inline int completedinfo_size() const;
  inline void clear_completedinfo();
  static const int kCompletedinfoFieldNumber = 3;
  inline const ::PBQuestCompleted& completedinfo(int index) const;
  inline ::PBQuestCompleted* mutable_completedinfo(int index);
  inline ::PBQuestCompleted* add_completedinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBQuestCompleted >&
      completedinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBQuestCompleted >*
      mutable_completedinfo();
  
  // @@protoc_insertion_point(class_scope:PBPlayerQuest)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBQuest > quest_;
  ::google::protobuf::RepeatedPtrField< ::PBQuestCompleted > completedinfo_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerQuest* default_instance_;
};
// -------------------------------------------------------------------

class PBWenTaoSchemeInfo : public ::google::protobuf::Message {
 public:
  PBWenTaoSchemeInfo();
  virtual ~PBWenTaoSchemeInfo();
  
  PBWenTaoSchemeInfo(const PBWenTaoSchemeInfo& from);
  
  inline PBWenTaoSchemeInfo& operator=(const PBWenTaoSchemeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWenTaoSchemeInfo& default_instance();
  
  void Swap(PBWenTaoSchemeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBWenTaoSchemeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWenTaoSchemeInfo& from);
  void MergeFrom(const PBWenTaoSchemeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 bingfaid = 2;
  inline bool has_bingfaid() const;
  inline void clear_bingfaid();
  static const int kBingfaidFieldNumber = 2;
  inline ::google::protobuf::uint32 bingfaid() const;
  inline void set_bingfaid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBWenTaoSchemeInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_bingfaid();
  inline void clear_has_bingfaid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 bingfaid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWenTaoSchemeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBWenTaoScheme : public ::google::protobuf::Message {
 public:
  PBWenTaoScheme();
  virtual ~PBWenTaoScheme();
  
  PBWenTaoScheme(const PBWenTaoScheme& from);
  
  inline PBWenTaoScheme& operator=(const PBWenTaoScheme& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWenTaoScheme& default_instance();
  
  void Swap(PBWenTaoScheme* other);
  
  // implements Message ----------------------------------------------
  
  PBWenTaoScheme* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWenTaoScheme& from);
  void MergeFrom(const PBWenTaoScheme& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 schemeid = 1;
  inline bool has_schemeid() const;
  inline void clear_schemeid();
  static const int kSchemeidFieldNumber = 1;
  inline ::google::protobuf::uint32 schemeid() const;
  inline void set_schemeid(::google::protobuf::uint32 value);
  
  // repeated .PBWenTaoSchemeInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PBWenTaoSchemeInfo& info(int index) const;
  inline ::PBWenTaoSchemeInfo* mutable_info(int index);
  inline ::PBWenTaoSchemeInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PBWenTaoSchemeInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWenTaoSchemeInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:PBWenTaoScheme)
 private:
  inline void set_has_schemeid();
  inline void clear_has_schemeid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBWenTaoSchemeInfo > info_;
  ::google::protobuf::uint32 schemeid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWenTaoScheme* default_instance_;
};
// -------------------------------------------------------------------

class PBBingFa : public ::google::protobuf::Message {
 public:
  PBBingFa();
  virtual ~PBBingFa();
  
  PBBingFa(const PBBingFa& from);
  
  inline PBBingFa& operator=(const PBBingFa& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBingFa& default_instance();
  
  void Swap(PBBingFa* other);
  
  // implements Message ----------------------------------------------
  
  PBBingFa* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBBingFa& from);
  void MergeFrom(const PBBingFa& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 bingfaid = 1;
  inline bool has_bingfaid() const;
  inline void clear_bingfaid();
  static const int kBingfaidFieldNumber = 1;
  inline ::google::protobuf::uint32 bingfaid() const;
  inline void set_bingfaid(::google::protobuf::uint32 value);
  
  // optional uint32 qianxiulevel = 2;
  inline bool has_qianxiulevel() const;
  inline void clear_qianxiulevel();
  static const int kQianxiulevelFieldNumber = 2;
  inline ::google::protobuf::uint32 qianxiulevel() const;
  inline void set_qianxiulevel(::google::protobuf::uint32 value);
  
  // optional uint32 tupolevel = 3;
  inline bool has_tupolevel() const;
  inline void clear_tupolevel();
  static const int kTupolevelFieldNumber = 3;
  inline ::google::protobuf::uint32 tupolevel() const;
  inline void set_tupolevel(::google::protobuf::uint32 value);
  
  // optional uint32 yaodianid = 4;
  inline bool has_yaodianid() const;
  inline void clear_yaodianid();
  static const int kYaodianidFieldNumber = 4;
  inline ::google::protobuf::uint32 yaodianid() const;
  inline void set_yaodianid(::google::protobuf::uint32 value);
  
  // optional uint32 yaodianlevel = 5;
  inline bool has_yaodianlevel() const;
  inline void clear_yaodianlevel();
  static const int kYaodianlevelFieldNumber = 5;
  inline ::google::protobuf::uint32 yaodianlevel() const;
  inline void set_yaodianlevel(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBBingFa)
 private:
  inline void set_has_bingfaid();
  inline void clear_has_bingfaid();
  inline void set_has_qianxiulevel();
  inline void clear_has_qianxiulevel();
  inline void set_has_tupolevel();
  inline void clear_has_tupolevel();
  inline void set_has_yaodianid();
  inline void clear_has_yaodianid();
  inline void set_has_yaodianlevel();
  inline void clear_has_yaodianlevel();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 bingfaid_;
  ::google::protobuf::uint32 qianxiulevel_;
  ::google::protobuf::uint32 tupolevel_;
  ::google::protobuf::uint32 yaodianid_;
  ::google::protobuf::uint32 yaodianlevel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBBingFa* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerWenTao : public ::google::protobuf::Message {
 public:
  PBPlayerWenTao();
  virtual ~PBPlayerWenTao();
  
  PBPlayerWenTao(const PBPlayerWenTao& from);
  
  inline PBPlayerWenTao& operator=(const PBPlayerWenTao& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerWenTao& default_instance();
  
  void Swap(PBPlayerWenTao* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerWenTao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerWenTao& from);
  void MergeFrom(const PBPlayerWenTao& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 curschemeID = 1;
  inline bool has_curschemeid() const;
  inline void clear_curschemeid();
  static const int kCurschemeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 curschemeid() const;
  inline void set_curschemeid(::google::protobuf::uint32 value);
  
  // repeated .PBBingFa bingfa = 2;
  inline int bingfa_size() const;
  inline void clear_bingfa();
  static const int kBingfaFieldNumber = 2;
  inline const ::PBBingFa& bingfa(int index) const;
  inline ::PBBingFa* mutable_bingfa(int index);
  inline ::PBBingFa* add_bingfa();
  inline const ::google::protobuf::RepeatedPtrField< ::PBBingFa >&
      bingfa() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBingFa >*
      mutable_bingfa();
  
  // repeated .PBWenTaoScheme scheme = 3;
  inline int scheme_size() const;
  inline void clear_scheme();
  static const int kSchemeFieldNumber = 3;
  inline const ::PBWenTaoScheme& scheme(int index) const;
  inline ::PBWenTaoScheme* mutable_scheme(int index);
  inline ::PBWenTaoScheme* add_scheme();
  inline const ::google::protobuf::RepeatedPtrField< ::PBWenTaoScheme >&
      scheme() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWenTaoScheme >*
      mutable_scheme();
  
  // @@protoc_insertion_point(class_scope:PBPlayerWenTao)
 private:
  inline void set_has_curschemeid();
  inline void clear_has_curschemeid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBBingFa > bingfa_;
  ::google::protobuf::RepeatedPtrField< ::PBWenTaoScheme > scheme_;
  ::google::protobuf::uint32 curschemeid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerWenTao* default_instance_;
};
// -------------------------------------------------------------------

class PBWulueZhanlue : public ::google::protobuf::Message {
 public:
  PBWulueZhanlue();
  virtual ~PBWulueZhanlue();
  
  PBWulueZhanlue(const PBWulueZhanlue& from);
  
  inline PBWulueZhanlue& operator=(const PBWulueZhanlue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWulueZhanlue& default_instance();
  
  void Swap(PBWulueZhanlue* other);
  
  // implements Message ----------------------------------------------
  
  PBWulueZhanlue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWulueZhanlue& from);
  void MergeFrom(const PBWulueZhanlue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBWulueZhanlue)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWulueZhanlue* default_instance_;
};
// -------------------------------------------------------------------

class PBWulueScheme : public ::google::protobuf::Message {
 public:
  PBWulueScheme();
  virtual ~PBWulueScheme();
  
  PBWulueScheme(const PBWulueScheme& from);
  
  inline PBWulueScheme& operator=(const PBWulueScheme& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWulueScheme& default_instance();
  
  void Swap(PBWulueScheme* other);
  
  // implements Message ----------------------------------------------
  
  PBWulueScheme* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWulueScheme& from);
  void MergeFrom(const PBWulueScheme& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 schemeid = 1;
  inline bool has_schemeid() const;
  inline void clear_schemeid();
  static const int kSchemeidFieldNumber = 1;
  inline ::google::protobuf::uint32 schemeid() const;
  inline void set_schemeid(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint64 bingfusn = 4;
  inline bool has_bingfusn() const;
  inline void clear_bingfusn();
  static const int kBingfusnFieldNumber = 4;
  inline ::google::protobuf::uint64 bingfusn() const;
  inline void set_bingfusn(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBWulueScheme)
 private:
  inline void set_has_schemeid();
  inline void clear_has_schemeid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_bingfusn();
  inline void clear_has_bingfusn();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 schemeid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint64 bingfusn_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWulueScheme* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerWulue : public ::google::protobuf::Message {
 public:
  PBPlayerWulue();
  virtual ~PBPlayerWulue();
  
  PBPlayerWulue(const PBPlayerWulue& from);
  
  inline PBPlayerWulue& operator=(const PBPlayerWulue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerWulue& default_instance();
  
  void Swap(PBPlayerWulue* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerWulue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerWulue& from);
  void MergeFrom(const PBPlayerWulue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 curschemeID = 1;
  inline bool has_curschemeid() const;
  inline void clear_curschemeid();
  static const int kCurschemeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 curschemeid() const;
  inline void set_curschemeid(::google::protobuf::uint32 value);
  
  // optional uint32 curwuluetype = 2;
  inline bool has_curwuluetype() const;
  inline void clear_curwuluetype();
  static const int kCurwuluetypeFieldNumber = 2;
  inline ::google::protobuf::uint32 curwuluetype() const;
  inline void set_curwuluetype(::google::protobuf::uint32 value);
  
  // repeated .PBWulueZhanlue zhanlueinfo = 3;
  inline int zhanlueinfo_size() const;
  inline void clear_zhanlueinfo();
  static const int kZhanlueinfoFieldNumber = 3;
  inline const ::PBWulueZhanlue& zhanlueinfo(int index) const;
  inline ::PBWulueZhanlue* mutable_zhanlueinfo(int index);
  inline ::PBWulueZhanlue* add_zhanlueinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBWulueZhanlue >&
      zhanlueinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWulueZhanlue >*
      mutable_zhanlueinfo();
  
  // repeated .PBWulueScheme wuluescheme = 4;
  inline int wuluescheme_size() const;
  inline void clear_wuluescheme();
  static const int kWulueschemeFieldNumber = 4;
  inline const ::PBWulueScheme& wuluescheme(int index) const;
  inline ::PBWulueScheme* mutable_wuluescheme(int index);
  inline ::PBWulueScheme* add_wuluescheme();
  inline const ::google::protobuf::RepeatedPtrField< ::PBWulueScheme >&
      wuluescheme() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWulueScheme >*
      mutable_wuluescheme();
  
  // @@protoc_insertion_point(class_scope:PBPlayerWulue)
 private:
  inline void set_has_curschemeid();
  inline void clear_has_curschemeid();
  inline void set_has_curwuluetype();
  inline void clear_has_curwuluetype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 curschemeid_;
  ::google::protobuf::uint32 curwuluetype_;
  ::google::protobuf::RepeatedPtrField< ::PBWulueZhanlue > zhanlueinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBWulueScheme > wuluescheme_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerWulue* default_instance_;
};
// -------------------------------------------------------------------

class PBCopymapInfo : public ::google::protobuf::Message {
 public:
  PBCopymapInfo();
  virtual ~PBCopymapInfo();
  
  PBCopymapInfo(const PBCopymapInfo& from);
  
  inline PBCopymapInfo& operator=(const PBCopymapInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCopymapInfo& default_instance();
  
  void Swap(PBCopymapInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBCopymapInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCopymapInfo& from);
  void MergeFrom(const PBCopymapInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copymapid = 1;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 entercount = 2;
  inline bool has_entercount() const;
  inline void clear_entercount();
  static const int kEntercountFieldNumber = 2;
  inline ::google::protobuf::uint32 entercount() const;
  inline void set_entercount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBCopymapInfo)
 private:
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_entercount();
  inline void clear_has_entercount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 entercount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBCopymapInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerCopymap : public ::google::protobuf::Message {
 public:
  PBPlayerCopymap();
  virtual ~PBPlayerCopymap();
  
  PBPlayerCopymap(const PBPlayerCopymap& from);
  
  inline PBPlayerCopymap& operator=(const PBPlayerCopymap& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerCopymap& default_instance();
  
  void Swap(PBPlayerCopymap* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerCopymap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerCopymap& from);
  void MergeFrom(const PBPlayerCopymap& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 assistcount = 1;
  inline bool has_assistcount() const;
  inline void clear_assistcount();
  static const int kAssistcountFieldNumber = 1;
  inline ::google::protobuf::uint32 assistcount() const;
  inline void set_assistcount(::google::protobuf::uint32 value);
  
  // repeated .PBCopymapInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PBCopymapInfo& info(int index) const;
  inline ::PBCopymapInfo* mutable_info(int index);
  inline ::PBCopymapInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PBCopymapInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCopymapInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:PBPlayerCopymap)
 private:
  inline void set_has_assistcount();
  inline void clear_has_assistcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBCopymapInfo > info_;
  ::google::protobuf::uint32 assistcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerCopymap* default_instance_;
};
// -------------------------------------------------------------------

class PBIdentitySetInfo : public ::google::protobuf::Message {
 public:
  PBIdentitySetInfo();
  virtual ~PBIdentitySetInfo();
  
  PBIdentitySetInfo(const PBIdentitySetInfo& from);
  
  inline PBIdentitySetInfo& operator=(const PBIdentitySetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIdentitySetInfo& default_instance();
  
  void Swap(PBIdentitySetInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBIdentitySetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIdentitySetInfo& from);
  void MergeFrom(const PBIdentitySetInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 setid = 1;
  inline bool has_setid() const;
  inline void clear_setid();
  static const int kSetidFieldNumber = 1;
  inline ::google::protobuf::uint32 setid() const;
  inline void set_setid(::google::protobuf::uint32 value);
  
  // optional uint32 identityid = 2;
  inline bool has_identityid() const;
  inline void clear_identityid();
  static const int kIdentityidFieldNumber = 2;
  inline ::google::protobuf::uint32 identityid() const;
  inline void set_identityid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBIdentitySetInfo)
 private:
  inline void set_has_setid();
  inline void clear_has_setid();
  inline void set_has_identityid();
  inline void clear_has_identityid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 setid_;
  ::google::protobuf::uint32 identityid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBIdentitySetInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBIdentitySkillInfo : public ::google::protobuf::Message {
 public:
  PBIdentitySkillInfo();
  virtual ~PBIdentitySkillInfo();
  
  PBIdentitySkillInfo(const PBIdentitySkillInfo& from);
  
  inline PBIdentitySkillInfo& operator=(const PBIdentitySkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBIdentitySkillInfo& default_instance();
  
  void Swap(PBIdentitySkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBIdentitySkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBIdentitySkillInfo& from);
  void MergeFrom(const PBIdentitySkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 skilllevel = 2;
  inline bool has_skilllevel() const;
  inline void clear_skilllevel();
  static const int kSkilllevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skilllevel() const;
  inline void set_skilllevel(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBIdentitySkillInfo)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllevel();
  inline void clear_has_skilllevel();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skilllevel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBIdentitySkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerIdentity : public ::google::protobuf::Message {
 public:
  PBPlayerIdentity();
  virtual ~PBPlayerIdentity();
  
  PBPlayerIdentity(const PBPlayerIdentity& from);
  
  inline PBPlayerIdentity& operator=(const PBPlayerIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerIdentity& default_instance();
  
  void Swap(PBPlayerIdentity* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerIdentity& from);
  void MergeFrom(const PBPlayerIdentity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 resetcount = 1;
  inline bool has_resetcount() const;
  inline void clear_resetcount();
  static const int kResetcountFieldNumber = 1;
  inline ::google::protobuf::uint32 resetcount() const;
  inline void set_resetcount(::google::protobuf::uint32 value);
  
  // optional uint32 resettime = 2;
  inline bool has_resettime() const;
  inline void clear_resettime();
  static const int kResettimeFieldNumber = 2;
  inline ::google::protobuf::uint32 resettime() const;
  inline void set_resettime(::google::protobuf::uint32 value);
  
  // repeated .PBIdentitySetInfo setinfo = 3;
  inline int setinfo_size() const;
  inline void clear_setinfo();
  static const int kSetinfoFieldNumber = 3;
  inline const ::PBIdentitySetInfo& setinfo(int index) const;
  inline ::PBIdentitySetInfo* mutable_setinfo(int index);
  inline ::PBIdentitySetInfo* add_setinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBIdentitySetInfo >&
      setinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIdentitySetInfo >*
      mutable_setinfo();
  
  // repeated .PBIdentitySkillInfo skillinfo = 4;
  inline int skillinfo_size() const;
  inline void clear_skillinfo();
  static const int kSkillinfoFieldNumber = 4;
  inline const ::PBIdentitySkillInfo& skillinfo(int index) const;
  inline ::PBIdentitySkillInfo* mutable_skillinfo(int index);
  inline ::PBIdentitySkillInfo* add_skillinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBIdentitySkillInfo >&
      skillinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIdentitySkillInfo >*
      mutable_skillinfo();
  
  // @@protoc_insertion_point(class_scope:PBPlayerIdentity)
 private:
  inline void set_has_resetcount();
  inline void clear_has_resetcount();
  inline void set_has_resettime();
  inline void clear_has_resettime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 resetcount_;
  ::google::protobuf::uint32 resettime_;
  ::google::protobuf::RepeatedPtrField< ::PBIdentitySetInfo > setinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBIdentitySkillInfo > skillinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerIdentity* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerWuxuePageInfo : public ::google::protobuf::Message {
 public:
  PBPlayerWuxuePageInfo();
  virtual ~PBPlayerWuxuePageInfo();
  
  PBPlayerWuxuePageInfo(const PBPlayerWuxuePageInfo& from);
  
  inline PBPlayerWuxuePageInfo& operator=(const PBPlayerWuxuePageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerWuxuePageInfo& default_instance();
  
  void Swap(PBPlayerWuxuePageInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerWuxuePageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerWuxuePageInfo& from);
  void MergeFrom(const PBPlayerWuxuePageInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 pageid = 1;
  inline bool has_pageid() const;
  inline void clear_pageid();
  static const int kPageidFieldNumber = 1;
  inline ::google::protobuf::uint32 pageid() const;
  inline void set_pageid(::google::protobuf::uint32 value);
  
  // repeated uint32 skillid = 2;
  inline int skillid_size() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid(int index) const;
  inline void set_skillid(int index, ::google::protobuf::uint32 value);
  inline void add_skillid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skillid();
  
  // @@protoc_insertion_point(class_scope:PBPlayerWuxuePageInfo)
 private:
  inline void set_has_pageid();
  inline void clear_has_pageid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skillid_;
  ::google::protobuf::uint32 pageid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerWuxuePageInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerWuxueSchemeInfo : public ::google::protobuf::Message {
 public:
  PBPlayerWuxueSchemeInfo();
  virtual ~PBPlayerWuxueSchemeInfo();
  
  PBPlayerWuxueSchemeInfo(const PBPlayerWuxueSchemeInfo& from);
  
  inline PBPlayerWuxueSchemeInfo& operator=(const PBPlayerWuxueSchemeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerWuxueSchemeInfo& default_instance();
  
  void Swap(PBPlayerWuxueSchemeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerWuxueSchemeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerWuxueSchemeInfo& from);
  void MergeFrom(const PBPlayerWuxueSchemeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 nameid = 1;
  inline bool has_nameid() const;
  inline void clear_nameid();
  static const int kNameidFieldNumber = 1;
  inline ::google::protobuf::uint32 nameid() const;
  inline void set_nameid(::google::protobuf::uint32 value);
  
  // repeated .PBPlayerWuxuePageInfo allskillid = 2;
  inline int allskillid_size() const;
  inline void clear_allskillid();
  static const int kAllskillidFieldNumber = 2;
  inline const ::PBPlayerWuxuePageInfo& allskillid(int index) const;
  inline ::PBPlayerWuxuePageInfo* mutable_allskillid(int index);
  inline ::PBPlayerWuxuePageInfo* add_allskillid();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxuePageInfo >&
      allskillid() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxuePageInfo >*
      mutable_allskillid();
  
  // repeated uint32 useskillid = 3;
  inline int useskillid_size() const;
  inline void clear_useskillid();
  static const int kUseskillidFieldNumber = 3;
  inline ::google::protobuf::uint32 useskillid(int index) const;
  inline void set_useskillid(int index, ::google::protobuf::uint32 value);
  inline void add_useskillid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      useskillid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_useskillid();
  
  // @@protoc_insertion_point(class_scope:PBPlayerWuxueSchemeInfo)
 private:
  inline void set_has_nameid();
  inline void clear_has_nameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxuePageInfo > allskillid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > useskillid_;
  ::google::protobuf::uint32 nameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerWuxueSchemeInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerWuxue : public ::google::protobuf::Message {
 public:
  PBPlayerWuxue();
  virtual ~PBPlayerWuxue();
  
  PBPlayerWuxue(const PBPlayerWuxue& from);
  
  inline PBPlayerWuxue& operator=(const PBPlayerWuxue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerWuxue& default_instance();
  
  void Swap(PBPlayerWuxue* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerWuxue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerWuxue& from);
  void MergeFrom(const PBPlayerWuxue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 curschemenum = 1;
  inline bool has_curschemenum() const;
  inline void clear_curschemenum();
  static const int kCurschemenumFieldNumber = 1;
  inline ::google::protobuf::uint32 curschemenum() const;
  inline void set_curschemenum(::google::protobuf::uint32 value);
  
  // repeated .PBPlayerWuxueSchemeInfo schemeinfo = 2;
  inline int schemeinfo_size() const;
  inline void clear_schemeinfo();
  static const int kSchemeinfoFieldNumber = 2;
  inline const ::PBPlayerWuxueSchemeInfo& schemeinfo(int index) const;
  inline ::PBPlayerWuxueSchemeInfo* mutable_schemeinfo(int index);
  inline ::PBPlayerWuxueSchemeInfo* add_schemeinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxueSchemeInfo >&
      schemeinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxueSchemeInfo >*
      mutable_schemeinfo();
  
  // @@protoc_insertion_point(class_scope:PBPlayerWuxue)
 private:
  inline void set_has_curschemenum();
  inline void clear_has_curschemenum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxueSchemeInfo > schemeinfo_;
  ::google::protobuf::uint32 curschemenum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerWuxue* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerDart : public ::google::protobuf::Message {
 public:
  PBPlayerDart();
  virtual ~PBPlayerDart();
  
  PBPlayerDart(const PBPlayerDart& from);
  
  inline PBPlayerDart& operator=(const PBPlayerDart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerDart& default_instance();
  
  void Swap(PBPlayerDart* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerDart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerDart& from);
  void MergeFrom(const PBPlayerDart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 dartcarGlobalID = 1;
  inline bool has_dartcarglobalid() const;
  inline void clear_dartcarglobalid();
  static const int kDartcarGlobalIDFieldNumber = 1;
  inline ::google::protobuf::uint64 dartcarglobalid() const;
  inline void set_dartcarglobalid(::google::protobuf::uint64 value);
  
  // optional uint32 todayNormalDartCount = 2;
  inline bool has_todaynormaldartcount() const;
  inline void clear_todaynormaldartcount();
  static const int kTodayNormalDartCountFieldNumber = 2;
  inline ::google::protobuf::uint32 todaynormaldartcount() const;
  inline void set_todaynormaldartcount(::google::protobuf::uint32 value);
  
  // optional uint32 todayTianxiaDartCount = 3;
  inline bool has_todaytianxiadartcount() const;
  inline void clear_todaytianxiadartcount();
  static const int kTodayTianxiaDartCountFieldNumber = 3;
  inline ::google::protobuf::uint32 todaytianxiadartcount() const;
  inline void set_todaytianxiadartcount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerDart)
 private:
  inline void set_has_dartcarglobalid();
  inline void clear_has_dartcarglobalid();
  inline void set_has_todaynormaldartcount();
  inline void clear_has_todaynormaldartcount();
  inline void set_has_todaytianxiadartcount();
  inline void clear_has_todaytianxiadartcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 dartcarglobalid_;
  ::google::protobuf::uint32 todaynormaldartcount_;
  ::google::protobuf::uint32 todaytianxiadartcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerDart* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFactionBoss : public ::google::protobuf::Message {
 public:
  PBPlayerFactionBoss();
  virtual ~PBPlayerFactionBoss();
  
  PBPlayerFactionBoss(const PBPlayerFactionBoss& from);
  
  inline PBPlayerFactionBoss& operator=(const PBPlayerFactionBoss& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFactionBoss& default_instance();
  
  void Swap(PBPlayerFactionBoss* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFactionBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFactionBoss& from);
  void MergeFrom(const PBPlayerFactionBoss& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 entertime = 1;
  inline bool has_entertime() const;
  inline void clear_entertime();
  static const int kEntertimeFieldNumber = 1;
  inline ::google::protobuf::uint32 entertime() const;
  inline void set_entertime(::google::protobuf::uint32 value);
  
  // optional uint32 copymapid = 2;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 2;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerFactionBoss)
 private:
  inline void set_has_entertime();
  inline void clear_has_entertime();
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 entertime_;
  ::google::protobuf::uint32 copymapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFactionBoss* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerTitleInfo : public ::google::protobuf::Message {
 public:
  PBPlayerTitleInfo();
  virtual ~PBPlayerTitleInfo();
  
  PBPlayerTitleInfo(const PBPlayerTitleInfo& from);
  
  inline PBPlayerTitleInfo& operator=(const PBPlayerTitleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerTitleInfo& default_instance();
  
  void Swap(PBPlayerTitleInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerTitleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerTitleInfo& from);
  void MergeFrom(const PBPlayerTitleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 expiretime = 2;
  inline bool has_expiretime() const;
  inline void clear_expiretime();
  static const int kExpiretimeFieldNumber = 2;
  inline ::google::protobuf::uint32 expiretime() const;
  inline void set_expiretime(::google::protobuf::uint32 value);
  
  // optional uint32 gettime = 3;
  inline bool has_gettime() const;
  inline void clear_gettime();
  static const int kGettimeFieldNumber = 3;
  inline ::google::protobuf::uint32 gettime() const;
  inline void set_gettime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerTitleInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_expiretime();
  inline void clear_has_expiretime();
  inline void set_has_gettime();
  inline void clear_has_gettime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 expiretime_;
  ::google::protobuf::uint32 gettime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerTitleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerClassfiyTitle : public ::google::protobuf::Message {
 public:
  PBPlayerClassfiyTitle();
  virtual ~PBPlayerClassfiyTitle();
  
  PBPlayerClassfiyTitle(const PBPlayerClassfiyTitle& from);
  
  inline PBPlayerClassfiyTitle& operator=(const PBPlayerClassfiyTitle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerClassfiyTitle& default_instance();
  
  void Swap(PBPlayerClassfiyTitle* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerClassfiyTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerClassfiyTitle& from);
  void MergeFrom(const PBPlayerClassfiyTitle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // repeated .PBPlayerTitleInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PBPlayerTitleInfo& info(int index) const;
  inline ::PBPlayerTitleInfo* mutable_info(int index);
  inline ::PBPlayerTitleInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerTitleInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerTitleInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:PBPlayerClassfiyTitle)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerTitleInfo > info_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerClassfiyTitle* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerTitle : public ::google::protobuf::Message {
 public:
  PBPlayerTitle();
  virtual ~PBPlayerTitle();
  
  PBPlayerTitle(const PBPlayerTitle& from);
  
  inline PBPlayerTitle& operator=(const PBPlayerTitle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerTitle& default_instance();
  
  void Swap(PBPlayerTitle* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerTitle& from);
  void MergeFrom(const PBPlayerTitle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPlayerClassfiyTitle classifytitle = 1;
  inline int classifytitle_size() const;
  inline void clear_classifytitle();
  static const int kClassifytitleFieldNumber = 1;
  inline const ::PBPlayerClassfiyTitle& classifytitle(int index) const;
  inline ::PBPlayerClassfiyTitle* mutable_classifytitle(int index);
  inline ::PBPlayerClassfiyTitle* add_classifytitle();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerClassfiyTitle >&
      classifytitle() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerClassfiyTitle >*
      mutable_classifytitle();
  
  // @@protoc_insertion_point(class_scope:PBPlayerTitle)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerClassfiyTitle > classifytitle_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerTitle* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerDazuoguaji : public ::google::protobuf::Message {
 public:
  PBPlayerDazuoguaji();
  virtual ~PBPlayerDazuoguaji();
  
  PBPlayerDazuoguaji(const PBPlayerDazuoguaji& from);
  
  inline PBPlayerDazuoguaji& operator=(const PBPlayerDazuoguaji& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerDazuoguaji& default_instance();
  
  void Swap(PBPlayerDazuoguaji* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerDazuoguaji* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerDazuoguaji& from);
  void MergeFrom(const PBPlayerDazuoguaji& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 todayDazuoguajiExpCount = 1;
  inline bool has_todaydazuoguajiexpcount() const;
  inline void clear_todaydazuoguajiexpcount();
  static const int kTodayDazuoguajiExpCountFieldNumber = 1;
  inline ::google::protobuf::uint32 todaydazuoguajiexpcount() const;
  inline void set_todaydazuoguajiexpcount(::google::protobuf::uint32 value);
  
  // optional uint32 todayDazuoguajiWisdomCount = 2;
  inline bool has_todaydazuoguajiwisdomcount() const;
  inline void clear_todaydazuoguajiwisdomcount();
  static const int kTodayDazuoguajiWisdomCountFieldNumber = 2;
  inline ::google::protobuf::uint32 todaydazuoguajiwisdomcount() const;
  inline void set_todaydazuoguajiwisdomcount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerDazuoguaji)
 private:
  inline void set_has_todaydazuoguajiexpcount();
  inline void clear_has_todaydazuoguajiexpcount();
  inline void set_has_todaydazuoguajiwisdomcount();
  inline void clear_has_todaydazuoguajiwisdomcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 todaydazuoguajiexpcount_;
  ::google::protobuf::uint32 todaydazuoguajiwisdomcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerDazuoguaji* default_instance_;
};
// -------------------------------------------------------------------

class PBFashion : public ::google::protobuf::Message {
 public:
  PBFashion();
  virtual ~PBFashion();
  
  PBFashion(const PBFashion& from);
  
  inline PBFashion& operator=(const PBFashion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFashion& default_instance();
  
  void Swap(PBFashion* other);
  
  // implements Message ----------------------------------------------
  
  PBFashion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFashion& from);
  void MergeFrom(const PBFashion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 fashionid = 1;
  inline bool has_fashionid() const;
  inline void clear_fashionid();
  static const int kFashionidFieldNumber = 1;
  inline ::google::protobuf::uint32 fashionid() const;
  inline void set_fashionid(::google::protobuf::uint32 value);
  
  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFashion)
 private:
  inline void set_has_fashionid();
  inline void clear_has_fashionid();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 fashionid_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBFashion* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFashion : public ::google::protobuf::Message {
 public:
  PBPlayerFashion();
  virtual ~PBPlayerFashion();
  
  PBPlayerFashion(const PBPlayerFashion& from);
  
  inline PBPlayerFashion& operator=(const PBPlayerFashion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFashion& default_instance();
  
  void Swap(PBPlayerFashion* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFashion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFashion& from);
  void MergeFrom(const PBPlayerFashion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBFashion fashion = 1;
  inline int fashion_size() const;
  inline void clear_fashion();
  static const int kFashionFieldNumber = 1;
  inline const ::PBFashion& fashion(int index) const;
  inline ::PBFashion* mutable_fashion(int index);
  inline ::PBFashion* add_fashion();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFashion >&
      fashion() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFashion >*
      mutable_fashion();
  
  // repeated uint32 equipfashionid = 2;
  inline int equipfashionid_size() const;
  inline void clear_equipfashionid();
  static const int kEquipfashionidFieldNumber = 2;
  inline ::google::protobuf::uint32 equipfashionid(int index) const;
  inline void set_equipfashionid(int index, ::google::protobuf::uint32 value);
  inline void add_equipfashionid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equipfashionid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equipfashionid();
  
  // @@protoc_insertion_point(class_scope:PBPlayerFashion)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFashion > fashion_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equipfashionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFashion* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipColumn : public ::google::protobuf::Message {
 public:
  PBEquipColumn();
  virtual ~PBEquipColumn();
  
  PBEquipColumn(const PBEquipColumn& from);
  
  inline PBEquipColumn& operator=(const PBEquipColumn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipColumn& default_instance();
  
  void Swap(PBEquipColumn* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipColumn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipColumn& from);
  void MergeFrom(const PBEquipColumn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 EnhanceLevel = 2;
  inline bool has_enhancelevel() const;
  inline void clear_enhancelevel();
  static const int kEnhanceLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 enhancelevel() const;
  inline void set_enhancelevel(::google::protobuf::uint32 value);
  
  // optional uint32 ForgeLevel = 3;
  inline bool has_forgelevel() const;
  inline void clear_forgelevel();
  static const int kForgeLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 forgelevel() const;
  inline void set_forgelevel(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBEquipColumn)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_enhancelevel();
  inline void clear_has_enhancelevel();
  inline void set_has_forgelevel();
  inline void clear_has_forgelevel();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 enhancelevel_;
  ::google::protobuf::uint32 forgelevel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBEquipColumn* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerEquipColumn : public ::google::protobuf::Message {
 public:
  PBPlayerEquipColumn();
  virtual ~PBPlayerEquipColumn();
  
  PBPlayerEquipColumn(const PBPlayerEquipColumn& from);
  
  inline PBPlayerEquipColumn& operator=(const PBPlayerEquipColumn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerEquipColumn& default_instance();
  
  void Swap(PBPlayerEquipColumn* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerEquipColumn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerEquipColumn& from);
  void MergeFrom(const PBPlayerEquipColumn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBEquipColumn info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::PBEquipColumn& info(int index) const;
  inline ::PBEquipColumn* mutable_info(int index);
  inline ::PBEquipColumn* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipColumn >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipColumn >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:PBPlayerEquipColumn)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBEquipColumn > info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerEquipColumn* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGreatWallTrain : public ::google::protobuf::Message {
 public:
  PBPlayerGreatWallTrain();
  virtual ~PBPlayerGreatWallTrain();
  
  PBPlayerGreatWallTrain(const PBPlayerGreatWallTrain& from);
  
  inline PBPlayerGreatWallTrain& operator=(const PBPlayerGreatWallTrain& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGreatWallTrain& default_instance();
  
  void Swap(PBPlayerGreatWallTrain* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGreatWallTrain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGreatWallTrain& from);
  void MergeFrom(const PBPlayerGreatWallTrain& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 CopymapID = 1;
  inline int copymapid_size() const;
  inline void clear_copymapid();
  static const int kCopymapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 copymapid(int index) const;
  inline void set_copymapid(int index, ::google::protobuf::uint32 value);
  inline void add_copymapid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      copymapid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_copymapid();
  
  // optional uint32 layer = 2;
  inline bool has_layer() const;
  inline void clear_layer();
  static const int kLayerFieldNumber = 2;
  inline ::google::protobuf::uint32 layer() const;
  inline void set_layer(::google::protobuf::uint32 value);
  
  // optional uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerGreatWallTrain)
 private:
  inline void set_has_layer();
  inline void clear_has_layer();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > copymapid_;
  ::google::protobuf::uint32 layer_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGreatWallTrain* default_instance_;
};
// -------------------------------------------------------------------

class PBActivityInfo : public ::google::protobuf::Message {
 public:
  PBActivityInfo();
  virtual ~PBActivityInfo();
  
  PBActivityInfo(const PBActivityInfo& from);
  
  inline PBActivityInfo& operator=(const PBActivityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBActivityInfo& default_instance();
  
  void Swap(PBActivityInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBActivityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBActivityInfo& from);
  void MergeFrom(const PBActivityInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBActivityInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBActivityInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerActivity : public ::google::protobuf::Message {
 public:
  PBPlayerActivity();
  virtual ~PBPlayerActivity();
  
  PBPlayerActivity(const PBPlayerActivity& from);
  
  inline PBPlayerActivity& operator=(const PBPlayerActivity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerActivity& default_instance();
  
  void Swap(PBPlayerActivity* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerActivity& from);
  void MergeFrom(const PBPlayerActivity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBActivityInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::PBActivityInfo& info(int index) const;
  inline ::PBActivityInfo* mutable_info(int index);
  inline ::PBActivityInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PBActivityInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBActivityInfo >*
      mutable_info();
  
  // optional uint32 liveness = 2;
  inline bool has_liveness() const;
  inline void clear_liveness();
  static const int kLivenessFieldNumber = 2;
  inline ::google::protobuf::uint32 liveness() const;
  inline void set_liveness(::google::protobuf::uint32 value);
  
  // repeated uint32 setid = 3;
  inline int setid_size() const;
  inline void clear_setid();
  static const int kSetidFieldNumber = 3;
  inline ::google::protobuf::uint32 setid(int index) const;
  inline void set_setid(int index, ::google::protobuf::uint32 value);
  inline void add_setid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      setid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_setid();
  
  // repeated uint32 cleartime = 4;
  inline int cleartime_size() const;
  inline void clear_cleartime();
  static const int kCleartimeFieldNumber = 4;
  inline ::google::protobuf::uint32 cleartime(int index) const;
  inline void set_cleartime(int index, ::google::protobuf::uint32 value);
  inline void add_cleartime(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cleartime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cleartime();
  
  // @@protoc_insertion_point(class_scope:PBPlayerActivity)
 private:
  inline void set_has_liveness();
  inline void clear_has_liveness();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBActivityInfo > info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > setid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cleartime_;
  ::google::protobuf::uint32 liveness_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerActivity* default_instance_;
};
// -------------------------------------------------------------------

class PBLlayerRelive : public ::google::protobuf::Message {
 public:
  PBLlayerRelive();
  virtual ~PBLlayerRelive();
  
  PBLlayerRelive(const PBLlayerRelive& from);
  
  inline PBLlayerRelive& operator=(const PBLlayerRelive& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLlayerRelive& default_instance();
  
  void Swap(PBLlayerRelive* other);
  
  // implements Message ----------------------------------------------
  
  PBLlayerRelive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBLlayerRelive& from);
  void MergeFrom(const PBLlayerRelive& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 FreeMaxCount = 1;
  inline bool has_freemaxcount() const;
  inline void clear_freemaxcount();
  static const int kFreeMaxCountFieldNumber = 1;
  inline ::google::protobuf::uint32 freemaxcount() const;
  inline void set_freemaxcount(::google::protobuf::uint32 value);
  
  // optional uint32 CostCount = 2;
  inline bool has_costcount() const;
  inline void clear_costcount();
  static const int kCostCountFieldNumber = 2;
  inline ::google::protobuf::uint32 costcount() const;
  inline void set_costcount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBLlayerRelive)
 private:
  inline void set_has_freemaxcount();
  inline void clear_has_freemaxcount();
  inline void set_has_costcount();
  inline void clear_has_costcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 freemaxcount_;
  ::google::protobuf::uint32 costcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBLlayerRelive* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerClimbTowerItem : public ::google::protobuf::Message {
 public:
  PBPlayerClimbTowerItem();
  virtual ~PBPlayerClimbTowerItem();
  
  PBPlayerClimbTowerItem(const PBPlayerClimbTowerItem& from);
  
  inline PBPlayerClimbTowerItem& operator=(const PBPlayerClimbTowerItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerClimbTowerItem& default_instance();
  
  void Swap(PBPlayerClimbTowerItem* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerClimbTowerItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerClimbTowerItem& from);
  void MergeFrom(const PBPlayerClimbTowerItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerClimbTowerItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerClimbTowerItem* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerClimbTower : public ::google::protobuf::Message {
 public:
  PBPlayerClimbTower();
  virtual ~PBPlayerClimbTower();
  
  PBPlayerClimbTower(const PBPlayerClimbTower& from);
  
  inline PBPlayerClimbTower& operator=(const PBPlayerClimbTower& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerClimbTower& default_instance();
  
  void Swap(PBPlayerClimbTower* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerClimbTower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerClimbTower& from);
  void MergeFrom(const PBPlayerClimbTower& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 dayCurrentCopymapID = 1;
  inline bool has_daycurrentcopymapid() const;
  inline void clear_daycurrentcopymapid();
  static const int kDayCurrentCopymapIDFieldNumber = 1;
  inline ::google::protobuf::uint32 daycurrentcopymapid() const;
  inline void set_daycurrentcopymapid(::google::protobuf::uint32 value);
  
  // repeated .PBPlayerClimbTowerItem dayItemUnsettled = 2;
  inline int dayitemunsettled_size() const;
  inline void clear_dayitemunsettled();
  static const int kDayItemUnsettledFieldNumber = 2;
  inline const ::PBPlayerClimbTowerItem& dayitemunsettled(int index) const;
  inline ::PBPlayerClimbTowerItem* mutable_dayitemunsettled(int index);
  inline ::PBPlayerClimbTowerItem* add_dayitemunsettled();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerClimbTowerItem >&
      dayitemunsettled() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerClimbTowerItem >*
      mutable_dayitemunsettled();
  
  // optional uint32 dayPlayCount = 3;
  inline bool has_dayplaycount() const;
  inline void clear_dayplaycount();
  static const int kDayPlayCountFieldNumber = 3;
  inline ::google::protobuf::uint32 dayplaycount() const;
  inline void set_dayplaycount(::google::protobuf::uint32 value);
  
  // optional uint32 weekCurrentClass = 4;
  inline bool has_weekcurrentclass() const;
  inline void clear_weekcurrentclass();
  static const int kWeekCurrentClassFieldNumber = 4;
  inline ::google::protobuf::uint32 weekcurrentclass() const;
  inline void set_weekcurrentclass(::google::protobuf::uint32 value);
  
  // optional uint32 weekMaxCopyID = 5;
  inline bool has_weekmaxcopyid() const;
  inline void clear_weekmaxcopyid();
  static const int kWeekMaxCopyIDFieldNumber = 5;
  inline ::google::protobuf::uint32 weekmaxcopyid() const;
  inline void set_weekmaxcopyid(::google::protobuf::uint32 value);
  
  // optional uint32 nextJumpCpymapID = 6;
  inline bool has_nextjumpcpymapid() const;
  inline void clear_nextjumpcpymapid();
  static const int kNextJumpCpymapIDFieldNumber = 6;
  inline ::google::protobuf::uint32 nextjumpcpymapid() const;
  inline void set_nextjumpcpymapid(::google::protobuf::uint32 value);
  
  // optional uint32 luckDrawRightNow = 7;
  inline bool has_luckdrawrightnow() const;
  inline void clear_luckdrawrightnow();
  static const int kLuckDrawRightNowFieldNumber = 7;
  inline ::google::protobuf::uint32 luckdrawrightnow() const;
  inline void set_luckdrawrightnow(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerClimbTower)
 private:
  inline void set_has_daycurrentcopymapid();
  inline void clear_has_daycurrentcopymapid();
  inline void set_has_dayplaycount();
  inline void clear_has_dayplaycount();
  inline void set_has_weekcurrentclass();
  inline void clear_has_weekcurrentclass();
  inline void set_has_weekmaxcopyid();
  inline void clear_has_weekmaxcopyid();
  inline void set_has_nextjumpcpymapid();
  inline void clear_has_nextjumpcpymapid();
  inline void set_has_luckdrawrightnow();
  inline void clear_has_luckdrawrightnow();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerClimbTowerItem > dayitemunsettled_;
  ::google::protobuf::uint32 daycurrentcopymapid_;
  ::google::protobuf::uint32 dayplaycount_;
  ::google::protobuf::uint32 weekcurrentclass_;
  ::google::protobuf::uint32 weekmaxcopyid_;
  ::google::protobuf::uint32 nextjumpcpymapid_;
  ::google::protobuf::uint32 luckdrawrightnow_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerClimbTower* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerPvpData : public ::google::protobuf::Message {
 public:
  PBPlayerPvpData();
  virtual ~PBPlayerPvpData();
  
  PBPlayerPvpData(const PBPlayerPvpData& from);
  
  inline PBPlayerPvpData& operator=(const PBPlayerPvpData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerPvpData& default_instance();
  
  void Swap(PBPlayerPvpData* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerPvpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerPvpData& from);
  void MergeFrom(const PBPlayerPvpData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 entercount = 2;
  inline bool has_entercount() const;
  inline void clear_entercount();
  static const int kEntercountFieldNumber = 2;
  inline ::google::protobuf::uint32 entercount() const;
  inline void set_entercount(::google::protobuf::uint32 value);
  
  // optional uint32 winnum = 3;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinnumFieldNumber = 3;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);
  
  // optional uint32 failnum = 4;
  inline bool has_failnum() const;
  inline void clear_failnum();
  static const int kFailnumFieldNumber = 4;
  inline ::google::protobuf::uint32 failnum() const;
  inline void set_failnum(::google::protobuf::uint32 value);
  
  // optional uint32 capturenum = 5;
  inline bool has_capturenum() const;
  inline void clear_capturenum();
  static const int kCapturenumFieldNumber = 5;
  inline ::google::protobuf::uint32 capturenum() const;
  inline void set_capturenum(::google::protobuf::uint32 value);
  
  // optional uint32 killnum = 6;
  inline bool has_killnum() const;
  inline void clear_killnum();
  static const int kKillnumFieldNumber = 6;
  inline ::google::protobuf::uint32 killnum() const;
  inline void set_killnum(::google::protobuf::uint32 value);
  
  // optional uint32 assistnum = 7;
  inline bool has_assistnum() const;
  inline void clear_assistnum();
  static const int kAssistnumFieldNumber = 7;
  inline ::google::protobuf::uint32 assistnum() const;
  inline void set_assistnum(::google::protobuf::uint32 value);
  
  // optional uint32 deadnum = 8;
  inline bool has_deadnum() const;
  inline void clear_deadnum();
  static const int kDeadnumFieldNumber = 8;
  inline ::google::protobuf::uint32 deadnum() const;
  inline void set_deadnum(::google::protobuf::uint32 value);
  
  // optional uint32 megakill = 9;
  inline bool has_megakill() const;
  inline void clear_megakill();
  static const int kMegakillFieldNumber = 9;
  inline ::google::protobuf::uint32 megakill() const;
  inline void set_megakill(::google::protobuf::uint32 value);
  
  // optional uint32 godlike = 10;
  inline bool has_godlike() const;
  inline void clear_godlike();
  static const int kGodlikeFieldNumber = 10;
  inline ::google::protobuf::uint32 godlike() const;
  inline void set_godlike(::google::protobuf::uint32 value);
  
  // optional uint32 mvpnum = 11;
  inline bool has_mvpnum() const;
  inline void clear_mvpnum();
  static const int kMvpnumFieldNumber = 11;
  inline ::google::protobuf::uint32 mvpnum() const;
  inline void set_mvpnum(::google::protobuf::uint32 value);
  
  // optional uint32 exitreadycount = 12;
  inline bool has_exitreadycount() const;
  inline void clear_exitreadycount();
  static const int kExitreadycountFieldNumber = 12;
  inline ::google::protobuf::uint32 exitreadycount() const;
  inline void set_exitreadycount(::google::protobuf::uint32 value);
  
  // optional uint32 nextentertime = 13;
  inline bool has_nextentertime() const;
  inline void clear_nextentertime();
  static const int kNextentertimeFieldNumber = 13;
  inline ::google::protobuf::uint32 nextentertime() const;
  inline void set_nextentertime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerPvpData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_entercount();
  inline void clear_has_entercount();
  inline void set_has_winnum();
  inline void clear_has_winnum();
  inline void set_has_failnum();
  inline void clear_has_failnum();
  inline void set_has_capturenum();
  inline void clear_has_capturenum();
  inline void set_has_killnum();
  inline void clear_has_killnum();
  inline void set_has_assistnum();
  inline void clear_has_assistnum();
  inline void set_has_deadnum();
  inline void clear_has_deadnum();
  inline void set_has_megakill();
  inline void clear_has_megakill();
  inline void set_has_godlike();
  inline void clear_has_godlike();
  inline void set_has_mvpnum();
  inline void clear_has_mvpnum();
  inline void set_has_exitreadycount();
  inline void clear_has_exitreadycount();
  inline void set_has_nextentertime();
  inline void clear_has_nextentertime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 entercount_;
  ::google::protobuf::uint32 winnum_;
  ::google::protobuf::uint32 failnum_;
  ::google::protobuf::uint32 capturenum_;
  ::google::protobuf::uint32 killnum_;
  ::google::protobuf::uint32 assistnum_;
  ::google::protobuf::uint32 deadnum_;
  ::google::protobuf::uint32 megakill_;
  ::google::protobuf::uint32 godlike_;
  ::google::protobuf::uint32 mvpnum_;
  ::google::protobuf::uint32 exitreadycount_;
  ::google::protobuf::uint32 nextentertime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerPvpData* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerPvp : public ::google::protobuf::Message {
 public:
  PBPlayerPvp();
  virtual ~PBPlayerPvp();
  
  PBPlayerPvp(const PBPlayerPvp& from);
  
  inline PBPlayerPvp& operator=(const PBPlayerPvp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerPvp& default_instance();
  
  void Swap(PBPlayerPvp* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerPvp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerPvp& from);
  void MergeFrom(const PBPlayerPvp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPlayerPvpData pvpdata = 1;
  inline int pvpdata_size() const;
  inline void clear_pvpdata();
  static const int kPvpdataFieldNumber = 1;
  inline const ::PBPlayerPvpData& pvpdata(int index) const;
  inline ::PBPlayerPvpData* mutable_pvpdata(int index);
  inline ::PBPlayerPvpData* add_pvpdata();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerPvpData >&
      pvpdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerPvpData >*
      mutable_pvpdata();
  
  // @@protoc_insertion_point(class_scope:PBPlayerPvp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerPvpData > pvpdata_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerPvp* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerLoginWealData : public ::google::protobuf::Message {
 public:
  PBPlayerLoginWealData();
  virtual ~PBPlayerLoginWealData();
  
  PBPlayerLoginWealData(const PBPlayerLoginWealData& from);
  
  inline PBPlayerLoginWealData& operator=(const PBPlayerLoginWealData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerLoginWealData& default_instance();
  
  void Swap(PBPlayerLoginWealData* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerLoginWealData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerLoginWealData& from);
  void MergeFrom(const PBPlayerLoginWealData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 prizeday = 2;
  inline bool has_prizeday() const;
  inline void clear_prizeday();
  static const int kPrizedayFieldNumber = 2;
  inline ::google::protobuf::uint32 prizeday() const;
  inline void set_prizeday(::google::protobuf::uint32 value);
  
  // optional uint32 prizetime = 3;
  inline bool has_prizetime() const;
  inline void clear_prizetime();
  static const int kPrizetimeFieldNumber = 3;
  inline ::google::protobuf::uint32 prizetime() const;
  inline void set_prizetime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerLoginWealData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_prizeday();
  inline void clear_has_prizeday();
  inline void set_has_prizetime();
  inline void clear_has_prizetime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 prizeday_;
  ::google::protobuf::uint32 prizetime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerLoginWealData* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerWeal : public ::google::protobuf::Message {
 public:
  PBPlayerWeal();
  virtual ~PBPlayerWeal();
  
  PBPlayerWeal(const PBPlayerWeal& from);
  
  inline PBPlayerWeal& operator=(const PBPlayerWeal& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerWeal& default_instance();
  
  void Swap(PBPlayerWeal* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerWeal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerWeal& from);
  void MergeFrom(const PBPlayerWeal& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBPlayerLoginWealData logindata = 1;
  inline int logindata_size() const;
  inline void clear_logindata();
  static const int kLogindataFieldNumber = 1;
  inline const ::PBPlayerLoginWealData& logindata(int index) const;
  inline ::PBPlayerLoginWealData* mutable_logindata(int index);
  inline ::PBPlayerLoginWealData* add_logindata();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerLoginWealData >&
      logindata() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerLoginWealData >*
      mutable_logindata();
  
  // @@protoc_insertion_point(class_scope:PBPlayerWeal)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerLoginWealData > logindata_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerWeal* default_instance_;
};
// -------------------------------------------------------------------

class PBSinglePvpRecord : public ::google::protobuf::Message {
 public:
  PBSinglePvpRecord();
  virtual ~PBSinglePvpRecord();
  
  PBSinglePvpRecord(const PBSinglePvpRecord& from);
  
  inline PBSinglePvpRecord& operator=(const PBSinglePvpRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSinglePvpRecord& default_instance();
  
  void Swap(PBSinglePvpRecord* other);
  
  // implements Message ----------------------------------------------
  
  PBSinglePvpRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSinglePvpRecord& from);
  void MergeFrom(const PBSinglePvpRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // optional uint32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSinglePvpRecord)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSinglePvpRecord* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerSinglePvp : public ::google::protobuf::Message {
 public:
  PBPlayerSinglePvp();
  virtual ~PBPlayerSinglePvp();
  
  PBPlayerSinglePvp(const PBPlayerSinglePvp& from);
  
  inline PBPlayerSinglePvp& operator=(const PBPlayerSinglePvp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerSinglePvp& default_instance();
  
  void Swap(PBPlayerSinglePvp* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerSinglePvp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerSinglePvp& from);
  void MergeFrom(const PBPlayerSinglePvp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 dayentercount = 1;
  inline bool has_dayentercount() const;
  inline void clear_dayentercount();
  static const int kDayentercountFieldNumber = 1;
  inline ::google::protobuf::uint32 dayentercount() const;
  inline void set_dayentercount(::google::protobuf::uint32 value);
  
  // optional uint32 wincount = 2;
  inline bool has_wincount() const;
  inline void clear_wincount();
  static const int kWincountFieldNumber = 2;
  inline ::google::protobuf::uint32 wincount() const;
  inline void set_wincount(::google::protobuf::uint32 value);
  
  // optional uint32 failcount = 3;
  inline bool has_failcount() const;
  inline void clear_failcount();
  static const int kFailcountFieldNumber = 3;
  inline ::google::protobuf::uint32 failcount() const;
  inline void set_failcount(::google::protobuf::uint32 value);
  
  // optional uint32 equalcount = 4;
  inline bool has_equalcount() const;
  inline void clear_equalcount();
  static const int kEqualcountFieldNumber = 4;
  inline ::google::protobuf::uint32 equalcount() const;
  inline void set_equalcount(::google::protobuf::uint32 value);
  
  // optional uint32 score = 5;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // optional uint32 maxscore = 6;
  inline bool has_maxscore() const;
  inline void clear_maxscore();
  static const int kMaxscoreFieldNumber = 6;
  inline ::google::protobuf::uint32 maxscore() const;
  inline void set_maxscore(::google::protobuf::uint32 value);
  
  // repeated uint32 firstprizeid = 7;
  inline int firstprizeid_size() const;
  inline void clear_firstprizeid();
  static const int kFirstprizeidFieldNumber = 7;
  inline ::google::protobuf::uint32 firstprizeid(int index) const;
  inline void set_firstprizeid(int index, ::google::protobuf::uint32 value);
  inline void add_firstprizeid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      firstprizeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_firstprizeid();
  
  // repeated uint32 dayprize = 8;
  inline int dayprize_size() const;
  inline void clear_dayprize();
  static const int kDayprizeFieldNumber = 8;
  inline ::google::protobuf::uint32 dayprize(int index) const;
  inline void set_dayprize(int index, ::google::protobuf::uint32 value);
  inline void add_dayprize(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dayprize() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dayprize();
  
  // repeated .PBSinglePvpRecord record = 9;
  inline int record_size() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 9;
  inline const ::PBSinglePvpRecord& record(int index) const;
  inline ::PBSinglePvpRecord* mutable_record(int index);
  inline ::PBSinglePvpRecord* add_record();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSinglePvpRecord >&
      record() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSinglePvpRecord >*
      mutable_record();
  
  // optional uint32 weekcount = 10;
  inline bool has_weekcount() const;
  inline void clear_weekcount();
  static const int kWeekcountFieldNumber = 10;
  inline ::google::protobuf::uint32 weekcount() const;
  inline void set_weekcount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerSinglePvp)
 private:
  inline void set_has_dayentercount();
  inline void clear_has_dayentercount();
  inline void set_has_wincount();
  inline void clear_has_wincount();
  inline void set_has_failcount();
  inline void clear_has_failcount();
  inline void set_has_equalcount();
  inline void clear_has_equalcount();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_maxscore();
  inline void clear_has_maxscore();
  inline void set_has_weekcount();
  inline void clear_has_weekcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 dayentercount_;
  ::google::protobuf::uint32 wincount_;
  ::google::protobuf::uint32 failcount_;
  ::google::protobuf::uint32 equalcount_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 maxscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > firstprizeid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dayprize_;
  ::google::protobuf::RepeatedPtrField< ::PBSinglePvpRecord > record_;
  ::google::protobuf::uint32 weekcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerSinglePvp* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerCommon : public ::google::protobuf::Message {
 public:
  PBPlayerCommon();
  virtual ~PBPlayerCommon();
  
  PBPlayerCommon(const PBPlayerCommon& from);
  
  inline PBPlayerCommon& operator=(const PBPlayerCommon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerCommon& default_instance();
  
  void Swap(PBPlayerCommon* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerCommon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerCommon& from);
  void MergeFrom(const PBPlayerCommon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 strongerid = 1;
  inline int strongerid_size() const;
  inline void clear_strongerid();
  static const int kStrongeridFieldNumber = 1;
  inline ::google::protobuf::uint32 strongerid(int index) const;
  inline void set_strongerid(int index, ::google::protobuf::uint32 value);
  inline void add_strongerid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      strongerid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_strongerid();
  
  // @@protoc_insertion_point(class_scope:PBPlayerCommon)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > strongerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerCommon* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerManor : public ::google::protobuf::Message {
 public:
  PBPlayerManor();
  virtual ~PBPlayerManor();
  
  PBPlayerManor(const PBPlayerManor& from);
  
  inline PBPlayerManor& operator=(const PBPlayerManor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerManor& default_instance();
  
  void Swap(PBPlayerManor* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerManor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerManor& from);
  void MergeFrom(const PBPlayerManor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 enterbattlefieldtime = 1;
  inline bool has_enterbattlefieldtime() const;
  inline void clear_enterbattlefieldtime();
  static const int kEnterbattlefieldtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 enterbattlefieldtime() const;
  inline void set_enterbattlefieldtime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerManor)
 private:
  inline void set_has_enterbattlefieldtime();
  inline void clear_has_enterbattlefieldtime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 enterbattlefieldtime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerManor* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerSystem : public ::google::protobuf::Message {
 public:
  PBPlayerSystem();
  virtual ~PBPlayerSystem();
  
  PBPlayerSystem(const PBPlayerSystem& from);
  
  inline PBPlayerSystem& operator=(const PBPlayerSystem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerSystem& default_instance();
  
  void Swap(PBPlayerSystem* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerSystem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerSystem& from);
  void MergeFrom(const PBPlayerSystem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // optional .PBCooling cooling = 2;
  inline bool has_cooling() const;
  inline void clear_cooling();
  static const int kCoolingFieldNumber = 2;
  inline const ::PBCooling& cooling() const;
  inline ::PBCooling* mutable_cooling();
  inline ::PBCooling* release_cooling();
  
  // optional .PBSystemSkill skill = 3;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline const ::PBSystemSkill& skill() const;
  inline ::PBSystemSkill* mutable_skill();
  inline ::PBSystemSkill* release_skill();
  
  // optional .PBSystemBuff buff = 4;
  inline bool has_buff() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 4;
  inline const ::PBSystemBuff& buff() const;
  inline ::PBSystemBuff* mutable_buff();
  inline ::PBSystemBuff* release_buff();
  
  // optional .PBSystemCounter counter = 5;
  inline bool has_counter() const;
  inline void clear_counter();
  static const int kCounterFieldNumber = 5;
  inline const ::PBSystemCounter& counter() const;
  inline ::PBSystemCounter* mutable_counter();
  inline ::PBSystemCounter* release_counter();
  
  // optional .PBPlayerPrize prize = 6;
  inline bool has_prize() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 6;
  inline const ::PBPlayerPrize& prize() const;
  inline ::PBPlayerPrize* mutable_prize();
  inline ::PBPlayerPrize* release_prize();
  
  // optional .PBPlayerTrade trade = 7;
  inline bool has_trade() const;
  inline void clear_trade();
  static const int kTradeFieldNumber = 7;
  inline const ::PBPlayerTrade& trade() const;
  inline ::PBPlayerTrade* mutable_trade();
  inline ::PBPlayerTrade* release_trade();
  
  // optional .PBPlayerStore playerStore = 8;
  inline bool has_playerstore() const;
  inline void clear_playerstore();
  static const int kPlayerStoreFieldNumber = 8;
  inline const ::PBPlayerStore& playerstore() const;
  inline ::PBPlayerStore* mutable_playerstore();
  inline ::PBPlayerStore* release_playerstore();
  
  // optional .PBPlayerWeal weal = 9;
  inline bool has_weal() const;
  inline void clear_weal();
  static const int kWealFieldNumber = 9;
  inline const ::PBPlayerWeal& weal() const;
  inline ::PBPlayerWeal* mutable_weal();
  inline ::PBPlayerWeal* release_weal();
  
  // optional .PBPlayerWulue playerWulue = 10;
  inline bool has_playerwulue() const;
  inline void clear_playerwulue();
  static const int kPlayerWulueFieldNumber = 10;
  inline const ::PBPlayerWulue& playerwulue() const;
  inline ::PBPlayerWulue* mutable_playerwulue();
  inline ::PBPlayerWulue* release_playerwulue();
  
  // optional .PBPlayerWenTao wentao = 11;
  inline bool has_wentao() const;
  inline void clear_wentao();
  static const int kWentaoFieldNumber = 11;
  inline const ::PBPlayerWenTao& wentao() const;
  inline ::PBPlayerWenTao* mutable_wentao();
  inline ::PBPlayerWenTao* release_wentao();
  
  // optional .PBPlayerCopymap copymap = 12;
  inline bool has_copymap() const;
  inline void clear_copymap();
  static const int kCopymapFieldNumber = 12;
  inline const ::PBPlayerCopymap& copymap() const;
  inline ::PBPlayerCopymap* mutable_copymap();
  inline ::PBPlayerCopymap* release_copymap();
  
  // optional .PBPlayerIdentity identity = 13;
  inline bool has_identity() const;
  inline void clear_identity();
  static const int kIdentityFieldNumber = 13;
  inline const ::PBPlayerIdentity& identity() const;
  inline ::PBPlayerIdentity* mutable_identity();
  inline ::PBPlayerIdentity* release_identity();
  
  // optional .PBSystemSwitch systemSwitch = 14;
  inline bool has_systemswitch() const;
  inline void clear_systemswitch();
  static const int kSystemSwitchFieldNumber = 14;
  inline const ::PBSystemSwitch& systemswitch() const;
  inline ::PBSystemSwitch* mutable_systemswitch();
  inline ::PBSystemSwitch* release_systemswitch();
  
  // optional .PBPlayerColletion conlletion = 15;
  inline bool has_conlletion() const;
  inline void clear_conlletion();
  static const int kConlletionFieldNumber = 15;
  inline const ::PBPlayerColletion& conlletion() const;
  inline ::PBPlayerColletion* mutable_conlletion();
  inline ::PBPlayerColletion* release_conlletion();
  
  // optional .PBPlayerWuxue wuxue = 16;
  inline bool has_wuxue() const;
  inline void clear_wuxue();
  static const int kWuxueFieldNumber = 16;
  inline const ::PBPlayerWuxue& wuxue() const;
  inline ::PBPlayerWuxue* mutable_wuxue();
  inline ::PBPlayerWuxue* release_wuxue();
  
  // optional .PBPlayerDart dart = 17;
  inline bool has_dart() const;
  inline void clear_dart();
  static const int kDartFieldNumber = 17;
  inline const ::PBPlayerDart& dart() const;
  inline ::PBPlayerDart* mutable_dart();
  inline ::PBPlayerDart* release_dart();
  
  // optional .PBPlayerFactionBoss factionboss = 18;
  inline bool has_factionboss() const;
  inline void clear_factionboss();
  static const int kFactionbossFieldNumber = 18;
  inline const ::PBPlayerFactionBoss& factionboss() const;
  inline ::PBPlayerFactionBoss* mutable_factionboss();
  inline ::PBPlayerFactionBoss* release_factionboss();
  
  // optional .PBPlayerTitle title = 19;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 19;
  inline const ::PBPlayerTitle& title() const;
  inline ::PBPlayerTitle* mutable_title();
  inline ::PBPlayerTitle* release_title();
  
  // optional .PBPlayerDazuoguaji dazuoguaji = 20;
  inline bool has_dazuoguaji() const;
  inline void clear_dazuoguaji();
  static const int kDazuoguajiFieldNumber = 20;
  inline const ::PBPlayerDazuoguaji& dazuoguaji() const;
  inline ::PBPlayerDazuoguaji* mutable_dazuoguaji();
  inline ::PBPlayerDazuoguaji* release_dazuoguaji();
  
  // optional .PBPlayerFashion fashion = 21;
  inline bool has_fashion() const;
  inline void clear_fashion();
  static const int kFashionFieldNumber = 21;
  inline const ::PBPlayerFashion& fashion() const;
  inline ::PBPlayerFashion* mutable_fashion();
  inline ::PBPlayerFashion* release_fashion();
  
  // optional .PBPlayerEquipColumn equipColumn = 22;
  inline bool has_equipcolumn() const;
  inline void clear_equipcolumn();
  static const int kEquipColumnFieldNumber = 22;
  inline const ::PBPlayerEquipColumn& equipcolumn() const;
  inline ::PBPlayerEquipColumn* mutable_equipcolumn();
  inline ::PBPlayerEquipColumn* release_equipcolumn();
  
  // optional .PBPlayerClimbTower climbTower = 23;
  inline bool has_climbtower() const;
  inline void clear_climbtower();
  static const int kClimbTowerFieldNumber = 23;
  inline const ::PBPlayerClimbTower& climbtower() const;
  inline ::PBPlayerClimbTower* mutable_climbtower();
  inline ::PBPlayerClimbTower* release_climbtower();
  
  // optional .PBPlayerPvp pvp = 24;
  inline bool has_pvp() const;
  inline void clear_pvp();
  static const int kPvpFieldNumber = 24;
  inline const ::PBPlayerPvp& pvp() const;
  inline ::PBPlayerPvp* mutable_pvp();
  inline ::PBPlayerPvp* release_pvp();
  
  // optional .PBPlayerGreatWallTrain gwTrain = 25;
  inline bool has_gwtrain() const;
  inline void clear_gwtrain();
  static const int kGwTrainFieldNumber = 25;
  inline const ::PBPlayerGreatWallTrain& gwtrain() const;
  inline ::PBPlayerGreatWallTrain* mutable_gwtrain();
  inline ::PBPlayerGreatWallTrain* release_gwtrain();
  
  // optional .PBPlayerActivity activity = 26;
  inline bool has_activity() const;
  inline void clear_activity();
  static const int kActivityFieldNumber = 26;
  inline const ::PBPlayerActivity& activity() const;
  inline ::PBPlayerActivity* mutable_activity();
  inline ::PBPlayerActivity* release_activity();
  
  // optional .PBLlayerRelive relive = 27;
  inline bool has_relive() const;
  inline void clear_relive();
  static const int kReliveFieldNumber = 27;
  inline const ::PBLlayerRelive& relive() const;
  inline ::PBLlayerRelive* mutable_relive();
  inline ::PBLlayerRelive* release_relive();
  
  // optional .PBPlayerSinglePvp singlepvp = 28;
  inline bool has_singlepvp() const;
  inline void clear_singlepvp();
  static const int kSinglepvpFieldNumber = 28;
  inline const ::PBPlayerSinglePvp& singlepvp() const;
  inline ::PBPlayerSinglePvp* mutable_singlepvp();
  inline ::PBPlayerSinglePvp* release_singlepvp();
  
  // optional .PBPlayerCommon common = 29;
  inline bool has_common() const;
  inline void clear_common();
  static const int kCommonFieldNumber = 29;
  inline const ::PBPlayerCommon& common() const;
  inline ::PBPlayerCommon* mutable_common();
  inline ::PBPlayerCommon* release_common();
  
  // optional .PBPlayerManor manor = 30;
  inline bool has_manor() const;
  inline void clear_manor();
  static const int kManorFieldNumber = 30;
  inline const ::PBPlayerManor& manor() const;
  inline ::PBPlayerManor* mutable_manor();
  inline ::PBPlayerManor* release_manor();
  
  // @@protoc_insertion_point(class_scope:PBPlayerSystem)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  inline void set_has_cooling();
  inline void clear_has_cooling();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_buff();
  inline void clear_has_buff();
  inline void set_has_counter();
  inline void clear_has_counter();
  inline void set_has_prize();
  inline void clear_has_prize();
  inline void set_has_trade();
  inline void clear_has_trade();
  inline void set_has_playerstore();
  inline void clear_has_playerstore();
  inline void set_has_weal();
  inline void clear_has_weal();
  inline void set_has_playerwulue();
  inline void clear_has_playerwulue();
  inline void set_has_wentao();
  inline void clear_has_wentao();
  inline void set_has_copymap();
  inline void clear_has_copymap();
  inline void set_has_identity();
  inline void clear_has_identity();
  inline void set_has_systemswitch();
  inline void clear_has_systemswitch();
  inline void set_has_conlletion();
  inline void clear_has_conlletion();
  inline void set_has_wuxue();
  inline void clear_has_wuxue();
  inline void set_has_dart();
  inline void clear_has_dart();
  inline void set_has_factionboss();
  inline void clear_has_factionboss();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_dazuoguaji();
  inline void clear_has_dazuoguaji();
  inline void set_has_fashion();
  inline void clear_has_fashion();
  inline void set_has_equipcolumn();
  inline void clear_has_equipcolumn();
  inline void set_has_climbtower();
  inline void clear_has_climbtower();
  inline void set_has_pvp();
  inline void clear_has_pvp();
  inline void set_has_gwtrain();
  inline void clear_has_gwtrain();
  inline void set_has_activity();
  inline void clear_has_activity();
  inline void set_has_relive();
  inline void clear_has_relive();
  inline void set_has_singlepvp();
  inline void clear_has_singlepvp();
  inline void set_has_common();
  inline void clear_has_common();
  inline void set_has_manor();
  inline void clear_has_manor();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBCooling* cooling_;
  ::PBSystemSkill* skill_;
  ::PBSystemBuff* buff_;
  ::PBSystemCounter* counter_;
  ::PBPlayerPrize* prize_;
  ::PBPlayerTrade* trade_;
  ::PBPlayerStore* playerstore_;
  ::PBPlayerWeal* weal_;
  ::PBPlayerWulue* playerwulue_;
  ::PBPlayerWenTao* wentao_;
  ::PBPlayerCopymap* copymap_;
  ::PBPlayerIdentity* identity_;
  ::PBSystemSwitch* systemswitch_;
  ::PBPlayerColletion* conlletion_;
  ::PBPlayerWuxue* wuxue_;
  ::PBPlayerDart* dart_;
  ::PBPlayerFactionBoss* factionboss_;
  ::PBPlayerTitle* title_;
  ::PBPlayerDazuoguaji* dazuoguaji_;
  ::PBPlayerFashion* fashion_;
  ::PBPlayerEquipColumn* equipcolumn_;
  ::PBPlayerClimbTower* climbtower_;
  ::PBPlayerPvp* pvp_;
  ::PBPlayerGreatWallTrain* gwtrain_;
  ::PBPlayerActivity* activity_;
  ::PBLlayerRelive* relive_;
  ::PBPlayerSinglePvp* singlepvp_;
  ::PBPlayerCommon* common_;
  ::PBPlayerManor* manor_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(30 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerSystem* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGlobalBase : public ::google::protobuf::Message {
 public:
  PBPlayerGlobalBase();
  virtual ~PBPlayerGlobalBase();
  
  PBPlayerGlobalBase(const PBPlayerGlobalBase& from);
  
  inline PBPlayerGlobalBase& operator=(const PBPlayerGlobalBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGlobalBase& default_instance();
  
  void Swap(PBPlayerGlobalBase* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGlobalBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGlobalBase& from);
  void MergeFrom(const PBPlayerGlobalBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerView view = 1;
  inline bool has_view() const;
  inline void clear_view();
  static const int kViewFieldNumber = 1;
  inline const ::PBPlayerView& view() const;
  inline ::PBPlayerView* mutable_view();
  inline ::PBPlayerView* release_view();
  
  // @@protoc_insertion_point(class_scope:PBPlayerGlobalBase)
 private:
  inline void set_has_view();
  inline void clear_has_view();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerView* view_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGlobalBase* default_instance_;
};
// -------------------------------------------------------------------

class PBSaleMoneyInfo : public ::google::protobuf::Message {
 public:
  PBSaleMoneyInfo();
  virtual ~PBSaleMoneyInfo();
  
  PBSaleMoneyInfo(const PBSaleMoneyInfo& from);
  
  inline PBSaleMoneyInfo& operator=(const PBSaleMoneyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSaleMoneyInfo& default_instance();
  
  void Swap(PBSaleMoneyInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSaleMoneyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSaleMoneyInfo& from);
  void MergeFrom(const PBSaleMoneyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 orderid = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderidFieldNumber = 1;
  inline ::google::protobuf::uint64 orderid() const;
  inline void set_orderid(::google::protobuf::uint64 value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // optional uint64 sliver = 4;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 4;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSaleMoneyInfo)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 orderid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint64 sliver_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSaleMoneyInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBSaleMoneyLog : public ::google::protobuf::Message {
 public:
  PBSaleMoneyLog();
  virtual ~PBSaleMoneyLog();
  
  PBSaleMoneyLog(const PBSaleMoneyLog& from);
  
  inline PBSaleMoneyLog& operator=(const PBSaleMoneyLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSaleMoneyLog& default_instance();
  
  void Swap(PBSaleMoneyLog* other);
  
  // implements Message ----------------------------------------------
  
  PBSaleMoneyLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSaleMoneyLog& from);
  void MergeFrom(const PBSaleMoneyLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional .PBPlayerDisplay display = 2;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 2;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // optional uint64 sliver = 4;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 4;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSaleMoneyLog)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint64 sliver_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSaleMoneyLog* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGlobalSaleMoney : public ::google::protobuf::Message {
 public:
  PBPlayerGlobalSaleMoney();
  virtual ~PBPlayerGlobalSaleMoney();
  
  PBPlayerGlobalSaleMoney(const PBPlayerGlobalSaleMoney& from);
  
  inline PBPlayerGlobalSaleMoney& operator=(const PBPlayerGlobalSaleMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGlobalSaleMoney& default_instance();
  
  void Swap(PBPlayerGlobalSaleMoney* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGlobalSaleMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGlobalSaleMoney& from);
  void MergeFrom(const PBPlayerGlobalSaleMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSaleMoneyInfo list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::PBSaleMoneyInfo& list(int index) const;
  inline ::PBSaleMoneyInfo* mutable_list(int index);
  inline ::PBSaleMoneyInfo* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyInfo >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyInfo >*
      mutable_list();
  
  // repeated .PBSaleMoneyLog log = 2;
  inline int log_size() const;
  inline void clear_log();
  static const int kLogFieldNumber = 2;
  inline const ::PBSaleMoneyLog& log(int index) const;
  inline ::PBSaleMoneyLog* mutable_log(int index);
  inline ::PBSaleMoneyLog* add_log();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >&
      log() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >*
      mutable_log();
  
  // @@protoc_insertion_point(class_scope:PBPlayerGlobalSaleMoney)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyInfo > list_;
  ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog > log_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGlobalSaleMoney* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGlobalSaleMoneySave : public ::google::protobuf::Message {
 public:
  PBPlayerGlobalSaleMoneySave();
  virtual ~PBPlayerGlobalSaleMoneySave();
  
  PBPlayerGlobalSaleMoneySave(const PBPlayerGlobalSaleMoneySave& from);
  
  inline PBPlayerGlobalSaleMoneySave& operator=(const PBPlayerGlobalSaleMoneySave& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGlobalSaleMoneySave& default_instance();
  
  void Swap(PBPlayerGlobalSaleMoneySave* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGlobalSaleMoneySave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGlobalSaleMoneySave& from);
  void MergeFrom(const PBPlayerGlobalSaleMoneySave& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBSaleMoneyLog log = 1;
  inline int log_size() const;
  inline void clear_log();
  static const int kLogFieldNumber = 1;
  inline const ::PBSaleMoneyLog& log(int index) const;
  inline ::PBSaleMoneyLog* mutable_log(int index);
  inline ::PBSaleMoneyLog* add_log();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >&
      log() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >*
      mutable_log();
  
  // @@protoc_insertion_point(class_scope:PBPlayerGlobalSaleMoneySave)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog > log_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGlobalSaleMoneySave* default_instance_;
};
// -------------------------------------------------------------------

class PBSaleMoneyInfoEx : public ::google::protobuf::Message {
 public:
  PBSaleMoneyInfoEx();
  virtual ~PBSaleMoneyInfoEx();
  
  PBSaleMoneyInfoEx(const PBSaleMoneyInfoEx& from);
  
  inline PBSaleMoneyInfoEx& operator=(const PBSaleMoneyInfoEx& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSaleMoneyInfoEx& default_instance();
  
  void Swap(PBSaleMoneyInfoEx* other);
  
  // implements Message ----------------------------------------------
  
  PBSaleMoneyInfoEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSaleMoneyInfoEx& from);
  void MergeFrom(const PBSaleMoneyInfoEx& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBSaleMoneyInfo data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::PBSaleMoneyInfo& data() const;
  inline ::PBSaleMoneyInfo* mutable_data();
  inline ::PBSaleMoneyInfo* release_data();
  
  // optional .PBPlayerDisplay display = 2;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 2;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // @@protoc_insertion_point(class_scope:PBSaleMoneyInfoEx)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_display();
  inline void clear_has_display();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBSaleMoneyInfo* data_;
  ::PBPlayerDisplay* display_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSaleMoneyInfoEx* default_instance_;
};
// -------------------------------------------------------------------

class PBSaleMoneyStatistics : public ::google::protobuf::Message {
 public:
  PBSaleMoneyStatistics();
  virtual ~PBSaleMoneyStatistics();
  
  PBSaleMoneyStatistics(const PBSaleMoneyStatistics& from);
  
  inline PBSaleMoneyStatistics& operator=(const PBSaleMoneyStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSaleMoneyStatistics& default_instance();
  
  void Swap(PBSaleMoneyStatistics* other);
  
  // implements Message ----------------------------------------------
  
  PBSaleMoneyStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSaleMoneyStatistics& from);
  void MergeFrom(const PBSaleMoneyStatistics& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 prices = 1;
  inline int prices_size() const;
  inline void clear_prices();
  static const int kPricesFieldNumber = 1;
  inline ::google::protobuf::int32 prices(int index) const;
  inline void set_prices(int index, ::google::protobuf::int32 value);
  inline void add_prices(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      prices() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_prices();
  
  // repeated int64 amounts = 2 [packed = true];
  inline int amounts_size() const;
  inline void clear_amounts();
  static const int kAmountsFieldNumber = 2;
  inline ::google::protobuf::int64 amounts(int index) const;
  inline void set_amounts(int index, ::google::protobuf::int64 value);
  inline void add_amounts(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      amounts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_amounts();
  
  // optional int32 timetotal = 3;
  inline bool has_timetotal() const;
  inline void clear_timetotal();
  static const int kTimetotalFieldNumber = 3;
  inline ::google::protobuf::int32 timetotal() const;
  inline void set_timetotal(::google::protobuf::int32 value);
  
  // optional int64 amounttotal = 4;
  inline bool has_amounttotal() const;
  inline void clear_amounttotal();
  static const int kAmounttotalFieldNumber = 4;
  inline ::google::protobuf::int64 amounttotal() const;
  inline void set_amounttotal(::google::protobuf::int64 value);
  
  // optional int64 moneytotal = 5;
  inline bool has_moneytotal() const;
  inline void clear_moneytotal();
  static const int kMoneytotalFieldNumber = 5;
  inline ::google::protobuf::int64 moneytotal() const;
  inline void set_moneytotal(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:PBSaleMoneyStatistics)
 private:
  inline void set_has_timetotal();
  inline void clear_has_timetotal();
  inline void set_has_amounttotal();
  inline void clear_has_amounttotal();
  inline void set_has_moneytotal();
  inline void clear_has_moneytotal();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > prices_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > amounts_;
  mutable int _amounts_cached_byte_size_;
  ::google::protobuf::int64 amounttotal_;
  ::google::protobuf::int64 moneytotal_;
  ::google::protobuf::int32 timetotal_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSaleMoneyStatistics* default_instance_;
};
// -------------------------------------------------------------------

class PBSaleMoneyRecentTradeLog : public ::google::protobuf::Message {
 public:
  PBSaleMoneyRecentTradeLog();
  virtual ~PBSaleMoneyRecentTradeLog();
  
  PBSaleMoneyRecentTradeLog(const PBSaleMoneyRecentTradeLog& from);
  
  inline PBSaleMoneyRecentTradeLog& operator=(const PBSaleMoneyRecentTradeLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSaleMoneyRecentTradeLog& default_instance();
  
  void Swap(PBSaleMoneyRecentTradeLog* other);
  
  // implements Message ----------------------------------------------
  
  PBSaleMoneyRecentTradeLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSaleMoneyRecentTradeLog& from);
  void MergeFrom(const PBSaleMoneyRecentTradeLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 cash = 2;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 2;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // optional uint64 sliver = 3;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 3;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSaleMoneyRecentTradeLog)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 sliver_;
  ::google::protobuf::uint32 cash_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSaleMoneyRecentTradeLog* default_instance_;
};
// -------------------------------------------------------------------

class PBSaleMoneyPriceData : public ::google::protobuf::Message {
 public:
  PBSaleMoneyPriceData();
  virtual ~PBSaleMoneyPriceData();
  
  PBSaleMoneyPriceData(const PBSaleMoneyPriceData& from);
  
  inline PBSaleMoneyPriceData& operator=(const PBSaleMoneyPriceData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSaleMoneyPriceData& default_instance();
  
  void Swap(PBSaleMoneyPriceData* other);
  
  // implements Message ----------------------------------------------
  
  PBSaleMoneyPriceData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSaleMoneyPriceData& from);
  void MergeFrom(const PBSaleMoneyPriceData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);
  
  // optional double aveprice = 2;
  inline bool has_aveprice() const;
  inline void clear_aveprice();
  static const int kAvepriceFieldNumber = 2;
  inline double aveprice() const;
  inline void set_aveprice(double value);
  
  // repeated .PBSaleMoneyStatistics statistics = 3;
  inline int statistics_size() const;
  inline void clear_statistics();
  static const int kStatisticsFieldNumber = 3;
  inline const ::PBSaleMoneyStatistics& statistics(int index) const;
  inline ::PBSaleMoneyStatistics* mutable_statistics(int index);
  inline ::PBSaleMoneyStatistics* add_statistics();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyStatistics >&
      statistics() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyStatistics >*
      mutable_statistics();
  
  // optional .PBSaleMoneyStatistics curstatistics = 4;
  inline bool has_curstatistics() const;
  inline void clear_curstatistics();
  static const int kCurstatisticsFieldNumber = 4;
  inline const ::PBSaleMoneyStatistics& curstatistics() const;
  inline ::PBSaleMoneyStatistics* mutable_curstatistics();
  inline ::PBSaleMoneyStatistics* release_curstatistics();
  
  // optional int32 refprice = 5;
  inline bool has_refprice() const;
  inline void clear_refprice();
  static const int kRefpriceFieldNumber = 5;
  inline ::google::protobuf::int32 refprice() const;
  inline void set_refprice(::google::protobuf::int32 value);
  
  // optional uint64 supplystamp = 6;
  inline bool has_supplystamp() const;
  inline void clear_supplystamp();
  static const int kSupplystampFieldNumber = 6;
  inline ::google::protobuf::uint64 supplystamp() const;
  inline void set_supplystamp(::google::protobuf::uint64 value);
  
  // optional uint64 nextsupplystamp = 7;
  inline bool has_nextsupplystamp() const;
  inline void clear_nextsupplystamp();
  static const int kNextsupplystampFieldNumber = 7;
  inline ::google::protobuf::uint64 nextsupplystamp() const;
  inline void set_nextsupplystamp(::google::protobuf::uint64 value);
  
  // optional uint64 lastchkstamp = 8;
  inline bool has_lastchkstamp() const;
  inline void clear_lastchkstamp();
  static const int kLastchkstampFieldNumber = 8;
  inline ::google::protobuf::uint64 lastchkstamp() const;
  inline void set_lastchkstamp(::google::protobuf::uint64 value);
  
  // optional .PBSaleMoneyStatistics chkstatistics = 9;
  inline bool has_chkstatistics() const;
  inline void clear_chkstatistics();
  static const int kChkstatisticsFieldNumber = 9;
  inline const ::PBSaleMoneyStatistics& chkstatistics() const;
  inline ::PBSaleMoneyStatistics* mutable_chkstatistics();
  inline ::PBSaleMoneyStatistics* release_chkstatistics();
  
  // repeated .PBSaleMoneyRecentTradeLog tradelog = 10;
  inline int tradelog_size() const;
  inline void clear_tradelog();
  static const int kTradelogFieldNumber = 10;
  inline const ::PBSaleMoneyRecentTradeLog& tradelog(int index) const;
  inline ::PBSaleMoneyRecentTradeLog* mutable_tradelog(int index);
  inline ::PBSaleMoneyRecentTradeLog* add_tradelog();
  inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyRecentTradeLog >&
      tradelog() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyRecentTradeLog >*
      mutable_tradelog();
  
  // @@protoc_insertion_point(class_scope:PBSaleMoneyPriceData)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_aveprice();
  inline void clear_has_aveprice();
  inline void set_has_curstatistics();
  inline void clear_has_curstatistics();
  inline void set_has_refprice();
  inline void clear_has_refprice();
  inline void set_has_supplystamp();
  inline void clear_has_supplystamp();
  inline void set_has_nextsupplystamp();
  inline void clear_has_nextsupplystamp();
  inline void set_has_lastchkstamp();
  inline void clear_has_lastchkstamp();
  inline void set_has_chkstatistics();
  inline void clear_has_chkstatistics();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 time_;
  double aveprice_;
  ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyStatistics > statistics_;
  ::PBSaleMoneyStatistics* curstatistics_;
  ::google::protobuf::uint64 supplystamp_;
  ::google::protobuf::uint64 nextsupplystamp_;
  ::google::protobuf::uint64 lastchkstamp_;
  ::PBSaleMoneyStatistics* chkstatistics_;
  ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyRecentTradeLog > tradelog_;
  ::google::protobuf::int32 refprice_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSaleMoneyPriceData* default_instance_;
};
// -------------------------------------------------------------------

class PBAuctionItemInfo : public ::google::protobuf::Message {
 public:
  PBAuctionItemInfo();
  virtual ~PBAuctionItemInfo();
  
  PBAuctionItemInfo(const PBAuctionItemInfo& from);
  
  inline PBAuctionItemInfo& operator=(const PBAuctionItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAuctionItemInfo& default_instance();
  
  void Swap(PBAuctionItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBAuctionItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAuctionItemInfo& from);
  void MergeFrom(const PBAuctionItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 saleorderid = 1;
  inline bool has_saleorderid() const;
  inline void clear_saleorderid();
  static const int kSaleorderidFieldNumber = 1;
  inline ::google::protobuf::uint64 saleorderid() const;
  inline void set_saleorderid(::google::protobuf::uint64 value);
  
  // optional uint32 salesliver = 2;
  inline bool has_salesliver() const;
  inline void clear_salesliver();
  static const int kSalesliverFieldNumber = 2;
  inline ::google::protobuf::uint32 salesliver() const;
  inline void set_salesliver(::google::protobuf::uint32 value);
  
  // optional .PBItem item = 3;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 3;
  inline const ::PBItem& item() const;
  inline ::PBItem* mutable_item();
  inline ::PBItem* release_item();
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 unlocktime = 5;
  inline bool has_unlocktime() const;
  inline void clear_unlocktime();
  static const int kUnlocktimeFieldNumber = 5;
  inline ::google::protobuf::uint32 unlocktime() const;
  inline void set_unlocktime(::google::protobuf::uint32 value);
  
  // optional uint32 buysliver = 6;
  inline bool has_buysliver() const;
  inline void clear_buysliver();
  static const int kBuysliverFieldNumber = 6;
  inline ::google::protobuf::uint32 buysliver() const;
  inline void set_buysliver(::google::protobuf::uint32 value);
  
  // optional uint32 buycount = 7;
  inline bool has_buycount() const;
  inline void clear_buycount();
  static const int kBuycountFieldNumber = 7;
  inline ::google::protobuf::uint32 buycount() const;
  inline void set_buycount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBAuctionItemInfo)
 private:
  inline void set_has_saleorderid();
  inline void clear_has_saleorderid();
  inline void set_has_salesliver();
  inline void clear_has_salesliver();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_unlocktime();
  inline void clear_has_unlocktime();
  inline void set_has_buysliver();
  inline void clear_has_buysliver();
  inline void set_has_buycount();
  inline void clear_has_buycount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 saleorderid_;
  ::PBItem* item_;
  ::google::protobuf::uint32 salesliver_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 unlocktime_;
  ::google::protobuf::uint32 buysliver_;
  ::google::protobuf::uint32 buycount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBAuctionItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBAuctionLog : public ::google::protobuf::Message {
 public:
  PBAuctionLog();
  virtual ~PBAuctionLog();
  
  PBAuctionLog(const PBAuctionLog& from);
  
  inline PBAuctionLog& operator=(const PBAuctionLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAuctionLog& default_instance();
  
  void Swap(PBAuctionLog* other);
  
  // implements Message ----------------------------------------------
  
  PBAuctionLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAuctionLog& from);
  void MergeFrom(const PBAuctionLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional .PBPlayerDisplay display = 2;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 2;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional .PBItem pbItem = 3;
  inline bool has_pbitem() const;
  inline void clear_pbitem();
  static const int kPbItemFieldNumber = 3;
  inline const ::PBItem& pbitem() const;
  inline ::PBItem* mutable_pbitem();
  inline ::PBItem* release_pbitem();
  
  // optional uint64 sliver = 4;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 4;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBAuctionLog)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_pbitem();
  inline void clear_has_pbitem();
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::PBItem* pbitem_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint64 sliver_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBAuctionLog* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGlobalAuction : public ::google::protobuf::Message {
 public:
  PBPlayerGlobalAuction();
  virtual ~PBPlayerGlobalAuction();
  
  PBPlayerGlobalAuction(const PBPlayerGlobalAuction& from);
  
  inline PBPlayerGlobalAuction& operator=(const PBPlayerGlobalAuction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGlobalAuction& default_instance();
  
  void Swap(PBPlayerGlobalAuction* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGlobalAuction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGlobalAuction& from);
  void MergeFrom(const PBPlayerGlobalAuction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBAuctionItemInfo item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::PBAuctionItemInfo& item(int index) const;
  inline ::PBAuctionItemInfo* mutable_item(int index);
  inline ::PBAuctionItemInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >*
      mutable_item();
  
  // repeated .PBAuctionItemInfo lockinfo = 2;
  inline int lockinfo_size() const;
  inline void clear_lockinfo();
  static const int kLockinfoFieldNumber = 2;
  inline const ::PBAuctionItemInfo& lockinfo(int index) const;
  inline ::PBAuctionItemInfo* mutable_lockinfo(int index);
  inline ::PBAuctionItemInfo* add_lockinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >&
      lockinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >*
      mutable_lockinfo();
  
  // repeated .PBAuctionLog log = 3;
  inline int log_size() const;
  inline void clear_log();
  static const int kLogFieldNumber = 3;
  inline const ::PBAuctionLog& log(int index) const;
  inline ::PBAuctionLog* mutable_log(int index);
  inline ::PBAuctionLog* add_log();
  inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >&
      log() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >*
      mutable_log();
  
  // @@protoc_insertion_point(class_scope:PBPlayerGlobalAuction)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo > item_;
  ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo > lockinfo_;
  ::google::protobuf::RepeatedPtrField< ::PBAuctionLog > log_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGlobalAuction* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGlobalAuctionSave : public ::google::protobuf::Message {
 public:
  PBPlayerGlobalAuctionSave();
  virtual ~PBPlayerGlobalAuctionSave();
  
  PBPlayerGlobalAuctionSave(const PBPlayerGlobalAuctionSave& from);
  
  inline PBPlayerGlobalAuctionSave& operator=(const PBPlayerGlobalAuctionSave& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGlobalAuctionSave& default_instance();
  
  void Swap(PBPlayerGlobalAuctionSave* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGlobalAuctionSave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGlobalAuctionSave& from);
  void MergeFrom(const PBPlayerGlobalAuctionSave& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBAuctionLog log = 1;
  inline int log_size() const;
  inline void clear_log();
  static const int kLogFieldNumber = 1;
  inline const ::PBAuctionLog& log(int index) const;
  inline ::PBAuctionLog* mutable_log(int index);
  inline ::PBAuctionLog* add_log();
  inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >&
      log() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >*
      mutable_log();
  
  // @@protoc_insertion_point(class_scope:PBPlayerGlobalAuctionSave)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBAuctionLog > log_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGlobalAuctionSave* default_instance_;
};
// -------------------------------------------------------------------

class PBAuctionItemAve : public ::google::protobuf::Message {
 public:
  PBAuctionItemAve();
  virtual ~PBAuctionItemAve();
  
  PBAuctionItemAve(const PBAuctionItemAve& from);
  
  inline PBAuctionItemAve& operator=(const PBAuctionItemAve& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAuctionItemAve& default_instance();
  
  void Swap(PBAuctionItemAve* other);
  
  // implements Message ----------------------------------------------
  
  PBAuctionItemAve* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAuctionItemAve& from);
  void MergeFrom(const PBAuctionItemAve& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint64 saledcount = 2;
  inline bool has_saledcount() const;
  inline void clear_saledcount();
  static const int kSaledcountFieldNumber = 2;
  inline ::google::protobuf::uint64 saledcount() const;
  inline void set_saledcount(::google::protobuf::uint64 value);
  
  // optional uint64 saledtimes = 3;
  inline bool has_saledtimes() const;
  inline void clear_saledtimes();
  static const int kSaledtimesFieldNumber = 3;
  inline ::google::protobuf::uint64 saledtimes() const;
  inline void set_saledtimes(::google::protobuf::uint64 value);
  
  // optional uint64 allsliver = 4;
  inline bool has_allsliver() const;
  inline void clear_allsliver();
  static const int kAllsliverFieldNumber = 4;
  inline ::google::protobuf::uint64 allsliver() const;
  inline void set_allsliver(::google::protobuf::uint64 value);
  
  // optional uint32 aveprice = 5;
  inline bool has_aveprice() const;
  inline void clear_aveprice();
  static const int kAvepriceFieldNumber = 5;
  inline ::google::protobuf::uint32 aveprice() const;
  inline void set_aveprice(::google::protobuf::uint32 value);
  
  // optional uint32 price1 = 6;
  inline bool has_price1() const;
  inline void clear_price1();
  static const int kPrice1FieldNumber = 6;
  inline ::google::protobuf::uint32 price1() const;
  inline void set_price1(::google::protobuf::uint32 value);
  
  // optional uint32 price2 = 7;
  inline bool has_price2() const;
  inline void clear_price2();
  static const int kPrice2FieldNumber = 7;
  inline ::google::protobuf::uint32 price2() const;
  inline void set_price2(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBAuctionItemAve)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_saledcount();
  inline void clear_has_saledcount();
  inline void set_has_saledtimes();
  inline void clear_has_saledtimes();
  inline void set_has_allsliver();
  inline void clear_has_allsliver();
  inline void set_has_aveprice();
  inline void clear_has_aveprice();
  inline void set_has_price1();
  inline void clear_has_price1();
  inline void set_has_price2();
  inline void clear_has_price2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 saledcount_;
  ::google::protobuf::uint64 saledtimes_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 aveprice_;
  ::google::protobuf::uint64 allsliver_;
  ::google::protobuf::uint32 price1_;
  ::google::protobuf::uint32 price2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBAuctionItemAve* default_instance_;
};
// -------------------------------------------------------------------

class PBAuctionItemInfoEx : public ::google::protobuf::Message {
 public:
  PBAuctionItemInfoEx();
  virtual ~PBAuctionItemInfoEx();
  
  PBAuctionItemInfoEx(const PBAuctionItemInfoEx& from);
  
  inline PBAuctionItemInfoEx& operator=(const PBAuctionItemInfoEx& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAuctionItemInfoEx& default_instance();
  
  void Swap(PBAuctionItemInfoEx* other);
  
  // implements Message ----------------------------------------------
  
  PBAuctionItemInfoEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAuctionItemInfoEx& from);
  void MergeFrom(const PBAuctionItemInfoEx& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBAuctionItemInfo data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::PBAuctionItemInfo& data() const;
  inline ::PBAuctionItemInfo* mutable_data();
  inline ::PBAuctionItemInfo* release_data();
  
  // optional .PBPlayerDisplay saler = 2;
  inline bool has_saler() const;
  inline void clear_saler();
  static const int kSalerFieldNumber = 2;
  inline const ::PBPlayerDisplay& saler() const;
  inline ::PBPlayerDisplay* mutable_saler();
  inline ::PBPlayerDisplay* release_saler();
  
  // optional .PBPlayerDisplay locker = 3;
  inline bool has_locker() const;
  inline void clear_locker();
  static const int kLockerFieldNumber = 3;
  inline const ::PBPlayerDisplay& locker() const;
  inline ::PBPlayerDisplay* mutable_locker();
  inline ::PBPlayerDisplay* release_locker();
  
  // @@protoc_insertion_point(class_scope:PBAuctionItemInfoEx)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_saler();
  inline void clear_has_saler();
  inline void set_has_locker();
  inline void clear_has_locker();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBAuctionItemInfo* data_;
  ::PBPlayerDisplay* saler_;
  ::PBPlayerDisplay* locker_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBAuctionItemInfoEx* default_instance_;
};
// -------------------------------------------------------------------

class PBAuctionPriceData : public ::google::protobuf::Message {
 public:
  PBAuctionPriceData();
  virtual ~PBAuctionPriceData();
  
  PBAuctionPriceData(const PBAuctionPriceData& from);
  
  inline PBAuctionPriceData& operator=(const PBAuctionPriceData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAuctionPriceData& default_instance();
  
  void Swap(PBAuctionPriceData* other);
  
  // implements Message ----------------------------------------------
  
  PBAuctionPriceData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAuctionPriceData& from);
  void MergeFrom(const PBAuctionPriceData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 time() const;
  inline void set_time(::google::protobuf::uint64 value);
  
  // repeated .PBAuctionItemAve itemave = 2;
  inline int itemave_size() const;
  inline void clear_itemave();
  static const int kItemaveFieldNumber = 2;
  inline const ::PBAuctionItemAve& itemave(int index) const;
  inline ::PBAuctionItemAve* mutable_itemave(int index);
  inline ::PBAuctionItemAve* add_itemave();
  inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionItemAve >&
      itemave() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAuctionItemAve >*
      mutable_itemave();
  
  // @@protoc_insertion_point(class_scope:PBAuctionPriceData)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 time_;
  ::google::protobuf::RepeatedPtrField< ::PBAuctionItemAve > itemave_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBAuctionPriceData* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGlobal : public ::google::protobuf::Message {
 public:
  PBPlayerGlobal();
  virtual ~PBPlayerGlobal();
  
  PBPlayerGlobal(const PBPlayerGlobal& from);
  
  inline PBPlayerGlobal& operator=(const PBPlayerGlobal& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGlobal& default_instance();
  
  void Swap(PBPlayerGlobal* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGlobal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGlobal& from);
  void MergeFrom(const PBPlayerGlobal& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerGlobalSaleMoney salemoney = 1;
  inline bool has_salemoney() const;
  inline void clear_salemoney();
  static const int kSalemoneyFieldNumber = 1;
  inline const ::PBPlayerGlobalSaleMoney& salemoney() const;
  inline ::PBPlayerGlobalSaleMoney* mutable_salemoney();
  inline ::PBPlayerGlobalSaleMoney* release_salemoney();
  
  // optional .PBPlayerGlobalAuction auction = 2;
  inline bool has_auction() const;
  inline void clear_auction();
  static const int kAuctionFieldNumber = 2;
  inline const ::PBPlayerGlobalAuction& auction() const;
  inline ::PBPlayerGlobalAuction* mutable_auction();
  inline ::PBPlayerGlobalAuction* release_auction();
  
  // @@protoc_insertion_point(class_scope:PBPlayerGlobal)
 private:
  inline void set_has_salemoney();
  inline void clear_has_salemoney();
  inline void set_has_auction();
  inline void clear_has_auction();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerGlobalSaleMoney* salemoney_;
  ::PBPlayerGlobalAuction* auction_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGlobal* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerGlobalData : public ::google::protobuf::Message {
 public:
  PBPlayerGlobalData();
  virtual ~PBPlayerGlobalData();
  
  PBPlayerGlobalData(const PBPlayerGlobalData& from);
  
  inline PBPlayerGlobalData& operator=(const PBPlayerGlobalData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerGlobalData& default_instance();
  
  void Swap(PBPlayerGlobalData* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerGlobalData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerGlobalData& from);
  void MergeFrom(const PBPlayerGlobalData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerGlobalBase baseinfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseinfoFieldNumber = 1;
  inline const ::PBPlayerGlobalBase& baseinfo() const;
  inline ::PBPlayerGlobalBase* mutable_baseinfo();
  inline ::PBPlayerGlobalBase* release_baseinfo();
  
  // optional .PBPlayerGlobalSaleMoneySave salemoney = 2;
  inline bool has_salemoney() const;
  inline void clear_salemoney();
  static const int kSalemoneyFieldNumber = 2;
  inline const ::PBPlayerGlobalSaleMoneySave& salemoney() const;
  inline ::PBPlayerGlobalSaleMoneySave* mutable_salemoney();
  inline ::PBPlayerGlobalSaleMoneySave* release_salemoney();
  
  // optional .PBPlayerGlobalAuctionSave auction = 3;
  inline bool has_auction() const;
  inline void clear_auction();
  static const int kAuctionFieldNumber = 3;
  inline const ::PBPlayerGlobalAuctionSave& auction() const;
  inline ::PBPlayerGlobalAuctionSave* mutable_auction();
  inline ::PBPlayerGlobalAuctionSave* release_auction();
  
  // optional .PBTopListData toplist = 4;
  inline bool has_toplist() const;
  inline void clear_toplist();
  static const int kToplistFieldNumber = 4;
  inline const ::PBTopListData& toplist() const;
  inline ::PBTopListData* mutable_toplist();
  inline ::PBTopListData* release_toplist();
  
  // @@protoc_insertion_point(class_scope:PBPlayerGlobalData)
 private:
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_salemoney();
  inline void clear_has_salemoney();
  inline void set_has_auction();
  inline void clear_has_auction();
  inline void set_has_toplist();
  inline void clear_has_toplist();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerGlobalBase* baseinfo_;
  ::PBPlayerGlobalSaleMoneySave* salemoney_;
  ::PBPlayerGlobalAuctionSave* auction_;
  ::PBTopListData* toplist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerGlobalData* default_instance_;
};
// -------------------------------------------------------------------

class PBItemUseCount : public ::google::protobuf::Message {
 public:
  PBItemUseCount();
  virtual ~PBItemUseCount();
  
  PBItemUseCount(const PBItemUseCount& from);
  
  inline PBItemUseCount& operator=(const PBItemUseCount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBItemUseCount& default_instance();
  
  void Swap(PBItemUseCount* other);
  
  // implements Message ----------------------------------------------
  
  PBItemUseCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBItemUseCount& from);
  void MergeFrom(const PBItemUseCount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 dayusecount = 2;
  inline bool has_dayusecount() const;
  inline void clear_dayusecount();
  static const int kDayusecountFieldNumber = 2;
  inline ::google::protobuf::uint32 dayusecount() const;
  inline void set_dayusecount(::google::protobuf::uint32 value);
  
  // optional uint32 weekusecount = 3;
  inline bool has_weekusecount() const;
  inline void clear_weekusecount();
  static const int kWeekusecountFieldNumber = 3;
  inline ::google::protobuf::uint32 weekusecount() const;
  inline void set_weekusecount(::google::protobuf::uint32 value);
  
  // optional uint32 monthusecount = 4;
  inline bool has_monthusecount() const;
  inline void clear_monthusecount();
  static const int kMonthusecountFieldNumber = 4;
  inline ::google::protobuf::uint32 monthusecount() const;
  inline void set_monthusecount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBItemUseCount)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_dayusecount();
  inline void clear_has_dayusecount();
  inline void set_has_weekusecount();
  inline void clear_has_weekusecount();
  inline void set_has_monthusecount();
  inline void clear_has_monthusecount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 dayusecount_;
  ::google::protobuf::uint32 weekusecount_;
  ::google::protobuf::uint32 monthusecount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBItemUseCount* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipMakeSkilled : public ::google::protobuf::Message {
 public:
  PBEquipMakeSkilled();
  virtual ~PBEquipMakeSkilled();
  
  PBEquipMakeSkilled(const PBEquipMakeSkilled& from);
  
  inline PBEquipMakeSkilled& operator=(const PBEquipMakeSkilled& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipMakeSkilled& default_instance();
  
  void Swap(PBEquipMakeSkilled* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipMakeSkilled* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipMakeSkilled& from);
  void MergeFrom(const PBEquipMakeSkilled& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 equipType = 1;
  inline bool has_equiptype() const;
  inline void clear_equiptype();
  static const int kEquipTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 equiptype() const;
  inline void set_equiptype(::google::protobuf::uint32 value);
  
  // optional uint32 skilledLevel = 2;
  inline bool has_skilledlevel() const;
  inline void clear_skilledlevel();
  static const int kSkilledLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skilledlevel() const;
  inline void set_skilledlevel(::google::protobuf::uint32 value);
  
  // optional uint32 skilledPoint = 3;
  inline bool has_skilledpoint() const;
  inline void clear_skilledpoint();
  static const int kSkilledPointFieldNumber = 3;
  inline ::google::protobuf::uint32 skilledpoint() const;
  inline void set_skilledpoint(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBEquipMakeSkilled)
 private:
  inline void set_has_equiptype();
  inline void clear_has_equiptype();
  inline void set_has_skilledlevel();
  inline void clear_has_skilledlevel();
  inline void set_has_skilledpoint();
  inline void clear_has_skilledpoint();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 equiptype_;
  ::google::protobuf::uint32 skilledlevel_;
  ::google::protobuf::uint32 skilledpoint_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBEquipMakeSkilled* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipMakeVigour : public ::google::protobuf::Message {
 public:
  PBEquipMakeVigour();
  virtual ~PBEquipMakeVigour();
  
  PBEquipMakeVigour(const PBEquipMakeVigour& from);
  
  inline PBEquipMakeVigour& operator=(const PBEquipMakeVigour& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipMakeVigour& default_instance();
  
  void Swap(PBEquipMakeVigour* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipMakeVigour* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipMakeVigour& from);
  void MergeFrom(const PBEquipMakeVigour& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 vigour = 1;
  inline bool has_vigour() const;
  inline void clear_vigour();
  static const int kVigourFieldNumber = 1;
  inline ::google::protobuf::uint32 vigour() const;
  inline void set_vigour(::google::protobuf::uint32 value);
  
  // optional uint64 lastAddTime = 2;
  inline bool has_lastaddtime() const;
  inline void clear_lastaddtime();
  static const int kLastAddTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 lastaddtime() const;
  inline void set_lastaddtime(::google::protobuf::uint64 value);
  
  // optional uint32 vigourFrozen = 3;
  inline bool has_vigourfrozen() const;
  inline void clear_vigourfrozen();
  static const int kVigourFrozenFieldNumber = 3;
  inline ::google::protobuf::uint32 vigourfrozen() const;
  inline void set_vigourfrozen(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBEquipMakeVigour)
 private:
  inline void set_has_vigour();
  inline void clear_has_vigour();
  inline void set_has_lastaddtime();
  inline void clear_has_lastaddtime();
  inline void set_has_vigourfrozen();
  inline void clear_has_vigourfrozen();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 lastaddtime_;
  ::google::protobuf::uint32 vigour_;
  ::google::protobuf::uint32 vigourfrozen_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBEquipMakeVigour* default_instance_;
};
// -------------------------------------------------------------------

class PBEquipMakeOEM : public ::google::protobuf::Message {
 public:
  PBEquipMakeOEM();
  virtual ~PBEquipMakeOEM();
  
  PBEquipMakeOEM(const PBEquipMakeOEM& from);
  
  inline PBEquipMakeOEM& operator=(const PBEquipMakeOEM& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEquipMakeOEM& default_instance();
  
  void Swap(PBEquipMakeOEM* other);
  
  // implements Message ----------------------------------------------
  
  PBEquipMakeOEM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEquipMakeOEM& from);
  void MergeFrom(const PBEquipMakeOEM& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 makeID = 1;
  inline bool has_makeid() const;
  inline void clear_makeid();
  static const int kMakeIDFieldNumber = 1;
  inline ::google::protobuf::uint32 makeid() const;
  inline void set_makeid(::google::protobuf::uint32 value);
  
  // optional uint32 fee = 2;
  inline bool has_fee() const;
  inline void clear_fee();
  static const int kFeeFieldNumber = 2;
  inline ::google::protobuf::uint32 fee() const;
  inline void set_fee(::google::protobuf::uint32 value);
  
  // optional uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 countUsed = 4;
  inline bool has_countused() const;
  inline void clear_countused();
  static const int kCountUsedFieldNumber = 4;
  inline ::google::protobuf::uint32 countused() const;
  inline void set_countused(::google::protobuf::uint32 value);
  
  // repeated uint32 validMakeID = 5;
  inline int validmakeid_size() const;
  inline void clear_validmakeid();
  static const int kValidMakeIDFieldNumber = 5;
  inline ::google::protobuf::uint32 validmakeid(int index) const;
  inline void set_validmakeid(int index, ::google::protobuf::uint32 value);
  inline void add_validmakeid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      validmakeid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_validmakeid();
  
  // optional uint32 countReal = 6;
  inline bool has_countreal() const;
  inline void clear_countreal();
  static const int kCountRealFieldNumber = 6;
  inline ::google::protobuf::uint32 countreal() const;
  inline void set_countreal(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBEquipMakeOEM)
 private:
  inline void set_has_makeid();
  inline void clear_has_makeid();
  inline void set_has_fee();
  inline void clear_has_fee();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_countused();
  inline void clear_has_countused();
  inline void set_has_countreal();
  inline void clear_has_countreal();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 makeid_;
  ::google::protobuf::uint32 fee_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 countused_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > validmakeid_;
  ::google::protobuf::uint32 countreal_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBEquipMakeOEM* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerBag : public ::google::protobuf::Message {
 public:
  PBPlayerBag();
  virtual ~PBPlayerBag();
  
  PBPlayerBag(const PBPlayerBag& from);
  
  inline PBPlayerBag& operator=(const PBPlayerBag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerBag& default_instance();
  
  void Swap(PBPlayerBag* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerBag& from);
  void MergeFrom(const PBPlayerBag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // repeated .PBItem bagList = 2;
  inline int baglist_size() const;
  inline void clear_baglist();
  static const int kBagListFieldNumber = 2;
  inline const ::PBItem& baglist(int index) const;
  inline ::PBItem* mutable_baglist(int index);
  inline ::PBItem* add_baglist();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      baglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_baglist();
  
  // repeated .PBItem equipList = 3;
  inline int equiplist_size() const;
  inline void clear_equiplist();
  static const int kEquipListFieldNumber = 3;
  inline const ::PBItem& equiplist(int index) const;
  inline ::PBItem* mutable_equiplist(int index);
  inline ::PBItem* add_equiplist();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      equiplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_equiplist();
  
  // repeated .PBItemUseCount usecount = 4;
  inline int usecount_size() const;
  inline void clear_usecount();
  static const int kUsecountFieldNumber = 4;
  inline const ::PBItemUseCount& usecount(int index) const;
  inline ::PBItemUseCount* mutable_usecount(int index);
  inline ::PBItemUseCount* add_usecount();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItemUseCount >&
      usecount() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItemUseCount >*
      mutable_usecount();
  
  // repeated .PBEquipMakeSkilled skilled = 5;
  inline int skilled_size() const;
  inline void clear_skilled();
  static const int kSkilledFieldNumber = 5;
  inline const ::PBEquipMakeSkilled& skilled(int index) const;
  inline ::PBEquipMakeSkilled* mutable_skilled(int index);
  inline ::PBEquipMakeSkilled* add_skilled();
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipMakeSkilled >&
      skilled() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipMakeSkilled >*
      mutable_skilled();
  
  // optional .PBEquipMakeVigour vigour = 6;
  inline bool has_vigour() const;
  inline void clear_vigour();
  static const int kVigourFieldNumber = 6;
  inline const ::PBEquipMakeVigour& vigour() const;
  inline ::PBEquipMakeVigour* mutable_vigour();
  inline ::PBEquipMakeVigour* release_vigour();
  
  // repeated .PBEquipMakeOEM oems = 7;
  inline int oems_size() const;
  inline void clear_oems();
  static const int kOemsFieldNumber = 7;
  inline const ::PBEquipMakeOEM& oems(int index) const;
  inline ::PBEquipMakeOEM* mutable_oems(int index);
  inline ::PBEquipMakeOEM* add_oems();
  inline const ::google::protobuf::RepeatedPtrField< ::PBEquipMakeOEM >&
      oems() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBEquipMakeOEM >*
      mutable_oems();
  
  // @@protoc_insertion_point(class_scope:PBPlayerBag)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  inline void set_has_vigour();
  inline void clear_has_vigour();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBItem > baglist_;
  ::google::protobuf::RepeatedPtrField< ::PBItem > equiplist_;
  ::google::protobuf::RepeatedPtrField< ::PBItemUseCount > usecount_;
  ::google::protobuf::RepeatedPtrField< ::PBEquipMakeSkilled > skilled_;
  ::PBEquipMakeVigour* vigour_;
  ::google::protobuf::RepeatedPtrField< ::PBEquipMakeOEM > oems_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerBag* default_instance_;
};
// -------------------------------------------------------------------

class PBGoods : public ::google::protobuf::Message {
 public:
  PBGoods();
  virtual ~PBGoods();
  
  PBGoods(const PBGoods& from);
  
  inline PBGoods& operator=(const PBGoods& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGoods& default_instance();
  
  void Swap(PBGoods* other);
  
  // implements Message ----------------------------------------------
  
  PBGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGoods& from);
  void MergeFrom(const PBGoods& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 store = 1;
  inline bool has_store() const;
  inline void clear_store();
  static const int kStoreFieldNumber = 1;
  inline ::google::protobuf::uint32 store() const;
  inline void set_store(::google::protobuf::uint32 value);
  
  // optional uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBGoods)
 private:
  inline void set_has_store();
  inline void clear_has_store();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 store_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBGoods* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerStore : public ::google::protobuf::Message {
 public:
  PBPlayerStore();
  virtual ~PBPlayerStore();
  
  PBPlayerStore(const PBPlayerStore& from);
  
  inline PBPlayerStore& operator=(const PBPlayerStore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerStore& default_instance();
  
  void Swap(PBPlayerStore* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerStore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerStore& from);
  void MergeFrom(const PBPlayerStore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // repeated .PBGoods goods = 2;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 2;
  inline const ::PBGoods& goods(int index) const;
  inline ::PBGoods* mutable_goods(int index);
  inline ::PBGoods* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::PBGoods >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBGoods >*
      mutable_goods();
  
  // @@protoc_insertion_point(class_scope:PBPlayerStore)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBGoods > goods_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerStore* default_instance_;
};
// -------------------------------------------------------------------

class PBClientData : public ::google::protobuf::Message {
 public:
  PBClientData();
  virtual ~PBClientData();
  
  PBClientData(const PBClientData& from);
  
  inline PBClientData& operator=(const PBClientData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBClientData& default_instance();
  
  void Swap(PBClientData* other);
  
  // implements Message ----------------------------------------------
  
  PBClientData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBClientData& from);
  void MergeFrom(const PBClientData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // optional bytes clientdata = 2;
  inline bool has_clientdata() const;
  inline void clear_clientdata();
  static const int kClientdataFieldNumber = 2;
  inline const ::std::string& clientdata() const;
  inline void set_clientdata(const ::std::string& value);
  inline void set_clientdata(const char* value);
  inline void set_clientdata(const void* value, size_t size);
  inline ::std::string* mutable_clientdata();
  inline ::std::string* release_clientdata();
  
  // @@protoc_insertion_point(class_scope:PBClientData)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  inline void set_has_clientdata();
  inline void clear_has_clientdata();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* clientdata_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBClientData* default_instance_;
};
// -------------------------------------------------------------------

class PBMailSaleMoneyBuy : public ::google::protobuf::Message {
 public:
  PBMailSaleMoneyBuy();
  virtual ~PBMailSaleMoneyBuy();
  
  PBMailSaleMoneyBuy(const PBMailSaleMoneyBuy& from);
  
  inline PBMailSaleMoneyBuy& operator=(const PBMailSaleMoneyBuy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailSaleMoneyBuy& default_instance();
  
  void Swap(PBMailSaleMoneyBuy* other);
  
  // implements Message ----------------------------------------------
  
  PBMailSaleMoneyBuy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailSaleMoneyBuy& from);
  void MergeFrom(const PBMailSaleMoneyBuy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay saler = 1;
  inline bool has_saler() const;
  inline void clear_saler();
  static const int kSalerFieldNumber = 1;
  inline const ::PBPlayerDisplay& saler() const;
  inline ::PBPlayerDisplay* mutable_saler();
  inline ::PBPlayerDisplay* release_saler();
  
  // optional uint64 getbindcash = 2;
  inline bool has_getbindcash() const;
  inline void clear_getbindcash();
  static const int kGetbindcashFieldNumber = 2;
  inline ::google::protobuf::uint64 getbindcash() const;
  inline void set_getbindcash(::google::protobuf::uint64 value);
  
  // optional uint64 expendsliver = 3;
  inline bool has_expendsliver() const;
  inline void clear_expendsliver();
  static const int kExpendsliverFieldNumber = 3;
  inline ::google::protobuf::uint64 expendsliver() const;
  inline void set_expendsliver(::google::protobuf::uint64 value);
  
  // optional uint64 economizesliver = 4;
  inline bool has_economizesliver() const;
  inline void clear_economizesliver();
  static const int kEconomizesliverFieldNumber = 4;
  inline ::google::protobuf::uint64 economizesliver() const;
  inline void set_economizesliver(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBMailSaleMoneyBuy)
 private:
  inline void set_has_saler();
  inline void clear_has_saler();
  inline void set_has_getbindcash();
  inline void clear_has_getbindcash();
  inline void set_has_expendsliver();
  inline void clear_has_expendsliver();
  inline void set_has_economizesliver();
  inline void clear_has_economizesliver();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* saler_;
  ::google::protobuf::uint64 getbindcash_;
  ::google::protobuf::uint64 expendsliver_;
  ::google::protobuf::uint64 economizesliver_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailSaleMoneyBuy* default_instance_;
};
// -------------------------------------------------------------------

class PBMailSaleMoneySale : public ::google::protobuf::Message {
 public:
  PBMailSaleMoneySale();
  virtual ~PBMailSaleMoneySale();
  
  PBMailSaleMoneySale(const PBMailSaleMoneySale& from);
  
  inline PBMailSaleMoneySale& operator=(const PBMailSaleMoneySale& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailSaleMoneySale& default_instance();
  
  void Swap(PBMailSaleMoneySale* other);
  
  // implements Message ----------------------------------------------
  
  PBMailSaleMoneySale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailSaleMoneySale& from);
  void MergeFrom(const PBMailSaleMoneySale& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay buyer = 1;
  inline bool has_buyer() const;
  inline void clear_buyer();
  static const int kBuyerFieldNumber = 1;
  inline const ::PBPlayerDisplay& buyer() const;
  inline ::PBPlayerDisplay* mutable_buyer();
  inline ::PBPlayerDisplay* release_buyer();
  
  // optional uint64 salecash = 2;
  inline bool has_salecash() const;
  inline void clear_salecash();
  static const int kSalecashFieldNumber = 2;
  inline ::google::protobuf::uint64 salecash() const;
  inline void set_salecash(::google::protobuf::uint64 value);
  
  // optional uint64 getsliver = 3;
  inline bool has_getsliver() const;
  inline void clear_getsliver();
  static const int kGetsliverFieldNumber = 3;
  inline ::google::protobuf::uint64 getsliver() const;
  inline void set_getsliver(::google::protobuf::uint64 value);
  
  // optional uint64 extrasliver = 4;
  inline bool has_extrasliver() const;
  inline void clear_extrasliver();
  static const int kExtrasliverFieldNumber = 4;
  inline ::google::protobuf::uint64 extrasliver() const;
  inline void set_extrasliver(::google::protobuf::uint64 value);
  
  // optional uint64 storescore = 5;
  inline bool has_storescore() const;
  inline void clear_storescore();
  static const int kStorescoreFieldNumber = 5;
  inline ::google::protobuf::uint64 storescore() const;
  inline void set_storescore(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBMailSaleMoneySale)
 private:
  inline void set_has_buyer();
  inline void clear_has_buyer();
  inline void set_has_salecash();
  inline void clear_has_salecash();
  inline void set_has_getsliver();
  inline void clear_has_getsliver();
  inline void set_has_extrasliver();
  inline void clear_has_extrasliver();
  inline void set_has_storescore();
  inline void clear_has_storescore();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* buyer_;
  ::google::protobuf::uint64 salecash_;
  ::google::protobuf::uint64 getsliver_;
  ::google::protobuf::uint64 extrasliver_;
  ::google::protobuf::uint64 storescore_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailSaleMoneySale* default_instance_;
};
// -------------------------------------------------------------------

class PBMailSaleMoneyBuyReturn : public ::google::protobuf::Message {
 public:
  PBMailSaleMoneyBuyReturn();
  virtual ~PBMailSaleMoneyBuyReturn();
  
  PBMailSaleMoneyBuyReturn(const PBMailSaleMoneyBuyReturn& from);
  
  inline PBMailSaleMoneyBuyReturn& operator=(const PBMailSaleMoneyBuyReturn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailSaleMoneyBuyReturn& default_instance();
  
  void Swap(PBMailSaleMoneyBuyReturn* other);
  
  // implements Message ----------------------------------------------
  
  PBMailSaleMoneyBuyReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailSaleMoneyBuyReturn& from);
  void MergeFrom(const PBMailSaleMoneyBuyReturn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 sliver = 1;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 1;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint64 expendsliver = 2;
  inline bool has_expendsliver() const;
  inline void clear_expendsliver();
  static const int kExpendsliverFieldNumber = 2;
  inline ::google::protobuf::uint64 expendsliver() const;
  inline void set_expendsliver(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBMailSaleMoneyBuyReturn)
 private:
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_expendsliver();
  inline void clear_has_expendsliver();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 sliver_;
  ::google::protobuf::uint64 expendsliver_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailSaleMoneyBuyReturn* default_instance_;
};
// -------------------------------------------------------------------

class PBMailSaleMoneySaleReturn : public ::google::protobuf::Message {
 public:
  PBMailSaleMoneySaleReturn();
  virtual ~PBMailSaleMoneySaleReturn();
  
  PBMailSaleMoneySaleReturn(const PBMailSaleMoneySaleReturn& from);
  
  inline PBMailSaleMoneySaleReturn& operator=(const PBMailSaleMoneySaleReturn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailSaleMoneySaleReturn& default_instance();
  
  void Swap(PBMailSaleMoneySaleReturn* other);
  
  // implements Message ----------------------------------------------
  
  PBMailSaleMoneySaleReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailSaleMoneySaleReturn& from);
  void MergeFrom(const PBMailSaleMoneySaleReturn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 cash = 1;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 1;
  inline ::google::protobuf::uint64 cash() const;
  inline void set_cash(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBMailSaleMoneySaleReturn)
 private:
  inline void set_has_cash();
  inline void clear_has_cash();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 cash_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailSaleMoneySaleReturn* default_instance_;
};
// -------------------------------------------------------------------

class PBMailAuctionLockRet : public ::google::protobuf::Message {
 public:
  PBMailAuctionLockRet();
  virtual ~PBMailAuctionLockRet();
  
  PBMailAuctionLockRet(const PBMailAuctionLockRet& from);
  
  inline PBMailAuctionLockRet& operator=(const PBMailAuctionLockRet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailAuctionLockRet& default_instance();
  
  void Swap(PBMailAuctionLockRet* other);
  
  // implements Message ----------------------------------------------
  
  PBMailAuctionLockRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailAuctionLockRet& from);
  void MergeFrom(const PBMailAuctionLockRet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::PBItem& item() const;
  inline ::PBItem* mutable_item();
  inline ::PBItem* release_item();
  
  // optional uint32 retsliver = 2;
  inline bool has_retsliver() const;
  inline void clear_retsliver();
  static const int kRetsliverFieldNumber = 2;
  inline ::google::protobuf::uint32 retsliver() const;
  inline void set_retsliver(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailAuctionLockRet)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_retsliver();
  inline void clear_has_retsliver();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBItem* item_;
  ::google::protobuf::uint32 retsliver_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailAuctionLockRet* default_instance_;
};
// -------------------------------------------------------------------

class PBMailAuctionSaleTimeOut : public ::google::protobuf::Message {
 public:
  PBMailAuctionSaleTimeOut();
  virtual ~PBMailAuctionSaleTimeOut();
  
  PBMailAuctionSaleTimeOut(const PBMailAuctionSaleTimeOut& from);
  
  inline PBMailAuctionSaleTimeOut& operator=(const PBMailAuctionSaleTimeOut& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailAuctionSaleTimeOut& default_instance();
  
  void Swap(PBMailAuctionSaleTimeOut* other);
  
  // implements Message ----------------------------------------------
  
  PBMailAuctionSaleTimeOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailAuctionSaleTimeOut& from);
  void MergeFrom(const PBMailAuctionSaleTimeOut& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::PBItem& item() const;
  inline ::PBItem* mutable_item();
  inline ::PBItem* release_item();
  
  // @@protoc_insertion_point(class_scope:PBMailAuctionSaleTimeOut)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBItem* item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailAuctionSaleTimeOut* default_instance_;
};
// -------------------------------------------------------------------

class PBMailAuctionSaleGet : public ::google::protobuf::Message {
 public:
  PBMailAuctionSaleGet();
  virtual ~PBMailAuctionSaleGet();
  
  PBMailAuctionSaleGet(const PBMailAuctionSaleGet& from);
  
  inline PBMailAuctionSaleGet& operator=(const PBMailAuctionSaleGet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailAuctionSaleGet& default_instance();
  
  void Swap(PBMailAuctionSaleGet* other);
  
  // implements Message ----------------------------------------------
  
  PBMailAuctionSaleGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailAuctionSaleGet& from);
  void MergeFrom(const PBMailAuctionSaleGet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::PBItem& item() const;
  inline ::PBItem* mutable_item();
  inline ::PBItem* release_item();
  
  // optional uint64 getsliver = 2;
  inline bool has_getsliver() const;
  inline void clear_getsliver();
  static const int kGetsliverFieldNumber = 2;
  inline ::google::protobuf::uint64 getsliver() const;
  inline void set_getsliver(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBMailAuctionSaleGet)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_getsliver();
  inline void clear_has_getsliver();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBItem* item_;
  ::google::protobuf::uint64 getsliver_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailAuctionSaleGet* default_instance_;
};
// -------------------------------------------------------------------

class PBMailAuctionBuyGet : public ::google::protobuf::Message {
 public:
  PBMailAuctionBuyGet();
  virtual ~PBMailAuctionBuyGet();
  
  PBMailAuctionBuyGet(const PBMailAuctionBuyGet& from);
  
  inline PBMailAuctionBuyGet& operator=(const PBMailAuctionBuyGet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailAuctionBuyGet& default_instance();
  
  void Swap(PBMailAuctionBuyGet* other);
  
  // implements Message ----------------------------------------------
  
  PBMailAuctionBuyGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailAuctionBuyGet& from);
  void MergeFrom(const PBMailAuctionBuyGet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::PBItem& item() const;
  inline ::PBItem* mutable_item();
  inline ::PBItem* release_item();
  
  // optional uint64 sliver = 2;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 2;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint64 extrasliver = 3;
  inline bool has_extrasliver() const;
  inline void clear_extrasliver();
  static const int kExtrasliverFieldNumber = 3;
  inline ::google::protobuf::uint64 extrasliver() const;
  inline void set_extrasliver(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBMailAuctionBuyGet)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_extrasliver();
  inline void clear_has_extrasliver();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBItem* item_;
  ::google::protobuf::uint64 sliver_;
  ::google::protobuf::uint64 extrasliver_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailAuctionBuyGet* default_instance_;
};
// -------------------------------------------------------------------

class PBMailPromote : public ::google::protobuf::Message {
 public:
  PBMailPromote();
  virtual ~PBMailPromote();
  
  PBMailPromote(const PBMailPromote& from);
  
  inline PBMailPromote& operator=(const PBMailPromote& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailPromote& default_instance();
  
  void Swap(PBMailPromote* other);
  
  // implements Message ----------------------------------------------
  
  PBMailPromote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailPromote& from);
  void MergeFrom(const PBMailPromote& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 step = 1;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailPromote)
 private:
  inline void set_has_step();
  inline void clear_has_step();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 step_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailPromote* default_instance_;
};
// -------------------------------------------------------------------

class PBMailFactionBoss : public ::google::protobuf::Message {
 public:
  PBMailFactionBoss();
  virtual ~PBMailFactionBoss();
  
  PBMailFactionBoss(const PBMailFactionBoss& from);
  
  inline PBMailFactionBoss& operator=(const PBMailFactionBoss& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailFactionBoss& default_instance();
  
  void Swap(PBMailFactionBoss* other);
  
  // implements Message ----------------------------------------------
  
  PBMailFactionBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailFactionBoss& from);
  void MergeFrom(const PBMailFactionBoss& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 order = 1;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint64 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBMailFactionBoss)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_score();
  inline void clear_has_score();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 order_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailFactionBoss* default_instance_;
};
// -------------------------------------------------------------------

class PBMailWorldBoss : public ::google::protobuf::Message {
 public:
  PBMailWorldBoss();
  virtual ~PBMailWorldBoss();
  
  PBMailWorldBoss(const PBMailWorldBoss& from);
  
  inline PBMailWorldBoss& operator=(const PBMailWorldBoss& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailWorldBoss& default_instance();
  
  void Swap(PBMailWorldBoss* other);
  
  // implements Message ----------------------------------------------
  
  PBMailWorldBoss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailWorldBoss& from);
  void MergeFrom(const PBMailWorldBoss& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 order = 1;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint32 bossActivityId = 2;
  inline bool has_bossactivityid() const;
  inline void clear_bossactivityid();
  static const int kBossActivityIdFieldNumber = 2;
  inline ::google::protobuf::uint32 bossactivityid() const;
  inline void set_bossactivityid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailWorldBoss)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_bossactivityid();
  inline void clear_has_bossactivityid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 bossactivityid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailWorldBoss* default_instance_;
};
// -------------------------------------------------------------------

class PBMailCopymapCashReward : public ::google::protobuf::Message {
 public:
  PBMailCopymapCashReward();
  virtual ~PBMailCopymapCashReward();
  
  PBMailCopymapCashReward(const PBMailCopymapCashReward& from);
  
  inline PBMailCopymapCashReward& operator=(const PBMailCopymapCashReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailCopymapCashReward& default_instance();
  
  void Swap(PBMailCopymapCashReward* other);
  
  // implements Message ----------------------------------------------
  
  PBMailCopymapCashReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailCopymapCashReward& from);
  void MergeFrom(const PBMailCopymapCashReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay leader = 1;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 1;
  inline const ::PBPlayerDisplay& leader() const;
  inline ::PBPlayerDisplay* mutable_leader();
  inline ::PBPlayerDisplay* release_leader();
  
  // optional uint32 copymapid = 2;
  inline bool has_copymapid() const;
  inline void clear_copymapid();
  static const int kCopymapidFieldNumber = 2;
  inline ::google::protobuf::uint32 copymapid() const;
  inline void set_copymapid(::google::protobuf::uint32 value);
  
  // optional uint32 cash = 3;
  inline bool has_cash() const;
  inline void clear_cash();
  static const int kCashFieldNumber = 3;
  inline ::google::protobuf::uint32 cash() const;
  inline void set_cash(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailCopymapCashReward)
 private:
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_copymapid();
  inline void clear_has_copymapid();
  inline void set_has_cash();
  inline void clear_has_cash();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* leader_;
  ::google::protobuf::uint32 copymapid_;
  ::google::protobuf::uint32 cash_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailCopymapCashReward* default_instance_;
};
// -------------------------------------------------------------------

class PBMailSinglePvpFirstPrize : public ::google::protobuf::Message {
 public:
  PBMailSinglePvpFirstPrize();
  virtual ~PBMailSinglePvpFirstPrize();
  
  PBMailSinglePvpFirstPrize(const PBMailSinglePvpFirstPrize& from);
  
  inline PBMailSinglePvpFirstPrize& operator=(const PBMailSinglePvpFirstPrize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailSinglePvpFirstPrize& default_instance();
  
  void Swap(PBMailSinglePvpFirstPrize* other);
  
  // implements Message ----------------------------------------------
  
  PBMailSinglePvpFirstPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailSinglePvpFirstPrize& from);
  void MergeFrom(const PBMailSinglePvpFirstPrize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailSinglePvpFirstPrize)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailSinglePvpFirstPrize* default_instance_;
};
// -------------------------------------------------------------------

class PBMailSinglePvpDayPrize : public ::google::protobuf::Message {
 public:
  PBMailSinglePvpDayPrize();
  virtual ~PBMailSinglePvpDayPrize();
  
  PBMailSinglePvpDayPrize(const PBMailSinglePvpDayPrize& from);
  
  inline PBMailSinglePvpDayPrize& operator=(const PBMailSinglePvpDayPrize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailSinglePvpDayPrize& default_instance();
  
  void Swap(PBMailSinglePvpDayPrize* other);
  
  // implements Message ----------------------------------------------
  
  PBMailSinglePvpDayPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailSinglePvpDayPrize& from);
  void MergeFrom(const PBMailSinglePvpDayPrize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 daycount = 1;
  inline bool has_daycount() const;
  inline void clear_daycount();
  static const int kDaycountFieldNumber = 1;
  inline ::google::protobuf::uint32 daycount() const;
  inline void set_daycount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailSinglePvpDayPrize)
 private:
  inline void set_has_daycount();
  inline void clear_has_daycount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 daycount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailSinglePvpDayPrize* default_instance_;
};
// -------------------------------------------------------------------

class PBMailSinglePvpWeekPrize : public ::google::protobuf::Message {
 public:
  PBMailSinglePvpWeekPrize();
  virtual ~PBMailSinglePvpWeekPrize();
  
  PBMailSinglePvpWeekPrize(const PBMailSinglePvpWeekPrize& from);
  
  inline PBMailSinglePvpWeekPrize& operator=(const PBMailSinglePvpWeekPrize& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailSinglePvpWeekPrize& default_instance();
  
  void Swap(PBMailSinglePvpWeekPrize* other);
  
  // implements Message ----------------------------------------------
  
  PBMailSinglePvpWeekPrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailSinglePvpWeekPrize& from);
  void MergeFrom(const PBMailSinglePvpWeekPrize& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailSinglePvpWeekPrize)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailSinglePvpWeekPrize* default_instance_;
};
// -------------------------------------------------------------------

class PBMailManorTitleGet : public ::google::protobuf::Message {
 public:
  PBMailManorTitleGet();
  virtual ~PBMailManorTitleGet();
  
  PBMailManorTitleGet(const PBMailManorTitleGet& from);
  
  inline PBMailManorTitleGet& operator=(const PBMailManorTitleGet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailManorTitleGet& default_instance();
  
  void Swap(PBMailManorTitleGet* other);
  
  // implements Message ----------------------------------------------
  
  PBMailManorTitleGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailManorTitleGet& from);
  void MergeFrom(const PBMailManorTitleGet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline ::google::protobuf::uint32 title() const;
  inline void set_title(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailManorTitleGet)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 title_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailManorTitleGet* default_instance_;
};
// -------------------------------------------------------------------

class PBMailManorResult : public ::google::protobuf::Message {
 public:
  PBMailManorResult();
  virtual ~PBMailManorResult();
  
  PBMailManorResult(const PBMailManorResult& from);
  
  inline PBMailManorResult& operator=(const PBMailManorResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailManorResult& default_instance();
  
  void Swap(PBMailManorResult* other);
  
  // implements Message ----------------------------------------------
  
  PBMailManorResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailManorResult& from);
  void MergeFrom(const PBMailManorResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 manorid = 2;
  inline bool has_manorid() const;
  inline void clear_manorid();
  static const int kManoridFieldNumber = 2;
  inline ::google::protobuf::uint32 manorid() const;
  inline void set_manorid(::google::protobuf::uint32 value);
  
  // optional string enemyfactionname = 3;
  inline bool has_enemyfactionname() const;
  inline void clear_enemyfactionname();
  static const int kEnemyfactionnameFieldNumber = 3;
  inline const ::std::string& enemyfactionname() const;
  inline void set_enemyfactionname(const ::std::string& value);
  inline void set_enemyfactionname(const char* value);
  inline void set_enemyfactionname(const char* value, size_t size);
  inline ::std::string* mutable_enemyfactionname();
  inline ::std::string* release_enemyfactionname();
  
  // @@protoc_insertion_point(class_scope:PBMailManorResult)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_manorid();
  inline void clear_has_manorid();
  inline void set_has_enemyfactionname();
  inline void clear_has_enemyfactionname();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 manorid_;
  ::std::string* enemyfactionname_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailManorResult* default_instance_;
};
// -------------------------------------------------------------------

class PBMailFactionInfo : public ::google::protobuf::Message {
 public:
  PBMailFactionInfo();
  virtual ~PBMailFactionInfo();
  
  PBMailFactionInfo(const PBMailFactionInfo& from);
  
  inline PBMailFactionInfo& operator=(const PBMailFactionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailFactionInfo& default_instance();
  
  void Swap(PBMailFactionInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBMailFactionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailFactionInfo& from);
  void MergeFrom(const PBMailFactionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:PBMailFactionInfo)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailFactionInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBMailTopListInfo : public ::google::protobuf::Message {
 public:
  PBMailTopListInfo();
  virtual ~PBMailTopListInfo();
  
  PBMailTopListInfo(const PBMailTopListInfo& from);
  
  inline PBMailTopListInfo& operator=(const PBMailTopListInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMailTopListInfo& default_instance();
  
  void Swap(PBMailTopListInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBMailTopListInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMailTopListInfo& from);
  void MergeFrom(const PBMailTopListInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 order = 1;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PBMailTopListInfo)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 order_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMailTopListInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBMail : public ::google::protobuf::Message {
 public:
  PBMail();
  virtual ~PBMail();
  
  PBMail(const PBMail& from);
  
  inline PBMail& operator=(const PBMail& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMail& default_instance();
  
  void Swap(PBMail* other);
  
  // implements Message ----------------------------------------------
  
  PBMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMail& from);
  void MergeFrom(const PBMail& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 worldid = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 mailid = 3;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 3;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional uint64 sendtime = 5;
  inline bool has_sendtime() const;
  inline void clear_sendtime();
  static const int kSendtimeFieldNumber = 5;
  inline ::google::protobuf::uint64 sendtime() const;
  inline void set_sendtime(::google::protobuf::uint64 value);
  
  // optional uint32 senderid = 6;
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderidFieldNumber = 6;
  inline ::google::protobuf::uint32 senderid() const;
  inline void set_senderid(::google::protobuf::uint32 value);
  
  // optional string sender = 7;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 7;
  inline const ::std::string& sender() const;
  inline void set_sender(const ::std::string& value);
  inline void set_sender(const char* value);
  inline void set_sender(const char* value, size_t size);
  inline ::std::string* mutable_sender();
  inline ::std::string* release_sender();
  
  // optional string title = 8;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 8;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // optional string text = 9;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 9;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // optional uint32 readed = 10;
  inline bool has_readed() const;
  inline void clear_readed();
  static const int kReadedFieldNumber = 10;
  inline ::google::protobuf::uint32 readed() const;
  inline void set_readed(::google::protobuf::uint32 value);
  
  // repeated .PBMoney money = 11;
  inline int money_size() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 11;
  inline const ::PBMoney& money(int index) const;
  inline ::PBMoney* mutable_money(int index);
  inline ::PBMoney* add_money();
  inline const ::google::protobuf::RepeatedPtrField< ::PBMoney >&
      money() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMoney >*
      mutable_money();
  
  // repeated .PBItem item = 12;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 12;
  inline const ::PBItem& item(int index) const;
  inline ::PBItem* mutable_item(int index);
  inline ::PBItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_item();
  
  // optional .PBMailSaleMoneyBuy smbuy = 13;
  inline bool has_smbuy() const;
  inline void clear_smbuy();
  static const int kSmbuyFieldNumber = 13;
  inline const ::PBMailSaleMoneyBuy& smbuy() const;
  inline ::PBMailSaleMoneyBuy* mutable_smbuy();
  inline ::PBMailSaleMoneyBuy* release_smbuy();
  
  // optional .PBMailSaleMoneySale smsale = 14;
  inline bool has_smsale() const;
  inline void clear_smsale();
  static const int kSmsaleFieldNumber = 14;
  inline const ::PBMailSaleMoneySale& smsale() const;
  inline ::PBMailSaleMoneySale* mutable_smsale();
  inline ::PBMailSaleMoneySale* release_smsale();
  
  // optional .PBMailSaleMoneyBuyReturn smbuyret = 15;
  inline bool has_smbuyret() const;
  inline void clear_smbuyret();
  static const int kSmbuyretFieldNumber = 15;
  inline const ::PBMailSaleMoneyBuyReturn& smbuyret() const;
  inline ::PBMailSaleMoneyBuyReturn* mutable_smbuyret();
  inline ::PBMailSaleMoneyBuyReturn* release_smbuyret();
  
  // optional .PBMailSaleMoneySaleReturn smsaleret = 16;
  inline bool has_smsaleret() const;
  inline void clear_smsaleret();
  static const int kSmsaleretFieldNumber = 16;
  inline const ::PBMailSaleMoneySaleReturn& smsaleret() const;
  inline ::PBMailSaleMoneySaleReturn* mutable_smsaleret();
  inline ::PBMailSaleMoneySaleReturn* release_smsaleret();
  
  // optional .PBMailAuctionLockRet aulockret = 17;
  inline bool has_aulockret() const;
  inline void clear_aulockret();
  static const int kAulockretFieldNumber = 17;
  inline const ::PBMailAuctionLockRet& aulockret() const;
  inline ::PBMailAuctionLockRet* mutable_aulockret();
  inline ::PBMailAuctionLockRet* release_aulockret();
  
  // optional .PBMailAuctionSaleTimeOut autimeout = 18;
  inline bool has_autimeout() const;
  inline void clear_autimeout();
  static const int kAutimeoutFieldNumber = 18;
  inline const ::PBMailAuctionSaleTimeOut& autimeout() const;
  inline ::PBMailAuctionSaleTimeOut* mutable_autimeout();
  inline ::PBMailAuctionSaleTimeOut* release_autimeout();
  
  // optional .PBMailAuctionSaleGet ausaleget = 19;
  inline bool has_ausaleget() const;
  inline void clear_ausaleget();
  static const int kAusalegetFieldNumber = 19;
  inline const ::PBMailAuctionSaleGet& ausaleget() const;
  inline ::PBMailAuctionSaleGet* mutable_ausaleget();
  inline ::PBMailAuctionSaleGet* release_ausaleget();
  
  // optional .PBMailAuctionBuyGet aubuyget = 20;
  inline bool has_aubuyget() const;
  inline void clear_aubuyget();
  static const int kAubuygetFieldNumber = 20;
  inline const ::PBMailAuctionBuyGet& aubuyget() const;
  inline ::PBMailAuctionBuyGet* mutable_aubuyget();
  inline ::PBMailAuctionBuyGet* release_aubuyget();
  
  // optional .PBMailPromote promote = 21;
  inline bool has_promote() const;
  inline void clear_promote();
  static const int kPromoteFieldNumber = 21;
  inline const ::PBMailPromote& promote() const;
  inline ::PBMailPromote* mutable_promote();
  inline ::PBMailPromote* release_promote();
  
  // optional uint32 DoingType = 22;
  inline bool has_doingtype() const;
  inline void clear_doingtype();
  static const int kDoingTypeFieldNumber = 22;
  inline ::google::protobuf::uint32 doingtype() const;
  inline void set_doingtype(::google::protobuf::uint32 value);
  
  // optional .PBMailFactionBoss factionboss = 23;
  inline bool has_factionboss() const;
  inline void clear_factionboss();
  static const int kFactionbossFieldNumber = 23;
  inline const ::PBMailFactionBoss& factionboss() const;
  inline ::PBMailFactionBoss* mutable_factionboss();
  inline ::PBMailFactionBoss* release_factionboss();
  
  // optional .PBMailWorldBoss worldboss = 24;
  inline bool has_worldboss() const;
  inline void clear_worldboss();
  static const int kWorldbossFieldNumber = 24;
  inline const ::PBMailWorldBoss& worldboss() const;
  inline ::PBMailWorldBoss* mutable_worldboss();
  inline ::PBMailWorldBoss* release_worldboss();
  
  // optional .PBMailCopymapCashReward copymapcash = 25;
  inline bool has_copymapcash() const;
  inline void clear_copymapcash();
  static const int kCopymapcashFieldNumber = 25;
  inline const ::PBMailCopymapCashReward& copymapcash() const;
  inline ::PBMailCopymapCashReward* mutable_copymapcash();
  inline ::PBMailCopymapCashReward* release_copymapcash();
  
  // optional .PBMailSinglePvpFirstPrize singlepvpfirst = 26;
  inline bool has_singlepvpfirst() const;
  inline void clear_singlepvpfirst();
  static const int kSinglepvpfirstFieldNumber = 26;
  inline const ::PBMailSinglePvpFirstPrize& singlepvpfirst() const;
  inline ::PBMailSinglePvpFirstPrize* mutable_singlepvpfirst();
  inline ::PBMailSinglePvpFirstPrize* release_singlepvpfirst();
  
  // optional .PBMailSinglePvpDayPrize singlepvpday = 27;
  inline bool has_singlepvpday() const;
  inline void clear_singlepvpday();
  static const int kSinglepvpdayFieldNumber = 27;
  inline const ::PBMailSinglePvpDayPrize& singlepvpday() const;
  inline ::PBMailSinglePvpDayPrize* mutable_singlepvpday();
  inline ::PBMailSinglePvpDayPrize* release_singlepvpday();
  
  // optional .PBMailSinglePvpWeekPrize singlepvpweek = 28;
  inline bool has_singlepvpweek() const;
  inline void clear_singlepvpweek();
  static const int kSinglepvpweekFieldNumber = 28;
  inline const ::PBMailSinglePvpWeekPrize& singlepvpweek() const;
  inline ::PBMailSinglePvpWeekPrize* mutable_singlepvpweek();
  inline ::PBMailSinglePvpWeekPrize* release_singlepvpweek();
  
  // optional .PBMailManorTitleGet manortitle = 29;
  inline bool has_manortitle() const;
  inline void clear_manortitle();
  static const int kManortitleFieldNumber = 29;
  inline const ::PBMailManorTitleGet& manortitle() const;
  inline ::PBMailManorTitleGet* mutable_manortitle();
  inline ::PBMailManorTitleGet* release_manortitle();
  
  // optional .PBMailManorResult manorresult = 30;
  inline bool has_manorresult() const;
  inline void clear_manorresult();
  static const int kManorresultFieldNumber = 30;
  inline const ::PBMailManorResult& manorresult() const;
  inline ::PBMailManorResult* mutable_manorresult();
  inline ::PBMailManorResult* release_manorresult();
  
  // optional .PBMailFactionInfo factioninfo = 31;
  inline bool has_factioninfo() const;
  inline void clear_factioninfo();
  static const int kFactioninfoFieldNumber = 31;
  inline const ::PBMailFactionInfo& factioninfo() const;
  inline ::PBMailFactionInfo* mutable_factioninfo();
  inline ::PBMailFactionInfo* release_factioninfo();
  
  // optional .PBMailTopListInfo toplist = 32;
  inline bool has_toplist() const;
  inline void clear_toplist();
  static const int kToplistFieldNumber = 32;
  inline const ::PBMailTopListInfo& toplist() const;
  inline ::PBMailTopListInfo* mutable_toplist();
  inline ::PBMailTopListInfo* release_toplist();
  
  // @@protoc_insertion_point(class_scope:PBMail)
 private:
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sendtime();
  inline void clear_has_sendtime();
  inline void set_has_senderid();
  inline void clear_has_senderid();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_readed();
  inline void clear_has_readed();
  inline void set_has_smbuy();
  inline void clear_has_smbuy();
  inline void set_has_smsale();
  inline void clear_has_smsale();
  inline void set_has_smbuyret();
  inline void clear_has_smbuyret();
  inline void set_has_smsaleret();
  inline void clear_has_smsaleret();
  inline void set_has_aulockret();
  inline void clear_has_aulockret();
  inline void set_has_autimeout();
  inline void clear_has_autimeout();
  inline void set_has_ausaleget();
  inline void clear_has_ausaleget();
  inline void set_has_aubuyget();
  inline void clear_has_aubuyget();
  inline void set_has_promote();
  inline void clear_has_promote();
  inline void set_has_doingtype();
  inline void clear_has_doingtype();
  inline void set_has_factionboss();
  inline void clear_has_factionboss();
  inline void set_has_worldboss();
  inline void clear_has_worldboss();
  inline void set_has_copymapcash();
  inline void clear_has_copymapcash();
  inline void set_has_singlepvpfirst();
  inline void clear_has_singlepvpfirst();
  inline void set_has_singlepvpday();
  inline void clear_has_singlepvpday();
  inline void set_has_singlepvpweek();
  inline void clear_has_singlepvpweek();
  inline void set_has_manortitle();
  inline void clear_has_manortitle();
  inline void set_has_manorresult();
  inline void clear_has_manorresult();
  inline void set_has_factioninfo();
  inline void clear_has_factioninfo();
  inline void set_has_toplist();
  inline void clear_has_toplist();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 mailid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 sendtime_;
  ::std::string* sender_;
  ::std::string* title_;
  ::google::protobuf::uint32 senderid_;
  ::google::protobuf::uint32 readed_;
  ::std::string* text_;
  ::google::protobuf::RepeatedPtrField< ::PBMoney > money_;
  ::google::protobuf::RepeatedPtrField< ::PBItem > item_;
  ::PBMailSaleMoneyBuy* smbuy_;
  ::PBMailSaleMoneySale* smsale_;
  ::PBMailSaleMoneyBuyReturn* smbuyret_;
  ::PBMailSaleMoneySaleReturn* smsaleret_;
  ::PBMailAuctionLockRet* aulockret_;
  ::PBMailAuctionSaleTimeOut* autimeout_;
  ::PBMailAuctionSaleGet* ausaleget_;
  ::PBMailAuctionBuyGet* aubuyget_;
  ::PBMailPromote* promote_;
  ::PBMailFactionBoss* factionboss_;
  ::PBMailWorldBoss* worldboss_;
  ::PBMailCopymapCashReward* copymapcash_;
  ::PBMailSinglePvpFirstPrize* singlepvpfirst_;
  ::PBMailSinglePvpDayPrize* singlepvpday_;
  ::PBMailSinglePvpWeekPrize* singlepvpweek_;
  ::PBMailManorTitleGet* manortitle_;
  ::PBMailManorResult* manorresult_;
  ::PBMailFactionInfo* factioninfo_;
  ::PBMailTopListInfo* toplist_;
  ::google::protobuf::uint32 doingtype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(32 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBMail* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerMail : public ::google::protobuf::Message {
 public:
  PBPlayerMail();
  virtual ~PBPlayerMail();
  
  PBPlayerMail(const PBPlayerMail& from);
  
  inline PBPlayerMail& operator=(const PBPlayerMail& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerMail& default_instance();
  
  void Swap(PBPlayerMail* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerMail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerMail& from);
  void MergeFrom(const PBPlayerMail& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // repeated .PBMail maillist = 2;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMaillistFieldNumber = 2;
  inline const ::PBMail& maillist(int index) const;
  inline ::PBMail* mutable_maillist(int index);
  inline ::PBMail* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::PBMail >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBMail >*
      mutable_maillist();
  
  // @@protoc_insertion_point(class_scope:PBPlayerMail)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBMail > maillist_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerMail* default_instance_;
};
// -------------------------------------------------------------------

class PBFriendInfo : public ::google::protobuf::Message {
 public:
  PBFriendInfo();
  virtual ~PBFriendInfo();
  
  PBFriendInfo(const PBFriendInfo& from);
  
  inline PBFriendInfo& operator=(const PBFriendInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFriendInfo& default_instance();
  
  void Swap(PBFriendInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBFriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFriendInfo& from);
  void MergeFrom(const PBFriendInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional bool online = 3;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 3;
  inline bool online() const;
  inline void set_online(bool value);
  
  // optional uint32 friendvalue = 4;
  inline bool has_friendvalue() const;
  inline void clear_friendvalue();
  static const int kFriendvalueFieldNumber = 4;
  inline ::google::protobuf::uint32 friendvalue() const;
  inline void set_friendvalue(::google::protobuf::uint32 value);
  
  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 updatetime = 6;
  inline bool has_updatetime() const;
  inline void clear_updatetime();
  static const int kUpdatetimeFieldNumber = 6;
  inline ::google::protobuf::uint32 updatetime() const;
  inline void set_updatetime(::google::protobuf::uint32 value);
  
  // optional uint32 fightpower = 7;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 7;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFriendInfo)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_friendvalue();
  inline void clear_has_friendvalue();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_updatetime();
  inline void clear_has_updatetime();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint32 type_;
  bool online_;
  ::google::protobuf::uint32 friendvalue_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 updatetime_;
  ::google::protobuf::uint32 fightpower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBFriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBFriendGroup : public ::google::protobuf::Message {
 public:
  PBFriendGroup();
  virtual ~PBFriendGroup();
  
  PBFriendGroup(const PBFriendGroup& from);
  
  inline PBFriendGroup& operator=(const PBFriendGroup& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFriendGroup& default_instance();
  
  void Swap(PBFriendGroup* other);
  
  // implements Message ----------------------------------------------
  
  PBFriendGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFriendGroup& from);
  void MergeFrom(const PBFriendGroup& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // repeated .PBFriendInfo list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::PBFriendInfo& list(int index) const;
  inline ::PBFriendInfo* mutable_list(int index);
  inline ::PBFriendInfo* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFriendInfo >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFriendInfo >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:PBFriendGroup)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFriendInfo > list_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBFriendGroup* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFriend : public ::google::protobuf::Message {
 public:
  PBPlayerFriend();
  virtual ~PBPlayerFriend();
  
  PBPlayerFriend(const PBPlayerFriend& from);
  
  inline PBPlayerFriend& operator=(const PBPlayerFriend& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFriend& default_instance();
  
  void Swap(PBPlayerFriend* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFriend& from);
  void MergeFrom(const PBPlayerFriend& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // repeated .PBFriendGroup group = 2;
  inline int group_size() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline const ::PBFriendGroup& group(int index) const;
  inline ::PBFriendGroup* mutable_group(int index);
  inline ::PBFriendGroup* add_group();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFriendGroup >&
      group() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFriendGroup >*
      mutable_group();
  
  // @@protoc_insertion_point(class_scope:PBPlayerFriend)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFriendGroup > group_;
  ::google::protobuf::uint32 saveorder_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFriend* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionBossPersonalTop : public ::google::protobuf::Message {
 public:
  PBFactionBossPersonalTop();
  virtual ~PBFactionBossPersonalTop();
  
  PBFactionBossPersonalTop(const PBFactionBossPersonalTop& from);
  
  inline PBFactionBossPersonalTop& operator=(const PBFactionBossPersonalTop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionBossPersonalTop& default_instance();
  
  void Swap(PBFactionBossPersonalTop* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionBossPersonalTop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionBossPersonalTop& from);
  void MergeFrom(const PBFactionBossPersonalTop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBPlayerDisplay& display() const;
  inline ::PBPlayerDisplay* mutable_display();
  inline ::PBPlayerDisplay* release_display();
  
  // optional uint32 order = 2;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 2;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint64 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionBossPersonalTop)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerDisplay* display_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionBossPersonalTop* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionBossFactionTop : public ::google::protobuf::Message {
 public:
  PBFactionBossFactionTop();
  virtual ~PBFactionBossFactionTop();
  
  PBFactionBossFactionTop(const PBFactionBossFactionTop& from);
  
  inline PBFactionBossFactionTop& operator=(const PBFactionBossFactionTop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionBossFactionTop& default_instance();
  
  void Swap(PBFactionBossFactionTop* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionBossFactionTop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionBossFactionTop& from);
  void MergeFrom(const PBFactionBossFactionTop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionDisplay faction = 1;
  inline bool has_faction() const;
  inline void clear_faction();
  static const int kFactionFieldNumber = 1;
  inline const ::PBFactionDisplay& faction() const;
  inline ::PBFactionDisplay* mutable_faction();
  inline ::PBFactionDisplay* release_faction();
  
  // optional uint32 order = 2;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 2;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint64 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionBossFactionTop)
 private:
  inline void set_has_faction();
  inline void clear_has_faction();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionDisplay* faction_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionBossFactionTop* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionBossUnionTop : public ::google::protobuf::Message {
 public:
  PBFactionBossUnionTop();
  virtual ~PBFactionBossUnionTop();
  
  PBFactionBossUnionTop(const PBFactionBossUnionTop& from);
  
  inline PBFactionBossUnionTop& operator=(const PBFactionBossUnionTop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionBossUnionTop& default_instance();
  
  void Swap(PBFactionBossUnionTop* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionBossUnionTop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionBossUnionTop& from);
  void MergeFrom(const PBFactionBossUnionTop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionDisplay faction = 1;
  inline bool has_faction() const;
  inline void clear_faction();
  static const int kFactionFieldNumber = 1;
  inline const ::PBFactionDisplay& faction() const;
  inline ::PBFactionDisplay* mutable_faction();
  inline ::PBFactionDisplay* release_faction();
  
  // optional uint32 order = 2;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 2;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // optional uint64 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionBossUnionTop)
 private:
  inline void set_has_faction();
  inline void clear_has_faction();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionDisplay* faction_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionBossUnionTop* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerData : public ::google::protobuf::Message {
 public:
  PBPlayerData();
  virtual ~PBPlayerData();
  
  PBPlayerData(const PBPlayerData& from);
  
  inline PBPlayerData& operator=(const PBPlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerData& default_instance();
  
  void Swap(PBPlayerData* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerData& from);
  void MergeFrom(const PBPlayerData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBAccount accountinfo = 1;
  inline bool has_accountinfo() const;
  inline void clear_accountinfo();
  static const int kAccountinfoFieldNumber = 1;
  inline const ::PBAccount& accountinfo() const;
  inline ::PBAccount* mutable_accountinfo();
  inline ::PBAccount* release_accountinfo();
  
  // optional .PBPlayerBase playerbase = 2;
  inline bool has_playerbase() const;
  inline void clear_playerbase();
  static const int kPlayerbaseFieldNumber = 2;
  inline const ::PBPlayerBase& playerbase() const;
  inline ::PBPlayerBase* mutable_playerbase();
  inline ::PBPlayerBase* release_playerbase();
  
  // optional .PBPlayerSystem playersystem = 3;
  inline bool has_playersystem() const;
  inline void clear_playersystem();
  static const int kPlayersystemFieldNumber = 3;
  inline const ::PBPlayerSystem& playersystem() const;
  inline ::PBPlayerSystem* mutable_playersystem();
  inline ::PBPlayerSystem* release_playersystem();
  
  // optional .PBPlayerBag playerBag = 4;
  inline bool has_playerbag() const;
  inline void clear_playerbag();
  static const int kPlayerBagFieldNumber = 4;
  inline const ::PBPlayerBag& playerbag() const;
  inline ::PBPlayerBag* mutable_playerbag();
  inline ::PBPlayerBag* release_playerbag();
  
  // optional .PBClientData clientdata = 5;
  inline bool has_clientdata() const;
  inline void clear_clientdata();
  static const int kClientdataFieldNumber = 5;
  inline const ::PBClientData& clientdata() const;
  inline ::PBClientData* mutable_clientdata();
  inline ::PBClientData* release_clientdata();
  
  // optional .PBPlayerQuest playerquest = 6;
  inline bool has_playerquest() const;
  inline void clear_playerquest();
  static const int kPlayerquestFieldNumber = 6;
  inline const ::PBPlayerQuest& playerquest() const;
  inline ::PBPlayerQuest* mutable_playerquest();
  inline ::PBPlayerQuest* release_playerquest();
  
  // optional .PBPlayerMail playermail = 7;
  inline bool has_playermail() const;
  inline void clear_playermail();
  static const int kPlayermailFieldNumber = 7;
  inline const ::PBPlayerMail& playermail() const;
  inline ::PBPlayerMail* mutable_playermail();
  inline ::PBPlayerMail* release_playermail();
  
  // optional .PBPlayerFriend playerfriend = 8;
  inline bool has_playerfriend() const;
  inline void clear_playerfriend();
  static const int kPlayerfriendFieldNumber = 8;
  inline const ::PBPlayerFriend& playerfriend() const;
  inline ::PBPlayerFriend* mutable_playerfriend();
  inline ::PBPlayerFriend* release_playerfriend();
  
  // optional .PBPlayerFaction playerfaction = 9;
  inline bool has_playerfaction() const;
  inline void clear_playerfaction();
  static const int kPlayerfactionFieldNumber = 9;
  inline const ::PBPlayerFaction& playerfaction() const;
  inline ::PBPlayerFaction* mutable_playerfaction();
  inline ::PBPlayerFaction* release_playerfaction();
  
  // @@protoc_insertion_point(class_scope:PBPlayerData)
 private:
  inline void set_has_accountinfo();
  inline void clear_has_accountinfo();
  inline void set_has_playerbase();
  inline void clear_has_playerbase();
  inline void set_has_playersystem();
  inline void clear_has_playersystem();
  inline void set_has_playerbag();
  inline void clear_has_playerbag();
  inline void set_has_clientdata();
  inline void clear_has_clientdata();
  inline void set_has_playerquest();
  inline void clear_has_playerquest();
  inline void set_has_playermail();
  inline void clear_has_playermail();
  inline void set_has_playerfriend();
  inline void clear_has_playerfriend();
  inline void set_has_playerfaction();
  inline void clear_has_playerfaction();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBAccount* accountinfo_;
  ::PBPlayerBase* playerbase_;
  ::PBPlayerSystem* playersystem_;
  ::PBPlayerBag* playerbag_;
  ::PBClientData* clientdata_;
  ::PBPlayerQuest* playerquest_;
  ::PBPlayerMail* playermail_;
  ::PBPlayerFriend* playerfriend_;
  ::PBPlayerFaction* playerfaction_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerData* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerEquipData : public ::google::protobuf::Message {
 public:
  PBPlayerEquipData();
  virtual ~PBPlayerEquipData();
  
  PBPlayerEquipData(const PBPlayerEquipData& from);
  
  inline PBPlayerEquipData& operator=(const PBPlayerEquipData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerEquipData& default_instance();
  
  void Swap(PBPlayerEquipData* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerEquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerEquipData& from);
  void MergeFrom(const PBPlayerEquipData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBItem equip = 1;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 1;
  inline const ::PBItem& equip(int index) const;
  inline ::PBItem* mutable_equip(int index);
  inline ::PBItem* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_equip();
  
  // @@protoc_insertion_point(class_scope:PBPlayerEquipData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBItem > equip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerEquipData* default_instance_;
};
// -------------------------------------------------------------------

class PBGhostGameAttr : public ::google::protobuf::Message {
 public:
  PBGhostGameAttr();
  virtual ~PBGhostGameAttr();
  
  PBGhostGameAttr(const PBGhostGameAttr& from);
  
  inline PBGhostGameAttr& operator=(const PBGhostGameAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGhostGameAttr& default_instance();
  
  void Swap(PBGhostGameAttr* other);
  
  // implements Message ----------------------------------------------
  
  PBGhostGameAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGhostGameAttr& from);
  void MergeFrom(const PBGhostGameAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 attr = 1;
  inline int attr_size() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 1;
  inline ::google::protobuf::int32 attr(int index) const;
  inline void set_attr(int index, ::google::protobuf::int32 value);
  inline void add_attr(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr();
  
  // @@protoc_insertion_point(class_scope:PBGhostGameAttr)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBGhostGameAttr* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerView : public ::google::protobuf::Message {
 public:
  PBPlayerView();
  virtual ~PBPlayerView();
  
  PBPlayerView(const PBPlayerView& from);
  
  inline PBPlayerView& operator=(const PBPlayerView& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerView& default_instance();
  
  void Swap(PBPlayerView* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerView* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerView& from);
  void MergeFrom(const PBPlayerView& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBPlayerAvatar avatar = 1;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 1;
  inline const ::PBPlayerAvatar& avatar() const;
  inline ::PBPlayerAvatar* mutable_avatar();
  inline ::PBPlayerAvatar* release_avatar();
  
  // optional .PBPlayerEquipData equip = 2;
  inline bool has_equip() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 2;
  inline const ::PBPlayerEquipData& equip() const;
  inline ::PBPlayerEquipData* mutable_equip();
  inline ::PBPlayerEquipData* release_equip();
  
  // optional uint32 fightpower = 3;
  inline bool has_fightpower() const;
  inline void clear_fightpower();
  static const int kFightpowerFieldNumber = 3;
  inline ::google::protobuf::uint32 fightpower() const;
  inline void set_fightpower(::google::protobuf::uint32 value);
  
  // optional .PBGhostGameAttr attri = 4;
  inline bool has_attri() const;
  inline void clear_attri();
  static const int kAttriFieldNumber = 4;
  inline const ::PBGhostGameAttr& attri() const;
  inline ::PBGhostGameAttr* mutable_attri();
  inline ::PBGhostGameAttr* release_attri();
  
  // optional uint32 pkvalue = 5;
  inline bool has_pkvalue() const;
  inline void clear_pkvalue();
  static const int kPkvalueFieldNumber = 5;
  inline ::google::protobuf::uint32 pkvalue() const;
  inline void set_pkvalue(::google::protobuf::uint32 value);
  
  // repeated .PBBingFa bingfa = 6;
  inline int bingfa_size() const;
  inline void clear_bingfa();
  static const int kBingfaFieldNumber = 6;
  inline const ::PBBingFa& bingfa(int index) const;
  inline ::PBBingFa* mutable_bingfa(int index);
  inline ::PBBingFa* add_bingfa();
  inline const ::google::protobuf::RepeatedPtrField< ::PBBingFa >&
      bingfa() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBBingFa >*
      mutable_bingfa();
  
  // optional .PBSinglePvpInfo singlePvpInfo = 7;
  inline bool has_singlepvpinfo() const;
  inline void clear_singlepvpinfo();
  static const int kSinglePvpInfoFieldNumber = 7;
  inline const ::PBSinglePvpInfo& singlepvpinfo() const;
  inline ::PBSinglePvpInfo* mutable_singlepvpinfo();
  inline ::PBSinglePvpInfo* release_singlepvpinfo();
  
  // @@protoc_insertion_point(class_scope:PBPlayerView)
 private:
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_equip();
  inline void clear_has_equip();
  inline void set_has_fightpower();
  inline void clear_has_fightpower();
  inline void set_has_attri();
  inline void clear_has_attri();
  inline void set_has_pkvalue();
  inline void clear_has_pkvalue();
  inline void set_has_singlepvpinfo();
  inline void clear_has_singlepvpinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerAvatar* avatar_;
  ::PBPlayerEquipData* equip_;
  ::PBGhostGameAttr* attri_;
  ::google::protobuf::uint32 fightpower_;
  ::google::protobuf::uint32 pkvalue_;
  ::google::protobuf::RepeatedPtrField< ::PBBingFa > bingfa_;
  ::PBSinglePvpInfo* singlepvpinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerView* default_instance_;
};
// -------------------------------------------------------------------

class PBSinglePvpInfo : public ::google::protobuf::Message {
 public:
  PBSinglePvpInfo();
  virtual ~PBSinglePvpInfo();
  
  PBSinglePvpInfo(const PBSinglePvpInfo& from);
  
  inline PBSinglePvpInfo& operator=(const PBSinglePvpInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSinglePvpInfo& default_instance();
  
  void Swap(PBSinglePvpInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBSinglePvpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSinglePvpInfo& from);
  void MergeFrom(const PBSinglePvpInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 wincount = 1;
  inline bool has_wincount() const;
  inline void clear_wincount();
  static const int kWincountFieldNumber = 1;
  inline ::google::protobuf::uint32 wincount() const;
  inline void set_wincount(::google::protobuf::uint32 value);
  
  // optional uint32 failcount = 2;
  inline bool has_failcount() const;
  inline void clear_failcount();
  static const int kFailcountFieldNumber = 2;
  inline ::google::protobuf::uint32 failcount() const;
  inline void set_failcount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBSinglePvpInfo)
 private:
  inline void set_has_wincount();
  inline void clear_has_wincount();
  inline void set_has_failcount();
  inline void clear_has_failcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 wincount_;
  ::google::protobuf::uint32 failcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBSinglePvpInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldBossKillInfo : public ::google::protobuf::Message {
 public:
  PBWorldBossKillInfo();
  virtual ~PBWorldBossKillInfo();
  
  PBWorldBossKillInfo(const PBWorldBossKillInfo& from);
  
  inline PBWorldBossKillInfo& operator=(const PBWorldBossKillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldBossKillInfo& default_instance();
  
  void Swap(PBWorldBossKillInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldBossKillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldBossKillInfo& from);
  void MergeFrom(const PBWorldBossKillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 worldbossactivityid = 1;
  inline bool has_worldbossactivityid() const;
  inline void clear_worldbossactivityid();
  static const int kWorldbossactivityidFieldNumber = 1;
  inline ::google::protobuf::uint32 worldbossactivityid() const;
  inline void set_worldbossactivityid(::google::protobuf::uint32 value);
  
  // optional string lastkillername = 2;
  inline bool has_lastkillername() const;
  inline void clear_lastkillername();
  static const int kLastkillernameFieldNumber = 2;
  inline const ::std::string& lastkillername() const;
  inline void set_lastkillername(const ::std::string& value);
  inline void set_lastkillername(const char* value);
  inline void set_lastkillername(const char* value, size_t size);
  inline ::std::string* mutable_lastkillername();
  inline ::std::string* release_lastkillername();
  
  // optional uint64 lastdeadtimetick = 3;
  inline bool has_lastdeadtimetick() const;
  inline void clear_lastdeadtimetick();
  static const int kLastdeadtimetickFieldNumber = 3;
  inline ::google::protobuf::uint64 lastdeadtimetick() const;
  inline void set_lastdeadtimetick(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBWorldBossKillInfo)
 private:
  inline void set_has_worldbossactivityid();
  inline void clear_has_worldbossactivityid();
  inline void set_has_lastkillername();
  inline void clear_has_lastkillername();
  inline void set_has_lastdeadtimetick();
  inline void clear_has_lastdeadtimetick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* lastkillername_;
  ::google::protobuf::uint64 lastdeadtimetick_;
  ::google::protobuf::uint32 worldbossactivityid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWorldBossKillInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldBossKill : public ::google::protobuf::Message {
 public:
  PBWorldBossKill();
  virtual ~PBWorldBossKill();
  
  PBWorldBossKill(const PBWorldBossKill& from);
  
  inline PBWorldBossKill& operator=(const PBWorldBossKill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldBossKill& default_instance();
  
  void Swap(PBWorldBossKill* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldBossKill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldBossKill& from);
  void MergeFrom(const PBWorldBossKill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBWorldBossKillInfo killinfos = 1;
  inline int killinfos_size() const;
  inline void clear_killinfos();
  static const int kKillinfosFieldNumber = 1;
  inline const ::PBWorldBossKillInfo& killinfos(int index) const;
  inline ::PBWorldBossKillInfo* mutable_killinfos(int index);
  inline ::PBWorldBossKillInfo* add_killinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::PBWorldBossKillInfo >&
      killinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWorldBossKillInfo >*
      mutable_killinfos();
  
  // @@protoc_insertion_point(class_scope:PBWorldBossKill)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBWorldBossKillInfo > killinfos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWorldBossKill* default_instance_;
};
// -------------------------------------------------------------------

class PBWTopListInfo : public ::google::protobuf::Message {
 public:
  PBWTopListInfo();
  virtual ~PBWTopListInfo();
  
  PBWTopListInfo(const PBWTopListInfo& from);
  
  inline PBWTopListInfo& operator=(const PBWTopListInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWTopListInfo& default_instance();
  
  void Swap(PBWTopListInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBWTopListInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWTopListInfo& from);
  void MergeFrom(const PBWTopListInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 cleartime = 2;
  inline bool has_cleartime() const;
  inline void clear_cleartime();
  static const int kCleartimeFieldNumber = 2;
  inline ::google::protobuf::uint32 cleartime() const;
  inline void set_cleartime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBWTopListInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_cleartime();
  inline void clear_has_cleartime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 cleartime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWTopListInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBTopListList : public ::google::protobuf::Message {
 public:
  PBTopListList();
  virtual ~PBTopListList();
  
  PBTopListList(const PBTopListList& from);
  
  inline PBTopListList& operator=(const PBTopListList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTopListList& default_instance();
  
  void Swap(PBTopListList* other);
  
  // implements Message ----------------------------------------------
  
  PBTopListList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTopListList& from);
  void MergeFrom(const PBTopListList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBWTopListInfo info_list = 1;
  inline int info_list_size() const;
  inline void clear_info_list();
  static const int kInfoListFieldNumber = 1;
  inline const ::PBWTopListInfo& info_list(int index) const;
  inline ::PBWTopListInfo* mutable_info_list(int index);
  inline ::PBWTopListInfo* add_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PBWTopListInfo >&
      info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBWTopListInfo >*
      mutable_info_list();
  
  // @@protoc_insertion_point(class_scope:PBTopListList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBWTopListInfo > info_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBTopListList* default_instance_;
};
// -------------------------------------------------------------------

class PBGlobalServerData : public ::google::protobuf::Message {
 public:
  PBGlobalServerData();
  virtual ~PBGlobalServerData();
  
  PBGlobalServerData(const PBGlobalServerData& from);
  
  inline PBGlobalServerData& operator=(const PBGlobalServerData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGlobalServerData& default_instance();
  
  void Swap(PBGlobalServerData* other);
  
  // implements Message ----------------------------------------------
  
  PBGlobalServerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGlobalServerData& from);
  void MergeFrom(const PBGlobalServerData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBSaleMoneyPriceData salemoney = 1;
  inline bool has_salemoney() const;
  inline void clear_salemoney();
  static const int kSalemoneyFieldNumber = 1;
  inline const ::PBSaleMoneyPriceData& salemoney() const;
  inline ::PBSaleMoneyPriceData* mutable_salemoney();
  inline ::PBSaleMoneyPriceData* release_salemoney();
  
  // optional .PBAuctionPriceData auction = 2;
  inline bool has_auction() const;
  inline void clear_auction();
  static const int kAuctionFieldNumber = 2;
  inline const ::PBAuctionPriceData& auction() const;
  inline ::PBAuctionPriceData* mutable_auction();
  inline ::PBAuctionPriceData* release_auction();
  
  // optional .PBWorldBossKill worldbosskill = 3;
  inline bool has_worldbosskill() const;
  inline void clear_worldbosskill();
  static const int kWorldbosskillFieldNumber = 3;
  inline const ::PBWorldBossKill& worldbosskill() const;
  inline ::PBWorldBossKill* mutable_worldbosskill();
  inline ::PBWorldBossKill* release_worldbosskill();
  
  // optional .PBTopListList toplist = 4;
  inline bool has_toplist() const;
  inline void clear_toplist();
  static const int kToplistFieldNumber = 4;
  inline const ::PBTopListList& toplist() const;
  inline ::PBTopListList* mutable_toplist();
  inline ::PBTopListList* release_toplist();
  
  // @@protoc_insertion_point(class_scope:PBGlobalServerData)
 private:
  inline void set_has_salemoney();
  inline void clear_has_salemoney();
  inline void set_has_auction();
  inline void clear_has_auction();
  inline void set_has_worldbosskill();
  inline void clear_has_worldbosskill();
  inline void set_has_toplist();
  inline void clear_has_toplist();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBSaleMoneyPriceData* salemoney_;
  ::PBAuctionPriceData* auction_;
  ::PBWorldBossKill* worldbosskill_;
  ::PBTopListList* toplist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBGlobalServerData* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldFactionBossData : public ::google::protobuf::Message {
 public:
  PBWorldFactionBossData();
  virtual ~PBWorldFactionBossData();
  
  PBWorldFactionBossData(const PBWorldFactionBossData& from);
  
  inline PBWorldFactionBossData& operator=(const PBWorldFactionBossData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldFactionBossData& default_instance();
  
  void Swap(PBWorldFactionBossData* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldFactionBossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldFactionBossData& from);
  void MergeFrom(const PBWorldFactionBossData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 lasttime = 1;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLasttimeFieldNumber = 1;
  inline ::google::protobuf::uint32 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint32 value);
  
  // optional uint64 wholescore = 2;
  inline bool has_wholescore() const;
  inline void clear_wholescore();
  static const int kWholescoreFieldNumber = 2;
  inline ::google::protobuf::uint64 wholescore() const;
  inline void set_wholescore(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBWorldFactionBossData)
 private:
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_wholescore();
  inline void clear_has_wholescore();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 wholescore_;
  ::google::protobuf::uint32 lasttime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWorldFactionBossData* default_instance_;
};
// -------------------------------------------------------------------

class PBTreasureValueInfo : public ::google::protobuf::Message {
 public:
  PBTreasureValueInfo();
  virtual ~PBTreasureValueInfo();
  
  PBTreasureValueInfo(const PBTreasureValueInfo& from);
  
  inline PBTreasureValueInfo& operator=(const PBTreasureValueInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTreasureValueInfo& default_instance();
  
  void Swap(PBTreasureValueInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBTreasureValueInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTreasureValueInfo& from);
  void MergeFrom(const PBTreasureValueInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 prizeid = 1;
  inline bool has_prizeid() const;
  inline void clear_prizeid();
  static const int kPrizeidFieldNumber = 1;
  inline ::google::protobuf::uint32 prizeid() const;
  inline void set_prizeid(::google::protobuf::uint32 value);
  
  // optional uint32 dayvalue = 2;
  inline bool has_dayvalue() const;
  inline void clear_dayvalue();
  static const int kDayvalueFieldNumber = 2;
  inline ::google::protobuf::uint32 dayvalue() const;
  inline void set_dayvalue(::google::protobuf::uint32 value);
  
  // optional uint32 daycount = 3;
  inline bool has_daycount() const;
  inline void clear_daycount();
  static const int kDaycountFieldNumber = 3;
  inline ::google::protobuf::uint32 daycount() const;
  inline void set_daycount(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBTreasureValueInfo)
 private:
  inline void set_has_prizeid();
  inline void clear_has_prizeid();
  inline void set_has_dayvalue();
  inline void clear_has_dayvalue();
  inline void set_has_daycount();
  inline void clear_has_daycount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 prizeid_;
  ::google::protobuf::uint32 dayvalue_;
  ::google::protobuf::uint32 daycount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBTreasureValueInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldTreasureData : public ::google::protobuf::Message {
 public:
  PBWorldTreasureData();
  virtual ~PBWorldTreasureData();
  
  PBWorldTreasureData(const PBWorldTreasureData& from);
  
  inline PBWorldTreasureData& operator=(const PBWorldTreasureData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldTreasureData& default_instance();
  
  void Swap(PBWorldTreasureData* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldTreasureData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldTreasureData& from);
  void MergeFrom(const PBWorldTreasureData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBTreasureValueInfo treasureinfo = 1;
  inline int treasureinfo_size() const;
  inline void clear_treasureinfo();
  static const int kTreasureinfoFieldNumber = 1;
  inline const ::PBTreasureValueInfo& treasureinfo(int index) const;
  inline ::PBTreasureValueInfo* mutable_treasureinfo(int index);
  inline ::PBTreasureValueInfo* add_treasureinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBTreasureValueInfo >&
      treasureinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBTreasureValueInfo >*
      mutable_treasureinfo();
  
  // @@protoc_insertion_point(class_scope:PBWorldTreasureData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBTreasureValueInfo > treasureinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWorldTreasureData* default_instance_;
};
// -------------------------------------------------------------------

class PBCorpsMemberInfo : public ::google::protobuf::Message {
 public:
  PBCorpsMemberInfo();
  virtual ~PBCorpsMemberInfo();
  
  PBCorpsMemberInfo(const PBCorpsMemberInfo& from);
  
  inline PBCorpsMemberInfo& operator=(const PBCorpsMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorpsMemberInfo& default_instance();
  
  void Swap(PBCorpsMemberInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBCorpsMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCorpsMemberInfo& from);
  void MergeFrom(const PBCorpsMemberInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 corpsjob = 1;
  inline bool has_corpsjob() const;
  inline void clear_corpsjob();
  static const int kCorpsjobFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsjob() const;
  inline void set_corpsjob(::google::protobuf::uint32 value);
  
  // optional .PBPlayerAvatar avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline const ::PBPlayerAvatar& avatar() const;
  inline ::PBPlayerAvatar* mutable_avatar();
  inline ::PBPlayerAvatar* release_avatar();
  
  // optional uint32 fobitcount = 3;
  inline bool has_fobitcount() const;
  inline void clear_fobitcount();
  static const int kFobitcountFieldNumber = 3;
  inline ::google::protobuf::uint32 fobitcount() const;
  inline void set_fobitcount(::google::protobuf::uint32 value);
  
  // optional uint32 nextsettime = 4;
  inline bool has_nextsettime() const;
  inline void clear_nextsettime();
  static const int kNextsettimeFieldNumber = 4;
  inline ::google::protobuf::uint32 nextsettime() const;
  inline void set_nextsettime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBCorpsMemberInfo)
 private:
  inline void set_has_corpsjob();
  inline void clear_has_corpsjob();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_fobitcount();
  inline void clear_has_fobitcount();
  inline void set_has_nextsettime();
  inline void clear_has_nextsettime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerAvatar* avatar_;
  ::google::protobuf::uint32 corpsjob_;
  ::google::protobuf::uint32 fobitcount_;
  ::google::protobuf::uint32 nextsettime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBCorpsMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBCorpsInfo : public ::google::protobuf::Message {
 public:
  PBCorpsInfo();
  virtual ~PBCorpsInfo();
  
  PBCorpsInfo(const PBCorpsInfo& from);
  
  inline PBCorpsInfo& operator=(const PBCorpsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorpsInfo& default_instance();
  
  void Swap(PBCorpsInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBCorpsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCorpsInfo& from);
  void MergeFrom(const PBCorpsInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 corpsid = 1;
  inline bool has_corpsid() const;
  inline void clear_corpsid();
  static const int kCorpsidFieldNumber = 1;
  inline ::google::protobuf::uint32 corpsid() const;
  inline void set_corpsid(::google::protobuf::uint32 value);
  
  // repeated .PBCorpsMemberInfo memberinfo = 2;
  inline int memberinfo_size() const;
  inline void clear_memberinfo();
  static const int kMemberinfoFieldNumber = 2;
  inline const ::PBCorpsMemberInfo& memberinfo(int index) const;
  inline ::PBCorpsMemberInfo* mutable_memberinfo(int index);
  inline ::PBCorpsMemberInfo* add_memberinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsMemberInfo >&
      memberinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsMemberInfo >*
      mutable_memberinfo();
  
  // optional string declaration = 3;
  inline bool has_declaration() const;
  inline void clear_declaration();
  static const int kDeclarationFieldNumber = 3;
  inline const ::std::string& declaration() const;
  inline void set_declaration(const ::std::string& value);
  inline void set_declaration(const char* value);
  inline void set_declaration(const char* value, size_t size);
  inline ::std::string* mutable_declaration();
  inline ::std::string* release_declaration();
  
  // @@protoc_insertion_point(class_scope:PBCorpsInfo)
 private:
  inline void set_has_corpsid();
  inline void clear_has_corpsid();
  inline void set_has_declaration();
  inline void clear_has_declaration();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBCorpsMemberInfo > memberinfo_;
  ::std::string* declaration_;
  ::google::protobuf::uint32 corpsid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBCorpsInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldCorpsData : public ::google::protobuf::Message {
 public:
  PBWorldCorpsData();
  virtual ~PBWorldCorpsData();
  
  PBWorldCorpsData(const PBWorldCorpsData& from);
  
  inline PBWorldCorpsData& operator=(const PBWorldCorpsData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldCorpsData& default_instance();
  
  void Swap(PBWorldCorpsData* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldCorpsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldCorpsData& from);
  void MergeFrom(const PBWorldCorpsData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBCorpsInfo corpsinfo = 1;
  inline int corpsinfo_size() const;
  inline void clear_corpsinfo();
  static const int kCorpsinfoFieldNumber = 1;
  inline const ::PBCorpsInfo& corpsinfo(int index) const;
  inline ::PBCorpsInfo* mutable_corpsinfo(int index);
  inline ::PBCorpsInfo* add_corpsinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsInfo >&
      corpsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBCorpsInfo >*
      mutable_corpsinfo();
  
  // @@protoc_insertion_point(class_scope:PBWorldCorpsData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBCorpsInfo > corpsinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWorldCorpsData* default_instance_;
};
// -------------------------------------------------------------------

class PBWorldServerData : public ::google::protobuf::Message {
 public:
  PBWorldServerData();
  virtual ~PBWorldServerData();
  
  PBWorldServerData(const PBWorldServerData& from);
  
  inline PBWorldServerData& operator=(const PBWorldServerData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBWorldServerData& default_instance();
  
  void Swap(PBWorldServerData* other);
  
  // implements Message ----------------------------------------------
  
  PBWorldServerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBWorldServerData& from);
  void MergeFrom(const PBWorldServerData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 starttime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 1;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);
  
  // optional .PBWorldFactionBossData factionboss = 2;
  inline bool has_factionboss() const;
  inline void clear_factionboss();
  static const int kFactionbossFieldNumber = 2;
  inline const ::PBWorldFactionBossData& factionboss() const;
  inline ::PBWorldFactionBossData* mutable_factionboss();
  inline ::PBWorldFactionBossData* release_factionboss();
  
  // optional .PBWorldTreasureData treasure = 3;
  inline bool has_treasure() const;
  inline void clear_treasure();
  static const int kTreasureFieldNumber = 3;
  inline const ::PBWorldTreasureData& treasure() const;
  inline ::PBWorldTreasureData* mutable_treasure();
  inline ::PBWorldTreasureData* release_treasure();
  
  // optional uint32 cleardaytime = 4;
  inline bool has_cleardaytime() const;
  inline void clear_cleardaytime();
  static const int kCleardaytimeFieldNumber = 4;
  inline ::google::protobuf::uint32 cleardaytime() const;
  inline void set_cleardaytime(::google::protobuf::uint32 value);
  
  // optional .PBWorldCorpsData corps = 5;
  inline bool has_corps() const;
  inline void clear_corps();
  static const int kCorpsFieldNumber = 5;
  inline const ::PBWorldCorpsData& corps() const;
  inline ::PBWorldCorpsData* mutable_corps();
  inline ::PBWorldCorpsData* release_corps();
  
  // @@protoc_insertion_point(class_scope:PBWorldServerData)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_factionboss();
  inline void clear_has_factionboss();
  inline void set_has_treasure();
  inline void clear_has_treasure();
  inline void set_has_cleardaytime();
  inline void clear_has_cleardaytime();
  inline void set_has_corps();
  inline void clear_has_corps();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBWorldFactionBossData* factionboss_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 cleardaytime_;
  ::PBWorldTreasureData* treasure_;
  ::PBWorldCorpsData* corps_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerStruct_2eproto();
  friend void protobuf_AssignDesc_PlayerStruct_2eproto();
  friend void protobuf_ShutdownFile_PlayerStruct_2eproto();
  
  void InitAsDefaultInstance();
  static PBWorldServerData* default_instance_;
};
// ===================================================================


// ===================================================================

// PBPlayerDisplay

// optional string playername = 1;
inline bool PBPlayerDisplay::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerDisplay::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerDisplay::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerDisplay::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PBPlayerDisplay::playername() const {
  return *playername_;
}
inline void PBPlayerDisplay::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBPlayerDisplay::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBPlayerDisplay::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerDisplay::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PBPlayerDisplay::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 playerid = 2;
inline bool PBPlayerDisplay::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerDisplay::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerDisplay::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerDisplay::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::playerid() const {
  return playerid_;
}
inline void PBPlayerDisplay::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 playerlevel = 3;
inline bool PBPlayerDisplay::has_playerlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerDisplay::set_has_playerlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerDisplay::clear_has_playerlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerDisplay::clear_playerlevel() {
  playerlevel_ = 0u;
  clear_has_playerlevel();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::playerlevel() const {
  return playerlevel_;
}
inline void PBPlayerDisplay::set_playerlevel(::google::protobuf::uint32 value) {
  set_has_playerlevel();
  playerlevel_ = value;
}

// optional uint32 worldid = 4;
inline bool PBPlayerDisplay::has_worldid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerDisplay::set_has_worldid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerDisplay::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerDisplay::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::worldid() const {
  return worldid_;
}
inline void PBPlayerDisplay::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional uint32 logicworldid = 5;
inline bool PBPlayerDisplay::has_logicworldid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerDisplay::set_has_logicworldid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerDisplay::clear_has_logicworldid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerDisplay::clear_logicworldid() {
  logicworldid_ = 0u;
  clear_has_logicworldid();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::logicworldid() const {
  return logicworldid_;
}
inline void PBPlayerDisplay::set_logicworldid(::google::protobuf::uint32 value) {
  set_has_logicworldid();
  logicworldid_ = value;
}

// optional uint32 job = 6;
inline bool PBPlayerDisplay::has_job() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerDisplay::set_has_job() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerDisplay::clear_has_job() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerDisplay::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::job() const {
  return job_;
}
inline void PBPlayerDisplay::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// optional uint32 gender = 7;
inline bool PBPlayerDisplay::has_gender() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPlayerDisplay::set_has_gender() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPlayerDisplay::clear_has_gender() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPlayerDisplay::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::gender() const {
  return gender_;
}
inline void PBPlayerDisplay::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// optional uint32 campid = 8;
inline bool PBPlayerDisplay::has_campid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBPlayerDisplay::set_has_campid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBPlayerDisplay::clear_has_campid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBPlayerDisplay::clear_campid() {
  campid_ = 0u;
  clear_has_campid();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::campid() const {
  return campid_;
}
inline void PBPlayerDisplay::set_campid(::google::protobuf::uint32 value) {
  set_has_campid();
  campid_ = value;
}

// optional string factionname = 9;
inline bool PBPlayerDisplay::has_factionname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBPlayerDisplay::set_has_factionname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBPlayerDisplay::clear_has_factionname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBPlayerDisplay::clear_factionname() {
  if (factionname_ != &::google::protobuf::internal::kEmptyString) {
    factionname_->clear();
  }
  clear_has_factionname();
}
inline const ::std::string& PBPlayerDisplay::factionname() const {
  return *factionname_;
}
inline void PBPlayerDisplay::set_factionname(const ::std::string& value) {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  factionname_->assign(value);
}
inline void PBPlayerDisplay::set_factionname(const char* value) {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  factionname_->assign(value);
}
inline void PBPlayerDisplay::set_factionname(const char* value, size_t size) {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  factionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerDisplay::mutable_factionname() {
  set_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    factionname_ = new ::std::string;
  }
  return factionname_;
}
inline ::std::string* PBPlayerDisplay::release_factionname() {
  clear_has_factionname();
  if (factionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = factionname_;
    factionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string aliancename = 10;
inline bool PBPlayerDisplay::has_aliancename() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBPlayerDisplay::set_has_aliancename() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBPlayerDisplay::clear_has_aliancename() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBPlayerDisplay::clear_aliancename() {
  if (aliancename_ != &::google::protobuf::internal::kEmptyString) {
    aliancename_->clear();
  }
  clear_has_aliancename();
}
inline const ::std::string& PBPlayerDisplay::aliancename() const {
  return *aliancename_;
}
inline void PBPlayerDisplay::set_aliancename(const ::std::string& value) {
  set_has_aliancename();
  if (aliancename_ == &::google::protobuf::internal::kEmptyString) {
    aliancename_ = new ::std::string;
  }
  aliancename_->assign(value);
}
inline void PBPlayerDisplay::set_aliancename(const char* value) {
  set_has_aliancename();
  if (aliancename_ == &::google::protobuf::internal::kEmptyString) {
    aliancename_ = new ::std::string;
  }
  aliancename_->assign(value);
}
inline void PBPlayerDisplay::set_aliancename(const char* value, size_t size) {
  set_has_aliancename();
  if (aliancename_ == &::google::protobuf::internal::kEmptyString) {
    aliancename_ = new ::std::string;
  }
  aliancename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerDisplay::mutable_aliancename() {
  set_has_aliancename();
  if (aliancename_ == &::google::protobuf::internal::kEmptyString) {
    aliancename_ = new ::std::string;
  }
  return aliancename_;
}
inline ::std::string* PBPlayerDisplay::release_aliancename() {
  clear_has_aliancename();
  if (aliancename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = aliancename_;
    aliancename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 Corps = 11;
inline bool PBPlayerDisplay::has_corps() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBPlayerDisplay::set_has_corps() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBPlayerDisplay::clear_has_corps() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBPlayerDisplay::clear_corps() {
  corps_ = 0u;
  clear_has_corps();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::corps() const {
  return corps_;
}
inline void PBPlayerDisplay::set_corps(::google::protobuf::uint32 value) {
  set_has_corps();
  corps_ = value;
}

// optional uint32 stageid = 12;
inline bool PBPlayerDisplay::has_stageid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBPlayerDisplay::set_has_stageid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBPlayerDisplay::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBPlayerDisplay::clear_stageid() {
  stageid_ = 0u;
  clear_has_stageid();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::stageid() const {
  return stageid_;
}
inline void PBPlayerDisplay::set_stageid(::google::protobuf::uint32 value) {
  set_has_stageid();
  stageid_ = value;
}

// optional uint32 titleid = 13;
inline bool PBPlayerDisplay::has_titleid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBPlayerDisplay::set_has_titleid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBPlayerDisplay::clear_has_titleid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBPlayerDisplay::clear_titleid() {
  titleid_ = 0u;
  clear_has_titleid();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::titleid() const {
  return titleid_;
}
inline void PBPlayerDisplay::set_titleid(::google::protobuf::uint32 value) {
  set_has_titleid();
  titleid_ = value;
}

// optional uint32 factionid = 14;
inline bool PBPlayerDisplay::has_factionid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PBPlayerDisplay::set_has_factionid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PBPlayerDisplay::clear_has_factionid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PBPlayerDisplay::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::factionid() const {
  return factionid_;
}
inline void PBPlayerDisplay::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 identity = 15;
inline bool PBPlayerDisplay::has_identity() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PBPlayerDisplay::set_has_identity() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PBPlayerDisplay::clear_has_identity() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PBPlayerDisplay::clear_identity() {
  identity_ = 0u;
  clear_has_identity();
}
inline ::google::protobuf::uint32 PBPlayerDisplay::identity() const {
  return identity_;
}
inline void PBPlayerDisplay::set_identity(::google::protobuf::uint32 value) {
  set_has_identity();
  identity_ = value;
}

// optional string factionbanner = 16;
inline bool PBPlayerDisplay::has_factionbanner() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PBPlayerDisplay::set_has_factionbanner() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PBPlayerDisplay::clear_has_factionbanner() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PBPlayerDisplay::clear_factionbanner() {
  if (factionbanner_ != &::google::protobuf::internal::kEmptyString) {
    factionbanner_->clear();
  }
  clear_has_factionbanner();
}
inline const ::std::string& PBPlayerDisplay::factionbanner() const {
  return *factionbanner_;
}
inline void PBPlayerDisplay::set_factionbanner(const ::std::string& value) {
  set_has_factionbanner();
  if (factionbanner_ == &::google::protobuf::internal::kEmptyString) {
    factionbanner_ = new ::std::string;
  }
  factionbanner_->assign(value);
}
inline void PBPlayerDisplay::set_factionbanner(const char* value) {
  set_has_factionbanner();
  if (factionbanner_ == &::google::protobuf::internal::kEmptyString) {
    factionbanner_ = new ::std::string;
  }
  factionbanner_->assign(value);
}
inline void PBPlayerDisplay::set_factionbanner(const char* value, size_t size) {
  set_has_factionbanner();
  if (factionbanner_ == &::google::protobuf::internal::kEmptyString) {
    factionbanner_ = new ::std::string;
  }
  factionbanner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerDisplay::mutable_factionbanner() {
  set_has_factionbanner();
  if (factionbanner_ == &::google::protobuf::internal::kEmptyString) {
    factionbanner_ = new ::std::string;
  }
  return factionbanner_;
}
inline ::std::string* PBPlayerDisplay::release_factionbanner() {
  clear_has_factionbanner();
  if (factionbanner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = factionbanner_;
    factionbanner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBPlayerShape

// optional uint32 type = 1;
inline bool PBPlayerShape::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerShape::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerShape::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerShape::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBPlayerShape::type() const {
  return type_;
}
inline void PBPlayerShape::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 2;
inline bool PBPlayerShape::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerShape::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerShape::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerShape::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBPlayerShape::id() const {
  return id_;
}
inline void PBPlayerShape::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBPlayerShapeData

// repeated uint32 value = 1;
inline int PBPlayerShapeData::value_size() const {
  return value_.size();
}
inline void PBPlayerShapeData::clear_value() {
  value_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerShapeData::value(int index) const {
  return value_.Get(index);
}
inline void PBPlayerShapeData::set_value(int index, ::google::protobuf::uint32 value) {
  value_.Set(index, value);
}
inline void PBPlayerShapeData::add_value(::google::protobuf::uint32 value) {
  value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerShapeData::value() const {
  return value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerShapeData::mutable_value() {
  return &value_;
}

// -------------------------------------------------------------------

// PBPlayerFashionData

// repeated uint32 fashionid = 1;
inline int PBPlayerFashionData::fashionid_size() const {
  return fashionid_.size();
}
inline void PBPlayerFashionData::clear_fashionid() {
  fashionid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerFashionData::fashionid(int index) const {
  return fashionid_.Get(index);
}
inline void PBPlayerFashionData::set_fashionid(int index, ::google::protobuf::uint32 value) {
  fashionid_.Set(index, value);
}
inline void PBPlayerFashionData::add_fashionid(::google::protobuf::uint32 value) {
  fashionid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerFashionData::fashionid() const {
  return fashionid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerFashionData::mutable_fashionid() {
  return &fashionid_;
}

// -------------------------------------------------------------------

// PBPlayerAvatar

// optional .PBPlayerDisplay display = 1;
inline bool PBPlayerAvatar::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerAvatar::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerAvatar::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerAvatar::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBPlayerAvatar::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBPlayerAvatar::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBPlayerAvatar::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional .PBPlayerShapeData shapedata = 2;
inline bool PBPlayerAvatar::has_shapedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerAvatar::set_has_shapedata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerAvatar::clear_has_shapedata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerAvatar::clear_shapedata() {
  if (shapedata_ != NULL) shapedata_->::PBPlayerShapeData::Clear();
  clear_has_shapedata();
}
inline const ::PBPlayerShapeData& PBPlayerAvatar::shapedata() const {
  return shapedata_ != NULL ? *shapedata_ : *default_instance_->shapedata_;
}
inline ::PBPlayerShapeData* PBPlayerAvatar::mutable_shapedata() {
  set_has_shapedata();
  if (shapedata_ == NULL) shapedata_ = new ::PBPlayerShapeData;
  return shapedata_;
}
inline ::PBPlayerShapeData* PBPlayerAvatar::release_shapedata() {
  clear_has_shapedata();
  ::PBPlayerShapeData* temp = shapedata_;
  shapedata_ = NULL;
  return temp;
}

// optional .PBPlayerFashionData fashiondata = 3;
inline bool PBPlayerAvatar::has_fashiondata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerAvatar::set_has_fashiondata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerAvatar::clear_has_fashiondata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerAvatar::clear_fashiondata() {
  if (fashiondata_ != NULL) fashiondata_->::PBPlayerFashionData::Clear();
  clear_has_fashiondata();
}
inline const ::PBPlayerFashionData& PBPlayerAvatar::fashiondata() const {
  return fashiondata_ != NULL ? *fashiondata_ : *default_instance_->fashiondata_;
}
inline ::PBPlayerFashionData* PBPlayerAvatar::mutable_fashiondata() {
  set_has_fashiondata();
  if (fashiondata_ == NULL) fashiondata_ = new ::PBPlayerFashionData;
  return fashiondata_;
}
inline ::PBPlayerFashionData* PBPlayerAvatar::release_fashiondata() {
  clear_has_fashiondata();
  ::PBPlayerFashionData* temp = fashiondata_;
  fashiondata_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBPlayerMoney

// optional uint32 type = 1;
inline bool PBPlayerMoney::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerMoney::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerMoney::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerMoney::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBPlayerMoney::type() const {
  return type_;
}
inline void PBPlayerMoney::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 value = 2;
inline bool PBPlayerMoney::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerMoney::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerMoney::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerMoney::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 PBPlayerMoney::value() const {
  return value_;
}
inline void PBPlayerMoney::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// PBEnergy

// optional int32 type = 1;
inline bool PBEnergy::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEnergy::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEnergy::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEnergy::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PBEnergy::type() const {
  return type_;
}
inline void PBEnergy::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool PBEnergy::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEnergy::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEnergy::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEnergy::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 PBEnergy::value() const {
  return value_;
}
inline void PBEnergy::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// PBEquipLucky

// optional int32 type = 1;
inline bool PBEquipLucky::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEquipLucky::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEquipLucky::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEquipLucky::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PBEquipLucky::type() const {
  return type_;
}
inline void PBEquipLucky::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 value = 2;
inline bool PBEquipLucky::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEquipLucky::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEquipLucky::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEquipLucky::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 PBEquipLucky::value() const {
  return value_;
}
inline void PBEquipLucky::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// PBCopymapDayCount

// optional int32 type = 1;
inline bool PBCopymapDayCount::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCopymapDayCount::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCopymapDayCount::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCopymapDayCount::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PBCopymapDayCount::type() const {
  return type_;
}
inline void PBCopymapDayCount::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 count = 2;
inline bool PBCopymapDayCount::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCopymapDayCount::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCopymapDayCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCopymapDayCount::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 PBCopymapDayCount::count() const {
  return count_;
}
inline void PBCopymapDayCount::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PBTeamTaskDayCount

// optional int32 id = 1;
inline bool PBTeamTaskDayCount::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTeamTaskDayCount::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTeamTaskDayCount::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTeamTaskDayCount::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PBTeamTaskDayCount::id() const {
  return id_;
}
inline void PBTeamTaskDayCount::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 count = 2;
inline bool PBTeamTaskDayCount::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTeamTaskDayCount::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTeamTaskDayCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTeamTaskDayCount::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 PBTeamTaskDayCount::count() const {
  return count_;
}
inline void PBTeamTaskDayCount::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PBForbidSpeak

// optional uint32 channel = 1;
inline bool PBForbidSpeak::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBForbidSpeak::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBForbidSpeak::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBForbidSpeak::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 PBForbidSpeak::channel() const {
  return channel_;
}
inline void PBForbidSpeak::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
}

// optional uint32 nexttime = 2;
inline bool PBForbidSpeak::has_nexttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBForbidSpeak::set_has_nexttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBForbidSpeak::clear_has_nexttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBForbidSpeak::clear_nexttime() {
  nexttime_ = 0u;
  clear_has_nexttime();
}
inline ::google::protobuf::uint32 PBForbidSpeak::nexttime() const {
  return nexttime_;
}
inline void PBForbidSpeak::set_nexttime(::google::protobuf::uint32 value) {
  set_has_nexttime();
  nexttime_ = value;
}

// -------------------------------------------------------------------

// PBPlayerBase

// optional uint32 saveorder = 1;
inline bool PBPlayerBase::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerBase::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerBase::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerBase::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerBase::saveorder() const {
  return saveorder_;
}
inline void PBPlayerBase::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// optional .PBPlayerDisplay playerdisplay = 2;
inline bool PBPlayerBase::has_playerdisplay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerBase::set_has_playerdisplay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerBase::clear_has_playerdisplay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerBase::clear_playerdisplay() {
  if (playerdisplay_ != NULL) playerdisplay_->::PBPlayerDisplay::Clear();
  clear_has_playerdisplay();
}
inline const ::PBPlayerDisplay& PBPlayerBase::playerdisplay() const {
  return playerdisplay_ != NULL ? *playerdisplay_ : *default_instance_->playerdisplay_;
}
inline ::PBPlayerDisplay* PBPlayerBase::mutable_playerdisplay() {
  set_has_playerdisplay();
  if (playerdisplay_ == NULL) playerdisplay_ = new ::PBPlayerDisplay;
  return playerdisplay_;
}
inline ::PBPlayerDisplay* PBPlayerBase::release_playerdisplay() {
  clear_has_playerdisplay();
  ::PBPlayerDisplay* temp = playerdisplay_;
  playerdisplay_ = NULL;
  return temp;
}

// optional uint32 accountid = 3;
inline bool PBPlayerBase::has_accountid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerBase::set_has_accountid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerBase::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerBase::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PBPlayerBase::accountid() const {
  return accountid_;
}
inline void PBPlayerBase::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 playermark = 4;
inline bool PBPlayerBase::has_playermark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerBase::set_has_playermark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerBase::clear_has_playermark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerBase::clear_playermark() {
  playermark_ = 0u;
  clear_has_playermark();
}
inline ::google::protobuf::uint32 PBPlayerBase::playermark() const {
  return playermark_;
}
inline void PBPlayerBase::set_playermark(::google::protobuf::uint32 value) {
  set_has_playermark();
  playermark_ = value;
}

// optional uint32 sceneid = 5;
inline bool PBPlayerBase::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerBase::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerBase::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerBase::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBPlayerBase::sceneid() const {
  return sceneid_;
}
inline void PBPlayerBase::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint32 cellid = 6;
inline bool PBPlayerBase::has_cellid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerBase::set_has_cellid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerBase::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerBase::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 PBPlayerBase::cellid() const {
  return cellid_;
}
inline void PBPlayerBase::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional uint64 scenedynid = 7;
inline bool PBPlayerBase::has_scenedynid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPlayerBase::set_has_scenedynid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPlayerBase::clear_has_scenedynid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPlayerBase::clear_scenedynid() {
  scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_scenedynid();
}
inline ::google::protobuf::uint64 PBPlayerBase::scenedynid() const {
  return scenedynid_;
}
inline void PBPlayerBase::set_scenedynid(::google::protobuf::uint64 value) {
  set_has_scenedynid();
  scenedynid_ = value;
}

// optional float posx = 8;
inline bool PBPlayerBase::has_posx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBPlayerBase::set_has_posx() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBPlayerBase::clear_has_posx() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBPlayerBase::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float PBPlayerBase::posx() const {
  return posx_;
}
inline void PBPlayerBase::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// optional float posy = 9;
inline bool PBPlayerBase::has_posy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBPlayerBase::set_has_posy() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBPlayerBase::clear_has_posy() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBPlayerBase::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float PBPlayerBase::posy() const {
  return posy_;
}
inline void PBPlayerBase::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// optional float dir = 10;
inline bool PBPlayerBase::has_dir() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBPlayerBase::set_has_dir() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBPlayerBase::clear_has_dir() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBPlayerBase::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline float PBPlayerBase::dir() const {
  return dir_;
}
inline void PBPlayerBase::set_dir(float value) {
  set_has_dir();
  dir_ = value;
}

// optional uint32 lastlogintime = 11;
inline bool PBPlayerBase::has_lastlogintime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBPlayerBase::set_has_lastlogintime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBPlayerBase::clear_has_lastlogintime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBPlayerBase::clear_lastlogintime() {
  lastlogintime_ = 0u;
  clear_has_lastlogintime();
}
inline ::google::protobuf::uint32 PBPlayerBase::lastlogintime() const {
  return lastlogintime_;
}
inline void PBPlayerBase::set_lastlogintime(::google::protobuf::uint32 value) {
  set_has_lastlogintime();
  lastlogintime_ = value;
}

// optional uint32 lastlogouttime = 12;
inline bool PBPlayerBase::has_lastlogouttime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBPlayerBase::set_has_lastlogouttime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBPlayerBase::clear_has_lastlogouttime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBPlayerBase::clear_lastlogouttime() {
  lastlogouttime_ = 0u;
  clear_has_lastlogouttime();
}
inline ::google::protobuf::uint32 PBPlayerBase::lastlogouttime() const {
  return lastlogouttime_;
}
inline void PBPlayerBase::set_lastlogouttime(::google::protobuf::uint32 value) {
  set_has_lastlogouttime();
  lastlogouttime_ = value;
}

// optional uint32 createtime = 13;
inline bool PBPlayerBase::has_createtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBPlayerBase::set_has_createtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBPlayerBase::clear_has_createtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBPlayerBase::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 PBPlayerBase::createtime() const {
  return createtime_;
}
inline void PBPlayerBase::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint32 pktype = 14;
inline bool PBPlayerBase::has_pktype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PBPlayerBase::set_has_pktype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PBPlayerBase::clear_has_pktype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PBPlayerBase::clear_pktype() {
  pktype_ = 0u;
  clear_has_pktype();
}
inline ::google::protobuf::uint32 PBPlayerBase::pktype() const {
  return pktype_;
}
inline void PBPlayerBase::set_pktype(::google::protobuf::uint32 value) {
  set_has_pktype();
  pktype_ = value;
}

// optional uint32 pkvalue = 15;
inline bool PBPlayerBase::has_pkvalue() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PBPlayerBase::set_has_pkvalue() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PBPlayerBase::clear_has_pkvalue() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PBPlayerBase::clear_pkvalue() {
  pkvalue_ = 0u;
  clear_has_pkvalue();
}
inline ::google::protobuf::uint32 PBPlayerBase::pkvalue() const {
  return pkvalue_;
}
inline void PBPlayerBase::set_pkvalue(::google::protobuf::uint32 value) {
  set_has_pkvalue();
  pkvalue_ = value;
}

// optional uint64 exp = 16;
inline bool PBPlayerBase::has_exp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PBPlayerBase::set_has_exp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PBPlayerBase::clear_has_exp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PBPlayerBase::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::uint64 PBPlayerBase::exp() const {
  return exp_;
}
inline void PBPlayerBase::set_exp(::google::protobuf::uint64 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint64 wisdom = 17;
inline bool PBPlayerBase::has_wisdom() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PBPlayerBase::set_has_wisdom() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PBPlayerBase::clear_has_wisdom() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PBPlayerBase::clear_wisdom() {
  wisdom_ = GOOGLE_ULONGLONG(0);
  clear_has_wisdom();
}
inline ::google::protobuf::uint64 PBPlayerBase::wisdom() const {
  return wisdom_;
}
inline void PBPlayerBase::set_wisdom(::google::protobuf::uint64 value) {
  set_has_wisdom();
  wisdom_ = value;
}

// repeated .PBPlayerMoney money = 18;
inline int PBPlayerBase::money_size() const {
  return money_.size();
}
inline void PBPlayerBase::clear_money() {
  money_.Clear();
}
inline const ::PBPlayerMoney& PBPlayerBase::money(int index) const {
  return money_.Get(index);
}
inline ::PBPlayerMoney* PBPlayerBase::mutable_money(int index) {
  return money_.Mutable(index);
}
inline ::PBPlayerMoney* PBPlayerBase::add_money() {
  return money_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerMoney >&
PBPlayerBase::money() const {
  return money_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerMoney >*
PBPlayerBase::mutable_money() {
  return &money_;
}

// optional uint32 spawnid = 19;
inline bool PBPlayerBase::has_spawnid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PBPlayerBase::set_has_spawnid() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PBPlayerBase::clear_has_spawnid() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PBPlayerBase::clear_spawnid() {
  spawnid_ = 0u;
  clear_has_spawnid();
}
inline ::google::protobuf::uint32 PBPlayerBase::spawnid() const {
  return spawnid_;
}
inline void PBPlayerBase::set_spawnid(::google::protobuf::uint32 value) {
  set_has_spawnid();
  spawnid_ = value;
}

// optional int32 curhp = 20;
inline bool PBPlayerBase::has_curhp() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PBPlayerBase::set_has_curhp() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PBPlayerBase::clear_has_curhp() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PBPlayerBase::clear_curhp() {
  curhp_ = 0;
  clear_has_curhp();
}
inline ::google::protobuf::int32 PBPlayerBase::curhp() const {
  return curhp_;
}
inline void PBPlayerBase::set_curhp(::google::protobuf::int32 value) {
  set_has_curhp();
  curhp_ = value;
}

// repeated .PBEnergy curenergy = 21;
inline int PBPlayerBase::curenergy_size() const {
  return curenergy_.size();
}
inline void PBPlayerBase::clear_curenergy() {
  curenergy_.Clear();
}
inline const ::PBEnergy& PBPlayerBase::curenergy(int index) const {
  return curenergy_.Get(index);
}
inline ::PBEnergy* PBPlayerBase::mutable_curenergy(int index) {
  return curenergy_.Mutable(index);
}
inline ::PBEnergy* PBPlayerBase::add_curenergy() {
  return curenergy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEnergy >&
PBPlayerBase::curenergy() const {
  return curenergy_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEnergy >*
PBPlayerBase::mutable_curenergy() {
  return &curenergy_;
}

// optional uint32 onlinetime = 22;
inline bool PBPlayerBase::has_onlinetime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PBPlayerBase::set_has_onlinetime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PBPlayerBase::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PBPlayerBase::clear_onlinetime() {
  onlinetime_ = 0u;
  clear_has_onlinetime();
}
inline ::google::protobuf::uint32 PBPlayerBase::onlinetime() const {
  return onlinetime_;
}
inline void PBPlayerBase::set_onlinetime(::google::protobuf::uint32 value) {
  set_has_onlinetime();
  onlinetime_ = value;
}

// optional bytes onlyindex = 23;
inline bool PBPlayerBase::has_onlyindex() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PBPlayerBase::set_has_onlyindex() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PBPlayerBase::clear_has_onlyindex() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PBPlayerBase::clear_onlyindex() {
  if (onlyindex_ != &::google::protobuf::internal::kEmptyString) {
    onlyindex_->clear();
  }
  clear_has_onlyindex();
}
inline const ::std::string& PBPlayerBase::onlyindex() const {
  return *onlyindex_;
}
inline void PBPlayerBase::set_onlyindex(const ::std::string& value) {
  set_has_onlyindex();
  if (onlyindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyindex_ = new ::std::string;
  }
  onlyindex_->assign(value);
}
inline void PBPlayerBase::set_onlyindex(const char* value) {
  set_has_onlyindex();
  if (onlyindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyindex_ = new ::std::string;
  }
  onlyindex_->assign(value);
}
inline void PBPlayerBase::set_onlyindex(const void* value, size_t size) {
  set_has_onlyindex();
  if (onlyindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyindex_ = new ::std::string;
  }
  onlyindex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerBase::mutable_onlyindex() {
  set_has_onlyindex();
  if (onlyindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyindex_ = new ::std::string;
  }
  return onlyindex_;
}
inline ::std::string* PBPlayerBase::release_onlyindex() {
  clear_has_onlyindex();
  if (onlyindex_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = onlyindex_;
    onlyindex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes onlydayindex = 24;
inline bool PBPlayerBase::has_onlydayindex() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PBPlayerBase::set_has_onlydayindex() {
  _has_bits_[0] |= 0x00800000u;
}
inline void PBPlayerBase::clear_has_onlydayindex() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void PBPlayerBase::clear_onlydayindex() {
  if (onlydayindex_ != &::google::protobuf::internal::kEmptyString) {
    onlydayindex_->clear();
  }
  clear_has_onlydayindex();
}
inline const ::std::string& PBPlayerBase::onlydayindex() const {
  return *onlydayindex_;
}
inline void PBPlayerBase::set_onlydayindex(const ::std::string& value) {
  set_has_onlydayindex();
  if (onlydayindex_ == &::google::protobuf::internal::kEmptyString) {
    onlydayindex_ = new ::std::string;
  }
  onlydayindex_->assign(value);
}
inline void PBPlayerBase::set_onlydayindex(const char* value) {
  set_has_onlydayindex();
  if (onlydayindex_ == &::google::protobuf::internal::kEmptyString) {
    onlydayindex_ = new ::std::string;
  }
  onlydayindex_->assign(value);
}
inline void PBPlayerBase::set_onlydayindex(const void* value, size_t size) {
  set_has_onlydayindex();
  if (onlydayindex_ == &::google::protobuf::internal::kEmptyString) {
    onlydayindex_ = new ::std::string;
  }
  onlydayindex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerBase::mutable_onlydayindex() {
  set_has_onlydayindex();
  if (onlydayindex_ == &::google::protobuf::internal::kEmptyString) {
    onlydayindex_ = new ::std::string;
  }
  return onlydayindex_;
}
inline ::std::string* PBPlayerBase::release_onlydayindex() {
  clear_has_onlydayindex();
  if (onlydayindex_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = onlydayindex_;
    onlydayindex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes onlyweekindex = 25;
inline bool PBPlayerBase::has_onlyweekindex() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PBPlayerBase::set_has_onlyweekindex() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PBPlayerBase::clear_has_onlyweekindex() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PBPlayerBase::clear_onlyweekindex() {
  if (onlyweekindex_ != &::google::protobuf::internal::kEmptyString) {
    onlyweekindex_->clear();
  }
  clear_has_onlyweekindex();
}
inline const ::std::string& PBPlayerBase::onlyweekindex() const {
  return *onlyweekindex_;
}
inline void PBPlayerBase::set_onlyweekindex(const ::std::string& value) {
  set_has_onlyweekindex();
  if (onlyweekindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyweekindex_ = new ::std::string;
  }
  onlyweekindex_->assign(value);
}
inline void PBPlayerBase::set_onlyweekindex(const char* value) {
  set_has_onlyweekindex();
  if (onlyweekindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyweekindex_ = new ::std::string;
  }
  onlyweekindex_->assign(value);
}
inline void PBPlayerBase::set_onlyweekindex(const void* value, size_t size) {
  set_has_onlyweekindex();
  if (onlyweekindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyweekindex_ = new ::std::string;
  }
  onlyweekindex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerBase::mutable_onlyweekindex() {
  set_has_onlyweekindex();
  if (onlyweekindex_ == &::google::protobuf::internal::kEmptyString) {
    onlyweekindex_ = new ::std::string;
  }
  return onlyweekindex_;
}
inline ::std::string* PBPlayerBase::release_onlyweekindex() {
  clear_has_onlyweekindex();
  if (onlyweekindex_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = onlyweekindex_;
    onlyweekindex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes onlymonthindex = 26;
inline bool PBPlayerBase::has_onlymonthindex() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PBPlayerBase::set_has_onlymonthindex() {
  _has_bits_[0] |= 0x02000000u;
}
inline void PBPlayerBase::clear_has_onlymonthindex() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void PBPlayerBase::clear_onlymonthindex() {
  if (onlymonthindex_ != &::google::protobuf::internal::kEmptyString) {
    onlymonthindex_->clear();
  }
  clear_has_onlymonthindex();
}
inline const ::std::string& PBPlayerBase::onlymonthindex() const {
  return *onlymonthindex_;
}
inline void PBPlayerBase::set_onlymonthindex(const ::std::string& value) {
  set_has_onlymonthindex();
  if (onlymonthindex_ == &::google::protobuf::internal::kEmptyString) {
    onlymonthindex_ = new ::std::string;
  }
  onlymonthindex_->assign(value);
}
inline void PBPlayerBase::set_onlymonthindex(const char* value) {
  set_has_onlymonthindex();
  if (onlymonthindex_ == &::google::protobuf::internal::kEmptyString) {
    onlymonthindex_ = new ::std::string;
  }
  onlymonthindex_->assign(value);
}
inline void PBPlayerBase::set_onlymonthindex(const void* value, size_t size) {
  set_has_onlymonthindex();
  if (onlymonthindex_ == &::google::protobuf::internal::kEmptyString) {
    onlymonthindex_ = new ::std::string;
  }
  onlymonthindex_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPlayerBase::mutable_onlymonthindex() {
  set_has_onlymonthindex();
  if (onlymonthindex_ == &::google::protobuf::internal::kEmptyString) {
    onlymonthindex_ = new ::std::string;
  }
  return onlymonthindex_;
}
inline ::std::string* PBPlayerBase::release_onlymonthindex() {
  clear_has_onlymonthindex();
  if (onlymonthindex_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = onlymonthindex_;
    onlymonthindex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 itemsequence = 27;
inline bool PBPlayerBase::has_itemsequence() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PBPlayerBase::set_has_itemsequence() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PBPlayerBase::clear_has_itemsequence() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PBPlayerBase::clear_itemsequence() {
  itemsequence_ = 0u;
  clear_has_itemsequence();
}
inline ::google::protobuf::uint32 PBPlayerBase::itemsequence() const {
  return itemsequence_;
}
inline void PBPlayerBase::set_itemsequence(::google::protobuf::uint32 value) {
  set_has_itemsequence();
  itemsequence_ = value;
}

// optional .PBPlayerShapeData shapedata = 28;
inline bool PBPlayerBase::has_shapedata() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PBPlayerBase::set_has_shapedata() {
  _has_bits_[0] |= 0x08000000u;
}
inline void PBPlayerBase::clear_has_shapedata() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void PBPlayerBase::clear_shapedata() {
  if (shapedata_ != NULL) shapedata_->::PBPlayerShapeData::Clear();
  clear_has_shapedata();
}
inline const ::PBPlayerShapeData& PBPlayerBase::shapedata() const {
  return shapedata_ != NULL ? *shapedata_ : *default_instance_->shapedata_;
}
inline ::PBPlayerShapeData* PBPlayerBase::mutable_shapedata() {
  set_has_shapedata();
  if (shapedata_ == NULL) shapedata_ = new ::PBPlayerShapeData;
  return shapedata_;
}
inline ::PBPlayerShapeData* PBPlayerBase::release_shapedata() {
  clear_has_shapedata();
  ::PBPlayerShapeData* temp = shapedata_;
  shapedata_ = NULL;
  return temp;
}

// optional uint32 killtime = 29;
inline bool PBPlayerBase::has_killtime() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PBPlayerBase::set_has_killtime() {
  _has_bits_[0] |= 0x10000000u;
}
inline void PBPlayerBase::clear_has_killtime() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void PBPlayerBase::clear_killtime() {
  killtime_ = 0u;
  clear_has_killtime();
}
inline ::google::protobuf::uint32 PBPlayerBase::killtime() const {
  return killtime_;
}
inline void PBPlayerBase::set_killtime(::google::protobuf::uint32 value) {
  set_has_killtime();
  killtime_ = value;
}

// optional uint32 equiplucky = 30;
inline bool PBPlayerBase::has_equiplucky() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void PBPlayerBase::set_has_equiplucky() {
  _has_bits_[0] |= 0x20000000u;
}
inline void PBPlayerBase::clear_has_equiplucky() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void PBPlayerBase::clear_equiplucky() {
  equiplucky_ = 0u;
  clear_has_equiplucky();
}
inline ::google::protobuf::uint32 PBPlayerBase::equiplucky() const {
  return equiplucky_;
}
inline void PBPlayerBase::set_equiplucky(::google::protobuf::uint32 value) {
  set_has_equiplucky();
  equiplucky_ = value;
}

// optional uint32 fightpower = 31;
inline bool PBPlayerBase::has_fightpower() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void PBPlayerBase::set_has_fightpower() {
  _has_bits_[0] |= 0x40000000u;
}
inline void PBPlayerBase::clear_has_fightpower() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void PBPlayerBase::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBPlayerBase::fightpower() const {
  return fightpower_;
}
inline void PBPlayerBase::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional uint32 mountid = 32;
inline bool PBPlayerBase::has_mountid() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void PBPlayerBase::set_has_mountid() {
  _has_bits_[0] |= 0x80000000u;
}
inline void PBPlayerBase::clear_has_mountid() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void PBPlayerBase::clear_mountid() {
  mountid_ = 0u;
  clear_has_mountid();
}
inline ::google::protobuf::uint32 PBPlayerBase::mountid() const {
  return mountid_;
}
inline void PBPlayerBase::set_mountid(::google::protobuf::uint32 value) {
  set_has_mountid();
  mountid_ = value;
}

// optional uint32 old_sceneid = 33;
inline bool PBPlayerBase::has_old_sceneid() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void PBPlayerBase::set_has_old_sceneid() {
  _has_bits_[1] |= 0x00000001u;
}
inline void PBPlayerBase::clear_has_old_sceneid() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void PBPlayerBase::clear_old_sceneid() {
  old_sceneid_ = 0u;
  clear_has_old_sceneid();
}
inline ::google::protobuf::uint32 PBPlayerBase::old_sceneid() const {
  return old_sceneid_;
}
inline void PBPlayerBase::set_old_sceneid(::google::protobuf::uint32 value) {
  set_has_old_sceneid();
  old_sceneid_ = value;
}

// optional uint32 old_cellid = 34;
inline bool PBPlayerBase::has_old_cellid() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void PBPlayerBase::set_has_old_cellid() {
  _has_bits_[1] |= 0x00000002u;
}
inline void PBPlayerBase::clear_has_old_cellid() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void PBPlayerBase::clear_old_cellid() {
  old_cellid_ = 0u;
  clear_has_old_cellid();
}
inline ::google::protobuf::uint32 PBPlayerBase::old_cellid() const {
  return old_cellid_;
}
inline void PBPlayerBase::set_old_cellid(::google::protobuf::uint32 value) {
  set_has_old_cellid();
  old_cellid_ = value;
}

// optional uint64 old_scenedynid = 35;
inline bool PBPlayerBase::has_old_scenedynid() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void PBPlayerBase::set_has_old_scenedynid() {
  _has_bits_[1] |= 0x00000004u;
}
inline void PBPlayerBase::clear_has_old_scenedynid() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void PBPlayerBase::clear_old_scenedynid() {
  old_scenedynid_ = GOOGLE_ULONGLONG(0);
  clear_has_old_scenedynid();
}
inline ::google::protobuf::uint64 PBPlayerBase::old_scenedynid() const {
  return old_scenedynid_;
}
inline void PBPlayerBase::set_old_scenedynid(::google::protobuf::uint64 value) {
  set_has_old_scenedynid();
  old_scenedynid_ = value;
}

// optional float old_posx = 36;
inline bool PBPlayerBase::has_old_posx() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void PBPlayerBase::set_has_old_posx() {
  _has_bits_[1] |= 0x00000008u;
}
inline void PBPlayerBase::clear_has_old_posx() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void PBPlayerBase::clear_old_posx() {
  old_posx_ = 0;
  clear_has_old_posx();
}
inline float PBPlayerBase::old_posx() const {
  return old_posx_;
}
inline void PBPlayerBase::set_old_posx(float value) {
  set_has_old_posx();
  old_posx_ = value;
}

// optional float old_posy = 37;
inline bool PBPlayerBase::has_old_posy() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void PBPlayerBase::set_has_old_posy() {
  _has_bits_[1] |= 0x00000010u;
}
inline void PBPlayerBase::clear_has_old_posy() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void PBPlayerBase::clear_old_posy() {
  old_posy_ = 0;
  clear_has_old_posy();
}
inline float PBPlayerBase::old_posy() const {
  return old_posy_;
}
inline void PBPlayerBase::set_old_posy(float value) {
  set_has_old_posy();
  old_posy_ = value;
}

// optional float old_dir = 38;
inline bool PBPlayerBase::has_old_dir() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void PBPlayerBase::set_has_old_dir() {
  _has_bits_[1] |= 0x00000020u;
}
inline void PBPlayerBase::clear_has_old_dir() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void PBPlayerBase::clear_old_dir() {
  old_dir_ = 0;
  clear_has_old_dir();
}
inline float PBPlayerBase::old_dir() const {
  return old_dir_;
}
inline void PBPlayerBase::set_old_dir(float value) {
  set_has_old_dir();
  old_dir_ = value;
}

// optional uint64 suffervalue = 39;
inline bool PBPlayerBase::has_suffervalue() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void PBPlayerBase::set_has_suffervalue() {
  _has_bits_[1] |= 0x00000040u;
}
inline void PBPlayerBase::clear_has_suffervalue() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void PBPlayerBase::clear_suffervalue() {
  suffervalue_ = GOOGLE_ULONGLONG(0);
  clear_has_suffervalue();
}
inline ::google::protobuf::uint64 PBPlayerBase::suffervalue() const {
  return suffervalue_;
}
inline void PBPlayerBase::set_suffervalue(::google::protobuf::uint64 value) {
  set_has_suffervalue();
  suffervalue_ = value;
}

// optional uint64 bingfuexp = 40;
inline bool PBPlayerBase::has_bingfuexp() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void PBPlayerBase::set_has_bingfuexp() {
  _has_bits_[1] |= 0x00000080u;
}
inline void PBPlayerBase::clear_has_bingfuexp() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void PBPlayerBase::clear_bingfuexp() {
  bingfuexp_ = GOOGLE_ULONGLONG(0);
  clear_has_bingfuexp();
}
inline ::google::protobuf::uint64 PBPlayerBase::bingfuexp() const {
  return bingfuexp_;
}
inline void PBPlayerBase::set_bingfuexp(::google::protobuf::uint64 value) {
  set_has_bingfuexp();
  bingfuexp_ = value;
}

// repeated .PBCopymapDayCount copymapcount = 41;
inline int PBPlayerBase::copymapcount_size() const {
  return copymapcount_.size();
}
inline void PBPlayerBase::clear_copymapcount() {
  copymapcount_.Clear();
}
inline const ::PBCopymapDayCount& PBPlayerBase::copymapcount(int index) const {
  return copymapcount_.Get(index);
}
inline ::PBCopymapDayCount* PBPlayerBase::mutable_copymapcount(int index) {
  return copymapcount_.Mutable(index);
}
inline ::PBCopymapDayCount* PBPlayerBase::add_copymapcount() {
  return copymapcount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCopymapDayCount >&
PBPlayerBase::copymapcount() const {
  return copymapcount_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCopymapDayCount >*
PBPlayerBase::mutable_copymapcount() {
  return &copymapcount_;
}

// optional .PBPlayerFashionData fashiondata = 42;
inline bool PBPlayerBase::has_fashiondata() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void PBPlayerBase::set_has_fashiondata() {
  _has_bits_[1] |= 0x00000200u;
}
inline void PBPlayerBase::clear_has_fashiondata() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void PBPlayerBase::clear_fashiondata() {
  if (fashiondata_ != NULL) fashiondata_->::PBPlayerFashionData::Clear();
  clear_has_fashiondata();
}
inline const ::PBPlayerFashionData& PBPlayerBase::fashiondata() const {
  return fashiondata_ != NULL ? *fashiondata_ : *default_instance_->fashiondata_;
}
inline ::PBPlayerFashionData* PBPlayerBase::mutable_fashiondata() {
  set_has_fashiondata();
  if (fashiondata_ == NULL) fashiondata_ = new ::PBPlayerFashionData;
  return fashiondata_;
}
inline ::PBPlayerFashionData* PBPlayerBase::release_fashiondata() {
  clear_has_fashiondata();
  ::PBPlayerFashionData* temp = fashiondata_;
  fashiondata_ = NULL;
  return temp;
}

// repeated .PBTeamTaskDayCount teamtaskcount = 44;
inline int PBPlayerBase::teamtaskcount_size() const {
  return teamtaskcount_.size();
}
inline void PBPlayerBase::clear_teamtaskcount() {
  teamtaskcount_.Clear();
}
inline const ::PBTeamTaskDayCount& PBPlayerBase::teamtaskcount(int index) const {
  return teamtaskcount_.Get(index);
}
inline ::PBTeamTaskDayCount* PBPlayerBase::mutable_teamtaskcount(int index) {
  return teamtaskcount_.Mutable(index);
}
inline ::PBTeamTaskDayCount* PBPlayerBase::add_teamtaskcount() {
  return teamtaskcount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTeamTaskDayCount >&
PBPlayerBase::teamtaskcount() const {
  return teamtaskcount_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTeamTaskDayCount >*
PBPlayerBase::mutable_teamtaskcount() {
  return &teamtaskcount_;
}

// optional uint32 maxfightpower = 45;
inline bool PBPlayerBase::has_maxfightpower() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void PBPlayerBase::set_has_maxfightpower() {
  _has_bits_[1] |= 0x00000800u;
}
inline void PBPlayerBase::clear_has_maxfightpower() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void PBPlayerBase::clear_maxfightpower() {
  maxfightpower_ = 0u;
  clear_has_maxfightpower();
}
inline ::google::protobuf::uint32 PBPlayerBase::maxfightpower() const {
  return maxfightpower_;
}
inline void PBPlayerBase::set_maxfightpower(::google::protobuf::uint32 value) {
  set_has_maxfightpower();
  maxfightpower_ = value;
}

// optional uint32 corpsjob = 46;
inline bool PBPlayerBase::has_corpsjob() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void PBPlayerBase::set_has_corpsjob() {
  _has_bits_[1] |= 0x00001000u;
}
inline void PBPlayerBase::clear_has_corpsjob() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void PBPlayerBase::clear_corpsjob() {
  corpsjob_ = 0u;
  clear_has_corpsjob();
}
inline ::google::protobuf::uint32 PBPlayerBase::corpsjob() const {
  return corpsjob_;
}
inline void PBPlayerBase::set_corpsjob(::google::protobuf::uint32 value) {
  set_has_corpsjob();
  corpsjob_ = value;
}

// repeated .PBForbidSpeak forbidspeak = 47;
inline int PBPlayerBase::forbidspeak_size() const {
  return forbidspeak_.size();
}
inline void PBPlayerBase::clear_forbidspeak() {
  forbidspeak_.Clear();
}
inline const ::PBForbidSpeak& PBPlayerBase::forbidspeak(int index) const {
  return forbidspeak_.Get(index);
}
inline ::PBForbidSpeak* PBPlayerBase::mutable_forbidspeak(int index) {
  return forbidspeak_.Mutable(index);
}
inline ::PBForbidSpeak* PBPlayerBase::add_forbidspeak() {
  return forbidspeak_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBForbidSpeak >&
PBPlayerBase::forbidspeak() const {
  return forbidspeak_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBForbidSpeak >*
PBPlayerBase::mutable_forbidspeak() {
  return &forbidspeak_;
}

// optional uint32 dailycleantime = 48;
inline bool PBPlayerBase::has_dailycleantime() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void PBPlayerBase::set_has_dailycleantime() {
  _has_bits_[1] |= 0x00004000u;
}
inline void PBPlayerBase::clear_has_dailycleantime() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void PBPlayerBase::clear_dailycleantime() {
  dailycleantime_ = 0u;
  clear_has_dailycleantime();
}
inline ::google::protobuf::uint32 PBPlayerBase::dailycleantime() const {
  return dailycleantime_;
}
inline void PBPlayerBase::set_dailycleantime(::google::protobuf::uint32 value) {
  set_has_dailycleantime();
  dailycleantime_ = value;
}

// optional uint32 weeklycleantime = 49;
inline bool PBPlayerBase::has_weeklycleantime() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void PBPlayerBase::set_has_weeklycleantime() {
  _has_bits_[1] |= 0x00008000u;
}
inline void PBPlayerBase::clear_has_weeklycleantime() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void PBPlayerBase::clear_weeklycleantime() {
  weeklycleantime_ = 0u;
  clear_has_weeklycleantime();
}
inline ::google::protobuf::uint32 PBPlayerBase::weeklycleantime() const {
  return weeklycleantime_;
}
inline void PBPlayerBase::set_weeklycleantime(::google::protobuf::uint32 value) {
  set_has_weeklycleantime();
  weeklycleantime_ = value;
}

// optional uint32 monthlycleantime = 50;
inline bool PBPlayerBase::has_monthlycleantime() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void PBPlayerBase::set_has_monthlycleantime() {
  _has_bits_[1] |= 0x00010000u;
}
inline void PBPlayerBase::clear_has_monthlycleantime() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void PBPlayerBase::clear_monthlycleantime() {
  monthlycleantime_ = 0u;
  clear_has_monthlycleantime();
}
inline ::google::protobuf::uint32 PBPlayerBase::monthlycleantime() const {
  return monthlycleantime_;
}
inline void PBPlayerBase::set_monthlycleantime(::google::protobuf::uint32 value) {
  set_has_monthlycleantime();
  monthlycleantime_ = value;
}

// -------------------------------------------------------------------

// PBCoolingInfo

// optional uint32 type = 1;
inline bool PBCoolingInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCoolingInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCoolingInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCoolingInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBCoolingInfo::type() const {
  return type_;
}
inline void PBCoolingInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 id = 2;
inline bool PBCoolingInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCoolingInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCoolingInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCoolingInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBCoolingInfo::id() const {
  return id_;
}
inline void PBCoolingInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint64 begin = 3;
inline bool PBCoolingInfo::has_begin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBCoolingInfo::set_has_begin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBCoolingInfo::clear_has_begin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBCoolingInfo::clear_begin() {
  begin_ = GOOGLE_ULONGLONG(0);
  clear_has_begin();
}
inline ::google::protobuf::uint64 PBCoolingInfo::begin() const {
  return begin_;
}
inline void PBCoolingInfo::set_begin(::google::protobuf::uint64 value) {
  set_has_begin();
  begin_ = value;
}

// optional uint64 end = 4;
inline bool PBCoolingInfo::has_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBCoolingInfo::set_has_end() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBCoolingInfo::clear_has_end() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBCoolingInfo::clear_end() {
  end_ = GOOGLE_ULONGLONG(0);
  clear_has_end();
}
inline ::google::protobuf::uint64 PBCoolingInfo::end() const {
  return end_;
}
inline void PBCoolingInfo::set_end(::google::protobuf::uint64 value) {
  set_has_end();
  end_ = value;
}

// optional uint32 time = 5;
inline bool PBCoolingInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBCoolingInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBCoolingInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBCoolingInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBCoolingInfo::time() const {
  return time_;
}
inline void PBCoolingInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBCooling

// repeated .PBCoolingInfo cooling = 1;
inline int PBCooling::cooling_size() const {
  return cooling_.size();
}
inline void PBCooling::clear_cooling() {
  cooling_.Clear();
}
inline const ::PBCoolingInfo& PBCooling::cooling(int index) const {
  return cooling_.Get(index);
}
inline ::PBCoolingInfo* PBCooling::mutable_cooling(int index) {
  return cooling_.Mutable(index);
}
inline ::PBCoolingInfo* PBCooling::add_cooling() {
  return cooling_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCoolingInfo >&
PBCooling::cooling() const {
  return cooling_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCoolingInfo >*
PBCooling::mutable_cooling() {
  return &cooling_;
}

// -------------------------------------------------------------------

// PBSystemSkill

// repeated .PBSkill pbskill = 1;
inline int PBSystemSkill::pbskill_size() const {
  return pbskill_.size();
}
inline void PBSystemSkill::clear_pbskill() {
  pbskill_.Clear();
}
inline const ::PBSkill& PBSystemSkill::pbskill(int index) const {
  return pbskill_.Get(index);
}
inline ::PBSkill* PBSystemSkill::mutable_pbskill(int index) {
  return pbskill_.Mutable(index);
}
inline ::PBSkill* PBSystemSkill::add_pbskill() {
  return pbskill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSkill >&
PBSystemSkill::pbskill() const {
  return pbskill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSkill >*
PBSystemSkill::mutable_pbskill() {
  return &pbskill_;
}

// -------------------------------------------------------------------

// PBSystemBuff

// repeated .PBBuff pbbuff = 1;
inline int PBSystemBuff::pbbuff_size() const {
  return pbbuff_.size();
}
inline void PBSystemBuff::clear_pbbuff() {
  pbbuff_.Clear();
}
inline const ::PBBuff& PBSystemBuff::pbbuff(int index) const {
  return pbbuff_.Get(index);
}
inline ::PBBuff* PBSystemBuff::mutable_pbbuff(int index) {
  return pbbuff_.Mutable(index);
}
inline ::PBBuff* PBSystemBuff::add_pbbuff() {
  return pbbuff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBuff >&
PBSystemBuff::pbbuff() const {
  return pbbuff_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBuff >*
PBSystemBuff::mutable_pbbuff() {
  return &pbbuff_;
}

// -------------------------------------------------------------------

// PBSystemCounter

// repeated .PBCounter pbcounter = 1;
inline int PBSystemCounter::pbcounter_size() const {
  return pbcounter_.size();
}
inline void PBSystemCounter::clear_pbcounter() {
  pbcounter_.Clear();
}
inline const ::PBCounter& PBSystemCounter::pbcounter(int index) const {
  return pbcounter_.Get(index);
}
inline ::PBCounter* PBSystemCounter::mutable_pbcounter(int index) {
  return pbcounter_.Mutable(index);
}
inline ::PBCounter* PBSystemCounter::add_pbcounter() {
  return pbcounter_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCounter >&
PBSystemCounter::pbcounter() const {
  return pbcounter_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCounter >*
PBSystemCounter::mutable_pbcounter() {
  return &pbcounter_;
}

// -------------------------------------------------------------------

// PBSystemSwitch

// repeated uint32 id = 1;
inline int PBSystemSwitch::id_size() const {
  return id_.size();
}
inline void PBSystemSwitch::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 PBSystemSwitch::id(int index) const {
  return id_.Get(index);
}
inline void PBSystemSwitch::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
}
inline void PBSystemSwitch::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBSystemSwitch::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBSystemSwitch::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// PBPlayerColletion

// repeated .PBColletionData pbcolletion = 1;
inline int PBPlayerColletion::pbcolletion_size() const {
  return pbcolletion_.size();
}
inline void PBPlayerColletion::clear_pbcolletion() {
  pbcolletion_.Clear();
}
inline const ::PBColletionData& PBPlayerColletion::pbcolletion(int index) const {
  return pbcolletion_.Get(index);
}
inline ::PBColletionData* PBPlayerColletion::mutable_pbcolletion(int index) {
  return pbcolletion_.Mutable(index);
}
inline ::PBColletionData* PBPlayerColletion::add_pbcolletion() {
  return pbcolletion_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBColletionData >&
PBPlayerColletion::pbcolletion() const {
  return pbcolletion_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBColletionData >*
PBPlayerColletion::mutable_pbcolletion() {
  return &pbcolletion_;
}

// -------------------------------------------------------------------

// PBPrize

// optional uint64 instancesn = 1;
inline bool PBPrize::has_instancesn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPrize::set_has_instancesn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPrize::clear_has_instancesn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPrize::clear_instancesn() {
  instancesn_ = GOOGLE_ULONGLONG(0);
  clear_has_instancesn();
}
inline ::google::protobuf::uint64 PBPrize::instancesn() const {
  return instancesn_;
}
inline void PBPrize::set_instancesn(::google::protobuf::uint64 value) {
  set_has_instancesn();
  instancesn_ = value;
}

// optional uint32 prizeid = 2;
inline bool PBPrize::has_prizeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPrize::set_has_prizeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPrize::clear_has_prizeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPrize::clear_prizeid() {
  prizeid_ = 0u;
  clear_has_prizeid();
}
inline ::google::protobuf::uint32 PBPrize::prizeid() const {
  return prizeid_;
}
inline void PBPrize::set_prizeid(::google::protobuf::uint32 value) {
  set_has_prizeid();
  prizeid_ = value;
}

// optional uint32 level = 3;
inline bool PBPrize::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPrize::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPrize::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPrize::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBPrize::level() const {
  return level_;
}
inline void PBPrize::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 time = 4;
inline bool PBPrize::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPrize::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPrize::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPrize::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBPrize::time() const {
  return time_;
}
inline void PBPrize::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBPlayerPrize

// optional uint64 cursn = 1;
inline bool PBPlayerPrize::has_cursn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerPrize::set_has_cursn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerPrize::clear_has_cursn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerPrize::clear_cursn() {
  cursn_ = GOOGLE_ULONGLONG(0);
  clear_has_cursn();
}
inline ::google::protobuf::uint64 PBPlayerPrize::cursn() const {
  return cursn_;
}
inline void PBPlayerPrize::set_cursn(::google::protobuf::uint64 value) {
  set_has_cursn();
  cursn_ = value;
}

// repeated .PBPrize pbprize = 2;
inline int PBPlayerPrize::pbprize_size() const {
  return pbprize_.size();
}
inline void PBPlayerPrize::clear_pbprize() {
  pbprize_.Clear();
}
inline const ::PBPrize& PBPlayerPrize::pbprize(int index) const {
  return pbprize_.Get(index);
}
inline ::PBPrize* PBPlayerPrize::mutable_pbprize(int index) {
  return pbprize_.Mutable(index);
}
inline ::PBPrize* PBPlayerPrize::add_pbprize() {
  return pbprize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPrize >&
PBPlayerPrize::pbprize() const {
  return pbprize_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPrize >*
PBPlayerPrize::mutable_pbprize() {
  return &pbprize_;
}

// -------------------------------------------------------------------

// PBPlayerTrade

// optional uint64 can_get_sliver = 1;
inline bool PBPlayerTrade::has_can_get_sliver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerTrade::set_has_can_get_sliver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerTrade::clear_has_can_get_sliver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerTrade::clear_can_get_sliver() {
  can_get_sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_can_get_sliver();
}
inline ::google::protobuf::uint64 PBPlayerTrade::can_get_sliver() const {
  return can_get_sliver_;
}
inline void PBPlayerTrade::set_can_get_sliver(::google::protobuf::uint64 value) {
  set_has_can_get_sliver();
  can_get_sliver_ = value;
}

// optional uint64 can_give_sliver = 2;
inline bool PBPlayerTrade::has_can_give_sliver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerTrade::set_has_can_give_sliver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerTrade::clear_has_can_give_sliver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerTrade::clear_can_give_sliver() {
  can_give_sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_can_give_sliver();
}
inline ::google::protobuf::uint64 PBPlayerTrade::can_give_sliver() const {
  return can_give_sliver_;
}
inline void PBPlayerTrade::set_can_give_sliver(::google::protobuf::uint64 value) {
  set_has_can_give_sliver();
  can_give_sliver_ = value;
}

// optional uint32 recover_get_time = 3;
inline bool PBPlayerTrade::has_recover_get_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerTrade::set_has_recover_get_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerTrade::clear_has_recover_get_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerTrade::clear_recover_get_time() {
  recover_get_time_ = 0u;
  clear_has_recover_get_time();
}
inline ::google::protobuf::uint32 PBPlayerTrade::recover_get_time() const {
  return recover_get_time_;
}
inline void PBPlayerTrade::set_recover_get_time(::google::protobuf::uint32 value) {
  set_has_recover_get_time();
  recover_get_time_ = value;
}

// optional uint32 recover_give_time = 4;
inline bool PBPlayerTrade::has_recover_give_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerTrade::set_has_recover_give_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerTrade::clear_has_recover_give_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerTrade::clear_recover_give_time() {
  recover_give_time_ = 0u;
  clear_has_recover_give_time();
}
inline ::google::protobuf::uint32 PBPlayerTrade::recover_give_time() const {
  return recover_give_time_;
}
inline void PBPlayerTrade::set_recover_give_time(::google::protobuf::uint32 value) {
  set_has_recover_give_time();
  recover_give_time_ = value;
}

// -------------------------------------------------------------------

// PBQuestItem

// optional uint32 tarid = 1;
inline bool PBQuestItem::has_tarid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBQuestItem::set_has_tarid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBQuestItem::clear_has_tarid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBQuestItem::clear_tarid() {
  tarid_ = 0u;
  clear_has_tarid();
}
inline ::google::protobuf::uint32 PBQuestItem::tarid() const {
  return tarid_;
}
inline void PBQuestItem::set_tarid(::google::protobuf::uint32 value) {
  set_has_tarid();
  tarid_ = value;
}

// optional uint32 curcount = 2;
inline bool PBQuestItem::has_curcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBQuestItem::set_has_curcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBQuestItem::clear_has_curcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBQuestItem::clear_curcount() {
  curcount_ = 0u;
  clear_has_curcount();
}
inline ::google::protobuf::uint32 PBQuestItem::curcount() const {
  return curcount_;
}
inline void PBQuestItem::set_curcount(::google::protobuf::uint32 value) {
  set_has_curcount();
  curcount_ = value;
}

// -------------------------------------------------------------------

// PBQuest

// optional uint32 questid = 1;
inline bool PBQuest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBQuest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBQuest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBQuest::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 PBQuest::questid() const {
  return questid_;
}
inline void PBQuest::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
}

// optional uint32 accepttime = 2;
inline bool PBQuest::has_accepttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBQuest::set_has_accepttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBQuest::clear_has_accepttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBQuest::clear_accepttime() {
  accepttime_ = 0u;
  clear_has_accepttime();
}
inline ::google::protobuf::uint32 PBQuest::accepttime() const {
  return accepttime_;
}
inline void PBQuest::set_accepttime(::google::protobuf::uint32 value) {
  set_has_accepttime();
  accepttime_ = value;
}

// repeated .PBQuestItem item = 3;
inline int PBQuest::item_size() const {
  return item_.size();
}
inline void PBQuest::clear_item() {
  item_.Clear();
}
inline const ::PBQuestItem& PBQuest::item(int index) const {
  return item_.Get(index);
}
inline ::PBQuestItem* PBQuest::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBQuestItem* PBQuest::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBQuestItem >&
PBQuest::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBQuestItem >*
PBQuest::mutable_item() {
  return &item_;
}

// optional uint32 param = 4;
inline bool PBQuest::has_param() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBQuest::set_has_param() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBQuest::clear_has_param() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBQuest::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 PBQuest::param() const {
  return param_;
}
inline void PBQuest::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// PBQuestCompleted

// optional uint32 questid = 1;
inline bool PBQuestCompleted::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBQuestCompleted::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBQuestCompleted::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBQuestCompleted::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 PBQuestCompleted::questid() const {
  return questid_;
}
inline void PBQuestCompleted::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
}

// optional uint32 count = 2;
inline bool PBQuestCompleted::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBQuestCompleted::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBQuestCompleted::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBQuestCompleted::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBQuestCompleted::count() const {
  return count_;
}
inline void PBQuestCompleted::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PBPlayerQuest

// optional uint32 saveorder = 1;
inline bool PBPlayerQuest::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerQuest::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerQuest::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerQuest::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerQuest::saveorder() const {
  return saveorder_;
}
inline void PBPlayerQuest::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// repeated .PBQuest quest = 2;
inline int PBPlayerQuest::quest_size() const {
  return quest_.size();
}
inline void PBPlayerQuest::clear_quest() {
  quest_.Clear();
}
inline const ::PBQuest& PBPlayerQuest::quest(int index) const {
  return quest_.Get(index);
}
inline ::PBQuest* PBPlayerQuest::mutable_quest(int index) {
  return quest_.Mutable(index);
}
inline ::PBQuest* PBPlayerQuest::add_quest() {
  return quest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBQuest >&
PBPlayerQuest::quest() const {
  return quest_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBQuest >*
PBPlayerQuest::mutable_quest() {
  return &quest_;
}

// repeated .PBQuestCompleted completedinfo = 3;
inline int PBPlayerQuest::completedinfo_size() const {
  return completedinfo_.size();
}
inline void PBPlayerQuest::clear_completedinfo() {
  completedinfo_.Clear();
}
inline const ::PBQuestCompleted& PBPlayerQuest::completedinfo(int index) const {
  return completedinfo_.Get(index);
}
inline ::PBQuestCompleted* PBPlayerQuest::mutable_completedinfo(int index) {
  return completedinfo_.Mutable(index);
}
inline ::PBQuestCompleted* PBPlayerQuest::add_completedinfo() {
  return completedinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBQuestCompleted >&
PBPlayerQuest::completedinfo() const {
  return completedinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBQuestCompleted >*
PBPlayerQuest::mutable_completedinfo() {
  return &completedinfo_;
}

// -------------------------------------------------------------------

// PBWenTaoSchemeInfo

// optional uint32 index = 1;
inline bool PBWenTaoSchemeInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWenTaoSchemeInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWenTaoSchemeInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWenTaoSchemeInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 PBWenTaoSchemeInfo::index() const {
  return index_;
}
inline void PBWenTaoSchemeInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional uint32 bingfaid = 2;
inline bool PBWenTaoSchemeInfo::has_bingfaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWenTaoSchemeInfo::set_has_bingfaid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWenTaoSchemeInfo::clear_has_bingfaid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWenTaoSchemeInfo::clear_bingfaid() {
  bingfaid_ = 0u;
  clear_has_bingfaid();
}
inline ::google::protobuf::uint32 PBWenTaoSchemeInfo::bingfaid() const {
  return bingfaid_;
}
inline void PBWenTaoSchemeInfo::set_bingfaid(::google::protobuf::uint32 value) {
  set_has_bingfaid();
  bingfaid_ = value;
}

// -------------------------------------------------------------------

// PBWenTaoScheme

// optional uint32 schemeid = 1;
inline bool PBWenTaoScheme::has_schemeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWenTaoScheme::set_has_schemeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWenTaoScheme::clear_has_schemeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWenTaoScheme::clear_schemeid() {
  schemeid_ = 0u;
  clear_has_schemeid();
}
inline ::google::protobuf::uint32 PBWenTaoScheme::schemeid() const {
  return schemeid_;
}
inline void PBWenTaoScheme::set_schemeid(::google::protobuf::uint32 value) {
  set_has_schemeid();
  schemeid_ = value;
}

// repeated .PBWenTaoSchemeInfo info = 2;
inline int PBWenTaoScheme::info_size() const {
  return info_.size();
}
inline void PBWenTaoScheme::clear_info() {
  info_.Clear();
}
inline const ::PBWenTaoSchemeInfo& PBWenTaoScheme::info(int index) const {
  return info_.Get(index);
}
inline ::PBWenTaoSchemeInfo* PBWenTaoScheme::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PBWenTaoSchemeInfo* PBWenTaoScheme::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWenTaoSchemeInfo >&
PBWenTaoScheme::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWenTaoSchemeInfo >*
PBWenTaoScheme::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// PBBingFa

// optional uint32 bingfaid = 1;
inline bool PBBingFa::has_bingfaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBBingFa::set_has_bingfaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBBingFa::clear_has_bingfaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBBingFa::clear_bingfaid() {
  bingfaid_ = 0u;
  clear_has_bingfaid();
}
inline ::google::protobuf::uint32 PBBingFa::bingfaid() const {
  return bingfaid_;
}
inline void PBBingFa::set_bingfaid(::google::protobuf::uint32 value) {
  set_has_bingfaid();
  bingfaid_ = value;
}

// optional uint32 qianxiulevel = 2;
inline bool PBBingFa::has_qianxiulevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBBingFa::set_has_qianxiulevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBBingFa::clear_has_qianxiulevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBBingFa::clear_qianxiulevel() {
  qianxiulevel_ = 0u;
  clear_has_qianxiulevel();
}
inline ::google::protobuf::uint32 PBBingFa::qianxiulevel() const {
  return qianxiulevel_;
}
inline void PBBingFa::set_qianxiulevel(::google::protobuf::uint32 value) {
  set_has_qianxiulevel();
  qianxiulevel_ = value;
}

// optional uint32 tupolevel = 3;
inline bool PBBingFa::has_tupolevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBBingFa::set_has_tupolevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBBingFa::clear_has_tupolevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBBingFa::clear_tupolevel() {
  tupolevel_ = 0u;
  clear_has_tupolevel();
}
inline ::google::protobuf::uint32 PBBingFa::tupolevel() const {
  return tupolevel_;
}
inline void PBBingFa::set_tupolevel(::google::protobuf::uint32 value) {
  set_has_tupolevel();
  tupolevel_ = value;
}

// optional uint32 yaodianid = 4;
inline bool PBBingFa::has_yaodianid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBBingFa::set_has_yaodianid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBBingFa::clear_has_yaodianid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBBingFa::clear_yaodianid() {
  yaodianid_ = 0u;
  clear_has_yaodianid();
}
inline ::google::protobuf::uint32 PBBingFa::yaodianid() const {
  return yaodianid_;
}
inline void PBBingFa::set_yaodianid(::google::protobuf::uint32 value) {
  set_has_yaodianid();
  yaodianid_ = value;
}

// optional uint32 yaodianlevel = 5;
inline bool PBBingFa::has_yaodianlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBBingFa::set_has_yaodianlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBBingFa::clear_has_yaodianlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBBingFa::clear_yaodianlevel() {
  yaodianlevel_ = 0u;
  clear_has_yaodianlevel();
}
inline ::google::protobuf::uint32 PBBingFa::yaodianlevel() const {
  return yaodianlevel_;
}
inline void PBBingFa::set_yaodianlevel(::google::protobuf::uint32 value) {
  set_has_yaodianlevel();
  yaodianlevel_ = value;
}

// -------------------------------------------------------------------

// PBPlayerWenTao

// optional uint32 curschemeID = 1;
inline bool PBPlayerWenTao::has_curschemeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerWenTao::set_has_curschemeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerWenTao::clear_has_curschemeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerWenTao::clear_curschemeid() {
  curschemeid_ = 0u;
  clear_has_curschemeid();
}
inline ::google::protobuf::uint32 PBPlayerWenTao::curschemeid() const {
  return curschemeid_;
}
inline void PBPlayerWenTao::set_curschemeid(::google::protobuf::uint32 value) {
  set_has_curschemeid();
  curschemeid_ = value;
}

// repeated .PBBingFa bingfa = 2;
inline int PBPlayerWenTao::bingfa_size() const {
  return bingfa_.size();
}
inline void PBPlayerWenTao::clear_bingfa() {
  bingfa_.Clear();
}
inline const ::PBBingFa& PBPlayerWenTao::bingfa(int index) const {
  return bingfa_.Get(index);
}
inline ::PBBingFa* PBPlayerWenTao::mutable_bingfa(int index) {
  return bingfa_.Mutable(index);
}
inline ::PBBingFa* PBPlayerWenTao::add_bingfa() {
  return bingfa_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBingFa >&
PBPlayerWenTao::bingfa() const {
  return bingfa_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBingFa >*
PBPlayerWenTao::mutable_bingfa() {
  return &bingfa_;
}

// repeated .PBWenTaoScheme scheme = 3;
inline int PBPlayerWenTao::scheme_size() const {
  return scheme_.size();
}
inline void PBPlayerWenTao::clear_scheme() {
  scheme_.Clear();
}
inline const ::PBWenTaoScheme& PBPlayerWenTao::scheme(int index) const {
  return scheme_.Get(index);
}
inline ::PBWenTaoScheme* PBPlayerWenTao::mutable_scheme(int index) {
  return scheme_.Mutable(index);
}
inline ::PBWenTaoScheme* PBPlayerWenTao::add_scheme() {
  return scheme_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWenTaoScheme >&
PBPlayerWenTao::scheme() const {
  return scheme_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWenTaoScheme >*
PBPlayerWenTao::mutable_scheme() {
  return &scheme_;
}

// -------------------------------------------------------------------

// PBWulueZhanlue

// optional uint32 id = 1;
inline bool PBWulueZhanlue::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWulueZhanlue::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWulueZhanlue::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWulueZhanlue::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBWulueZhanlue::id() const {
  return id_;
}
inline void PBWulueZhanlue::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 type = 2;
inline bool PBWulueZhanlue::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWulueZhanlue::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWulueZhanlue::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWulueZhanlue::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBWulueZhanlue::type() const {
  return type_;
}
inline void PBWulueZhanlue::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 level = 3;
inline bool PBWulueZhanlue::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBWulueZhanlue::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBWulueZhanlue::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBWulueZhanlue::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBWulueZhanlue::level() const {
  return level_;
}
inline void PBWulueZhanlue::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PBWulueScheme

// optional uint32 schemeid = 1;
inline bool PBWulueScheme::has_schemeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWulueScheme::set_has_schemeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWulueScheme::clear_has_schemeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWulueScheme::clear_schemeid() {
  schemeid_ = 0u;
  clear_has_schemeid();
}
inline ::google::protobuf::uint32 PBWulueScheme::schemeid() const {
  return schemeid_;
}
inline void PBWulueScheme::set_schemeid(::google::protobuf::uint32 value) {
  set_has_schemeid();
  schemeid_ = value;
}

// optional uint32 id = 2;
inline bool PBWulueScheme::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWulueScheme::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWulueScheme::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWulueScheme::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBWulueScheme::id() const {
  return id_;
}
inline void PBWulueScheme::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 type = 3;
inline bool PBWulueScheme::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBWulueScheme::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBWulueScheme::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBWulueScheme::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBWulueScheme::type() const {
  return type_;
}
inline void PBWulueScheme::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 bingfusn = 4;
inline bool PBWulueScheme::has_bingfusn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBWulueScheme::set_has_bingfusn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBWulueScheme::clear_has_bingfusn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBWulueScheme::clear_bingfusn() {
  bingfusn_ = GOOGLE_ULONGLONG(0);
  clear_has_bingfusn();
}
inline ::google::protobuf::uint64 PBWulueScheme::bingfusn() const {
  return bingfusn_;
}
inline void PBWulueScheme::set_bingfusn(::google::protobuf::uint64 value) {
  set_has_bingfusn();
  bingfusn_ = value;
}

// -------------------------------------------------------------------

// PBPlayerWulue

// optional uint32 curschemeID = 1;
inline bool PBPlayerWulue::has_curschemeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerWulue::set_has_curschemeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerWulue::clear_has_curschemeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerWulue::clear_curschemeid() {
  curschemeid_ = 0u;
  clear_has_curschemeid();
}
inline ::google::protobuf::uint32 PBPlayerWulue::curschemeid() const {
  return curschemeid_;
}
inline void PBPlayerWulue::set_curschemeid(::google::protobuf::uint32 value) {
  set_has_curschemeid();
  curschemeid_ = value;
}

// optional uint32 curwuluetype = 2;
inline bool PBPlayerWulue::has_curwuluetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerWulue::set_has_curwuluetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerWulue::clear_has_curwuluetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerWulue::clear_curwuluetype() {
  curwuluetype_ = 0u;
  clear_has_curwuluetype();
}
inline ::google::protobuf::uint32 PBPlayerWulue::curwuluetype() const {
  return curwuluetype_;
}
inline void PBPlayerWulue::set_curwuluetype(::google::protobuf::uint32 value) {
  set_has_curwuluetype();
  curwuluetype_ = value;
}

// repeated .PBWulueZhanlue zhanlueinfo = 3;
inline int PBPlayerWulue::zhanlueinfo_size() const {
  return zhanlueinfo_.size();
}
inline void PBPlayerWulue::clear_zhanlueinfo() {
  zhanlueinfo_.Clear();
}
inline const ::PBWulueZhanlue& PBPlayerWulue::zhanlueinfo(int index) const {
  return zhanlueinfo_.Get(index);
}
inline ::PBWulueZhanlue* PBPlayerWulue::mutable_zhanlueinfo(int index) {
  return zhanlueinfo_.Mutable(index);
}
inline ::PBWulueZhanlue* PBPlayerWulue::add_zhanlueinfo() {
  return zhanlueinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWulueZhanlue >&
PBPlayerWulue::zhanlueinfo() const {
  return zhanlueinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWulueZhanlue >*
PBPlayerWulue::mutable_zhanlueinfo() {
  return &zhanlueinfo_;
}

// repeated .PBWulueScheme wuluescheme = 4;
inline int PBPlayerWulue::wuluescheme_size() const {
  return wuluescheme_.size();
}
inline void PBPlayerWulue::clear_wuluescheme() {
  wuluescheme_.Clear();
}
inline const ::PBWulueScheme& PBPlayerWulue::wuluescheme(int index) const {
  return wuluescheme_.Get(index);
}
inline ::PBWulueScheme* PBPlayerWulue::mutable_wuluescheme(int index) {
  return wuluescheme_.Mutable(index);
}
inline ::PBWulueScheme* PBPlayerWulue::add_wuluescheme() {
  return wuluescheme_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWulueScheme >&
PBPlayerWulue::wuluescheme() const {
  return wuluescheme_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWulueScheme >*
PBPlayerWulue::mutable_wuluescheme() {
  return &wuluescheme_;
}

// -------------------------------------------------------------------

// PBCopymapInfo

// optional uint32 copymapid = 1;
inline bool PBCopymapInfo::has_copymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCopymapInfo::set_has_copymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCopymapInfo::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCopymapInfo::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBCopymapInfo::copymapid() const {
  return copymapid_;
}
inline void PBCopymapInfo::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 entercount = 2;
inline bool PBCopymapInfo::has_entercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCopymapInfo::set_has_entercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCopymapInfo::clear_has_entercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCopymapInfo::clear_entercount() {
  entercount_ = 0u;
  clear_has_entercount();
}
inline ::google::protobuf::uint32 PBCopymapInfo::entercount() const {
  return entercount_;
}
inline void PBCopymapInfo::set_entercount(::google::protobuf::uint32 value) {
  set_has_entercount();
  entercount_ = value;
}

// -------------------------------------------------------------------

// PBPlayerCopymap

// optional uint32 assistcount = 1;
inline bool PBPlayerCopymap::has_assistcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerCopymap::set_has_assistcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerCopymap::clear_has_assistcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerCopymap::clear_assistcount() {
  assistcount_ = 0u;
  clear_has_assistcount();
}
inline ::google::protobuf::uint32 PBPlayerCopymap::assistcount() const {
  return assistcount_;
}
inline void PBPlayerCopymap::set_assistcount(::google::protobuf::uint32 value) {
  set_has_assistcount();
  assistcount_ = value;
}

// repeated .PBCopymapInfo info = 2;
inline int PBPlayerCopymap::info_size() const {
  return info_.size();
}
inline void PBPlayerCopymap::clear_info() {
  info_.Clear();
}
inline const ::PBCopymapInfo& PBPlayerCopymap::info(int index) const {
  return info_.Get(index);
}
inline ::PBCopymapInfo* PBPlayerCopymap::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PBCopymapInfo* PBPlayerCopymap::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCopymapInfo >&
PBPlayerCopymap::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCopymapInfo >*
PBPlayerCopymap::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// PBIdentitySetInfo

// optional uint32 setid = 1;
inline bool PBIdentitySetInfo::has_setid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBIdentitySetInfo::set_has_setid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBIdentitySetInfo::clear_has_setid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBIdentitySetInfo::clear_setid() {
  setid_ = 0u;
  clear_has_setid();
}
inline ::google::protobuf::uint32 PBIdentitySetInfo::setid() const {
  return setid_;
}
inline void PBIdentitySetInfo::set_setid(::google::protobuf::uint32 value) {
  set_has_setid();
  setid_ = value;
}

// optional uint32 identityid = 2;
inline bool PBIdentitySetInfo::has_identityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBIdentitySetInfo::set_has_identityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBIdentitySetInfo::clear_has_identityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBIdentitySetInfo::clear_identityid() {
  identityid_ = 0u;
  clear_has_identityid();
}
inline ::google::protobuf::uint32 PBIdentitySetInfo::identityid() const {
  return identityid_;
}
inline void PBIdentitySetInfo::set_identityid(::google::protobuf::uint32 value) {
  set_has_identityid();
  identityid_ = value;
}

// -------------------------------------------------------------------

// PBIdentitySkillInfo

// optional uint32 skillid = 1;
inline bool PBIdentitySkillInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBIdentitySkillInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBIdentitySkillInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBIdentitySkillInfo::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBIdentitySkillInfo::skillid() const {
  return skillid_;
}
inline void PBIdentitySkillInfo::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 skilllevel = 2;
inline bool PBIdentitySkillInfo::has_skilllevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBIdentitySkillInfo::set_has_skilllevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBIdentitySkillInfo::clear_has_skilllevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBIdentitySkillInfo::clear_skilllevel() {
  skilllevel_ = 0u;
  clear_has_skilllevel();
}
inline ::google::protobuf::uint32 PBIdentitySkillInfo::skilllevel() const {
  return skilllevel_;
}
inline void PBIdentitySkillInfo::set_skilllevel(::google::protobuf::uint32 value) {
  set_has_skilllevel();
  skilllevel_ = value;
}

// -------------------------------------------------------------------

// PBPlayerIdentity

// optional uint32 resetcount = 1;
inline bool PBPlayerIdentity::has_resetcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerIdentity::set_has_resetcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerIdentity::clear_has_resetcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerIdentity::clear_resetcount() {
  resetcount_ = 0u;
  clear_has_resetcount();
}
inline ::google::protobuf::uint32 PBPlayerIdentity::resetcount() const {
  return resetcount_;
}
inline void PBPlayerIdentity::set_resetcount(::google::protobuf::uint32 value) {
  set_has_resetcount();
  resetcount_ = value;
}

// optional uint32 resettime = 2;
inline bool PBPlayerIdentity::has_resettime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerIdentity::set_has_resettime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerIdentity::clear_has_resettime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerIdentity::clear_resettime() {
  resettime_ = 0u;
  clear_has_resettime();
}
inline ::google::protobuf::uint32 PBPlayerIdentity::resettime() const {
  return resettime_;
}
inline void PBPlayerIdentity::set_resettime(::google::protobuf::uint32 value) {
  set_has_resettime();
  resettime_ = value;
}

// repeated .PBIdentitySetInfo setinfo = 3;
inline int PBPlayerIdentity::setinfo_size() const {
  return setinfo_.size();
}
inline void PBPlayerIdentity::clear_setinfo() {
  setinfo_.Clear();
}
inline const ::PBIdentitySetInfo& PBPlayerIdentity::setinfo(int index) const {
  return setinfo_.Get(index);
}
inline ::PBIdentitySetInfo* PBPlayerIdentity::mutable_setinfo(int index) {
  return setinfo_.Mutable(index);
}
inline ::PBIdentitySetInfo* PBPlayerIdentity::add_setinfo() {
  return setinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIdentitySetInfo >&
PBPlayerIdentity::setinfo() const {
  return setinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIdentitySetInfo >*
PBPlayerIdentity::mutable_setinfo() {
  return &setinfo_;
}

// repeated .PBIdentitySkillInfo skillinfo = 4;
inline int PBPlayerIdentity::skillinfo_size() const {
  return skillinfo_.size();
}
inline void PBPlayerIdentity::clear_skillinfo() {
  skillinfo_.Clear();
}
inline const ::PBIdentitySkillInfo& PBPlayerIdentity::skillinfo(int index) const {
  return skillinfo_.Get(index);
}
inline ::PBIdentitySkillInfo* PBPlayerIdentity::mutable_skillinfo(int index) {
  return skillinfo_.Mutable(index);
}
inline ::PBIdentitySkillInfo* PBPlayerIdentity::add_skillinfo() {
  return skillinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIdentitySkillInfo >&
PBPlayerIdentity::skillinfo() const {
  return skillinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIdentitySkillInfo >*
PBPlayerIdentity::mutable_skillinfo() {
  return &skillinfo_;
}

// -------------------------------------------------------------------

// PBPlayerWuxuePageInfo

// optional uint32 pageid = 1;
inline bool PBPlayerWuxuePageInfo::has_pageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerWuxuePageInfo::set_has_pageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerWuxuePageInfo::clear_has_pageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerWuxuePageInfo::clear_pageid() {
  pageid_ = 0u;
  clear_has_pageid();
}
inline ::google::protobuf::uint32 PBPlayerWuxuePageInfo::pageid() const {
  return pageid_;
}
inline void PBPlayerWuxuePageInfo::set_pageid(::google::protobuf::uint32 value) {
  set_has_pageid();
  pageid_ = value;
}

// repeated uint32 skillid = 2;
inline int PBPlayerWuxuePageInfo::skillid_size() const {
  return skillid_.size();
}
inline void PBPlayerWuxuePageInfo::clear_skillid() {
  skillid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerWuxuePageInfo::skillid(int index) const {
  return skillid_.Get(index);
}
inline void PBPlayerWuxuePageInfo::set_skillid(int index, ::google::protobuf::uint32 value) {
  skillid_.Set(index, value);
}
inline void PBPlayerWuxuePageInfo::add_skillid(::google::protobuf::uint32 value) {
  skillid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerWuxuePageInfo::skillid() const {
  return skillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerWuxuePageInfo::mutable_skillid() {
  return &skillid_;
}

// -------------------------------------------------------------------

// PBPlayerWuxueSchemeInfo

// optional uint32 nameid = 1;
inline bool PBPlayerWuxueSchemeInfo::has_nameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerWuxueSchemeInfo::set_has_nameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerWuxueSchemeInfo::clear_has_nameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerWuxueSchemeInfo::clear_nameid() {
  nameid_ = 0u;
  clear_has_nameid();
}
inline ::google::protobuf::uint32 PBPlayerWuxueSchemeInfo::nameid() const {
  return nameid_;
}
inline void PBPlayerWuxueSchemeInfo::set_nameid(::google::protobuf::uint32 value) {
  set_has_nameid();
  nameid_ = value;
}

// repeated .PBPlayerWuxuePageInfo allskillid = 2;
inline int PBPlayerWuxueSchemeInfo::allskillid_size() const {
  return allskillid_.size();
}
inline void PBPlayerWuxueSchemeInfo::clear_allskillid() {
  allskillid_.Clear();
}
inline const ::PBPlayerWuxuePageInfo& PBPlayerWuxueSchemeInfo::allskillid(int index) const {
  return allskillid_.Get(index);
}
inline ::PBPlayerWuxuePageInfo* PBPlayerWuxueSchemeInfo::mutable_allskillid(int index) {
  return allskillid_.Mutable(index);
}
inline ::PBPlayerWuxuePageInfo* PBPlayerWuxueSchemeInfo::add_allskillid() {
  return allskillid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxuePageInfo >&
PBPlayerWuxueSchemeInfo::allskillid() const {
  return allskillid_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxuePageInfo >*
PBPlayerWuxueSchemeInfo::mutable_allskillid() {
  return &allskillid_;
}

// repeated uint32 useskillid = 3;
inline int PBPlayerWuxueSchemeInfo::useskillid_size() const {
  return useskillid_.size();
}
inline void PBPlayerWuxueSchemeInfo::clear_useskillid() {
  useskillid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerWuxueSchemeInfo::useskillid(int index) const {
  return useskillid_.Get(index);
}
inline void PBPlayerWuxueSchemeInfo::set_useskillid(int index, ::google::protobuf::uint32 value) {
  useskillid_.Set(index, value);
}
inline void PBPlayerWuxueSchemeInfo::add_useskillid(::google::protobuf::uint32 value) {
  useskillid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerWuxueSchemeInfo::useskillid() const {
  return useskillid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerWuxueSchemeInfo::mutable_useskillid() {
  return &useskillid_;
}

// -------------------------------------------------------------------

// PBPlayerWuxue

// optional uint32 curschemenum = 1;
inline bool PBPlayerWuxue::has_curschemenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerWuxue::set_has_curschemenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerWuxue::clear_has_curschemenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerWuxue::clear_curschemenum() {
  curschemenum_ = 0u;
  clear_has_curschemenum();
}
inline ::google::protobuf::uint32 PBPlayerWuxue::curschemenum() const {
  return curschemenum_;
}
inline void PBPlayerWuxue::set_curschemenum(::google::protobuf::uint32 value) {
  set_has_curschemenum();
  curschemenum_ = value;
}

// repeated .PBPlayerWuxueSchemeInfo schemeinfo = 2;
inline int PBPlayerWuxue::schemeinfo_size() const {
  return schemeinfo_.size();
}
inline void PBPlayerWuxue::clear_schemeinfo() {
  schemeinfo_.Clear();
}
inline const ::PBPlayerWuxueSchemeInfo& PBPlayerWuxue::schemeinfo(int index) const {
  return schemeinfo_.Get(index);
}
inline ::PBPlayerWuxueSchemeInfo* PBPlayerWuxue::mutable_schemeinfo(int index) {
  return schemeinfo_.Mutable(index);
}
inline ::PBPlayerWuxueSchemeInfo* PBPlayerWuxue::add_schemeinfo() {
  return schemeinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxueSchemeInfo >&
PBPlayerWuxue::schemeinfo() const {
  return schemeinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerWuxueSchemeInfo >*
PBPlayerWuxue::mutable_schemeinfo() {
  return &schemeinfo_;
}

// -------------------------------------------------------------------

// PBPlayerDart

// optional uint64 dartcarGlobalID = 1;
inline bool PBPlayerDart::has_dartcarglobalid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerDart::set_has_dartcarglobalid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerDart::clear_has_dartcarglobalid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerDart::clear_dartcarglobalid() {
  dartcarglobalid_ = GOOGLE_ULONGLONG(0);
  clear_has_dartcarglobalid();
}
inline ::google::protobuf::uint64 PBPlayerDart::dartcarglobalid() const {
  return dartcarglobalid_;
}
inline void PBPlayerDart::set_dartcarglobalid(::google::protobuf::uint64 value) {
  set_has_dartcarglobalid();
  dartcarglobalid_ = value;
}

// optional uint32 todayNormalDartCount = 2;
inline bool PBPlayerDart::has_todaynormaldartcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerDart::set_has_todaynormaldartcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerDart::clear_has_todaynormaldartcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerDart::clear_todaynormaldartcount() {
  todaynormaldartcount_ = 0u;
  clear_has_todaynormaldartcount();
}
inline ::google::protobuf::uint32 PBPlayerDart::todaynormaldartcount() const {
  return todaynormaldartcount_;
}
inline void PBPlayerDart::set_todaynormaldartcount(::google::protobuf::uint32 value) {
  set_has_todaynormaldartcount();
  todaynormaldartcount_ = value;
}

// optional uint32 todayTianxiaDartCount = 3;
inline bool PBPlayerDart::has_todaytianxiadartcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerDart::set_has_todaytianxiadartcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerDart::clear_has_todaytianxiadartcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerDart::clear_todaytianxiadartcount() {
  todaytianxiadartcount_ = 0u;
  clear_has_todaytianxiadartcount();
}
inline ::google::protobuf::uint32 PBPlayerDart::todaytianxiadartcount() const {
  return todaytianxiadartcount_;
}
inline void PBPlayerDart::set_todaytianxiadartcount(::google::protobuf::uint32 value) {
  set_has_todaytianxiadartcount();
  todaytianxiadartcount_ = value;
}

// -------------------------------------------------------------------

// PBPlayerFactionBoss

// optional uint32 entertime = 1;
inline bool PBPlayerFactionBoss::has_entertime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerFactionBoss::set_has_entertime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerFactionBoss::clear_has_entertime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerFactionBoss::clear_entertime() {
  entertime_ = 0u;
  clear_has_entertime();
}
inline ::google::protobuf::uint32 PBPlayerFactionBoss::entertime() const {
  return entertime_;
}
inline void PBPlayerFactionBoss::set_entertime(::google::protobuf::uint32 value) {
  set_has_entertime();
  entertime_ = value;
}

// optional uint32 copymapid = 2;
inline bool PBPlayerFactionBoss::has_copymapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerFactionBoss::set_has_copymapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerFactionBoss::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerFactionBoss::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBPlayerFactionBoss::copymapid() const {
  return copymapid_;
}
inline void PBPlayerFactionBoss::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// -------------------------------------------------------------------

// PBPlayerTitleInfo

// optional uint32 id = 1;
inline bool PBPlayerTitleInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerTitleInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerTitleInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerTitleInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBPlayerTitleInfo::id() const {
  return id_;
}
inline void PBPlayerTitleInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 expiretime = 2;
inline bool PBPlayerTitleInfo::has_expiretime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerTitleInfo::set_has_expiretime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerTitleInfo::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerTitleInfo::clear_expiretime() {
  expiretime_ = 0u;
  clear_has_expiretime();
}
inline ::google::protobuf::uint32 PBPlayerTitleInfo::expiretime() const {
  return expiretime_;
}
inline void PBPlayerTitleInfo::set_expiretime(::google::protobuf::uint32 value) {
  set_has_expiretime();
  expiretime_ = value;
}

// optional uint32 gettime = 3;
inline bool PBPlayerTitleInfo::has_gettime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerTitleInfo::set_has_gettime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerTitleInfo::clear_has_gettime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerTitleInfo::clear_gettime() {
  gettime_ = 0u;
  clear_has_gettime();
}
inline ::google::protobuf::uint32 PBPlayerTitleInfo::gettime() const {
  return gettime_;
}
inline void PBPlayerTitleInfo::set_gettime(::google::protobuf::uint32 value) {
  set_has_gettime();
  gettime_ = value;
}

// -------------------------------------------------------------------

// PBPlayerClassfiyTitle

// optional uint32 type = 1;
inline bool PBPlayerClassfiyTitle::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerClassfiyTitle::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerClassfiyTitle::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerClassfiyTitle::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBPlayerClassfiyTitle::type() const {
  return type_;
}
inline void PBPlayerClassfiyTitle::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated .PBPlayerTitleInfo info = 2;
inline int PBPlayerClassfiyTitle::info_size() const {
  return info_.size();
}
inline void PBPlayerClassfiyTitle::clear_info() {
  info_.Clear();
}
inline const ::PBPlayerTitleInfo& PBPlayerClassfiyTitle::info(int index) const {
  return info_.Get(index);
}
inline ::PBPlayerTitleInfo* PBPlayerClassfiyTitle::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PBPlayerTitleInfo* PBPlayerClassfiyTitle::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerTitleInfo >&
PBPlayerClassfiyTitle::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerTitleInfo >*
PBPlayerClassfiyTitle::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// PBPlayerTitle

// repeated .PBPlayerClassfiyTitle classifytitle = 1;
inline int PBPlayerTitle::classifytitle_size() const {
  return classifytitle_.size();
}
inline void PBPlayerTitle::clear_classifytitle() {
  classifytitle_.Clear();
}
inline const ::PBPlayerClassfiyTitle& PBPlayerTitle::classifytitle(int index) const {
  return classifytitle_.Get(index);
}
inline ::PBPlayerClassfiyTitle* PBPlayerTitle::mutable_classifytitle(int index) {
  return classifytitle_.Mutable(index);
}
inline ::PBPlayerClassfiyTitle* PBPlayerTitle::add_classifytitle() {
  return classifytitle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerClassfiyTitle >&
PBPlayerTitle::classifytitle() const {
  return classifytitle_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerClassfiyTitle >*
PBPlayerTitle::mutable_classifytitle() {
  return &classifytitle_;
}

// -------------------------------------------------------------------

// PBPlayerDazuoguaji

// optional uint32 todayDazuoguajiExpCount = 1;
inline bool PBPlayerDazuoguaji::has_todaydazuoguajiexpcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerDazuoguaji::set_has_todaydazuoguajiexpcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerDazuoguaji::clear_has_todaydazuoguajiexpcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerDazuoguaji::clear_todaydazuoguajiexpcount() {
  todaydazuoguajiexpcount_ = 0u;
  clear_has_todaydazuoguajiexpcount();
}
inline ::google::protobuf::uint32 PBPlayerDazuoguaji::todaydazuoguajiexpcount() const {
  return todaydazuoguajiexpcount_;
}
inline void PBPlayerDazuoguaji::set_todaydazuoguajiexpcount(::google::protobuf::uint32 value) {
  set_has_todaydazuoguajiexpcount();
  todaydazuoguajiexpcount_ = value;
}

// optional uint32 todayDazuoguajiWisdomCount = 2;
inline bool PBPlayerDazuoguaji::has_todaydazuoguajiwisdomcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerDazuoguaji::set_has_todaydazuoguajiwisdomcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerDazuoguaji::clear_has_todaydazuoguajiwisdomcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerDazuoguaji::clear_todaydazuoguajiwisdomcount() {
  todaydazuoguajiwisdomcount_ = 0u;
  clear_has_todaydazuoguajiwisdomcount();
}
inline ::google::protobuf::uint32 PBPlayerDazuoguaji::todaydazuoguajiwisdomcount() const {
  return todaydazuoguajiwisdomcount_;
}
inline void PBPlayerDazuoguaji::set_todaydazuoguajiwisdomcount(::google::protobuf::uint32 value) {
  set_has_todaydazuoguajiwisdomcount();
  todaydazuoguajiwisdomcount_ = value;
}

// -------------------------------------------------------------------

// PBFashion

// optional uint32 fashionid = 1;
inline bool PBFashion::has_fashionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFashion::set_has_fashionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFashion::clear_has_fashionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFashion::clear_fashionid() {
  fashionid_ = 0u;
  clear_has_fashionid();
}
inline ::google::protobuf::uint32 PBFashion::fashionid() const {
  return fashionid_;
}
inline void PBFashion::set_fashionid(::google::protobuf::uint32 value) {
  set_has_fashionid();
  fashionid_ = value;
}

// optional uint32 time = 2;
inline bool PBFashion::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFashion::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFashion::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFashion::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBFashion::time() const {
  return time_;
}
inline void PBFashion::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBPlayerFashion

// repeated .PBFashion fashion = 1;
inline int PBPlayerFashion::fashion_size() const {
  return fashion_.size();
}
inline void PBPlayerFashion::clear_fashion() {
  fashion_.Clear();
}
inline const ::PBFashion& PBPlayerFashion::fashion(int index) const {
  return fashion_.Get(index);
}
inline ::PBFashion* PBPlayerFashion::mutable_fashion(int index) {
  return fashion_.Mutable(index);
}
inline ::PBFashion* PBPlayerFashion::add_fashion() {
  return fashion_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFashion >&
PBPlayerFashion::fashion() const {
  return fashion_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFashion >*
PBPlayerFashion::mutable_fashion() {
  return &fashion_;
}

// repeated uint32 equipfashionid = 2;
inline int PBPlayerFashion::equipfashionid_size() const {
  return equipfashionid_.size();
}
inline void PBPlayerFashion::clear_equipfashionid() {
  equipfashionid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerFashion::equipfashionid(int index) const {
  return equipfashionid_.Get(index);
}
inline void PBPlayerFashion::set_equipfashionid(int index, ::google::protobuf::uint32 value) {
  equipfashionid_.Set(index, value);
}
inline void PBPlayerFashion::add_equipfashionid(::google::protobuf::uint32 value) {
  equipfashionid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerFashion::equipfashionid() const {
  return equipfashionid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerFashion::mutable_equipfashionid() {
  return &equipfashionid_;
}

// -------------------------------------------------------------------

// PBEquipColumn

// optional uint32 id = 1;
inline bool PBEquipColumn::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEquipColumn::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEquipColumn::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEquipColumn::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBEquipColumn::id() const {
  return id_;
}
inline void PBEquipColumn::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 EnhanceLevel = 2;
inline bool PBEquipColumn::has_enhancelevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEquipColumn::set_has_enhancelevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEquipColumn::clear_has_enhancelevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEquipColumn::clear_enhancelevel() {
  enhancelevel_ = 0u;
  clear_has_enhancelevel();
}
inline ::google::protobuf::uint32 PBEquipColumn::enhancelevel() const {
  return enhancelevel_;
}
inline void PBEquipColumn::set_enhancelevel(::google::protobuf::uint32 value) {
  set_has_enhancelevel();
  enhancelevel_ = value;
}

// optional uint32 ForgeLevel = 3;
inline bool PBEquipColumn::has_forgelevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBEquipColumn::set_has_forgelevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBEquipColumn::clear_has_forgelevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBEquipColumn::clear_forgelevel() {
  forgelevel_ = 0u;
  clear_has_forgelevel();
}
inline ::google::protobuf::uint32 PBEquipColumn::forgelevel() const {
  return forgelevel_;
}
inline void PBEquipColumn::set_forgelevel(::google::protobuf::uint32 value) {
  set_has_forgelevel();
  forgelevel_ = value;
}

// -------------------------------------------------------------------

// PBPlayerEquipColumn

// repeated .PBEquipColumn info = 1;
inline int PBPlayerEquipColumn::info_size() const {
  return info_.size();
}
inline void PBPlayerEquipColumn::clear_info() {
  info_.Clear();
}
inline const ::PBEquipColumn& PBPlayerEquipColumn::info(int index) const {
  return info_.Get(index);
}
inline ::PBEquipColumn* PBPlayerEquipColumn::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PBEquipColumn* PBPlayerEquipColumn::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipColumn >&
PBPlayerEquipColumn::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipColumn >*
PBPlayerEquipColumn::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// PBPlayerGreatWallTrain

// repeated uint32 CopymapID = 1;
inline int PBPlayerGreatWallTrain::copymapid_size() const {
  return copymapid_.size();
}
inline void PBPlayerGreatWallTrain::clear_copymapid() {
  copymapid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerGreatWallTrain::copymapid(int index) const {
  return copymapid_.Get(index);
}
inline void PBPlayerGreatWallTrain::set_copymapid(int index, ::google::protobuf::uint32 value) {
  copymapid_.Set(index, value);
}
inline void PBPlayerGreatWallTrain::add_copymapid(::google::protobuf::uint32 value) {
  copymapid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerGreatWallTrain::copymapid() const {
  return copymapid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerGreatWallTrain::mutable_copymapid() {
  return &copymapid_;
}

// optional uint32 layer = 2;
inline bool PBPlayerGreatWallTrain::has_layer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerGreatWallTrain::set_has_layer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerGreatWallTrain::clear_has_layer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerGreatWallTrain::clear_layer() {
  layer_ = 0u;
  clear_has_layer();
}
inline ::google::protobuf::uint32 PBPlayerGreatWallTrain::layer() const {
  return layer_;
}
inline void PBPlayerGreatWallTrain::set_layer(::google::protobuf::uint32 value) {
  set_has_layer();
  layer_ = value;
}

// optional uint32 time = 3;
inline bool PBPlayerGreatWallTrain::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerGreatWallTrain::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerGreatWallTrain::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerGreatWallTrain::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBPlayerGreatWallTrain::time() const {
  return time_;
}
inline void PBPlayerGreatWallTrain::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBActivityInfo

// optional uint32 id = 1;
inline bool PBActivityInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBActivityInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBActivityInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBActivityInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBActivityInfo::id() const {
  return id_;
}
inline void PBActivityInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 count = 2;
inline bool PBActivityInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBActivityInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBActivityInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBActivityInfo::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBActivityInfo::count() const {
  return count_;
}
inline void PBActivityInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PBPlayerActivity

// repeated .PBActivityInfo info = 1;
inline int PBPlayerActivity::info_size() const {
  return info_.size();
}
inline void PBPlayerActivity::clear_info() {
  info_.Clear();
}
inline const ::PBActivityInfo& PBPlayerActivity::info(int index) const {
  return info_.Get(index);
}
inline ::PBActivityInfo* PBPlayerActivity::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PBActivityInfo* PBPlayerActivity::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBActivityInfo >&
PBPlayerActivity::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBActivityInfo >*
PBPlayerActivity::mutable_info() {
  return &info_;
}

// optional uint32 liveness = 2;
inline bool PBPlayerActivity::has_liveness() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerActivity::set_has_liveness() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerActivity::clear_has_liveness() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerActivity::clear_liveness() {
  liveness_ = 0u;
  clear_has_liveness();
}
inline ::google::protobuf::uint32 PBPlayerActivity::liveness() const {
  return liveness_;
}
inline void PBPlayerActivity::set_liveness(::google::protobuf::uint32 value) {
  set_has_liveness();
  liveness_ = value;
}

// repeated uint32 setid = 3;
inline int PBPlayerActivity::setid_size() const {
  return setid_.size();
}
inline void PBPlayerActivity::clear_setid() {
  setid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerActivity::setid(int index) const {
  return setid_.Get(index);
}
inline void PBPlayerActivity::set_setid(int index, ::google::protobuf::uint32 value) {
  setid_.Set(index, value);
}
inline void PBPlayerActivity::add_setid(::google::protobuf::uint32 value) {
  setid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerActivity::setid() const {
  return setid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerActivity::mutable_setid() {
  return &setid_;
}

// repeated uint32 cleartime = 4;
inline int PBPlayerActivity::cleartime_size() const {
  return cleartime_.size();
}
inline void PBPlayerActivity::clear_cleartime() {
  cleartime_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerActivity::cleartime(int index) const {
  return cleartime_.Get(index);
}
inline void PBPlayerActivity::set_cleartime(int index, ::google::protobuf::uint32 value) {
  cleartime_.Set(index, value);
}
inline void PBPlayerActivity::add_cleartime(::google::protobuf::uint32 value) {
  cleartime_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerActivity::cleartime() const {
  return cleartime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerActivity::mutable_cleartime() {
  return &cleartime_;
}

// -------------------------------------------------------------------

// PBLlayerRelive

// optional uint32 FreeMaxCount = 1;
inline bool PBLlayerRelive::has_freemaxcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLlayerRelive::set_has_freemaxcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLlayerRelive::clear_has_freemaxcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLlayerRelive::clear_freemaxcount() {
  freemaxcount_ = 0u;
  clear_has_freemaxcount();
}
inline ::google::protobuf::uint32 PBLlayerRelive::freemaxcount() const {
  return freemaxcount_;
}
inline void PBLlayerRelive::set_freemaxcount(::google::protobuf::uint32 value) {
  set_has_freemaxcount();
  freemaxcount_ = value;
}

// optional uint32 CostCount = 2;
inline bool PBLlayerRelive::has_costcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBLlayerRelive::set_has_costcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBLlayerRelive::clear_has_costcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBLlayerRelive::clear_costcount() {
  costcount_ = 0u;
  clear_has_costcount();
}
inline ::google::protobuf::uint32 PBLlayerRelive::costcount() const {
  return costcount_;
}
inline void PBLlayerRelive::set_costcount(::google::protobuf::uint32 value) {
  set_has_costcount();
  costcount_ = value;
}

// -------------------------------------------------------------------

// PBPlayerClimbTowerItem

// optional uint32 itemID = 1;
inline bool PBPlayerClimbTowerItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerClimbTowerItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerClimbTowerItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerClimbTowerItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PBPlayerClimbTowerItem::itemid() const {
  return itemid_;
}
inline void PBPlayerClimbTowerItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 count = 2;
inline bool PBPlayerClimbTowerItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerClimbTowerItem::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerClimbTowerItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerClimbTowerItem::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBPlayerClimbTowerItem::count() const {
  return count_;
}
inline void PBPlayerClimbTowerItem::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PBPlayerClimbTower

// optional uint32 dayCurrentCopymapID = 1;
inline bool PBPlayerClimbTower::has_daycurrentcopymapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerClimbTower::set_has_daycurrentcopymapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerClimbTower::clear_has_daycurrentcopymapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerClimbTower::clear_daycurrentcopymapid() {
  daycurrentcopymapid_ = 0u;
  clear_has_daycurrentcopymapid();
}
inline ::google::protobuf::uint32 PBPlayerClimbTower::daycurrentcopymapid() const {
  return daycurrentcopymapid_;
}
inline void PBPlayerClimbTower::set_daycurrentcopymapid(::google::protobuf::uint32 value) {
  set_has_daycurrentcopymapid();
  daycurrentcopymapid_ = value;
}

// repeated .PBPlayerClimbTowerItem dayItemUnsettled = 2;
inline int PBPlayerClimbTower::dayitemunsettled_size() const {
  return dayitemunsettled_.size();
}
inline void PBPlayerClimbTower::clear_dayitemunsettled() {
  dayitemunsettled_.Clear();
}
inline const ::PBPlayerClimbTowerItem& PBPlayerClimbTower::dayitemunsettled(int index) const {
  return dayitemunsettled_.Get(index);
}
inline ::PBPlayerClimbTowerItem* PBPlayerClimbTower::mutable_dayitemunsettled(int index) {
  return dayitemunsettled_.Mutable(index);
}
inline ::PBPlayerClimbTowerItem* PBPlayerClimbTower::add_dayitemunsettled() {
  return dayitemunsettled_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerClimbTowerItem >&
PBPlayerClimbTower::dayitemunsettled() const {
  return dayitemunsettled_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerClimbTowerItem >*
PBPlayerClimbTower::mutable_dayitemunsettled() {
  return &dayitemunsettled_;
}

// optional uint32 dayPlayCount = 3;
inline bool PBPlayerClimbTower::has_dayplaycount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerClimbTower::set_has_dayplaycount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerClimbTower::clear_has_dayplaycount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerClimbTower::clear_dayplaycount() {
  dayplaycount_ = 0u;
  clear_has_dayplaycount();
}
inline ::google::protobuf::uint32 PBPlayerClimbTower::dayplaycount() const {
  return dayplaycount_;
}
inline void PBPlayerClimbTower::set_dayplaycount(::google::protobuf::uint32 value) {
  set_has_dayplaycount();
  dayplaycount_ = value;
}

// optional uint32 weekCurrentClass = 4;
inline bool PBPlayerClimbTower::has_weekcurrentclass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerClimbTower::set_has_weekcurrentclass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerClimbTower::clear_has_weekcurrentclass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerClimbTower::clear_weekcurrentclass() {
  weekcurrentclass_ = 0u;
  clear_has_weekcurrentclass();
}
inline ::google::protobuf::uint32 PBPlayerClimbTower::weekcurrentclass() const {
  return weekcurrentclass_;
}
inline void PBPlayerClimbTower::set_weekcurrentclass(::google::protobuf::uint32 value) {
  set_has_weekcurrentclass();
  weekcurrentclass_ = value;
}

// optional uint32 weekMaxCopyID = 5;
inline bool PBPlayerClimbTower::has_weekmaxcopyid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerClimbTower::set_has_weekmaxcopyid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerClimbTower::clear_has_weekmaxcopyid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerClimbTower::clear_weekmaxcopyid() {
  weekmaxcopyid_ = 0u;
  clear_has_weekmaxcopyid();
}
inline ::google::protobuf::uint32 PBPlayerClimbTower::weekmaxcopyid() const {
  return weekmaxcopyid_;
}
inline void PBPlayerClimbTower::set_weekmaxcopyid(::google::protobuf::uint32 value) {
  set_has_weekmaxcopyid();
  weekmaxcopyid_ = value;
}

// optional uint32 nextJumpCpymapID = 6;
inline bool PBPlayerClimbTower::has_nextjumpcpymapid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerClimbTower::set_has_nextjumpcpymapid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerClimbTower::clear_has_nextjumpcpymapid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerClimbTower::clear_nextjumpcpymapid() {
  nextjumpcpymapid_ = 0u;
  clear_has_nextjumpcpymapid();
}
inline ::google::protobuf::uint32 PBPlayerClimbTower::nextjumpcpymapid() const {
  return nextjumpcpymapid_;
}
inline void PBPlayerClimbTower::set_nextjumpcpymapid(::google::protobuf::uint32 value) {
  set_has_nextjumpcpymapid();
  nextjumpcpymapid_ = value;
}

// optional uint32 luckDrawRightNow = 7;
inline bool PBPlayerClimbTower::has_luckdrawrightnow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPlayerClimbTower::set_has_luckdrawrightnow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPlayerClimbTower::clear_has_luckdrawrightnow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPlayerClimbTower::clear_luckdrawrightnow() {
  luckdrawrightnow_ = 0u;
  clear_has_luckdrawrightnow();
}
inline ::google::protobuf::uint32 PBPlayerClimbTower::luckdrawrightnow() const {
  return luckdrawrightnow_;
}
inline void PBPlayerClimbTower::set_luckdrawrightnow(::google::protobuf::uint32 value) {
  set_has_luckdrawrightnow();
  luckdrawrightnow_ = value;
}

// -------------------------------------------------------------------

// PBPlayerPvpData

// optional uint32 id = 1;
inline bool PBPlayerPvpData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerPvpData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerPvpData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerPvpData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::id() const {
  return id_;
}
inline void PBPlayerPvpData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 entercount = 2;
inline bool PBPlayerPvpData::has_entercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerPvpData::set_has_entercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerPvpData::clear_has_entercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerPvpData::clear_entercount() {
  entercount_ = 0u;
  clear_has_entercount();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::entercount() const {
  return entercount_;
}
inline void PBPlayerPvpData::set_entercount(::google::protobuf::uint32 value) {
  set_has_entercount();
  entercount_ = value;
}

// optional uint32 winnum = 3;
inline bool PBPlayerPvpData::has_winnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerPvpData::set_has_winnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerPvpData::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerPvpData::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::winnum() const {
  return winnum_;
}
inline void PBPlayerPvpData::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
}

// optional uint32 failnum = 4;
inline bool PBPlayerPvpData::has_failnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerPvpData::set_has_failnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerPvpData::clear_has_failnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerPvpData::clear_failnum() {
  failnum_ = 0u;
  clear_has_failnum();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::failnum() const {
  return failnum_;
}
inline void PBPlayerPvpData::set_failnum(::google::protobuf::uint32 value) {
  set_has_failnum();
  failnum_ = value;
}

// optional uint32 capturenum = 5;
inline bool PBPlayerPvpData::has_capturenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerPvpData::set_has_capturenum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerPvpData::clear_has_capturenum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerPvpData::clear_capturenum() {
  capturenum_ = 0u;
  clear_has_capturenum();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::capturenum() const {
  return capturenum_;
}
inline void PBPlayerPvpData::set_capturenum(::google::protobuf::uint32 value) {
  set_has_capturenum();
  capturenum_ = value;
}

// optional uint32 killnum = 6;
inline bool PBPlayerPvpData::has_killnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerPvpData::set_has_killnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerPvpData::clear_has_killnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerPvpData::clear_killnum() {
  killnum_ = 0u;
  clear_has_killnum();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::killnum() const {
  return killnum_;
}
inline void PBPlayerPvpData::set_killnum(::google::protobuf::uint32 value) {
  set_has_killnum();
  killnum_ = value;
}

// optional uint32 assistnum = 7;
inline bool PBPlayerPvpData::has_assistnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPlayerPvpData::set_has_assistnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPlayerPvpData::clear_has_assistnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPlayerPvpData::clear_assistnum() {
  assistnum_ = 0u;
  clear_has_assistnum();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::assistnum() const {
  return assistnum_;
}
inline void PBPlayerPvpData::set_assistnum(::google::protobuf::uint32 value) {
  set_has_assistnum();
  assistnum_ = value;
}

// optional uint32 deadnum = 8;
inline bool PBPlayerPvpData::has_deadnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBPlayerPvpData::set_has_deadnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBPlayerPvpData::clear_has_deadnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBPlayerPvpData::clear_deadnum() {
  deadnum_ = 0u;
  clear_has_deadnum();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::deadnum() const {
  return deadnum_;
}
inline void PBPlayerPvpData::set_deadnum(::google::protobuf::uint32 value) {
  set_has_deadnum();
  deadnum_ = value;
}

// optional uint32 megakill = 9;
inline bool PBPlayerPvpData::has_megakill() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBPlayerPvpData::set_has_megakill() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBPlayerPvpData::clear_has_megakill() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBPlayerPvpData::clear_megakill() {
  megakill_ = 0u;
  clear_has_megakill();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::megakill() const {
  return megakill_;
}
inline void PBPlayerPvpData::set_megakill(::google::protobuf::uint32 value) {
  set_has_megakill();
  megakill_ = value;
}

// optional uint32 godlike = 10;
inline bool PBPlayerPvpData::has_godlike() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBPlayerPvpData::set_has_godlike() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBPlayerPvpData::clear_has_godlike() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBPlayerPvpData::clear_godlike() {
  godlike_ = 0u;
  clear_has_godlike();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::godlike() const {
  return godlike_;
}
inline void PBPlayerPvpData::set_godlike(::google::protobuf::uint32 value) {
  set_has_godlike();
  godlike_ = value;
}

// optional uint32 mvpnum = 11;
inline bool PBPlayerPvpData::has_mvpnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBPlayerPvpData::set_has_mvpnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBPlayerPvpData::clear_has_mvpnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBPlayerPvpData::clear_mvpnum() {
  mvpnum_ = 0u;
  clear_has_mvpnum();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::mvpnum() const {
  return mvpnum_;
}
inline void PBPlayerPvpData::set_mvpnum(::google::protobuf::uint32 value) {
  set_has_mvpnum();
  mvpnum_ = value;
}

// optional uint32 exitreadycount = 12;
inline bool PBPlayerPvpData::has_exitreadycount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBPlayerPvpData::set_has_exitreadycount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBPlayerPvpData::clear_has_exitreadycount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBPlayerPvpData::clear_exitreadycount() {
  exitreadycount_ = 0u;
  clear_has_exitreadycount();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::exitreadycount() const {
  return exitreadycount_;
}
inline void PBPlayerPvpData::set_exitreadycount(::google::protobuf::uint32 value) {
  set_has_exitreadycount();
  exitreadycount_ = value;
}

// optional uint32 nextentertime = 13;
inline bool PBPlayerPvpData::has_nextentertime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBPlayerPvpData::set_has_nextentertime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBPlayerPvpData::clear_has_nextentertime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBPlayerPvpData::clear_nextentertime() {
  nextentertime_ = 0u;
  clear_has_nextentertime();
}
inline ::google::protobuf::uint32 PBPlayerPvpData::nextentertime() const {
  return nextentertime_;
}
inline void PBPlayerPvpData::set_nextentertime(::google::protobuf::uint32 value) {
  set_has_nextentertime();
  nextentertime_ = value;
}

// -------------------------------------------------------------------

// PBPlayerPvp

// repeated .PBPlayerPvpData pvpdata = 1;
inline int PBPlayerPvp::pvpdata_size() const {
  return pvpdata_.size();
}
inline void PBPlayerPvp::clear_pvpdata() {
  pvpdata_.Clear();
}
inline const ::PBPlayerPvpData& PBPlayerPvp::pvpdata(int index) const {
  return pvpdata_.Get(index);
}
inline ::PBPlayerPvpData* PBPlayerPvp::mutable_pvpdata(int index) {
  return pvpdata_.Mutable(index);
}
inline ::PBPlayerPvpData* PBPlayerPvp::add_pvpdata() {
  return pvpdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerPvpData >&
PBPlayerPvp::pvpdata() const {
  return pvpdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerPvpData >*
PBPlayerPvp::mutable_pvpdata() {
  return &pvpdata_;
}

// -------------------------------------------------------------------

// PBPlayerLoginWealData

// optional uint32 id = 1;
inline bool PBPlayerLoginWealData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerLoginWealData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerLoginWealData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerLoginWealData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBPlayerLoginWealData::id() const {
  return id_;
}
inline void PBPlayerLoginWealData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 prizeday = 2;
inline bool PBPlayerLoginWealData::has_prizeday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerLoginWealData::set_has_prizeday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerLoginWealData::clear_has_prizeday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerLoginWealData::clear_prizeday() {
  prizeday_ = 0u;
  clear_has_prizeday();
}
inline ::google::protobuf::uint32 PBPlayerLoginWealData::prizeday() const {
  return prizeday_;
}
inline void PBPlayerLoginWealData::set_prizeday(::google::protobuf::uint32 value) {
  set_has_prizeday();
  prizeday_ = value;
}

// optional uint32 prizetime = 3;
inline bool PBPlayerLoginWealData::has_prizetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerLoginWealData::set_has_prizetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerLoginWealData::clear_has_prizetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerLoginWealData::clear_prizetime() {
  prizetime_ = 0u;
  clear_has_prizetime();
}
inline ::google::protobuf::uint32 PBPlayerLoginWealData::prizetime() const {
  return prizetime_;
}
inline void PBPlayerLoginWealData::set_prizetime(::google::protobuf::uint32 value) {
  set_has_prizetime();
  prizetime_ = value;
}

// -------------------------------------------------------------------

// PBPlayerWeal

// repeated .PBPlayerLoginWealData logindata = 1;
inline int PBPlayerWeal::logindata_size() const {
  return logindata_.size();
}
inline void PBPlayerWeal::clear_logindata() {
  logindata_.Clear();
}
inline const ::PBPlayerLoginWealData& PBPlayerWeal::logindata(int index) const {
  return logindata_.Get(index);
}
inline ::PBPlayerLoginWealData* PBPlayerWeal::mutable_logindata(int index) {
  return logindata_.Mutable(index);
}
inline ::PBPlayerLoginWealData* PBPlayerWeal::add_logindata() {
  return logindata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerLoginWealData >&
PBPlayerWeal::logindata() const {
  return logindata_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerLoginWealData >*
PBPlayerWeal::mutable_logindata() {
  return &logindata_;
}

// -------------------------------------------------------------------

// PBSinglePvpRecord

// optional .PBPlayerDisplay display = 1;
inline bool PBSinglePvpRecord::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSinglePvpRecord::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSinglePvpRecord::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSinglePvpRecord::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBSinglePvpRecord::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBSinglePvpRecord::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBSinglePvpRecord::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 score = 2;
inline bool PBSinglePvpRecord::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSinglePvpRecord::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSinglePvpRecord::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSinglePvpRecord::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PBSinglePvpRecord::score() const {
  return score_;
}
inline void PBSinglePvpRecord::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 result = 3;
inline bool PBSinglePvpRecord::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSinglePvpRecord::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSinglePvpRecord::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSinglePvpRecord::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 PBSinglePvpRecord::result() const {
  return result_;
}
inline void PBSinglePvpRecord::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// PBPlayerSinglePvp

// optional uint32 dayentercount = 1;
inline bool PBPlayerSinglePvp::has_dayentercount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerSinglePvp::set_has_dayentercount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerSinglePvp::clear_has_dayentercount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerSinglePvp::clear_dayentercount() {
  dayentercount_ = 0u;
  clear_has_dayentercount();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::dayentercount() const {
  return dayentercount_;
}
inline void PBPlayerSinglePvp::set_dayentercount(::google::protobuf::uint32 value) {
  set_has_dayentercount();
  dayentercount_ = value;
}

// optional uint32 wincount = 2;
inline bool PBPlayerSinglePvp::has_wincount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerSinglePvp::set_has_wincount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerSinglePvp::clear_has_wincount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerSinglePvp::clear_wincount() {
  wincount_ = 0u;
  clear_has_wincount();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::wincount() const {
  return wincount_;
}
inline void PBPlayerSinglePvp::set_wincount(::google::protobuf::uint32 value) {
  set_has_wincount();
  wincount_ = value;
}

// optional uint32 failcount = 3;
inline bool PBPlayerSinglePvp::has_failcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerSinglePvp::set_has_failcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerSinglePvp::clear_has_failcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerSinglePvp::clear_failcount() {
  failcount_ = 0u;
  clear_has_failcount();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::failcount() const {
  return failcount_;
}
inline void PBPlayerSinglePvp::set_failcount(::google::protobuf::uint32 value) {
  set_has_failcount();
  failcount_ = value;
}

// optional uint32 equalcount = 4;
inline bool PBPlayerSinglePvp::has_equalcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerSinglePvp::set_has_equalcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerSinglePvp::clear_has_equalcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerSinglePvp::clear_equalcount() {
  equalcount_ = 0u;
  clear_has_equalcount();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::equalcount() const {
  return equalcount_;
}
inline void PBPlayerSinglePvp::set_equalcount(::google::protobuf::uint32 value) {
  set_has_equalcount();
  equalcount_ = value;
}

// optional uint32 score = 5;
inline bool PBPlayerSinglePvp::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerSinglePvp::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerSinglePvp::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerSinglePvp::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::score() const {
  return score_;
}
inline void PBPlayerSinglePvp::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 maxscore = 6;
inline bool PBPlayerSinglePvp::has_maxscore() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerSinglePvp::set_has_maxscore() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerSinglePvp::clear_has_maxscore() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerSinglePvp::clear_maxscore() {
  maxscore_ = 0u;
  clear_has_maxscore();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::maxscore() const {
  return maxscore_;
}
inline void PBPlayerSinglePvp::set_maxscore(::google::protobuf::uint32 value) {
  set_has_maxscore();
  maxscore_ = value;
}

// repeated uint32 firstprizeid = 7;
inline int PBPlayerSinglePvp::firstprizeid_size() const {
  return firstprizeid_.size();
}
inline void PBPlayerSinglePvp::clear_firstprizeid() {
  firstprizeid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::firstprizeid(int index) const {
  return firstprizeid_.Get(index);
}
inline void PBPlayerSinglePvp::set_firstprizeid(int index, ::google::protobuf::uint32 value) {
  firstprizeid_.Set(index, value);
}
inline void PBPlayerSinglePvp::add_firstprizeid(::google::protobuf::uint32 value) {
  firstprizeid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerSinglePvp::firstprizeid() const {
  return firstprizeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerSinglePvp::mutable_firstprizeid() {
  return &firstprizeid_;
}

// repeated uint32 dayprize = 8;
inline int PBPlayerSinglePvp::dayprize_size() const {
  return dayprize_.size();
}
inline void PBPlayerSinglePvp::clear_dayprize() {
  dayprize_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::dayprize(int index) const {
  return dayprize_.Get(index);
}
inline void PBPlayerSinglePvp::set_dayprize(int index, ::google::protobuf::uint32 value) {
  dayprize_.Set(index, value);
}
inline void PBPlayerSinglePvp::add_dayprize(::google::protobuf::uint32 value) {
  dayprize_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerSinglePvp::dayprize() const {
  return dayprize_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerSinglePvp::mutable_dayprize() {
  return &dayprize_;
}

// repeated .PBSinglePvpRecord record = 9;
inline int PBPlayerSinglePvp::record_size() const {
  return record_.size();
}
inline void PBPlayerSinglePvp::clear_record() {
  record_.Clear();
}
inline const ::PBSinglePvpRecord& PBPlayerSinglePvp::record(int index) const {
  return record_.Get(index);
}
inline ::PBSinglePvpRecord* PBPlayerSinglePvp::mutable_record(int index) {
  return record_.Mutable(index);
}
inline ::PBSinglePvpRecord* PBPlayerSinglePvp::add_record() {
  return record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSinglePvpRecord >&
PBPlayerSinglePvp::record() const {
  return record_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSinglePvpRecord >*
PBPlayerSinglePvp::mutable_record() {
  return &record_;
}

// optional uint32 weekcount = 10;
inline bool PBPlayerSinglePvp::has_weekcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBPlayerSinglePvp::set_has_weekcount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBPlayerSinglePvp::clear_has_weekcount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBPlayerSinglePvp::clear_weekcount() {
  weekcount_ = 0u;
  clear_has_weekcount();
}
inline ::google::protobuf::uint32 PBPlayerSinglePvp::weekcount() const {
  return weekcount_;
}
inline void PBPlayerSinglePvp::set_weekcount(::google::protobuf::uint32 value) {
  set_has_weekcount();
  weekcount_ = value;
}

// -------------------------------------------------------------------

// PBPlayerCommon

// repeated uint32 strongerid = 1;
inline int PBPlayerCommon::strongerid_size() const {
  return strongerid_.size();
}
inline void PBPlayerCommon::clear_strongerid() {
  strongerid_.Clear();
}
inline ::google::protobuf::uint32 PBPlayerCommon::strongerid(int index) const {
  return strongerid_.Get(index);
}
inline void PBPlayerCommon::set_strongerid(int index, ::google::protobuf::uint32 value) {
  strongerid_.Set(index, value);
}
inline void PBPlayerCommon::add_strongerid(::google::protobuf::uint32 value) {
  strongerid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBPlayerCommon::strongerid() const {
  return strongerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBPlayerCommon::mutable_strongerid() {
  return &strongerid_;
}

// -------------------------------------------------------------------

// PBPlayerManor

// optional uint32 enterbattlefieldtime = 1;
inline bool PBPlayerManor::has_enterbattlefieldtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerManor::set_has_enterbattlefieldtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerManor::clear_has_enterbattlefieldtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerManor::clear_enterbattlefieldtime() {
  enterbattlefieldtime_ = 0u;
  clear_has_enterbattlefieldtime();
}
inline ::google::protobuf::uint32 PBPlayerManor::enterbattlefieldtime() const {
  return enterbattlefieldtime_;
}
inline void PBPlayerManor::set_enterbattlefieldtime(::google::protobuf::uint32 value) {
  set_has_enterbattlefieldtime();
  enterbattlefieldtime_ = value;
}

// -------------------------------------------------------------------

// PBPlayerSystem

// optional uint32 saveorder = 1;
inline bool PBPlayerSystem::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerSystem::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerSystem::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerSystem::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerSystem::saveorder() const {
  return saveorder_;
}
inline void PBPlayerSystem::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// optional .PBCooling cooling = 2;
inline bool PBPlayerSystem::has_cooling() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerSystem::set_has_cooling() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerSystem::clear_has_cooling() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerSystem::clear_cooling() {
  if (cooling_ != NULL) cooling_->::PBCooling::Clear();
  clear_has_cooling();
}
inline const ::PBCooling& PBPlayerSystem::cooling() const {
  return cooling_ != NULL ? *cooling_ : *default_instance_->cooling_;
}
inline ::PBCooling* PBPlayerSystem::mutable_cooling() {
  set_has_cooling();
  if (cooling_ == NULL) cooling_ = new ::PBCooling;
  return cooling_;
}
inline ::PBCooling* PBPlayerSystem::release_cooling() {
  clear_has_cooling();
  ::PBCooling* temp = cooling_;
  cooling_ = NULL;
  return temp;
}

// optional .PBSystemSkill skill = 3;
inline bool PBPlayerSystem::has_skill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerSystem::set_has_skill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerSystem::clear_has_skill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerSystem::clear_skill() {
  if (skill_ != NULL) skill_->::PBSystemSkill::Clear();
  clear_has_skill();
}
inline const ::PBSystemSkill& PBPlayerSystem::skill() const {
  return skill_ != NULL ? *skill_ : *default_instance_->skill_;
}
inline ::PBSystemSkill* PBPlayerSystem::mutable_skill() {
  set_has_skill();
  if (skill_ == NULL) skill_ = new ::PBSystemSkill;
  return skill_;
}
inline ::PBSystemSkill* PBPlayerSystem::release_skill() {
  clear_has_skill();
  ::PBSystemSkill* temp = skill_;
  skill_ = NULL;
  return temp;
}

// optional .PBSystemBuff buff = 4;
inline bool PBPlayerSystem::has_buff() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerSystem::set_has_buff() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerSystem::clear_has_buff() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerSystem::clear_buff() {
  if (buff_ != NULL) buff_->::PBSystemBuff::Clear();
  clear_has_buff();
}
inline const ::PBSystemBuff& PBPlayerSystem::buff() const {
  return buff_ != NULL ? *buff_ : *default_instance_->buff_;
}
inline ::PBSystemBuff* PBPlayerSystem::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) buff_ = new ::PBSystemBuff;
  return buff_;
}
inline ::PBSystemBuff* PBPlayerSystem::release_buff() {
  clear_has_buff();
  ::PBSystemBuff* temp = buff_;
  buff_ = NULL;
  return temp;
}

// optional .PBSystemCounter counter = 5;
inline bool PBPlayerSystem::has_counter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerSystem::set_has_counter() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerSystem::clear_has_counter() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerSystem::clear_counter() {
  if (counter_ != NULL) counter_->::PBSystemCounter::Clear();
  clear_has_counter();
}
inline const ::PBSystemCounter& PBPlayerSystem::counter() const {
  return counter_ != NULL ? *counter_ : *default_instance_->counter_;
}
inline ::PBSystemCounter* PBPlayerSystem::mutable_counter() {
  set_has_counter();
  if (counter_ == NULL) counter_ = new ::PBSystemCounter;
  return counter_;
}
inline ::PBSystemCounter* PBPlayerSystem::release_counter() {
  clear_has_counter();
  ::PBSystemCounter* temp = counter_;
  counter_ = NULL;
  return temp;
}

// optional .PBPlayerPrize prize = 6;
inline bool PBPlayerSystem::has_prize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerSystem::set_has_prize() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerSystem::clear_has_prize() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerSystem::clear_prize() {
  if (prize_ != NULL) prize_->::PBPlayerPrize::Clear();
  clear_has_prize();
}
inline const ::PBPlayerPrize& PBPlayerSystem::prize() const {
  return prize_ != NULL ? *prize_ : *default_instance_->prize_;
}
inline ::PBPlayerPrize* PBPlayerSystem::mutable_prize() {
  set_has_prize();
  if (prize_ == NULL) prize_ = new ::PBPlayerPrize;
  return prize_;
}
inline ::PBPlayerPrize* PBPlayerSystem::release_prize() {
  clear_has_prize();
  ::PBPlayerPrize* temp = prize_;
  prize_ = NULL;
  return temp;
}

// optional .PBPlayerTrade trade = 7;
inline bool PBPlayerSystem::has_trade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPlayerSystem::set_has_trade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPlayerSystem::clear_has_trade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPlayerSystem::clear_trade() {
  if (trade_ != NULL) trade_->::PBPlayerTrade::Clear();
  clear_has_trade();
}
inline const ::PBPlayerTrade& PBPlayerSystem::trade() const {
  return trade_ != NULL ? *trade_ : *default_instance_->trade_;
}
inline ::PBPlayerTrade* PBPlayerSystem::mutable_trade() {
  set_has_trade();
  if (trade_ == NULL) trade_ = new ::PBPlayerTrade;
  return trade_;
}
inline ::PBPlayerTrade* PBPlayerSystem::release_trade() {
  clear_has_trade();
  ::PBPlayerTrade* temp = trade_;
  trade_ = NULL;
  return temp;
}

// optional .PBPlayerStore playerStore = 8;
inline bool PBPlayerSystem::has_playerstore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBPlayerSystem::set_has_playerstore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBPlayerSystem::clear_has_playerstore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBPlayerSystem::clear_playerstore() {
  if (playerstore_ != NULL) playerstore_->::PBPlayerStore::Clear();
  clear_has_playerstore();
}
inline const ::PBPlayerStore& PBPlayerSystem::playerstore() const {
  return playerstore_ != NULL ? *playerstore_ : *default_instance_->playerstore_;
}
inline ::PBPlayerStore* PBPlayerSystem::mutable_playerstore() {
  set_has_playerstore();
  if (playerstore_ == NULL) playerstore_ = new ::PBPlayerStore;
  return playerstore_;
}
inline ::PBPlayerStore* PBPlayerSystem::release_playerstore() {
  clear_has_playerstore();
  ::PBPlayerStore* temp = playerstore_;
  playerstore_ = NULL;
  return temp;
}

// optional .PBPlayerWeal weal = 9;
inline bool PBPlayerSystem::has_weal() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBPlayerSystem::set_has_weal() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBPlayerSystem::clear_has_weal() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBPlayerSystem::clear_weal() {
  if (weal_ != NULL) weal_->::PBPlayerWeal::Clear();
  clear_has_weal();
}
inline const ::PBPlayerWeal& PBPlayerSystem::weal() const {
  return weal_ != NULL ? *weal_ : *default_instance_->weal_;
}
inline ::PBPlayerWeal* PBPlayerSystem::mutable_weal() {
  set_has_weal();
  if (weal_ == NULL) weal_ = new ::PBPlayerWeal;
  return weal_;
}
inline ::PBPlayerWeal* PBPlayerSystem::release_weal() {
  clear_has_weal();
  ::PBPlayerWeal* temp = weal_;
  weal_ = NULL;
  return temp;
}

// optional .PBPlayerWulue playerWulue = 10;
inline bool PBPlayerSystem::has_playerwulue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBPlayerSystem::set_has_playerwulue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBPlayerSystem::clear_has_playerwulue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBPlayerSystem::clear_playerwulue() {
  if (playerwulue_ != NULL) playerwulue_->::PBPlayerWulue::Clear();
  clear_has_playerwulue();
}
inline const ::PBPlayerWulue& PBPlayerSystem::playerwulue() const {
  return playerwulue_ != NULL ? *playerwulue_ : *default_instance_->playerwulue_;
}
inline ::PBPlayerWulue* PBPlayerSystem::mutable_playerwulue() {
  set_has_playerwulue();
  if (playerwulue_ == NULL) playerwulue_ = new ::PBPlayerWulue;
  return playerwulue_;
}
inline ::PBPlayerWulue* PBPlayerSystem::release_playerwulue() {
  clear_has_playerwulue();
  ::PBPlayerWulue* temp = playerwulue_;
  playerwulue_ = NULL;
  return temp;
}

// optional .PBPlayerWenTao wentao = 11;
inline bool PBPlayerSystem::has_wentao() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PBPlayerSystem::set_has_wentao() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PBPlayerSystem::clear_has_wentao() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PBPlayerSystem::clear_wentao() {
  if (wentao_ != NULL) wentao_->::PBPlayerWenTao::Clear();
  clear_has_wentao();
}
inline const ::PBPlayerWenTao& PBPlayerSystem::wentao() const {
  return wentao_ != NULL ? *wentao_ : *default_instance_->wentao_;
}
inline ::PBPlayerWenTao* PBPlayerSystem::mutable_wentao() {
  set_has_wentao();
  if (wentao_ == NULL) wentao_ = new ::PBPlayerWenTao;
  return wentao_;
}
inline ::PBPlayerWenTao* PBPlayerSystem::release_wentao() {
  clear_has_wentao();
  ::PBPlayerWenTao* temp = wentao_;
  wentao_ = NULL;
  return temp;
}

// optional .PBPlayerCopymap copymap = 12;
inline bool PBPlayerSystem::has_copymap() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PBPlayerSystem::set_has_copymap() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PBPlayerSystem::clear_has_copymap() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PBPlayerSystem::clear_copymap() {
  if (copymap_ != NULL) copymap_->::PBPlayerCopymap::Clear();
  clear_has_copymap();
}
inline const ::PBPlayerCopymap& PBPlayerSystem::copymap() const {
  return copymap_ != NULL ? *copymap_ : *default_instance_->copymap_;
}
inline ::PBPlayerCopymap* PBPlayerSystem::mutable_copymap() {
  set_has_copymap();
  if (copymap_ == NULL) copymap_ = new ::PBPlayerCopymap;
  return copymap_;
}
inline ::PBPlayerCopymap* PBPlayerSystem::release_copymap() {
  clear_has_copymap();
  ::PBPlayerCopymap* temp = copymap_;
  copymap_ = NULL;
  return temp;
}

// optional .PBPlayerIdentity identity = 13;
inline bool PBPlayerSystem::has_identity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBPlayerSystem::set_has_identity() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBPlayerSystem::clear_has_identity() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBPlayerSystem::clear_identity() {
  if (identity_ != NULL) identity_->::PBPlayerIdentity::Clear();
  clear_has_identity();
}
inline const ::PBPlayerIdentity& PBPlayerSystem::identity() const {
  return identity_ != NULL ? *identity_ : *default_instance_->identity_;
}
inline ::PBPlayerIdentity* PBPlayerSystem::mutable_identity() {
  set_has_identity();
  if (identity_ == NULL) identity_ = new ::PBPlayerIdentity;
  return identity_;
}
inline ::PBPlayerIdentity* PBPlayerSystem::release_identity() {
  clear_has_identity();
  ::PBPlayerIdentity* temp = identity_;
  identity_ = NULL;
  return temp;
}

// optional .PBSystemSwitch systemSwitch = 14;
inline bool PBPlayerSystem::has_systemswitch() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PBPlayerSystem::set_has_systemswitch() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PBPlayerSystem::clear_has_systemswitch() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PBPlayerSystem::clear_systemswitch() {
  if (systemswitch_ != NULL) systemswitch_->::PBSystemSwitch::Clear();
  clear_has_systemswitch();
}
inline const ::PBSystemSwitch& PBPlayerSystem::systemswitch() const {
  return systemswitch_ != NULL ? *systemswitch_ : *default_instance_->systemswitch_;
}
inline ::PBSystemSwitch* PBPlayerSystem::mutable_systemswitch() {
  set_has_systemswitch();
  if (systemswitch_ == NULL) systemswitch_ = new ::PBSystemSwitch;
  return systemswitch_;
}
inline ::PBSystemSwitch* PBPlayerSystem::release_systemswitch() {
  clear_has_systemswitch();
  ::PBSystemSwitch* temp = systemswitch_;
  systemswitch_ = NULL;
  return temp;
}

// optional .PBPlayerColletion conlletion = 15;
inline bool PBPlayerSystem::has_conlletion() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PBPlayerSystem::set_has_conlletion() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PBPlayerSystem::clear_has_conlletion() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PBPlayerSystem::clear_conlletion() {
  if (conlletion_ != NULL) conlletion_->::PBPlayerColletion::Clear();
  clear_has_conlletion();
}
inline const ::PBPlayerColletion& PBPlayerSystem::conlletion() const {
  return conlletion_ != NULL ? *conlletion_ : *default_instance_->conlletion_;
}
inline ::PBPlayerColletion* PBPlayerSystem::mutable_conlletion() {
  set_has_conlletion();
  if (conlletion_ == NULL) conlletion_ = new ::PBPlayerColletion;
  return conlletion_;
}
inline ::PBPlayerColletion* PBPlayerSystem::release_conlletion() {
  clear_has_conlletion();
  ::PBPlayerColletion* temp = conlletion_;
  conlletion_ = NULL;
  return temp;
}

// optional .PBPlayerWuxue wuxue = 16;
inline bool PBPlayerSystem::has_wuxue() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PBPlayerSystem::set_has_wuxue() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PBPlayerSystem::clear_has_wuxue() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PBPlayerSystem::clear_wuxue() {
  if (wuxue_ != NULL) wuxue_->::PBPlayerWuxue::Clear();
  clear_has_wuxue();
}
inline const ::PBPlayerWuxue& PBPlayerSystem::wuxue() const {
  return wuxue_ != NULL ? *wuxue_ : *default_instance_->wuxue_;
}
inline ::PBPlayerWuxue* PBPlayerSystem::mutable_wuxue() {
  set_has_wuxue();
  if (wuxue_ == NULL) wuxue_ = new ::PBPlayerWuxue;
  return wuxue_;
}
inline ::PBPlayerWuxue* PBPlayerSystem::release_wuxue() {
  clear_has_wuxue();
  ::PBPlayerWuxue* temp = wuxue_;
  wuxue_ = NULL;
  return temp;
}

// optional .PBPlayerDart dart = 17;
inline bool PBPlayerSystem::has_dart() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PBPlayerSystem::set_has_dart() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PBPlayerSystem::clear_has_dart() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PBPlayerSystem::clear_dart() {
  if (dart_ != NULL) dart_->::PBPlayerDart::Clear();
  clear_has_dart();
}
inline const ::PBPlayerDart& PBPlayerSystem::dart() const {
  return dart_ != NULL ? *dart_ : *default_instance_->dart_;
}
inline ::PBPlayerDart* PBPlayerSystem::mutable_dart() {
  set_has_dart();
  if (dart_ == NULL) dart_ = new ::PBPlayerDart;
  return dart_;
}
inline ::PBPlayerDart* PBPlayerSystem::release_dart() {
  clear_has_dart();
  ::PBPlayerDart* temp = dart_;
  dart_ = NULL;
  return temp;
}

// optional .PBPlayerFactionBoss factionboss = 18;
inline bool PBPlayerSystem::has_factionboss() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PBPlayerSystem::set_has_factionboss() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PBPlayerSystem::clear_has_factionboss() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PBPlayerSystem::clear_factionboss() {
  if (factionboss_ != NULL) factionboss_->::PBPlayerFactionBoss::Clear();
  clear_has_factionboss();
}
inline const ::PBPlayerFactionBoss& PBPlayerSystem::factionboss() const {
  return factionboss_ != NULL ? *factionboss_ : *default_instance_->factionboss_;
}
inline ::PBPlayerFactionBoss* PBPlayerSystem::mutable_factionboss() {
  set_has_factionboss();
  if (factionboss_ == NULL) factionboss_ = new ::PBPlayerFactionBoss;
  return factionboss_;
}
inline ::PBPlayerFactionBoss* PBPlayerSystem::release_factionboss() {
  clear_has_factionboss();
  ::PBPlayerFactionBoss* temp = factionboss_;
  factionboss_ = NULL;
  return temp;
}

// optional .PBPlayerTitle title = 19;
inline bool PBPlayerSystem::has_title() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PBPlayerSystem::set_has_title() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PBPlayerSystem::clear_has_title() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PBPlayerSystem::clear_title() {
  if (title_ != NULL) title_->::PBPlayerTitle::Clear();
  clear_has_title();
}
inline const ::PBPlayerTitle& PBPlayerSystem::title() const {
  return title_ != NULL ? *title_ : *default_instance_->title_;
}
inline ::PBPlayerTitle* PBPlayerSystem::mutable_title() {
  set_has_title();
  if (title_ == NULL) title_ = new ::PBPlayerTitle;
  return title_;
}
inline ::PBPlayerTitle* PBPlayerSystem::release_title() {
  clear_has_title();
  ::PBPlayerTitle* temp = title_;
  title_ = NULL;
  return temp;
}

// optional .PBPlayerDazuoguaji dazuoguaji = 20;
inline bool PBPlayerSystem::has_dazuoguaji() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PBPlayerSystem::set_has_dazuoguaji() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PBPlayerSystem::clear_has_dazuoguaji() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PBPlayerSystem::clear_dazuoguaji() {
  if (dazuoguaji_ != NULL) dazuoguaji_->::PBPlayerDazuoguaji::Clear();
  clear_has_dazuoguaji();
}
inline const ::PBPlayerDazuoguaji& PBPlayerSystem::dazuoguaji() const {
  return dazuoguaji_ != NULL ? *dazuoguaji_ : *default_instance_->dazuoguaji_;
}
inline ::PBPlayerDazuoguaji* PBPlayerSystem::mutable_dazuoguaji() {
  set_has_dazuoguaji();
  if (dazuoguaji_ == NULL) dazuoguaji_ = new ::PBPlayerDazuoguaji;
  return dazuoguaji_;
}
inline ::PBPlayerDazuoguaji* PBPlayerSystem::release_dazuoguaji() {
  clear_has_dazuoguaji();
  ::PBPlayerDazuoguaji* temp = dazuoguaji_;
  dazuoguaji_ = NULL;
  return temp;
}

// optional .PBPlayerFashion fashion = 21;
inline bool PBPlayerSystem::has_fashion() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PBPlayerSystem::set_has_fashion() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PBPlayerSystem::clear_has_fashion() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PBPlayerSystem::clear_fashion() {
  if (fashion_ != NULL) fashion_->::PBPlayerFashion::Clear();
  clear_has_fashion();
}
inline const ::PBPlayerFashion& PBPlayerSystem::fashion() const {
  return fashion_ != NULL ? *fashion_ : *default_instance_->fashion_;
}
inline ::PBPlayerFashion* PBPlayerSystem::mutable_fashion() {
  set_has_fashion();
  if (fashion_ == NULL) fashion_ = new ::PBPlayerFashion;
  return fashion_;
}
inline ::PBPlayerFashion* PBPlayerSystem::release_fashion() {
  clear_has_fashion();
  ::PBPlayerFashion* temp = fashion_;
  fashion_ = NULL;
  return temp;
}

// optional .PBPlayerEquipColumn equipColumn = 22;
inline bool PBPlayerSystem::has_equipcolumn() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PBPlayerSystem::set_has_equipcolumn() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PBPlayerSystem::clear_has_equipcolumn() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PBPlayerSystem::clear_equipcolumn() {
  if (equipcolumn_ != NULL) equipcolumn_->::PBPlayerEquipColumn::Clear();
  clear_has_equipcolumn();
}
inline const ::PBPlayerEquipColumn& PBPlayerSystem::equipcolumn() const {
  return equipcolumn_ != NULL ? *equipcolumn_ : *default_instance_->equipcolumn_;
}
inline ::PBPlayerEquipColumn* PBPlayerSystem::mutable_equipcolumn() {
  set_has_equipcolumn();
  if (equipcolumn_ == NULL) equipcolumn_ = new ::PBPlayerEquipColumn;
  return equipcolumn_;
}
inline ::PBPlayerEquipColumn* PBPlayerSystem::release_equipcolumn() {
  clear_has_equipcolumn();
  ::PBPlayerEquipColumn* temp = equipcolumn_;
  equipcolumn_ = NULL;
  return temp;
}

// optional .PBPlayerClimbTower climbTower = 23;
inline bool PBPlayerSystem::has_climbtower() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PBPlayerSystem::set_has_climbtower() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PBPlayerSystem::clear_has_climbtower() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PBPlayerSystem::clear_climbtower() {
  if (climbtower_ != NULL) climbtower_->::PBPlayerClimbTower::Clear();
  clear_has_climbtower();
}
inline const ::PBPlayerClimbTower& PBPlayerSystem::climbtower() const {
  return climbtower_ != NULL ? *climbtower_ : *default_instance_->climbtower_;
}
inline ::PBPlayerClimbTower* PBPlayerSystem::mutable_climbtower() {
  set_has_climbtower();
  if (climbtower_ == NULL) climbtower_ = new ::PBPlayerClimbTower;
  return climbtower_;
}
inline ::PBPlayerClimbTower* PBPlayerSystem::release_climbtower() {
  clear_has_climbtower();
  ::PBPlayerClimbTower* temp = climbtower_;
  climbtower_ = NULL;
  return temp;
}

// optional .PBPlayerPvp pvp = 24;
inline bool PBPlayerSystem::has_pvp() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PBPlayerSystem::set_has_pvp() {
  _has_bits_[0] |= 0x00800000u;
}
inline void PBPlayerSystem::clear_has_pvp() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void PBPlayerSystem::clear_pvp() {
  if (pvp_ != NULL) pvp_->::PBPlayerPvp::Clear();
  clear_has_pvp();
}
inline const ::PBPlayerPvp& PBPlayerSystem::pvp() const {
  return pvp_ != NULL ? *pvp_ : *default_instance_->pvp_;
}
inline ::PBPlayerPvp* PBPlayerSystem::mutable_pvp() {
  set_has_pvp();
  if (pvp_ == NULL) pvp_ = new ::PBPlayerPvp;
  return pvp_;
}
inline ::PBPlayerPvp* PBPlayerSystem::release_pvp() {
  clear_has_pvp();
  ::PBPlayerPvp* temp = pvp_;
  pvp_ = NULL;
  return temp;
}

// optional .PBPlayerGreatWallTrain gwTrain = 25;
inline bool PBPlayerSystem::has_gwtrain() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PBPlayerSystem::set_has_gwtrain() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PBPlayerSystem::clear_has_gwtrain() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PBPlayerSystem::clear_gwtrain() {
  if (gwtrain_ != NULL) gwtrain_->::PBPlayerGreatWallTrain::Clear();
  clear_has_gwtrain();
}
inline const ::PBPlayerGreatWallTrain& PBPlayerSystem::gwtrain() const {
  return gwtrain_ != NULL ? *gwtrain_ : *default_instance_->gwtrain_;
}
inline ::PBPlayerGreatWallTrain* PBPlayerSystem::mutable_gwtrain() {
  set_has_gwtrain();
  if (gwtrain_ == NULL) gwtrain_ = new ::PBPlayerGreatWallTrain;
  return gwtrain_;
}
inline ::PBPlayerGreatWallTrain* PBPlayerSystem::release_gwtrain() {
  clear_has_gwtrain();
  ::PBPlayerGreatWallTrain* temp = gwtrain_;
  gwtrain_ = NULL;
  return temp;
}

// optional .PBPlayerActivity activity = 26;
inline bool PBPlayerSystem::has_activity() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PBPlayerSystem::set_has_activity() {
  _has_bits_[0] |= 0x02000000u;
}
inline void PBPlayerSystem::clear_has_activity() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void PBPlayerSystem::clear_activity() {
  if (activity_ != NULL) activity_->::PBPlayerActivity::Clear();
  clear_has_activity();
}
inline const ::PBPlayerActivity& PBPlayerSystem::activity() const {
  return activity_ != NULL ? *activity_ : *default_instance_->activity_;
}
inline ::PBPlayerActivity* PBPlayerSystem::mutable_activity() {
  set_has_activity();
  if (activity_ == NULL) activity_ = new ::PBPlayerActivity;
  return activity_;
}
inline ::PBPlayerActivity* PBPlayerSystem::release_activity() {
  clear_has_activity();
  ::PBPlayerActivity* temp = activity_;
  activity_ = NULL;
  return temp;
}

// optional .PBLlayerRelive relive = 27;
inline bool PBPlayerSystem::has_relive() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PBPlayerSystem::set_has_relive() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PBPlayerSystem::clear_has_relive() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PBPlayerSystem::clear_relive() {
  if (relive_ != NULL) relive_->::PBLlayerRelive::Clear();
  clear_has_relive();
}
inline const ::PBLlayerRelive& PBPlayerSystem::relive() const {
  return relive_ != NULL ? *relive_ : *default_instance_->relive_;
}
inline ::PBLlayerRelive* PBPlayerSystem::mutable_relive() {
  set_has_relive();
  if (relive_ == NULL) relive_ = new ::PBLlayerRelive;
  return relive_;
}
inline ::PBLlayerRelive* PBPlayerSystem::release_relive() {
  clear_has_relive();
  ::PBLlayerRelive* temp = relive_;
  relive_ = NULL;
  return temp;
}

// optional .PBPlayerSinglePvp singlepvp = 28;
inline bool PBPlayerSystem::has_singlepvp() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PBPlayerSystem::set_has_singlepvp() {
  _has_bits_[0] |= 0x08000000u;
}
inline void PBPlayerSystem::clear_has_singlepvp() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void PBPlayerSystem::clear_singlepvp() {
  if (singlepvp_ != NULL) singlepvp_->::PBPlayerSinglePvp::Clear();
  clear_has_singlepvp();
}
inline const ::PBPlayerSinglePvp& PBPlayerSystem::singlepvp() const {
  return singlepvp_ != NULL ? *singlepvp_ : *default_instance_->singlepvp_;
}
inline ::PBPlayerSinglePvp* PBPlayerSystem::mutable_singlepvp() {
  set_has_singlepvp();
  if (singlepvp_ == NULL) singlepvp_ = new ::PBPlayerSinglePvp;
  return singlepvp_;
}
inline ::PBPlayerSinglePvp* PBPlayerSystem::release_singlepvp() {
  clear_has_singlepvp();
  ::PBPlayerSinglePvp* temp = singlepvp_;
  singlepvp_ = NULL;
  return temp;
}

// optional .PBPlayerCommon common = 29;
inline bool PBPlayerSystem::has_common() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PBPlayerSystem::set_has_common() {
  _has_bits_[0] |= 0x10000000u;
}
inline void PBPlayerSystem::clear_has_common() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void PBPlayerSystem::clear_common() {
  if (common_ != NULL) common_->::PBPlayerCommon::Clear();
  clear_has_common();
}
inline const ::PBPlayerCommon& PBPlayerSystem::common() const {
  return common_ != NULL ? *common_ : *default_instance_->common_;
}
inline ::PBPlayerCommon* PBPlayerSystem::mutable_common() {
  set_has_common();
  if (common_ == NULL) common_ = new ::PBPlayerCommon;
  return common_;
}
inline ::PBPlayerCommon* PBPlayerSystem::release_common() {
  clear_has_common();
  ::PBPlayerCommon* temp = common_;
  common_ = NULL;
  return temp;
}

// optional .PBPlayerManor manor = 30;
inline bool PBPlayerSystem::has_manor() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void PBPlayerSystem::set_has_manor() {
  _has_bits_[0] |= 0x20000000u;
}
inline void PBPlayerSystem::clear_has_manor() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void PBPlayerSystem::clear_manor() {
  if (manor_ != NULL) manor_->::PBPlayerManor::Clear();
  clear_has_manor();
}
inline const ::PBPlayerManor& PBPlayerSystem::manor() const {
  return manor_ != NULL ? *manor_ : *default_instance_->manor_;
}
inline ::PBPlayerManor* PBPlayerSystem::mutable_manor() {
  set_has_manor();
  if (manor_ == NULL) manor_ = new ::PBPlayerManor;
  return manor_;
}
inline ::PBPlayerManor* PBPlayerSystem::release_manor() {
  clear_has_manor();
  ::PBPlayerManor* temp = manor_;
  manor_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBPlayerGlobalBase

// optional .PBPlayerView view = 1;
inline bool PBPlayerGlobalBase::has_view() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerGlobalBase::set_has_view() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerGlobalBase::clear_has_view() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerGlobalBase::clear_view() {
  if (view_ != NULL) view_->::PBPlayerView::Clear();
  clear_has_view();
}
inline const ::PBPlayerView& PBPlayerGlobalBase::view() const {
  return view_ != NULL ? *view_ : *default_instance_->view_;
}
inline ::PBPlayerView* PBPlayerGlobalBase::mutable_view() {
  set_has_view();
  if (view_ == NULL) view_ = new ::PBPlayerView;
  return view_;
}
inline ::PBPlayerView* PBPlayerGlobalBase::release_view() {
  clear_has_view();
  ::PBPlayerView* temp = view_;
  view_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBSaleMoneyInfo

// optional uint64 orderid = 1;
inline bool PBSaleMoneyInfo::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSaleMoneyInfo::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSaleMoneyInfo::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSaleMoneyInfo::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
  clear_has_orderid();
}
inline ::google::protobuf::uint64 PBSaleMoneyInfo::orderid() const {
  return orderid_;
}
inline void PBSaleMoneyInfo::set_orderid(::google::protobuf::uint64 value) {
  set_has_orderid();
  orderid_ = value;
}

// optional uint32 type = 2;
inline bool PBSaleMoneyInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSaleMoneyInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSaleMoneyInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSaleMoneyInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBSaleMoneyInfo::type() const {
  return type_;
}
inline void PBSaleMoneyInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 cash = 3;
inline bool PBSaleMoneyInfo::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSaleMoneyInfo::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSaleMoneyInfo::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSaleMoneyInfo::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 PBSaleMoneyInfo::cash() const {
  return cash_;
}
inline void PBSaleMoneyInfo::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// optional uint64 sliver = 4;
inline bool PBSaleMoneyInfo::has_sliver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBSaleMoneyInfo::set_has_sliver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBSaleMoneyInfo::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBSaleMoneyInfo::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBSaleMoneyInfo::sliver() const {
  return sliver_;
}
inline void PBSaleMoneyInfo::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint32 time = 5;
inline bool PBSaleMoneyInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBSaleMoneyInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBSaleMoneyInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBSaleMoneyInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBSaleMoneyInfo::time() const {
  return time_;
}
inline void PBSaleMoneyInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBSaleMoneyLog

// optional uint32 type = 1;
inline bool PBSaleMoneyLog::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSaleMoneyLog::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSaleMoneyLog::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSaleMoneyLog::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBSaleMoneyLog::type() const {
  return type_;
}
inline void PBSaleMoneyLog::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional .PBPlayerDisplay display = 2;
inline bool PBSaleMoneyLog::has_display() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSaleMoneyLog::set_has_display() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSaleMoneyLog::clear_has_display() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSaleMoneyLog::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBSaleMoneyLog::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBSaleMoneyLog::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBSaleMoneyLog::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 cash = 3;
inline bool PBSaleMoneyLog::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSaleMoneyLog::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSaleMoneyLog::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSaleMoneyLog::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 PBSaleMoneyLog::cash() const {
  return cash_;
}
inline void PBSaleMoneyLog::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// optional uint64 sliver = 4;
inline bool PBSaleMoneyLog::has_sliver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBSaleMoneyLog::set_has_sliver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBSaleMoneyLog::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBSaleMoneyLog::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBSaleMoneyLog::sliver() const {
  return sliver_;
}
inline void PBSaleMoneyLog::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint32 time = 5;
inline bool PBSaleMoneyLog::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBSaleMoneyLog::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBSaleMoneyLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBSaleMoneyLog::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBSaleMoneyLog::time() const {
  return time_;
}
inline void PBSaleMoneyLog::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBPlayerGlobalSaleMoney

// repeated .PBSaleMoneyInfo list = 1;
inline int PBPlayerGlobalSaleMoney::list_size() const {
  return list_.size();
}
inline void PBPlayerGlobalSaleMoney::clear_list() {
  list_.Clear();
}
inline const ::PBSaleMoneyInfo& PBPlayerGlobalSaleMoney::list(int index) const {
  return list_.Get(index);
}
inline ::PBSaleMoneyInfo* PBPlayerGlobalSaleMoney::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::PBSaleMoneyInfo* PBPlayerGlobalSaleMoney::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyInfo >&
PBPlayerGlobalSaleMoney::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyInfo >*
PBPlayerGlobalSaleMoney::mutable_list() {
  return &list_;
}

// repeated .PBSaleMoneyLog log = 2;
inline int PBPlayerGlobalSaleMoney::log_size() const {
  return log_.size();
}
inline void PBPlayerGlobalSaleMoney::clear_log() {
  log_.Clear();
}
inline const ::PBSaleMoneyLog& PBPlayerGlobalSaleMoney::log(int index) const {
  return log_.Get(index);
}
inline ::PBSaleMoneyLog* PBPlayerGlobalSaleMoney::mutable_log(int index) {
  return log_.Mutable(index);
}
inline ::PBSaleMoneyLog* PBPlayerGlobalSaleMoney::add_log() {
  return log_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >&
PBPlayerGlobalSaleMoney::log() const {
  return log_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >*
PBPlayerGlobalSaleMoney::mutable_log() {
  return &log_;
}

// -------------------------------------------------------------------

// PBPlayerGlobalSaleMoneySave

// repeated .PBSaleMoneyLog log = 1;
inline int PBPlayerGlobalSaleMoneySave::log_size() const {
  return log_.size();
}
inline void PBPlayerGlobalSaleMoneySave::clear_log() {
  log_.Clear();
}
inline const ::PBSaleMoneyLog& PBPlayerGlobalSaleMoneySave::log(int index) const {
  return log_.Get(index);
}
inline ::PBSaleMoneyLog* PBPlayerGlobalSaleMoneySave::mutable_log(int index) {
  return log_.Mutable(index);
}
inline ::PBSaleMoneyLog* PBPlayerGlobalSaleMoneySave::add_log() {
  return log_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >&
PBPlayerGlobalSaleMoneySave::log() const {
  return log_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyLog >*
PBPlayerGlobalSaleMoneySave::mutable_log() {
  return &log_;
}

// -------------------------------------------------------------------

// PBSaleMoneyInfoEx

// optional .PBSaleMoneyInfo data = 1;
inline bool PBSaleMoneyInfoEx::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSaleMoneyInfoEx::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSaleMoneyInfoEx::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSaleMoneyInfoEx::clear_data() {
  if (data_ != NULL) data_->::PBSaleMoneyInfo::Clear();
  clear_has_data();
}
inline const ::PBSaleMoneyInfo& PBSaleMoneyInfoEx::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::PBSaleMoneyInfo* PBSaleMoneyInfoEx::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::PBSaleMoneyInfo;
  return data_;
}
inline ::PBSaleMoneyInfo* PBSaleMoneyInfoEx::release_data() {
  clear_has_data();
  ::PBSaleMoneyInfo* temp = data_;
  data_ = NULL;
  return temp;
}

// optional .PBPlayerDisplay display = 2;
inline bool PBSaleMoneyInfoEx::has_display() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSaleMoneyInfoEx::set_has_display() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSaleMoneyInfoEx::clear_has_display() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSaleMoneyInfoEx::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBSaleMoneyInfoEx::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBSaleMoneyInfoEx::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBSaleMoneyInfoEx::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBSaleMoneyStatistics

// repeated int32 prices = 1;
inline int PBSaleMoneyStatistics::prices_size() const {
  return prices_.size();
}
inline void PBSaleMoneyStatistics::clear_prices() {
  prices_.Clear();
}
inline ::google::protobuf::int32 PBSaleMoneyStatistics::prices(int index) const {
  return prices_.Get(index);
}
inline void PBSaleMoneyStatistics::set_prices(int index, ::google::protobuf::int32 value) {
  prices_.Set(index, value);
}
inline void PBSaleMoneyStatistics::add_prices(::google::protobuf::int32 value) {
  prices_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBSaleMoneyStatistics::prices() const {
  return prices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBSaleMoneyStatistics::mutable_prices() {
  return &prices_;
}

// repeated int64 amounts = 2 [packed = true];
inline int PBSaleMoneyStatistics::amounts_size() const {
  return amounts_.size();
}
inline void PBSaleMoneyStatistics::clear_amounts() {
  amounts_.Clear();
}
inline ::google::protobuf::int64 PBSaleMoneyStatistics::amounts(int index) const {
  return amounts_.Get(index);
}
inline void PBSaleMoneyStatistics::set_amounts(int index, ::google::protobuf::int64 value) {
  amounts_.Set(index, value);
}
inline void PBSaleMoneyStatistics::add_amounts(::google::protobuf::int64 value) {
  amounts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PBSaleMoneyStatistics::amounts() const {
  return amounts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PBSaleMoneyStatistics::mutable_amounts() {
  return &amounts_;
}

// optional int32 timetotal = 3;
inline bool PBSaleMoneyStatistics::has_timetotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSaleMoneyStatistics::set_has_timetotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSaleMoneyStatistics::clear_has_timetotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSaleMoneyStatistics::clear_timetotal() {
  timetotal_ = 0;
  clear_has_timetotal();
}
inline ::google::protobuf::int32 PBSaleMoneyStatistics::timetotal() const {
  return timetotal_;
}
inline void PBSaleMoneyStatistics::set_timetotal(::google::protobuf::int32 value) {
  set_has_timetotal();
  timetotal_ = value;
}

// optional int64 amounttotal = 4;
inline bool PBSaleMoneyStatistics::has_amounttotal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBSaleMoneyStatistics::set_has_amounttotal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBSaleMoneyStatistics::clear_has_amounttotal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBSaleMoneyStatistics::clear_amounttotal() {
  amounttotal_ = GOOGLE_LONGLONG(0);
  clear_has_amounttotal();
}
inline ::google::protobuf::int64 PBSaleMoneyStatistics::amounttotal() const {
  return amounttotal_;
}
inline void PBSaleMoneyStatistics::set_amounttotal(::google::protobuf::int64 value) {
  set_has_amounttotal();
  amounttotal_ = value;
}

// optional int64 moneytotal = 5;
inline bool PBSaleMoneyStatistics::has_moneytotal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBSaleMoneyStatistics::set_has_moneytotal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBSaleMoneyStatistics::clear_has_moneytotal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBSaleMoneyStatistics::clear_moneytotal() {
  moneytotal_ = GOOGLE_LONGLONG(0);
  clear_has_moneytotal();
}
inline ::google::protobuf::int64 PBSaleMoneyStatistics::moneytotal() const {
  return moneytotal_;
}
inline void PBSaleMoneyStatistics::set_moneytotal(::google::protobuf::int64 value) {
  set_has_moneytotal();
  moneytotal_ = value;
}

// -------------------------------------------------------------------

// PBSaleMoneyRecentTradeLog

// optional uint32 cash = 2;
inline bool PBSaleMoneyRecentTradeLog::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSaleMoneyRecentTradeLog::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSaleMoneyRecentTradeLog::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSaleMoneyRecentTradeLog::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 PBSaleMoneyRecentTradeLog::cash() const {
  return cash_;
}
inline void PBSaleMoneyRecentTradeLog::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// optional uint64 sliver = 3;
inline bool PBSaleMoneyRecentTradeLog::has_sliver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSaleMoneyRecentTradeLog::set_has_sliver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSaleMoneyRecentTradeLog::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSaleMoneyRecentTradeLog::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBSaleMoneyRecentTradeLog::sliver() const {
  return sliver_;
}
inline void PBSaleMoneyRecentTradeLog::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint32 time = 4;
inline bool PBSaleMoneyRecentTradeLog::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBSaleMoneyRecentTradeLog::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBSaleMoneyRecentTradeLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBSaleMoneyRecentTradeLog::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBSaleMoneyRecentTradeLog::time() const {
  return time_;
}
inline void PBSaleMoneyRecentTradeLog::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBSaleMoneyPriceData

// optional uint64 time = 1;
inline bool PBSaleMoneyPriceData::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSaleMoneyPriceData::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSaleMoneyPriceData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 PBSaleMoneyPriceData::time() const {
  return time_;
}
inline void PBSaleMoneyPriceData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// optional double aveprice = 2;
inline bool PBSaleMoneyPriceData::has_aveprice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_aveprice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSaleMoneyPriceData::clear_has_aveprice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSaleMoneyPriceData::clear_aveprice() {
  aveprice_ = 0;
  clear_has_aveprice();
}
inline double PBSaleMoneyPriceData::aveprice() const {
  return aveprice_;
}
inline void PBSaleMoneyPriceData::set_aveprice(double value) {
  set_has_aveprice();
  aveprice_ = value;
}

// repeated .PBSaleMoneyStatistics statistics = 3;
inline int PBSaleMoneyPriceData::statistics_size() const {
  return statistics_.size();
}
inline void PBSaleMoneyPriceData::clear_statistics() {
  statistics_.Clear();
}
inline const ::PBSaleMoneyStatistics& PBSaleMoneyPriceData::statistics(int index) const {
  return statistics_.Get(index);
}
inline ::PBSaleMoneyStatistics* PBSaleMoneyPriceData::mutable_statistics(int index) {
  return statistics_.Mutable(index);
}
inline ::PBSaleMoneyStatistics* PBSaleMoneyPriceData::add_statistics() {
  return statistics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyStatistics >&
PBSaleMoneyPriceData::statistics() const {
  return statistics_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyStatistics >*
PBSaleMoneyPriceData::mutable_statistics() {
  return &statistics_;
}

// optional .PBSaleMoneyStatistics curstatistics = 4;
inline bool PBSaleMoneyPriceData::has_curstatistics() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_curstatistics() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBSaleMoneyPriceData::clear_has_curstatistics() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBSaleMoneyPriceData::clear_curstatistics() {
  if (curstatistics_ != NULL) curstatistics_->::PBSaleMoneyStatistics::Clear();
  clear_has_curstatistics();
}
inline const ::PBSaleMoneyStatistics& PBSaleMoneyPriceData::curstatistics() const {
  return curstatistics_ != NULL ? *curstatistics_ : *default_instance_->curstatistics_;
}
inline ::PBSaleMoneyStatistics* PBSaleMoneyPriceData::mutable_curstatistics() {
  set_has_curstatistics();
  if (curstatistics_ == NULL) curstatistics_ = new ::PBSaleMoneyStatistics;
  return curstatistics_;
}
inline ::PBSaleMoneyStatistics* PBSaleMoneyPriceData::release_curstatistics() {
  clear_has_curstatistics();
  ::PBSaleMoneyStatistics* temp = curstatistics_;
  curstatistics_ = NULL;
  return temp;
}

// optional int32 refprice = 5;
inline bool PBSaleMoneyPriceData::has_refprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_refprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBSaleMoneyPriceData::clear_has_refprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBSaleMoneyPriceData::clear_refprice() {
  refprice_ = 0;
  clear_has_refprice();
}
inline ::google::protobuf::int32 PBSaleMoneyPriceData::refprice() const {
  return refprice_;
}
inline void PBSaleMoneyPriceData::set_refprice(::google::protobuf::int32 value) {
  set_has_refprice();
  refprice_ = value;
}

// optional uint64 supplystamp = 6;
inline bool PBSaleMoneyPriceData::has_supplystamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_supplystamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBSaleMoneyPriceData::clear_has_supplystamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBSaleMoneyPriceData::clear_supplystamp() {
  supplystamp_ = GOOGLE_ULONGLONG(0);
  clear_has_supplystamp();
}
inline ::google::protobuf::uint64 PBSaleMoneyPriceData::supplystamp() const {
  return supplystamp_;
}
inline void PBSaleMoneyPriceData::set_supplystamp(::google::protobuf::uint64 value) {
  set_has_supplystamp();
  supplystamp_ = value;
}

// optional uint64 nextsupplystamp = 7;
inline bool PBSaleMoneyPriceData::has_nextsupplystamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_nextsupplystamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBSaleMoneyPriceData::clear_has_nextsupplystamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBSaleMoneyPriceData::clear_nextsupplystamp() {
  nextsupplystamp_ = GOOGLE_ULONGLONG(0);
  clear_has_nextsupplystamp();
}
inline ::google::protobuf::uint64 PBSaleMoneyPriceData::nextsupplystamp() const {
  return nextsupplystamp_;
}
inline void PBSaleMoneyPriceData::set_nextsupplystamp(::google::protobuf::uint64 value) {
  set_has_nextsupplystamp();
  nextsupplystamp_ = value;
}

// optional uint64 lastchkstamp = 8;
inline bool PBSaleMoneyPriceData::has_lastchkstamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_lastchkstamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBSaleMoneyPriceData::clear_has_lastchkstamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBSaleMoneyPriceData::clear_lastchkstamp() {
  lastchkstamp_ = GOOGLE_ULONGLONG(0);
  clear_has_lastchkstamp();
}
inline ::google::protobuf::uint64 PBSaleMoneyPriceData::lastchkstamp() const {
  return lastchkstamp_;
}
inline void PBSaleMoneyPriceData::set_lastchkstamp(::google::protobuf::uint64 value) {
  set_has_lastchkstamp();
  lastchkstamp_ = value;
}

// optional .PBSaleMoneyStatistics chkstatistics = 9;
inline bool PBSaleMoneyPriceData::has_chkstatistics() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBSaleMoneyPriceData::set_has_chkstatistics() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBSaleMoneyPriceData::clear_has_chkstatistics() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBSaleMoneyPriceData::clear_chkstatistics() {
  if (chkstatistics_ != NULL) chkstatistics_->::PBSaleMoneyStatistics::Clear();
  clear_has_chkstatistics();
}
inline const ::PBSaleMoneyStatistics& PBSaleMoneyPriceData::chkstatistics() const {
  return chkstatistics_ != NULL ? *chkstatistics_ : *default_instance_->chkstatistics_;
}
inline ::PBSaleMoneyStatistics* PBSaleMoneyPriceData::mutable_chkstatistics() {
  set_has_chkstatistics();
  if (chkstatistics_ == NULL) chkstatistics_ = new ::PBSaleMoneyStatistics;
  return chkstatistics_;
}
inline ::PBSaleMoneyStatistics* PBSaleMoneyPriceData::release_chkstatistics() {
  clear_has_chkstatistics();
  ::PBSaleMoneyStatistics* temp = chkstatistics_;
  chkstatistics_ = NULL;
  return temp;
}

// repeated .PBSaleMoneyRecentTradeLog tradelog = 10;
inline int PBSaleMoneyPriceData::tradelog_size() const {
  return tradelog_.size();
}
inline void PBSaleMoneyPriceData::clear_tradelog() {
  tradelog_.Clear();
}
inline const ::PBSaleMoneyRecentTradeLog& PBSaleMoneyPriceData::tradelog(int index) const {
  return tradelog_.Get(index);
}
inline ::PBSaleMoneyRecentTradeLog* PBSaleMoneyPriceData::mutable_tradelog(int index) {
  return tradelog_.Mutable(index);
}
inline ::PBSaleMoneyRecentTradeLog* PBSaleMoneyPriceData::add_tradelog() {
  return tradelog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyRecentTradeLog >&
PBSaleMoneyPriceData::tradelog() const {
  return tradelog_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBSaleMoneyRecentTradeLog >*
PBSaleMoneyPriceData::mutable_tradelog() {
  return &tradelog_;
}

// -------------------------------------------------------------------

// PBAuctionItemInfo

// optional uint64 saleorderid = 1;
inline bool PBAuctionItemInfo::has_saleorderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBAuctionItemInfo::set_has_saleorderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBAuctionItemInfo::clear_has_saleorderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBAuctionItemInfo::clear_saleorderid() {
  saleorderid_ = GOOGLE_ULONGLONG(0);
  clear_has_saleorderid();
}
inline ::google::protobuf::uint64 PBAuctionItemInfo::saleorderid() const {
  return saleorderid_;
}
inline void PBAuctionItemInfo::set_saleorderid(::google::protobuf::uint64 value) {
  set_has_saleorderid();
  saleorderid_ = value;
}

// optional uint32 salesliver = 2;
inline bool PBAuctionItemInfo::has_salesliver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBAuctionItemInfo::set_has_salesliver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBAuctionItemInfo::clear_has_salesliver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBAuctionItemInfo::clear_salesliver() {
  salesliver_ = 0u;
  clear_has_salesliver();
}
inline ::google::protobuf::uint32 PBAuctionItemInfo::salesliver() const {
  return salesliver_;
}
inline void PBAuctionItemInfo::set_salesliver(::google::protobuf::uint32 value) {
  set_has_salesliver();
  salesliver_ = value;
}

// optional .PBItem item = 3;
inline bool PBAuctionItemInfo::has_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBAuctionItemInfo::set_has_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBAuctionItemInfo::clear_has_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBAuctionItemInfo::clear_item() {
  if (item_ != NULL) item_->::PBItem::Clear();
  clear_has_item();
}
inline const ::PBItem& PBAuctionItemInfo::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBItem* PBAuctionItemInfo::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::PBItem;
  return item_;
}
inline ::PBItem* PBAuctionItemInfo::release_item() {
  clear_has_item();
  ::PBItem* temp = item_;
  item_ = NULL;
  return temp;
}

// optional uint32 time = 4;
inline bool PBAuctionItemInfo::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBAuctionItemInfo::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBAuctionItemInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBAuctionItemInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBAuctionItemInfo::time() const {
  return time_;
}
inline void PBAuctionItemInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 unlocktime = 5;
inline bool PBAuctionItemInfo::has_unlocktime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBAuctionItemInfo::set_has_unlocktime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBAuctionItemInfo::clear_has_unlocktime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBAuctionItemInfo::clear_unlocktime() {
  unlocktime_ = 0u;
  clear_has_unlocktime();
}
inline ::google::protobuf::uint32 PBAuctionItemInfo::unlocktime() const {
  return unlocktime_;
}
inline void PBAuctionItemInfo::set_unlocktime(::google::protobuf::uint32 value) {
  set_has_unlocktime();
  unlocktime_ = value;
}

// optional uint32 buysliver = 6;
inline bool PBAuctionItemInfo::has_buysliver() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBAuctionItemInfo::set_has_buysliver() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBAuctionItemInfo::clear_has_buysliver() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBAuctionItemInfo::clear_buysliver() {
  buysliver_ = 0u;
  clear_has_buysliver();
}
inline ::google::protobuf::uint32 PBAuctionItemInfo::buysliver() const {
  return buysliver_;
}
inline void PBAuctionItemInfo::set_buysliver(::google::protobuf::uint32 value) {
  set_has_buysliver();
  buysliver_ = value;
}

// optional uint32 buycount = 7;
inline bool PBAuctionItemInfo::has_buycount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBAuctionItemInfo::set_has_buycount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBAuctionItemInfo::clear_has_buycount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBAuctionItemInfo::clear_buycount() {
  buycount_ = 0u;
  clear_has_buycount();
}
inline ::google::protobuf::uint32 PBAuctionItemInfo::buycount() const {
  return buycount_;
}
inline void PBAuctionItemInfo::set_buycount(::google::protobuf::uint32 value) {
  set_has_buycount();
  buycount_ = value;
}

// -------------------------------------------------------------------

// PBAuctionLog

// optional uint32 type = 1;
inline bool PBAuctionLog::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBAuctionLog::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBAuctionLog::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBAuctionLog::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBAuctionLog::type() const {
  return type_;
}
inline void PBAuctionLog::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional .PBPlayerDisplay display = 2;
inline bool PBAuctionLog::has_display() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBAuctionLog::set_has_display() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBAuctionLog::clear_has_display() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBAuctionLog::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBAuctionLog::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBAuctionLog::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBAuctionLog::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional .PBItem pbItem = 3;
inline bool PBAuctionLog::has_pbitem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBAuctionLog::set_has_pbitem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBAuctionLog::clear_has_pbitem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBAuctionLog::clear_pbitem() {
  if (pbitem_ != NULL) pbitem_->::PBItem::Clear();
  clear_has_pbitem();
}
inline const ::PBItem& PBAuctionLog::pbitem() const {
  return pbitem_ != NULL ? *pbitem_ : *default_instance_->pbitem_;
}
inline ::PBItem* PBAuctionLog::mutable_pbitem() {
  set_has_pbitem();
  if (pbitem_ == NULL) pbitem_ = new ::PBItem;
  return pbitem_;
}
inline ::PBItem* PBAuctionLog::release_pbitem() {
  clear_has_pbitem();
  ::PBItem* temp = pbitem_;
  pbitem_ = NULL;
  return temp;
}

// optional uint64 sliver = 4;
inline bool PBAuctionLog::has_sliver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBAuctionLog::set_has_sliver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBAuctionLog::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBAuctionLog::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBAuctionLog::sliver() const {
  return sliver_;
}
inline void PBAuctionLog::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint32 time = 5;
inline bool PBAuctionLog::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBAuctionLog::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBAuctionLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBAuctionLog::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBAuctionLog::time() const {
  return time_;
}
inline void PBAuctionLog::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBPlayerGlobalAuction

// repeated .PBAuctionItemInfo item = 1;
inline int PBPlayerGlobalAuction::item_size() const {
  return item_.size();
}
inline void PBPlayerGlobalAuction::clear_item() {
  item_.Clear();
}
inline const ::PBAuctionItemInfo& PBPlayerGlobalAuction::item(int index) const {
  return item_.Get(index);
}
inline ::PBAuctionItemInfo* PBPlayerGlobalAuction::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBAuctionItemInfo* PBPlayerGlobalAuction::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >&
PBPlayerGlobalAuction::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >*
PBPlayerGlobalAuction::mutable_item() {
  return &item_;
}

// repeated .PBAuctionItemInfo lockinfo = 2;
inline int PBPlayerGlobalAuction::lockinfo_size() const {
  return lockinfo_.size();
}
inline void PBPlayerGlobalAuction::clear_lockinfo() {
  lockinfo_.Clear();
}
inline const ::PBAuctionItemInfo& PBPlayerGlobalAuction::lockinfo(int index) const {
  return lockinfo_.Get(index);
}
inline ::PBAuctionItemInfo* PBPlayerGlobalAuction::mutable_lockinfo(int index) {
  return lockinfo_.Mutable(index);
}
inline ::PBAuctionItemInfo* PBPlayerGlobalAuction::add_lockinfo() {
  return lockinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >&
PBPlayerGlobalAuction::lockinfo() const {
  return lockinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAuctionItemInfo >*
PBPlayerGlobalAuction::mutable_lockinfo() {
  return &lockinfo_;
}

// repeated .PBAuctionLog log = 3;
inline int PBPlayerGlobalAuction::log_size() const {
  return log_.size();
}
inline void PBPlayerGlobalAuction::clear_log() {
  log_.Clear();
}
inline const ::PBAuctionLog& PBPlayerGlobalAuction::log(int index) const {
  return log_.Get(index);
}
inline ::PBAuctionLog* PBPlayerGlobalAuction::mutable_log(int index) {
  return log_.Mutable(index);
}
inline ::PBAuctionLog* PBPlayerGlobalAuction::add_log() {
  return log_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >&
PBPlayerGlobalAuction::log() const {
  return log_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >*
PBPlayerGlobalAuction::mutable_log() {
  return &log_;
}

// -------------------------------------------------------------------

// PBPlayerGlobalAuctionSave

// repeated .PBAuctionLog log = 1;
inline int PBPlayerGlobalAuctionSave::log_size() const {
  return log_.size();
}
inline void PBPlayerGlobalAuctionSave::clear_log() {
  log_.Clear();
}
inline const ::PBAuctionLog& PBPlayerGlobalAuctionSave::log(int index) const {
  return log_.Get(index);
}
inline ::PBAuctionLog* PBPlayerGlobalAuctionSave::mutable_log(int index) {
  return log_.Mutable(index);
}
inline ::PBAuctionLog* PBPlayerGlobalAuctionSave::add_log() {
  return log_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >&
PBPlayerGlobalAuctionSave::log() const {
  return log_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAuctionLog >*
PBPlayerGlobalAuctionSave::mutable_log() {
  return &log_;
}

// -------------------------------------------------------------------

// PBAuctionItemAve

// optional uint32 itemid = 1;
inline bool PBAuctionItemAve::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBAuctionItemAve::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBAuctionItemAve::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBAuctionItemAve::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PBAuctionItemAve::itemid() const {
  return itemid_;
}
inline void PBAuctionItemAve::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint64 saledcount = 2;
inline bool PBAuctionItemAve::has_saledcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBAuctionItemAve::set_has_saledcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBAuctionItemAve::clear_has_saledcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBAuctionItemAve::clear_saledcount() {
  saledcount_ = GOOGLE_ULONGLONG(0);
  clear_has_saledcount();
}
inline ::google::protobuf::uint64 PBAuctionItemAve::saledcount() const {
  return saledcount_;
}
inline void PBAuctionItemAve::set_saledcount(::google::protobuf::uint64 value) {
  set_has_saledcount();
  saledcount_ = value;
}

// optional uint64 saledtimes = 3;
inline bool PBAuctionItemAve::has_saledtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBAuctionItemAve::set_has_saledtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBAuctionItemAve::clear_has_saledtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBAuctionItemAve::clear_saledtimes() {
  saledtimes_ = GOOGLE_ULONGLONG(0);
  clear_has_saledtimes();
}
inline ::google::protobuf::uint64 PBAuctionItemAve::saledtimes() const {
  return saledtimes_;
}
inline void PBAuctionItemAve::set_saledtimes(::google::protobuf::uint64 value) {
  set_has_saledtimes();
  saledtimes_ = value;
}

// optional uint64 allsliver = 4;
inline bool PBAuctionItemAve::has_allsliver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBAuctionItemAve::set_has_allsliver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBAuctionItemAve::clear_has_allsliver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBAuctionItemAve::clear_allsliver() {
  allsliver_ = GOOGLE_ULONGLONG(0);
  clear_has_allsliver();
}
inline ::google::protobuf::uint64 PBAuctionItemAve::allsliver() const {
  return allsliver_;
}
inline void PBAuctionItemAve::set_allsliver(::google::protobuf::uint64 value) {
  set_has_allsliver();
  allsliver_ = value;
}

// optional uint32 aveprice = 5;
inline bool PBAuctionItemAve::has_aveprice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBAuctionItemAve::set_has_aveprice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBAuctionItemAve::clear_has_aveprice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBAuctionItemAve::clear_aveprice() {
  aveprice_ = 0u;
  clear_has_aveprice();
}
inline ::google::protobuf::uint32 PBAuctionItemAve::aveprice() const {
  return aveprice_;
}
inline void PBAuctionItemAve::set_aveprice(::google::protobuf::uint32 value) {
  set_has_aveprice();
  aveprice_ = value;
}

// optional uint32 price1 = 6;
inline bool PBAuctionItemAve::has_price1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBAuctionItemAve::set_has_price1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBAuctionItemAve::clear_has_price1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBAuctionItemAve::clear_price1() {
  price1_ = 0u;
  clear_has_price1();
}
inline ::google::protobuf::uint32 PBAuctionItemAve::price1() const {
  return price1_;
}
inline void PBAuctionItemAve::set_price1(::google::protobuf::uint32 value) {
  set_has_price1();
  price1_ = value;
}

// optional uint32 price2 = 7;
inline bool PBAuctionItemAve::has_price2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBAuctionItemAve::set_has_price2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBAuctionItemAve::clear_has_price2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBAuctionItemAve::clear_price2() {
  price2_ = 0u;
  clear_has_price2();
}
inline ::google::protobuf::uint32 PBAuctionItemAve::price2() const {
  return price2_;
}
inline void PBAuctionItemAve::set_price2(::google::protobuf::uint32 value) {
  set_has_price2();
  price2_ = value;
}

// -------------------------------------------------------------------

// PBAuctionItemInfoEx

// optional .PBAuctionItemInfo data = 1;
inline bool PBAuctionItemInfoEx::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBAuctionItemInfoEx::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBAuctionItemInfoEx::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBAuctionItemInfoEx::clear_data() {
  if (data_ != NULL) data_->::PBAuctionItemInfo::Clear();
  clear_has_data();
}
inline const ::PBAuctionItemInfo& PBAuctionItemInfoEx::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::PBAuctionItemInfo* PBAuctionItemInfoEx::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::PBAuctionItemInfo;
  return data_;
}
inline ::PBAuctionItemInfo* PBAuctionItemInfoEx::release_data() {
  clear_has_data();
  ::PBAuctionItemInfo* temp = data_;
  data_ = NULL;
  return temp;
}

// optional .PBPlayerDisplay saler = 2;
inline bool PBAuctionItemInfoEx::has_saler() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBAuctionItemInfoEx::set_has_saler() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBAuctionItemInfoEx::clear_has_saler() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBAuctionItemInfoEx::clear_saler() {
  if (saler_ != NULL) saler_->::PBPlayerDisplay::Clear();
  clear_has_saler();
}
inline const ::PBPlayerDisplay& PBAuctionItemInfoEx::saler() const {
  return saler_ != NULL ? *saler_ : *default_instance_->saler_;
}
inline ::PBPlayerDisplay* PBAuctionItemInfoEx::mutable_saler() {
  set_has_saler();
  if (saler_ == NULL) saler_ = new ::PBPlayerDisplay;
  return saler_;
}
inline ::PBPlayerDisplay* PBAuctionItemInfoEx::release_saler() {
  clear_has_saler();
  ::PBPlayerDisplay* temp = saler_;
  saler_ = NULL;
  return temp;
}

// optional .PBPlayerDisplay locker = 3;
inline bool PBAuctionItemInfoEx::has_locker() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBAuctionItemInfoEx::set_has_locker() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBAuctionItemInfoEx::clear_has_locker() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBAuctionItemInfoEx::clear_locker() {
  if (locker_ != NULL) locker_->::PBPlayerDisplay::Clear();
  clear_has_locker();
}
inline const ::PBPlayerDisplay& PBAuctionItemInfoEx::locker() const {
  return locker_ != NULL ? *locker_ : *default_instance_->locker_;
}
inline ::PBPlayerDisplay* PBAuctionItemInfoEx::mutable_locker() {
  set_has_locker();
  if (locker_ == NULL) locker_ = new ::PBPlayerDisplay;
  return locker_;
}
inline ::PBPlayerDisplay* PBAuctionItemInfoEx::release_locker() {
  clear_has_locker();
  ::PBPlayerDisplay* temp = locker_;
  locker_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBAuctionPriceData

// optional uint64 time = 1;
inline bool PBAuctionPriceData::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBAuctionPriceData::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBAuctionPriceData::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBAuctionPriceData::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 PBAuctionPriceData::time() const {
  return time_;
}
inline void PBAuctionPriceData::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
}

// repeated .PBAuctionItemAve itemave = 2;
inline int PBAuctionPriceData::itemave_size() const {
  return itemave_.size();
}
inline void PBAuctionPriceData::clear_itemave() {
  itemave_.Clear();
}
inline const ::PBAuctionItemAve& PBAuctionPriceData::itemave(int index) const {
  return itemave_.Get(index);
}
inline ::PBAuctionItemAve* PBAuctionPriceData::mutable_itemave(int index) {
  return itemave_.Mutable(index);
}
inline ::PBAuctionItemAve* PBAuctionPriceData::add_itemave() {
  return itemave_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAuctionItemAve >&
PBAuctionPriceData::itemave() const {
  return itemave_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAuctionItemAve >*
PBAuctionPriceData::mutable_itemave() {
  return &itemave_;
}

// -------------------------------------------------------------------

// PBPlayerGlobal

// optional .PBPlayerGlobalSaleMoney salemoney = 1;
inline bool PBPlayerGlobal::has_salemoney() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerGlobal::set_has_salemoney() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerGlobal::clear_has_salemoney() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerGlobal::clear_salemoney() {
  if (salemoney_ != NULL) salemoney_->::PBPlayerGlobalSaleMoney::Clear();
  clear_has_salemoney();
}
inline const ::PBPlayerGlobalSaleMoney& PBPlayerGlobal::salemoney() const {
  return salemoney_ != NULL ? *salemoney_ : *default_instance_->salemoney_;
}
inline ::PBPlayerGlobalSaleMoney* PBPlayerGlobal::mutable_salemoney() {
  set_has_salemoney();
  if (salemoney_ == NULL) salemoney_ = new ::PBPlayerGlobalSaleMoney;
  return salemoney_;
}
inline ::PBPlayerGlobalSaleMoney* PBPlayerGlobal::release_salemoney() {
  clear_has_salemoney();
  ::PBPlayerGlobalSaleMoney* temp = salemoney_;
  salemoney_ = NULL;
  return temp;
}

// optional .PBPlayerGlobalAuction auction = 2;
inline bool PBPlayerGlobal::has_auction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerGlobal::set_has_auction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerGlobal::clear_has_auction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerGlobal::clear_auction() {
  if (auction_ != NULL) auction_->::PBPlayerGlobalAuction::Clear();
  clear_has_auction();
}
inline const ::PBPlayerGlobalAuction& PBPlayerGlobal::auction() const {
  return auction_ != NULL ? *auction_ : *default_instance_->auction_;
}
inline ::PBPlayerGlobalAuction* PBPlayerGlobal::mutable_auction() {
  set_has_auction();
  if (auction_ == NULL) auction_ = new ::PBPlayerGlobalAuction;
  return auction_;
}
inline ::PBPlayerGlobalAuction* PBPlayerGlobal::release_auction() {
  clear_has_auction();
  ::PBPlayerGlobalAuction* temp = auction_;
  auction_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBPlayerGlobalData

// optional .PBPlayerGlobalBase baseinfo = 1;
inline bool PBPlayerGlobalData::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerGlobalData::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerGlobalData::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerGlobalData::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::PBPlayerGlobalBase::Clear();
  clear_has_baseinfo();
}
inline const ::PBPlayerGlobalBase& PBPlayerGlobalData::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::PBPlayerGlobalBase* PBPlayerGlobalData::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::PBPlayerGlobalBase;
  return baseinfo_;
}
inline ::PBPlayerGlobalBase* PBPlayerGlobalData::release_baseinfo() {
  clear_has_baseinfo();
  ::PBPlayerGlobalBase* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}

// optional .PBPlayerGlobalSaleMoneySave salemoney = 2;
inline bool PBPlayerGlobalData::has_salemoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerGlobalData::set_has_salemoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerGlobalData::clear_has_salemoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerGlobalData::clear_salemoney() {
  if (salemoney_ != NULL) salemoney_->::PBPlayerGlobalSaleMoneySave::Clear();
  clear_has_salemoney();
}
inline const ::PBPlayerGlobalSaleMoneySave& PBPlayerGlobalData::salemoney() const {
  return salemoney_ != NULL ? *salemoney_ : *default_instance_->salemoney_;
}
inline ::PBPlayerGlobalSaleMoneySave* PBPlayerGlobalData::mutable_salemoney() {
  set_has_salemoney();
  if (salemoney_ == NULL) salemoney_ = new ::PBPlayerGlobalSaleMoneySave;
  return salemoney_;
}
inline ::PBPlayerGlobalSaleMoneySave* PBPlayerGlobalData::release_salemoney() {
  clear_has_salemoney();
  ::PBPlayerGlobalSaleMoneySave* temp = salemoney_;
  salemoney_ = NULL;
  return temp;
}

// optional .PBPlayerGlobalAuctionSave auction = 3;
inline bool PBPlayerGlobalData::has_auction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerGlobalData::set_has_auction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerGlobalData::clear_has_auction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerGlobalData::clear_auction() {
  if (auction_ != NULL) auction_->::PBPlayerGlobalAuctionSave::Clear();
  clear_has_auction();
}
inline const ::PBPlayerGlobalAuctionSave& PBPlayerGlobalData::auction() const {
  return auction_ != NULL ? *auction_ : *default_instance_->auction_;
}
inline ::PBPlayerGlobalAuctionSave* PBPlayerGlobalData::mutable_auction() {
  set_has_auction();
  if (auction_ == NULL) auction_ = new ::PBPlayerGlobalAuctionSave;
  return auction_;
}
inline ::PBPlayerGlobalAuctionSave* PBPlayerGlobalData::release_auction() {
  clear_has_auction();
  ::PBPlayerGlobalAuctionSave* temp = auction_;
  auction_ = NULL;
  return temp;
}

// optional .PBTopListData toplist = 4;
inline bool PBPlayerGlobalData::has_toplist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerGlobalData::set_has_toplist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerGlobalData::clear_has_toplist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerGlobalData::clear_toplist() {
  if (toplist_ != NULL) toplist_->::PBTopListData::Clear();
  clear_has_toplist();
}
inline const ::PBTopListData& PBPlayerGlobalData::toplist() const {
  return toplist_ != NULL ? *toplist_ : *default_instance_->toplist_;
}
inline ::PBTopListData* PBPlayerGlobalData::mutable_toplist() {
  set_has_toplist();
  if (toplist_ == NULL) toplist_ = new ::PBTopListData;
  return toplist_;
}
inline ::PBTopListData* PBPlayerGlobalData::release_toplist() {
  clear_has_toplist();
  ::PBTopListData* temp = toplist_;
  toplist_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBItemUseCount

// optional uint32 itemId = 1;
inline bool PBItemUseCount::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBItemUseCount::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBItemUseCount::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBItemUseCount::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PBItemUseCount::itemid() const {
  return itemid_;
}
inline void PBItemUseCount::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 dayusecount = 2;
inline bool PBItemUseCount::has_dayusecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBItemUseCount::set_has_dayusecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBItemUseCount::clear_has_dayusecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBItemUseCount::clear_dayusecount() {
  dayusecount_ = 0u;
  clear_has_dayusecount();
}
inline ::google::protobuf::uint32 PBItemUseCount::dayusecount() const {
  return dayusecount_;
}
inline void PBItemUseCount::set_dayusecount(::google::protobuf::uint32 value) {
  set_has_dayusecount();
  dayusecount_ = value;
}

// optional uint32 weekusecount = 3;
inline bool PBItemUseCount::has_weekusecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBItemUseCount::set_has_weekusecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBItemUseCount::clear_has_weekusecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBItemUseCount::clear_weekusecount() {
  weekusecount_ = 0u;
  clear_has_weekusecount();
}
inline ::google::protobuf::uint32 PBItemUseCount::weekusecount() const {
  return weekusecount_;
}
inline void PBItemUseCount::set_weekusecount(::google::protobuf::uint32 value) {
  set_has_weekusecount();
  weekusecount_ = value;
}

// optional uint32 monthusecount = 4;
inline bool PBItemUseCount::has_monthusecount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBItemUseCount::set_has_monthusecount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBItemUseCount::clear_has_monthusecount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBItemUseCount::clear_monthusecount() {
  monthusecount_ = 0u;
  clear_has_monthusecount();
}
inline ::google::protobuf::uint32 PBItemUseCount::monthusecount() const {
  return monthusecount_;
}
inline void PBItemUseCount::set_monthusecount(::google::protobuf::uint32 value) {
  set_has_monthusecount();
  monthusecount_ = value;
}

// -------------------------------------------------------------------

// PBEquipMakeSkilled

// optional uint32 equipType = 1;
inline bool PBEquipMakeSkilled::has_equiptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEquipMakeSkilled::set_has_equiptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEquipMakeSkilled::clear_has_equiptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEquipMakeSkilled::clear_equiptype() {
  equiptype_ = 0u;
  clear_has_equiptype();
}
inline ::google::protobuf::uint32 PBEquipMakeSkilled::equiptype() const {
  return equiptype_;
}
inline void PBEquipMakeSkilled::set_equiptype(::google::protobuf::uint32 value) {
  set_has_equiptype();
  equiptype_ = value;
}

// optional uint32 skilledLevel = 2;
inline bool PBEquipMakeSkilled::has_skilledlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEquipMakeSkilled::set_has_skilledlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEquipMakeSkilled::clear_has_skilledlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEquipMakeSkilled::clear_skilledlevel() {
  skilledlevel_ = 0u;
  clear_has_skilledlevel();
}
inline ::google::protobuf::uint32 PBEquipMakeSkilled::skilledlevel() const {
  return skilledlevel_;
}
inline void PBEquipMakeSkilled::set_skilledlevel(::google::protobuf::uint32 value) {
  set_has_skilledlevel();
  skilledlevel_ = value;
}

// optional uint32 skilledPoint = 3;
inline bool PBEquipMakeSkilled::has_skilledpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBEquipMakeSkilled::set_has_skilledpoint() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBEquipMakeSkilled::clear_has_skilledpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBEquipMakeSkilled::clear_skilledpoint() {
  skilledpoint_ = 0u;
  clear_has_skilledpoint();
}
inline ::google::protobuf::uint32 PBEquipMakeSkilled::skilledpoint() const {
  return skilledpoint_;
}
inline void PBEquipMakeSkilled::set_skilledpoint(::google::protobuf::uint32 value) {
  set_has_skilledpoint();
  skilledpoint_ = value;
}

// -------------------------------------------------------------------

// PBEquipMakeVigour

// optional uint32 vigour = 1;
inline bool PBEquipMakeVigour::has_vigour() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEquipMakeVigour::set_has_vigour() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEquipMakeVigour::clear_has_vigour() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEquipMakeVigour::clear_vigour() {
  vigour_ = 0u;
  clear_has_vigour();
}
inline ::google::protobuf::uint32 PBEquipMakeVigour::vigour() const {
  return vigour_;
}
inline void PBEquipMakeVigour::set_vigour(::google::protobuf::uint32 value) {
  set_has_vigour();
  vigour_ = value;
}

// optional uint64 lastAddTime = 2;
inline bool PBEquipMakeVigour::has_lastaddtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEquipMakeVigour::set_has_lastaddtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEquipMakeVigour::clear_has_lastaddtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEquipMakeVigour::clear_lastaddtime() {
  lastaddtime_ = GOOGLE_ULONGLONG(0);
  clear_has_lastaddtime();
}
inline ::google::protobuf::uint64 PBEquipMakeVigour::lastaddtime() const {
  return lastaddtime_;
}
inline void PBEquipMakeVigour::set_lastaddtime(::google::protobuf::uint64 value) {
  set_has_lastaddtime();
  lastaddtime_ = value;
}

// optional uint32 vigourFrozen = 3;
inline bool PBEquipMakeVigour::has_vigourfrozen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBEquipMakeVigour::set_has_vigourfrozen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBEquipMakeVigour::clear_has_vigourfrozen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBEquipMakeVigour::clear_vigourfrozen() {
  vigourfrozen_ = 0u;
  clear_has_vigourfrozen();
}
inline ::google::protobuf::uint32 PBEquipMakeVigour::vigourfrozen() const {
  return vigourfrozen_;
}
inline void PBEquipMakeVigour::set_vigourfrozen(::google::protobuf::uint32 value) {
  set_has_vigourfrozen();
  vigourfrozen_ = value;
}

// -------------------------------------------------------------------

// PBEquipMakeOEM

// optional uint32 makeID = 1;
inline bool PBEquipMakeOEM::has_makeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBEquipMakeOEM::set_has_makeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBEquipMakeOEM::clear_has_makeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBEquipMakeOEM::clear_makeid() {
  makeid_ = 0u;
  clear_has_makeid();
}
inline ::google::protobuf::uint32 PBEquipMakeOEM::makeid() const {
  return makeid_;
}
inline void PBEquipMakeOEM::set_makeid(::google::protobuf::uint32 value) {
  set_has_makeid();
  makeid_ = value;
}

// optional uint32 fee = 2;
inline bool PBEquipMakeOEM::has_fee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBEquipMakeOEM::set_has_fee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBEquipMakeOEM::clear_has_fee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBEquipMakeOEM::clear_fee() {
  fee_ = 0u;
  clear_has_fee();
}
inline ::google::protobuf::uint32 PBEquipMakeOEM::fee() const {
  return fee_;
}
inline void PBEquipMakeOEM::set_fee(::google::protobuf::uint32 value) {
  set_has_fee();
  fee_ = value;
}

// optional uint32 count = 3;
inline bool PBEquipMakeOEM::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBEquipMakeOEM::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBEquipMakeOEM::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBEquipMakeOEM::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBEquipMakeOEM::count() const {
  return count_;
}
inline void PBEquipMakeOEM::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional uint32 countUsed = 4;
inline bool PBEquipMakeOEM::has_countused() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBEquipMakeOEM::set_has_countused() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBEquipMakeOEM::clear_has_countused() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBEquipMakeOEM::clear_countused() {
  countused_ = 0u;
  clear_has_countused();
}
inline ::google::protobuf::uint32 PBEquipMakeOEM::countused() const {
  return countused_;
}
inline void PBEquipMakeOEM::set_countused(::google::protobuf::uint32 value) {
  set_has_countused();
  countused_ = value;
}

// repeated uint32 validMakeID = 5;
inline int PBEquipMakeOEM::validmakeid_size() const {
  return validmakeid_.size();
}
inline void PBEquipMakeOEM::clear_validmakeid() {
  validmakeid_.Clear();
}
inline ::google::protobuf::uint32 PBEquipMakeOEM::validmakeid(int index) const {
  return validmakeid_.Get(index);
}
inline void PBEquipMakeOEM::set_validmakeid(int index, ::google::protobuf::uint32 value) {
  validmakeid_.Set(index, value);
}
inline void PBEquipMakeOEM::add_validmakeid(::google::protobuf::uint32 value) {
  validmakeid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBEquipMakeOEM::validmakeid() const {
  return validmakeid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBEquipMakeOEM::mutable_validmakeid() {
  return &validmakeid_;
}

// optional uint32 countReal = 6;
inline bool PBEquipMakeOEM::has_countreal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBEquipMakeOEM::set_has_countreal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBEquipMakeOEM::clear_has_countreal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBEquipMakeOEM::clear_countreal() {
  countreal_ = 0u;
  clear_has_countreal();
}
inline ::google::protobuf::uint32 PBEquipMakeOEM::countreal() const {
  return countreal_;
}
inline void PBEquipMakeOEM::set_countreal(::google::protobuf::uint32 value) {
  set_has_countreal();
  countreal_ = value;
}

// -------------------------------------------------------------------

// PBPlayerBag

// optional uint32 saveorder = 1;
inline bool PBPlayerBag::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerBag::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerBag::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerBag::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerBag::saveorder() const {
  return saveorder_;
}
inline void PBPlayerBag::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// repeated .PBItem bagList = 2;
inline int PBPlayerBag::baglist_size() const {
  return baglist_.size();
}
inline void PBPlayerBag::clear_baglist() {
  baglist_.Clear();
}
inline const ::PBItem& PBPlayerBag::baglist(int index) const {
  return baglist_.Get(index);
}
inline ::PBItem* PBPlayerBag::mutable_baglist(int index) {
  return baglist_.Mutable(index);
}
inline ::PBItem* PBPlayerBag::add_baglist() {
  return baglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
PBPlayerBag::baglist() const {
  return baglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
PBPlayerBag::mutable_baglist() {
  return &baglist_;
}

// repeated .PBItem equipList = 3;
inline int PBPlayerBag::equiplist_size() const {
  return equiplist_.size();
}
inline void PBPlayerBag::clear_equiplist() {
  equiplist_.Clear();
}
inline const ::PBItem& PBPlayerBag::equiplist(int index) const {
  return equiplist_.Get(index);
}
inline ::PBItem* PBPlayerBag::mutable_equiplist(int index) {
  return equiplist_.Mutable(index);
}
inline ::PBItem* PBPlayerBag::add_equiplist() {
  return equiplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
PBPlayerBag::equiplist() const {
  return equiplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
PBPlayerBag::mutable_equiplist() {
  return &equiplist_;
}

// repeated .PBItemUseCount usecount = 4;
inline int PBPlayerBag::usecount_size() const {
  return usecount_.size();
}
inline void PBPlayerBag::clear_usecount() {
  usecount_.Clear();
}
inline const ::PBItemUseCount& PBPlayerBag::usecount(int index) const {
  return usecount_.Get(index);
}
inline ::PBItemUseCount* PBPlayerBag::mutable_usecount(int index) {
  return usecount_.Mutable(index);
}
inline ::PBItemUseCount* PBPlayerBag::add_usecount() {
  return usecount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItemUseCount >&
PBPlayerBag::usecount() const {
  return usecount_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItemUseCount >*
PBPlayerBag::mutable_usecount() {
  return &usecount_;
}

// repeated .PBEquipMakeSkilled skilled = 5;
inline int PBPlayerBag::skilled_size() const {
  return skilled_.size();
}
inline void PBPlayerBag::clear_skilled() {
  skilled_.Clear();
}
inline const ::PBEquipMakeSkilled& PBPlayerBag::skilled(int index) const {
  return skilled_.Get(index);
}
inline ::PBEquipMakeSkilled* PBPlayerBag::mutable_skilled(int index) {
  return skilled_.Mutable(index);
}
inline ::PBEquipMakeSkilled* PBPlayerBag::add_skilled() {
  return skilled_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipMakeSkilled >&
PBPlayerBag::skilled() const {
  return skilled_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipMakeSkilled >*
PBPlayerBag::mutable_skilled() {
  return &skilled_;
}

// optional .PBEquipMakeVigour vigour = 6;
inline bool PBPlayerBag::has_vigour() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerBag::set_has_vigour() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerBag::clear_has_vigour() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerBag::clear_vigour() {
  if (vigour_ != NULL) vigour_->::PBEquipMakeVigour::Clear();
  clear_has_vigour();
}
inline const ::PBEquipMakeVigour& PBPlayerBag::vigour() const {
  return vigour_ != NULL ? *vigour_ : *default_instance_->vigour_;
}
inline ::PBEquipMakeVigour* PBPlayerBag::mutable_vigour() {
  set_has_vigour();
  if (vigour_ == NULL) vigour_ = new ::PBEquipMakeVigour;
  return vigour_;
}
inline ::PBEquipMakeVigour* PBPlayerBag::release_vigour() {
  clear_has_vigour();
  ::PBEquipMakeVigour* temp = vigour_;
  vigour_ = NULL;
  return temp;
}

// repeated .PBEquipMakeOEM oems = 7;
inline int PBPlayerBag::oems_size() const {
  return oems_.size();
}
inline void PBPlayerBag::clear_oems() {
  oems_.Clear();
}
inline const ::PBEquipMakeOEM& PBPlayerBag::oems(int index) const {
  return oems_.Get(index);
}
inline ::PBEquipMakeOEM* PBPlayerBag::mutable_oems(int index) {
  return oems_.Mutable(index);
}
inline ::PBEquipMakeOEM* PBPlayerBag::add_oems() {
  return oems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBEquipMakeOEM >&
PBPlayerBag::oems() const {
  return oems_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBEquipMakeOEM >*
PBPlayerBag::mutable_oems() {
  return &oems_;
}

// -------------------------------------------------------------------

// PBGoods

// optional uint32 store = 1;
inline bool PBGoods::has_store() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGoods::set_has_store() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGoods::clear_has_store() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGoods::clear_store() {
  store_ = 0u;
  clear_has_store();
}
inline ::google::protobuf::uint32 PBGoods::store() const {
  return store_;
}
inline void PBGoods::set_store(::google::protobuf::uint32 value) {
  set_has_store();
  store_ = value;
}

// optional uint32 index = 2;
inline bool PBGoods::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGoods::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGoods::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGoods::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 PBGoods::index() const {
  return index_;
}
inline void PBGoods::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional uint32 count = 3;
inline bool PBGoods::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGoods::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGoods::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGoods::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBGoods::count() const {
  return count_;
}
inline void PBGoods::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional uint32 time = 4;
inline bool PBGoods::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGoods::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGoods::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGoods::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBGoods::time() const {
  return time_;
}
inline void PBGoods::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBPlayerStore

// optional uint32 saveorder = 1;
inline bool PBPlayerStore::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerStore::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerStore::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerStore::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerStore::saveorder() const {
  return saveorder_;
}
inline void PBPlayerStore::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// repeated .PBGoods goods = 2;
inline int PBPlayerStore::goods_size() const {
  return goods_.size();
}
inline void PBPlayerStore::clear_goods() {
  goods_.Clear();
}
inline const ::PBGoods& PBPlayerStore::goods(int index) const {
  return goods_.Get(index);
}
inline ::PBGoods* PBPlayerStore::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::PBGoods* PBPlayerStore::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBGoods >&
PBPlayerStore::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBGoods >*
PBPlayerStore::mutable_goods() {
  return &goods_;
}

// -------------------------------------------------------------------

// PBClientData

// optional uint32 saveorder = 1;
inline bool PBClientData::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBClientData::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBClientData::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBClientData::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBClientData::saveorder() const {
  return saveorder_;
}
inline void PBClientData::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// optional bytes clientdata = 2;
inline bool PBClientData::has_clientdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBClientData::set_has_clientdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBClientData::clear_has_clientdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBClientData::clear_clientdata() {
  if (clientdata_ != &::google::protobuf::internal::kEmptyString) {
    clientdata_->clear();
  }
  clear_has_clientdata();
}
inline const ::std::string& PBClientData::clientdata() const {
  return *clientdata_;
}
inline void PBClientData::set_clientdata(const ::std::string& value) {
  set_has_clientdata();
  if (clientdata_ == &::google::protobuf::internal::kEmptyString) {
    clientdata_ = new ::std::string;
  }
  clientdata_->assign(value);
}
inline void PBClientData::set_clientdata(const char* value) {
  set_has_clientdata();
  if (clientdata_ == &::google::protobuf::internal::kEmptyString) {
    clientdata_ = new ::std::string;
  }
  clientdata_->assign(value);
}
inline void PBClientData::set_clientdata(const void* value, size_t size) {
  set_has_clientdata();
  if (clientdata_ == &::google::protobuf::internal::kEmptyString) {
    clientdata_ = new ::std::string;
  }
  clientdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBClientData::mutable_clientdata() {
  set_has_clientdata();
  if (clientdata_ == &::google::protobuf::internal::kEmptyString) {
    clientdata_ = new ::std::string;
  }
  return clientdata_;
}
inline ::std::string* PBClientData::release_clientdata() {
  clear_has_clientdata();
  if (clientdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = clientdata_;
    clientdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBMailSaleMoneyBuy

// optional .PBPlayerDisplay saler = 1;
inline bool PBMailSaleMoneyBuy::has_saler() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailSaleMoneyBuy::set_has_saler() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailSaleMoneyBuy::clear_has_saler() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailSaleMoneyBuy::clear_saler() {
  if (saler_ != NULL) saler_->::PBPlayerDisplay::Clear();
  clear_has_saler();
}
inline const ::PBPlayerDisplay& PBMailSaleMoneyBuy::saler() const {
  return saler_ != NULL ? *saler_ : *default_instance_->saler_;
}
inline ::PBPlayerDisplay* PBMailSaleMoneyBuy::mutable_saler() {
  set_has_saler();
  if (saler_ == NULL) saler_ = new ::PBPlayerDisplay;
  return saler_;
}
inline ::PBPlayerDisplay* PBMailSaleMoneyBuy::release_saler() {
  clear_has_saler();
  ::PBPlayerDisplay* temp = saler_;
  saler_ = NULL;
  return temp;
}

// optional uint64 getbindcash = 2;
inline bool PBMailSaleMoneyBuy::has_getbindcash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailSaleMoneyBuy::set_has_getbindcash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailSaleMoneyBuy::clear_has_getbindcash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailSaleMoneyBuy::clear_getbindcash() {
  getbindcash_ = GOOGLE_ULONGLONG(0);
  clear_has_getbindcash();
}
inline ::google::protobuf::uint64 PBMailSaleMoneyBuy::getbindcash() const {
  return getbindcash_;
}
inline void PBMailSaleMoneyBuy::set_getbindcash(::google::protobuf::uint64 value) {
  set_has_getbindcash();
  getbindcash_ = value;
}

// optional uint64 expendsliver = 3;
inline bool PBMailSaleMoneyBuy::has_expendsliver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBMailSaleMoneyBuy::set_has_expendsliver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBMailSaleMoneyBuy::clear_has_expendsliver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBMailSaleMoneyBuy::clear_expendsliver() {
  expendsliver_ = GOOGLE_ULONGLONG(0);
  clear_has_expendsliver();
}
inline ::google::protobuf::uint64 PBMailSaleMoneyBuy::expendsliver() const {
  return expendsliver_;
}
inline void PBMailSaleMoneyBuy::set_expendsliver(::google::protobuf::uint64 value) {
  set_has_expendsliver();
  expendsliver_ = value;
}

// optional uint64 economizesliver = 4;
inline bool PBMailSaleMoneyBuy::has_economizesliver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBMailSaleMoneyBuy::set_has_economizesliver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBMailSaleMoneyBuy::clear_has_economizesliver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBMailSaleMoneyBuy::clear_economizesliver() {
  economizesliver_ = GOOGLE_ULONGLONG(0);
  clear_has_economizesliver();
}
inline ::google::protobuf::uint64 PBMailSaleMoneyBuy::economizesliver() const {
  return economizesliver_;
}
inline void PBMailSaleMoneyBuy::set_economizesliver(::google::protobuf::uint64 value) {
  set_has_economizesliver();
  economizesliver_ = value;
}

// -------------------------------------------------------------------

// PBMailSaleMoneySale

// optional .PBPlayerDisplay buyer = 1;
inline bool PBMailSaleMoneySale::has_buyer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailSaleMoneySale::set_has_buyer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailSaleMoneySale::clear_has_buyer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailSaleMoneySale::clear_buyer() {
  if (buyer_ != NULL) buyer_->::PBPlayerDisplay::Clear();
  clear_has_buyer();
}
inline const ::PBPlayerDisplay& PBMailSaleMoneySale::buyer() const {
  return buyer_ != NULL ? *buyer_ : *default_instance_->buyer_;
}
inline ::PBPlayerDisplay* PBMailSaleMoneySale::mutable_buyer() {
  set_has_buyer();
  if (buyer_ == NULL) buyer_ = new ::PBPlayerDisplay;
  return buyer_;
}
inline ::PBPlayerDisplay* PBMailSaleMoneySale::release_buyer() {
  clear_has_buyer();
  ::PBPlayerDisplay* temp = buyer_;
  buyer_ = NULL;
  return temp;
}

// optional uint64 salecash = 2;
inline bool PBMailSaleMoneySale::has_salecash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailSaleMoneySale::set_has_salecash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailSaleMoneySale::clear_has_salecash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailSaleMoneySale::clear_salecash() {
  salecash_ = GOOGLE_ULONGLONG(0);
  clear_has_salecash();
}
inline ::google::protobuf::uint64 PBMailSaleMoneySale::salecash() const {
  return salecash_;
}
inline void PBMailSaleMoneySale::set_salecash(::google::protobuf::uint64 value) {
  set_has_salecash();
  salecash_ = value;
}

// optional uint64 getsliver = 3;
inline bool PBMailSaleMoneySale::has_getsliver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBMailSaleMoneySale::set_has_getsliver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBMailSaleMoneySale::clear_has_getsliver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBMailSaleMoneySale::clear_getsliver() {
  getsliver_ = GOOGLE_ULONGLONG(0);
  clear_has_getsliver();
}
inline ::google::protobuf::uint64 PBMailSaleMoneySale::getsliver() const {
  return getsliver_;
}
inline void PBMailSaleMoneySale::set_getsliver(::google::protobuf::uint64 value) {
  set_has_getsliver();
  getsliver_ = value;
}

// optional uint64 extrasliver = 4;
inline bool PBMailSaleMoneySale::has_extrasliver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBMailSaleMoneySale::set_has_extrasliver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBMailSaleMoneySale::clear_has_extrasliver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBMailSaleMoneySale::clear_extrasliver() {
  extrasliver_ = GOOGLE_ULONGLONG(0);
  clear_has_extrasliver();
}
inline ::google::protobuf::uint64 PBMailSaleMoneySale::extrasliver() const {
  return extrasliver_;
}
inline void PBMailSaleMoneySale::set_extrasliver(::google::protobuf::uint64 value) {
  set_has_extrasliver();
  extrasliver_ = value;
}

// optional uint64 storescore = 5;
inline bool PBMailSaleMoneySale::has_storescore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBMailSaleMoneySale::set_has_storescore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBMailSaleMoneySale::clear_has_storescore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBMailSaleMoneySale::clear_storescore() {
  storescore_ = GOOGLE_ULONGLONG(0);
  clear_has_storescore();
}
inline ::google::protobuf::uint64 PBMailSaleMoneySale::storescore() const {
  return storescore_;
}
inline void PBMailSaleMoneySale::set_storescore(::google::protobuf::uint64 value) {
  set_has_storescore();
  storescore_ = value;
}

// -------------------------------------------------------------------

// PBMailSaleMoneyBuyReturn

// optional uint64 sliver = 1;
inline bool PBMailSaleMoneyBuyReturn::has_sliver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailSaleMoneyBuyReturn::set_has_sliver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailSaleMoneyBuyReturn::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailSaleMoneyBuyReturn::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBMailSaleMoneyBuyReturn::sliver() const {
  return sliver_;
}
inline void PBMailSaleMoneyBuyReturn::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint64 expendsliver = 2;
inline bool PBMailSaleMoneyBuyReturn::has_expendsliver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailSaleMoneyBuyReturn::set_has_expendsliver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailSaleMoneyBuyReturn::clear_has_expendsliver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailSaleMoneyBuyReturn::clear_expendsliver() {
  expendsliver_ = GOOGLE_ULONGLONG(0);
  clear_has_expendsliver();
}
inline ::google::protobuf::uint64 PBMailSaleMoneyBuyReturn::expendsliver() const {
  return expendsliver_;
}
inline void PBMailSaleMoneyBuyReturn::set_expendsliver(::google::protobuf::uint64 value) {
  set_has_expendsliver();
  expendsliver_ = value;
}

// -------------------------------------------------------------------

// PBMailSaleMoneySaleReturn

// optional uint64 cash = 1;
inline bool PBMailSaleMoneySaleReturn::has_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailSaleMoneySaleReturn::set_has_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailSaleMoneySaleReturn::clear_has_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailSaleMoneySaleReturn::clear_cash() {
  cash_ = GOOGLE_ULONGLONG(0);
  clear_has_cash();
}
inline ::google::protobuf::uint64 PBMailSaleMoneySaleReturn::cash() const {
  return cash_;
}
inline void PBMailSaleMoneySaleReturn::set_cash(::google::protobuf::uint64 value) {
  set_has_cash();
  cash_ = value;
}

// -------------------------------------------------------------------

// PBMailAuctionLockRet

// optional .PBItem item = 1;
inline bool PBMailAuctionLockRet::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailAuctionLockRet::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailAuctionLockRet::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailAuctionLockRet::clear_item() {
  if (item_ != NULL) item_->::PBItem::Clear();
  clear_has_item();
}
inline const ::PBItem& PBMailAuctionLockRet::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBItem* PBMailAuctionLockRet::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::PBItem;
  return item_;
}
inline ::PBItem* PBMailAuctionLockRet::release_item() {
  clear_has_item();
  ::PBItem* temp = item_;
  item_ = NULL;
  return temp;
}

// optional uint32 retsliver = 2;
inline bool PBMailAuctionLockRet::has_retsliver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailAuctionLockRet::set_has_retsliver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailAuctionLockRet::clear_has_retsliver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailAuctionLockRet::clear_retsliver() {
  retsliver_ = 0u;
  clear_has_retsliver();
}
inline ::google::protobuf::uint32 PBMailAuctionLockRet::retsliver() const {
  return retsliver_;
}
inline void PBMailAuctionLockRet::set_retsliver(::google::protobuf::uint32 value) {
  set_has_retsliver();
  retsliver_ = value;
}

// -------------------------------------------------------------------

// PBMailAuctionSaleTimeOut

// optional .PBItem item = 1;
inline bool PBMailAuctionSaleTimeOut::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailAuctionSaleTimeOut::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailAuctionSaleTimeOut::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailAuctionSaleTimeOut::clear_item() {
  if (item_ != NULL) item_->::PBItem::Clear();
  clear_has_item();
}
inline const ::PBItem& PBMailAuctionSaleTimeOut::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBItem* PBMailAuctionSaleTimeOut::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::PBItem;
  return item_;
}
inline ::PBItem* PBMailAuctionSaleTimeOut::release_item() {
  clear_has_item();
  ::PBItem* temp = item_;
  item_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBMailAuctionSaleGet

// optional .PBItem item = 1;
inline bool PBMailAuctionSaleGet::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailAuctionSaleGet::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailAuctionSaleGet::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailAuctionSaleGet::clear_item() {
  if (item_ != NULL) item_->::PBItem::Clear();
  clear_has_item();
}
inline const ::PBItem& PBMailAuctionSaleGet::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBItem* PBMailAuctionSaleGet::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::PBItem;
  return item_;
}
inline ::PBItem* PBMailAuctionSaleGet::release_item() {
  clear_has_item();
  ::PBItem* temp = item_;
  item_ = NULL;
  return temp;
}

// optional uint64 getsliver = 2;
inline bool PBMailAuctionSaleGet::has_getsliver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailAuctionSaleGet::set_has_getsliver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailAuctionSaleGet::clear_has_getsliver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailAuctionSaleGet::clear_getsliver() {
  getsliver_ = GOOGLE_ULONGLONG(0);
  clear_has_getsliver();
}
inline ::google::protobuf::uint64 PBMailAuctionSaleGet::getsliver() const {
  return getsliver_;
}
inline void PBMailAuctionSaleGet::set_getsliver(::google::protobuf::uint64 value) {
  set_has_getsliver();
  getsliver_ = value;
}

// -------------------------------------------------------------------

// PBMailAuctionBuyGet

// optional .PBItem item = 1;
inline bool PBMailAuctionBuyGet::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailAuctionBuyGet::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailAuctionBuyGet::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailAuctionBuyGet::clear_item() {
  if (item_ != NULL) item_->::PBItem::Clear();
  clear_has_item();
}
inline const ::PBItem& PBMailAuctionBuyGet::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PBItem* PBMailAuctionBuyGet::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::PBItem;
  return item_;
}
inline ::PBItem* PBMailAuctionBuyGet::release_item() {
  clear_has_item();
  ::PBItem* temp = item_;
  item_ = NULL;
  return temp;
}

// optional uint64 sliver = 2;
inline bool PBMailAuctionBuyGet::has_sliver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailAuctionBuyGet::set_has_sliver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailAuctionBuyGet::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailAuctionBuyGet::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBMailAuctionBuyGet::sliver() const {
  return sliver_;
}
inline void PBMailAuctionBuyGet::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint64 extrasliver = 3;
inline bool PBMailAuctionBuyGet::has_extrasliver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBMailAuctionBuyGet::set_has_extrasliver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBMailAuctionBuyGet::clear_has_extrasliver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBMailAuctionBuyGet::clear_extrasliver() {
  extrasliver_ = GOOGLE_ULONGLONG(0);
  clear_has_extrasliver();
}
inline ::google::protobuf::uint64 PBMailAuctionBuyGet::extrasliver() const {
  return extrasliver_;
}
inline void PBMailAuctionBuyGet::set_extrasliver(::google::protobuf::uint64 value) {
  set_has_extrasliver();
  extrasliver_ = value;
}

// -------------------------------------------------------------------

// PBMailPromote

// optional uint32 step = 1;
inline bool PBMailPromote::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailPromote::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailPromote::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailPromote::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 PBMailPromote::step() const {
  return step_;
}
inline void PBMailPromote::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
}

// -------------------------------------------------------------------

// PBMailFactionBoss

// optional uint32 order = 1;
inline bool PBMailFactionBoss::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailFactionBoss::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailFactionBoss::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailFactionBoss::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PBMailFactionBoss::order() const {
  return order_;
}
inline void PBMailFactionBoss::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// optional uint64 score = 2;
inline bool PBMailFactionBoss::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailFactionBoss::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailFactionBoss::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailFactionBoss::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 PBMailFactionBoss::score() const {
  return score_;
}
inline void PBMailFactionBoss::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// PBMailWorldBoss

// optional uint32 order = 1;
inline bool PBMailWorldBoss::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailWorldBoss::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailWorldBoss::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailWorldBoss::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PBMailWorldBoss::order() const {
  return order_;
}
inline void PBMailWorldBoss::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// optional uint32 bossActivityId = 2;
inline bool PBMailWorldBoss::has_bossactivityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailWorldBoss::set_has_bossactivityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailWorldBoss::clear_has_bossactivityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailWorldBoss::clear_bossactivityid() {
  bossactivityid_ = 0u;
  clear_has_bossactivityid();
}
inline ::google::protobuf::uint32 PBMailWorldBoss::bossactivityid() const {
  return bossactivityid_;
}
inline void PBMailWorldBoss::set_bossactivityid(::google::protobuf::uint32 value) {
  set_has_bossactivityid();
  bossactivityid_ = value;
}

// -------------------------------------------------------------------

// PBMailCopymapCashReward

// optional .PBPlayerDisplay leader = 1;
inline bool PBMailCopymapCashReward::has_leader() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailCopymapCashReward::set_has_leader() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailCopymapCashReward::clear_has_leader() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailCopymapCashReward::clear_leader() {
  if (leader_ != NULL) leader_->::PBPlayerDisplay::Clear();
  clear_has_leader();
}
inline const ::PBPlayerDisplay& PBMailCopymapCashReward::leader() const {
  return leader_ != NULL ? *leader_ : *default_instance_->leader_;
}
inline ::PBPlayerDisplay* PBMailCopymapCashReward::mutable_leader() {
  set_has_leader();
  if (leader_ == NULL) leader_ = new ::PBPlayerDisplay;
  return leader_;
}
inline ::PBPlayerDisplay* PBMailCopymapCashReward::release_leader() {
  clear_has_leader();
  ::PBPlayerDisplay* temp = leader_;
  leader_ = NULL;
  return temp;
}

// optional uint32 copymapid = 2;
inline bool PBMailCopymapCashReward::has_copymapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailCopymapCashReward::set_has_copymapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailCopymapCashReward::clear_has_copymapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailCopymapCashReward::clear_copymapid() {
  copymapid_ = 0u;
  clear_has_copymapid();
}
inline ::google::protobuf::uint32 PBMailCopymapCashReward::copymapid() const {
  return copymapid_;
}
inline void PBMailCopymapCashReward::set_copymapid(::google::protobuf::uint32 value) {
  set_has_copymapid();
  copymapid_ = value;
}

// optional uint32 cash = 3;
inline bool PBMailCopymapCashReward::has_cash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBMailCopymapCashReward::set_has_cash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBMailCopymapCashReward::clear_has_cash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBMailCopymapCashReward::clear_cash() {
  cash_ = 0u;
  clear_has_cash();
}
inline ::google::protobuf::uint32 PBMailCopymapCashReward::cash() const {
  return cash_;
}
inline void PBMailCopymapCashReward::set_cash(::google::protobuf::uint32 value) {
  set_has_cash();
  cash_ = value;
}

// -------------------------------------------------------------------

// PBMailSinglePvpFirstPrize

// optional uint32 id = 1;
inline bool PBMailSinglePvpFirstPrize::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailSinglePvpFirstPrize::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailSinglePvpFirstPrize::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailSinglePvpFirstPrize::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBMailSinglePvpFirstPrize::id() const {
  return id_;
}
inline void PBMailSinglePvpFirstPrize::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBMailSinglePvpDayPrize

// optional uint32 daycount = 1;
inline bool PBMailSinglePvpDayPrize::has_daycount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailSinglePvpDayPrize::set_has_daycount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailSinglePvpDayPrize::clear_has_daycount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailSinglePvpDayPrize::clear_daycount() {
  daycount_ = 0u;
  clear_has_daycount();
}
inline ::google::protobuf::uint32 PBMailSinglePvpDayPrize::daycount() const {
  return daycount_;
}
inline void PBMailSinglePvpDayPrize::set_daycount(::google::protobuf::uint32 value) {
  set_has_daycount();
  daycount_ = value;
}

// -------------------------------------------------------------------

// PBMailSinglePvpWeekPrize

// optional uint32 id = 1;
inline bool PBMailSinglePvpWeekPrize::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailSinglePvpWeekPrize::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailSinglePvpWeekPrize::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailSinglePvpWeekPrize::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBMailSinglePvpWeekPrize::id() const {
  return id_;
}
inline void PBMailSinglePvpWeekPrize::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBMailManorTitleGet

// optional uint32 title = 1;
inline bool PBMailManorTitleGet::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailManorTitleGet::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailManorTitleGet::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailManorTitleGet::clear_title() {
  title_ = 0u;
  clear_has_title();
}
inline ::google::protobuf::uint32 PBMailManorTitleGet::title() const {
  return title_;
}
inline void PBMailManorTitleGet::set_title(::google::protobuf::uint32 value) {
  set_has_title();
  title_ = value;
}

// -------------------------------------------------------------------

// PBMailManorResult

// optional uint32 type = 1;
inline bool PBMailManorResult::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailManorResult::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailManorResult::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailManorResult::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBMailManorResult::type() const {
  return type_;
}
inline void PBMailManorResult::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 manorid = 2;
inline bool PBMailManorResult::has_manorid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMailManorResult::set_has_manorid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMailManorResult::clear_has_manorid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMailManorResult::clear_manorid() {
  manorid_ = 0u;
  clear_has_manorid();
}
inline ::google::protobuf::uint32 PBMailManorResult::manorid() const {
  return manorid_;
}
inline void PBMailManorResult::set_manorid(::google::protobuf::uint32 value) {
  set_has_manorid();
  manorid_ = value;
}

// optional string enemyfactionname = 3;
inline bool PBMailManorResult::has_enemyfactionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBMailManorResult::set_has_enemyfactionname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBMailManorResult::clear_has_enemyfactionname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBMailManorResult::clear_enemyfactionname() {
  if (enemyfactionname_ != &::google::protobuf::internal::kEmptyString) {
    enemyfactionname_->clear();
  }
  clear_has_enemyfactionname();
}
inline const ::std::string& PBMailManorResult::enemyfactionname() const {
  return *enemyfactionname_;
}
inline void PBMailManorResult::set_enemyfactionname(const ::std::string& value) {
  set_has_enemyfactionname();
  if (enemyfactionname_ == &::google::protobuf::internal::kEmptyString) {
    enemyfactionname_ = new ::std::string;
  }
  enemyfactionname_->assign(value);
}
inline void PBMailManorResult::set_enemyfactionname(const char* value) {
  set_has_enemyfactionname();
  if (enemyfactionname_ == &::google::protobuf::internal::kEmptyString) {
    enemyfactionname_ = new ::std::string;
  }
  enemyfactionname_->assign(value);
}
inline void PBMailManorResult::set_enemyfactionname(const char* value, size_t size) {
  set_has_enemyfactionname();
  if (enemyfactionname_ == &::google::protobuf::internal::kEmptyString) {
    enemyfactionname_ = new ::std::string;
  }
  enemyfactionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMailManorResult::mutable_enemyfactionname() {
  set_has_enemyfactionname();
  if (enemyfactionname_ == &::google::protobuf::internal::kEmptyString) {
    enemyfactionname_ = new ::std::string;
  }
  return enemyfactionname_;
}
inline ::std::string* PBMailManorResult::release_enemyfactionname() {
  clear_has_enemyfactionname();
  if (enemyfactionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = enemyfactionname_;
    enemyfactionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBMailFactionInfo

// optional string name = 1;
inline bool PBMailFactionInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailFactionInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailFactionInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailFactionInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBMailFactionInfo::name() const {
  return *name_;
}
inline void PBMailFactionInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMailFactionInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBMailFactionInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMailFactionInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBMailFactionInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBMailTopListInfo

// optional int32 order = 1;
inline bool PBMailTopListInfo::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMailTopListInfo::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMailTopListInfo::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMailTopListInfo::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 PBMailTopListInfo::order() const {
  return order_;
}
inline void PBMailTopListInfo::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
}

// -------------------------------------------------------------------

// PBMail

// optional uint32 worldid = 1;
inline bool PBMail::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBMail::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBMail::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBMail::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 PBMail::worldid() const {
  return worldid_;
}
inline void PBMail::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBMail::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBMail::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBMail::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBMail::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBMail::playerid() const {
  return playerid_;
}
inline void PBMail::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 mailid = 3;
inline bool PBMail::has_mailid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBMail::set_has_mailid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBMail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBMail::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 PBMail::mailid() const {
  return mailid_;
}
inline void PBMail::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional int32 type = 4;
inline bool PBMail::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBMail::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBMail::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBMail::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 PBMail::type() const {
  return type_;
}
inline void PBMail::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 sendtime = 5;
inline bool PBMail::has_sendtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBMail::set_has_sendtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBMail::clear_has_sendtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBMail::clear_sendtime() {
  sendtime_ = GOOGLE_ULONGLONG(0);
  clear_has_sendtime();
}
inline ::google::protobuf::uint64 PBMail::sendtime() const {
  return sendtime_;
}
inline void PBMail::set_sendtime(::google::protobuf::uint64 value) {
  set_has_sendtime();
  sendtime_ = value;
}

// optional uint32 senderid = 6;
inline bool PBMail::has_senderid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBMail::set_has_senderid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBMail::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBMail::clear_senderid() {
  senderid_ = 0u;
  clear_has_senderid();
}
inline ::google::protobuf::uint32 PBMail::senderid() const {
  return senderid_;
}
inline void PBMail::set_senderid(::google::protobuf::uint32 value) {
  set_has_senderid();
  senderid_ = value;
}

// optional string sender = 7;
inline bool PBMail::has_sender() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBMail::set_has_sender() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBMail::clear_has_sender() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBMail::clear_sender() {
  if (sender_ != &::google::protobuf::internal::kEmptyString) {
    sender_->clear();
  }
  clear_has_sender();
}
inline const ::std::string& PBMail::sender() const {
  return *sender_;
}
inline void PBMail::set_sender(const ::std::string& value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void PBMail::set_sender(const char* value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void PBMail::set_sender(const char* value, size_t size) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMail::mutable_sender() {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  return sender_;
}
inline ::std::string* PBMail::release_sender() {
  clear_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sender_;
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string title = 8;
inline bool PBMail::has_title() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBMail::set_has_title() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBMail::clear_has_title() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBMail::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& PBMail::title() const {
  return *title_;
}
inline void PBMail::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void PBMail::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void PBMail::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMail::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* PBMail::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string text = 9;
inline bool PBMail::has_text() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBMail::set_has_text() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBMail::clear_has_text() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBMail::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& PBMail::text() const {
  return *text_;
}
inline void PBMail::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void PBMail::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void PBMail::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBMail::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* PBMail::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 readed = 10;
inline bool PBMail::has_readed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBMail::set_has_readed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBMail::clear_has_readed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBMail::clear_readed() {
  readed_ = 0u;
  clear_has_readed();
}
inline ::google::protobuf::uint32 PBMail::readed() const {
  return readed_;
}
inline void PBMail::set_readed(::google::protobuf::uint32 value) {
  set_has_readed();
  readed_ = value;
}

// repeated .PBMoney money = 11;
inline int PBMail::money_size() const {
  return money_.size();
}
inline void PBMail::clear_money() {
  money_.Clear();
}
inline const ::PBMoney& PBMail::money(int index) const {
  return money_.Get(index);
}
inline ::PBMoney* PBMail::mutable_money(int index) {
  return money_.Mutable(index);
}
inline ::PBMoney* PBMail::add_money() {
  return money_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMoney >&
PBMail::money() const {
  return money_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMoney >*
PBMail::mutable_money() {
  return &money_;
}

// repeated .PBItem item = 12;
inline int PBMail::item_size() const {
  return item_.size();
}
inline void PBMail::clear_item() {
  item_.Clear();
}
inline const ::PBItem& PBMail::item(int index) const {
  return item_.Get(index);
}
inline ::PBItem* PBMail::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBItem* PBMail::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
PBMail::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
PBMail::mutable_item() {
  return &item_;
}

// optional .PBMailSaleMoneyBuy smbuy = 13;
inline bool PBMail::has_smbuy() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBMail::set_has_smbuy() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBMail::clear_has_smbuy() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBMail::clear_smbuy() {
  if (smbuy_ != NULL) smbuy_->::PBMailSaleMoneyBuy::Clear();
  clear_has_smbuy();
}
inline const ::PBMailSaleMoneyBuy& PBMail::smbuy() const {
  return smbuy_ != NULL ? *smbuy_ : *default_instance_->smbuy_;
}
inline ::PBMailSaleMoneyBuy* PBMail::mutable_smbuy() {
  set_has_smbuy();
  if (smbuy_ == NULL) smbuy_ = new ::PBMailSaleMoneyBuy;
  return smbuy_;
}
inline ::PBMailSaleMoneyBuy* PBMail::release_smbuy() {
  clear_has_smbuy();
  ::PBMailSaleMoneyBuy* temp = smbuy_;
  smbuy_ = NULL;
  return temp;
}

// optional .PBMailSaleMoneySale smsale = 14;
inline bool PBMail::has_smsale() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PBMail::set_has_smsale() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PBMail::clear_has_smsale() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PBMail::clear_smsale() {
  if (smsale_ != NULL) smsale_->::PBMailSaleMoneySale::Clear();
  clear_has_smsale();
}
inline const ::PBMailSaleMoneySale& PBMail::smsale() const {
  return smsale_ != NULL ? *smsale_ : *default_instance_->smsale_;
}
inline ::PBMailSaleMoneySale* PBMail::mutable_smsale() {
  set_has_smsale();
  if (smsale_ == NULL) smsale_ = new ::PBMailSaleMoneySale;
  return smsale_;
}
inline ::PBMailSaleMoneySale* PBMail::release_smsale() {
  clear_has_smsale();
  ::PBMailSaleMoneySale* temp = smsale_;
  smsale_ = NULL;
  return temp;
}

// optional .PBMailSaleMoneyBuyReturn smbuyret = 15;
inline bool PBMail::has_smbuyret() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PBMail::set_has_smbuyret() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PBMail::clear_has_smbuyret() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PBMail::clear_smbuyret() {
  if (smbuyret_ != NULL) smbuyret_->::PBMailSaleMoneyBuyReturn::Clear();
  clear_has_smbuyret();
}
inline const ::PBMailSaleMoneyBuyReturn& PBMail::smbuyret() const {
  return smbuyret_ != NULL ? *smbuyret_ : *default_instance_->smbuyret_;
}
inline ::PBMailSaleMoneyBuyReturn* PBMail::mutable_smbuyret() {
  set_has_smbuyret();
  if (smbuyret_ == NULL) smbuyret_ = new ::PBMailSaleMoneyBuyReturn;
  return smbuyret_;
}
inline ::PBMailSaleMoneyBuyReturn* PBMail::release_smbuyret() {
  clear_has_smbuyret();
  ::PBMailSaleMoneyBuyReturn* temp = smbuyret_;
  smbuyret_ = NULL;
  return temp;
}

// optional .PBMailSaleMoneySaleReturn smsaleret = 16;
inline bool PBMail::has_smsaleret() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PBMail::set_has_smsaleret() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PBMail::clear_has_smsaleret() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PBMail::clear_smsaleret() {
  if (smsaleret_ != NULL) smsaleret_->::PBMailSaleMoneySaleReturn::Clear();
  clear_has_smsaleret();
}
inline const ::PBMailSaleMoneySaleReturn& PBMail::smsaleret() const {
  return smsaleret_ != NULL ? *smsaleret_ : *default_instance_->smsaleret_;
}
inline ::PBMailSaleMoneySaleReturn* PBMail::mutable_smsaleret() {
  set_has_smsaleret();
  if (smsaleret_ == NULL) smsaleret_ = new ::PBMailSaleMoneySaleReturn;
  return smsaleret_;
}
inline ::PBMailSaleMoneySaleReturn* PBMail::release_smsaleret() {
  clear_has_smsaleret();
  ::PBMailSaleMoneySaleReturn* temp = smsaleret_;
  smsaleret_ = NULL;
  return temp;
}

// optional .PBMailAuctionLockRet aulockret = 17;
inline bool PBMail::has_aulockret() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PBMail::set_has_aulockret() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PBMail::clear_has_aulockret() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PBMail::clear_aulockret() {
  if (aulockret_ != NULL) aulockret_->::PBMailAuctionLockRet::Clear();
  clear_has_aulockret();
}
inline const ::PBMailAuctionLockRet& PBMail::aulockret() const {
  return aulockret_ != NULL ? *aulockret_ : *default_instance_->aulockret_;
}
inline ::PBMailAuctionLockRet* PBMail::mutable_aulockret() {
  set_has_aulockret();
  if (aulockret_ == NULL) aulockret_ = new ::PBMailAuctionLockRet;
  return aulockret_;
}
inline ::PBMailAuctionLockRet* PBMail::release_aulockret() {
  clear_has_aulockret();
  ::PBMailAuctionLockRet* temp = aulockret_;
  aulockret_ = NULL;
  return temp;
}

// optional .PBMailAuctionSaleTimeOut autimeout = 18;
inline bool PBMail::has_autimeout() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PBMail::set_has_autimeout() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PBMail::clear_has_autimeout() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PBMail::clear_autimeout() {
  if (autimeout_ != NULL) autimeout_->::PBMailAuctionSaleTimeOut::Clear();
  clear_has_autimeout();
}
inline const ::PBMailAuctionSaleTimeOut& PBMail::autimeout() const {
  return autimeout_ != NULL ? *autimeout_ : *default_instance_->autimeout_;
}
inline ::PBMailAuctionSaleTimeOut* PBMail::mutable_autimeout() {
  set_has_autimeout();
  if (autimeout_ == NULL) autimeout_ = new ::PBMailAuctionSaleTimeOut;
  return autimeout_;
}
inline ::PBMailAuctionSaleTimeOut* PBMail::release_autimeout() {
  clear_has_autimeout();
  ::PBMailAuctionSaleTimeOut* temp = autimeout_;
  autimeout_ = NULL;
  return temp;
}

// optional .PBMailAuctionSaleGet ausaleget = 19;
inline bool PBMail::has_ausaleget() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PBMail::set_has_ausaleget() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PBMail::clear_has_ausaleget() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PBMail::clear_ausaleget() {
  if (ausaleget_ != NULL) ausaleget_->::PBMailAuctionSaleGet::Clear();
  clear_has_ausaleget();
}
inline const ::PBMailAuctionSaleGet& PBMail::ausaleget() const {
  return ausaleget_ != NULL ? *ausaleget_ : *default_instance_->ausaleget_;
}
inline ::PBMailAuctionSaleGet* PBMail::mutable_ausaleget() {
  set_has_ausaleget();
  if (ausaleget_ == NULL) ausaleget_ = new ::PBMailAuctionSaleGet;
  return ausaleget_;
}
inline ::PBMailAuctionSaleGet* PBMail::release_ausaleget() {
  clear_has_ausaleget();
  ::PBMailAuctionSaleGet* temp = ausaleget_;
  ausaleget_ = NULL;
  return temp;
}

// optional .PBMailAuctionBuyGet aubuyget = 20;
inline bool PBMail::has_aubuyget() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PBMail::set_has_aubuyget() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PBMail::clear_has_aubuyget() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PBMail::clear_aubuyget() {
  if (aubuyget_ != NULL) aubuyget_->::PBMailAuctionBuyGet::Clear();
  clear_has_aubuyget();
}
inline const ::PBMailAuctionBuyGet& PBMail::aubuyget() const {
  return aubuyget_ != NULL ? *aubuyget_ : *default_instance_->aubuyget_;
}
inline ::PBMailAuctionBuyGet* PBMail::mutable_aubuyget() {
  set_has_aubuyget();
  if (aubuyget_ == NULL) aubuyget_ = new ::PBMailAuctionBuyGet;
  return aubuyget_;
}
inline ::PBMailAuctionBuyGet* PBMail::release_aubuyget() {
  clear_has_aubuyget();
  ::PBMailAuctionBuyGet* temp = aubuyget_;
  aubuyget_ = NULL;
  return temp;
}

// optional .PBMailPromote promote = 21;
inline bool PBMail::has_promote() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PBMail::set_has_promote() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PBMail::clear_has_promote() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PBMail::clear_promote() {
  if (promote_ != NULL) promote_->::PBMailPromote::Clear();
  clear_has_promote();
}
inline const ::PBMailPromote& PBMail::promote() const {
  return promote_ != NULL ? *promote_ : *default_instance_->promote_;
}
inline ::PBMailPromote* PBMail::mutable_promote() {
  set_has_promote();
  if (promote_ == NULL) promote_ = new ::PBMailPromote;
  return promote_;
}
inline ::PBMailPromote* PBMail::release_promote() {
  clear_has_promote();
  ::PBMailPromote* temp = promote_;
  promote_ = NULL;
  return temp;
}

// optional uint32 DoingType = 22;
inline bool PBMail::has_doingtype() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PBMail::set_has_doingtype() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PBMail::clear_has_doingtype() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PBMail::clear_doingtype() {
  doingtype_ = 0u;
  clear_has_doingtype();
}
inline ::google::protobuf::uint32 PBMail::doingtype() const {
  return doingtype_;
}
inline void PBMail::set_doingtype(::google::protobuf::uint32 value) {
  set_has_doingtype();
  doingtype_ = value;
}

// optional .PBMailFactionBoss factionboss = 23;
inline bool PBMail::has_factionboss() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PBMail::set_has_factionboss() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PBMail::clear_has_factionboss() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PBMail::clear_factionboss() {
  if (factionboss_ != NULL) factionboss_->::PBMailFactionBoss::Clear();
  clear_has_factionboss();
}
inline const ::PBMailFactionBoss& PBMail::factionboss() const {
  return factionboss_ != NULL ? *factionboss_ : *default_instance_->factionboss_;
}
inline ::PBMailFactionBoss* PBMail::mutable_factionboss() {
  set_has_factionboss();
  if (factionboss_ == NULL) factionboss_ = new ::PBMailFactionBoss;
  return factionboss_;
}
inline ::PBMailFactionBoss* PBMail::release_factionboss() {
  clear_has_factionboss();
  ::PBMailFactionBoss* temp = factionboss_;
  factionboss_ = NULL;
  return temp;
}

// optional .PBMailWorldBoss worldboss = 24;
inline bool PBMail::has_worldboss() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PBMail::set_has_worldboss() {
  _has_bits_[0] |= 0x00800000u;
}
inline void PBMail::clear_has_worldboss() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void PBMail::clear_worldboss() {
  if (worldboss_ != NULL) worldboss_->::PBMailWorldBoss::Clear();
  clear_has_worldboss();
}
inline const ::PBMailWorldBoss& PBMail::worldboss() const {
  return worldboss_ != NULL ? *worldboss_ : *default_instance_->worldboss_;
}
inline ::PBMailWorldBoss* PBMail::mutable_worldboss() {
  set_has_worldboss();
  if (worldboss_ == NULL) worldboss_ = new ::PBMailWorldBoss;
  return worldboss_;
}
inline ::PBMailWorldBoss* PBMail::release_worldboss() {
  clear_has_worldboss();
  ::PBMailWorldBoss* temp = worldboss_;
  worldboss_ = NULL;
  return temp;
}

// optional .PBMailCopymapCashReward copymapcash = 25;
inline bool PBMail::has_copymapcash() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PBMail::set_has_copymapcash() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PBMail::clear_has_copymapcash() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PBMail::clear_copymapcash() {
  if (copymapcash_ != NULL) copymapcash_->::PBMailCopymapCashReward::Clear();
  clear_has_copymapcash();
}
inline const ::PBMailCopymapCashReward& PBMail::copymapcash() const {
  return copymapcash_ != NULL ? *copymapcash_ : *default_instance_->copymapcash_;
}
inline ::PBMailCopymapCashReward* PBMail::mutable_copymapcash() {
  set_has_copymapcash();
  if (copymapcash_ == NULL) copymapcash_ = new ::PBMailCopymapCashReward;
  return copymapcash_;
}
inline ::PBMailCopymapCashReward* PBMail::release_copymapcash() {
  clear_has_copymapcash();
  ::PBMailCopymapCashReward* temp = copymapcash_;
  copymapcash_ = NULL;
  return temp;
}

// optional .PBMailSinglePvpFirstPrize singlepvpfirst = 26;
inline bool PBMail::has_singlepvpfirst() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PBMail::set_has_singlepvpfirst() {
  _has_bits_[0] |= 0x02000000u;
}
inline void PBMail::clear_has_singlepvpfirst() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void PBMail::clear_singlepvpfirst() {
  if (singlepvpfirst_ != NULL) singlepvpfirst_->::PBMailSinglePvpFirstPrize::Clear();
  clear_has_singlepvpfirst();
}
inline const ::PBMailSinglePvpFirstPrize& PBMail::singlepvpfirst() const {
  return singlepvpfirst_ != NULL ? *singlepvpfirst_ : *default_instance_->singlepvpfirst_;
}
inline ::PBMailSinglePvpFirstPrize* PBMail::mutable_singlepvpfirst() {
  set_has_singlepvpfirst();
  if (singlepvpfirst_ == NULL) singlepvpfirst_ = new ::PBMailSinglePvpFirstPrize;
  return singlepvpfirst_;
}
inline ::PBMailSinglePvpFirstPrize* PBMail::release_singlepvpfirst() {
  clear_has_singlepvpfirst();
  ::PBMailSinglePvpFirstPrize* temp = singlepvpfirst_;
  singlepvpfirst_ = NULL;
  return temp;
}

// optional .PBMailSinglePvpDayPrize singlepvpday = 27;
inline bool PBMail::has_singlepvpday() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PBMail::set_has_singlepvpday() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PBMail::clear_has_singlepvpday() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PBMail::clear_singlepvpday() {
  if (singlepvpday_ != NULL) singlepvpday_->::PBMailSinglePvpDayPrize::Clear();
  clear_has_singlepvpday();
}
inline const ::PBMailSinglePvpDayPrize& PBMail::singlepvpday() const {
  return singlepvpday_ != NULL ? *singlepvpday_ : *default_instance_->singlepvpday_;
}
inline ::PBMailSinglePvpDayPrize* PBMail::mutable_singlepvpday() {
  set_has_singlepvpday();
  if (singlepvpday_ == NULL) singlepvpday_ = new ::PBMailSinglePvpDayPrize;
  return singlepvpday_;
}
inline ::PBMailSinglePvpDayPrize* PBMail::release_singlepvpday() {
  clear_has_singlepvpday();
  ::PBMailSinglePvpDayPrize* temp = singlepvpday_;
  singlepvpday_ = NULL;
  return temp;
}

// optional .PBMailSinglePvpWeekPrize singlepvpweek = 28;
inline bool PBMail::has_singlepvpweek() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PBMail::set_has_singlepvpweek() {
  _has_bits_[0] |= 0x08000000u;
}
inline void PBMail::clear_has_singlepvpweek() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void PBMail::clear_singlepvpweek() {
  if (singlepvpweek_ != NULL) singlepvpweek_->::PBMailSinglePvpWeekPrize::Clear();
  clear_has_singlepvpweek();
}
inline const ::PBMailSinglePvpWeekPrize& PBMail::singlepvpweek() const {
  return singlepvpweek_ != NULL ? *singlepvpweek_ : *default_instance_->singlepvpweek_;
}
inline ::PBMailSinglePvpWeekPrize* PBMail::mutable_singlepvpweek() {
  set_has_singlepvpweek();
  if (singlepvpweek_ == NULL) singlepvpweek_ = new ::PBMailSinglePvpWeekPrize;
  return singlepvpweek_;
}
inline ::PBMailSinglePvpWeekPrize* PBMail::release_singlepvpweek() {
  clear_has_singlepvpweek();
  ::PBMailSinglePvpWeekPrize* temp = singlepvpweek_;
  singlepvpweek_ = NULL;
  return temp;
}

// optional .PBMailManorTitleGet manortitle = 29;
inline bool PBMail::has_manortitle() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PBMail::set_has_manortitle() {
  _has_bits_[0] |= 0x10000000u;
}
inline void PBMail::clear_has_manortitle() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void PBMail::clear_manortitle() {
  if (manortitle_ != NULL) manortitle_->::PBMailManorTitleGet::Clear();
  clear_has_manortitle();
}
inline const ::PBMailManorTitleGet& PBMail::manortitle() const {
  return manortitle_ != NULL ? *manortitle_ : *default_instance_->manortitle_;
}
inline ::PBMailManorTitleGet* PBMail::mutable_manortitle() {
  set_has_manortitle();
  if (manortitle_ == NULL) manortitle_ = new ::PBMailManorTitleGet;
  return manortitle_;
}
inline ::PBMailManorTitleGet* PBMail::release_manortitle() {
  clear_has_manortitle();
  ::PBMailManorTitleGet* temp = manortitle_;
  manortitle_ = NULL;
  return temp;
}

// optional .PBMailManorResult manorresult = 30;
inline bool PBMail::has_manorresult() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void PBMail::set_has_manorresult() {
  _has_bits_[0] |= 0x20000000u;
}
inline void PBMail::clear_has_manorresult() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void PBMail::clear_manorresult() {
  if (manorresult_ != NULL) manorresult_->::PBMailManorResult::Clear();
  clear_has_manorresult();
}
inline const ::PBMailManorResult& PBMail::manorresult() const {
  return manorresult_ != NULL ? *manorresult_ : *default_instance_->manorresult_;
}
inline ::PBMailManorResult* PBMail::mutable_manorresult() {
  set_has_manorresult();
  if (manorresult_ == NULL) manorresult_ = new ::PBMailManorResult;
  return manorresult_;
}
inline ::PBMailManorResult* PBMail::release_manorresult() {
  clear_has_manorresult();
  ::PBMailManorResult* temp = manorresult_;
  manorresult_ = NULL;
  return temp;
}

// optional .PBMailFactionInfo factioninfo = 31;
inline bool PBMail::has_factioninfo() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void PBMail::set_has_factioninfo() {
  _has_bits_[0] |= 0x40000000u;
}
inline void PBMail::clear_has_factioninfo() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void PBMail::clear_factioninfo() {
  if (factioninfo_ != NULL) factioninfo_->::PBMailFactionInfo::Clear();
  clear_has_factioninfo();
}
inline const ::PBMailFactionInfo& PBMail::factioninfo() const {
  return factioninfo_ != NULL ? *factioninfo_ : *default_instance_->factioninfo_;
}
inline ::PBMailFactionInfo* PBMail::mutable_factioninfo() {
  set_has_factioninfo();
  if (factioninfo_ == NULL) factioninfo_ = new ::PBMailFactionInfo;
  return factioninfo_;
}
inline ::PBMailFactionInfo* PBMail::release_factioninfo() {
  clear_has_factioninfo();
  ::PBMailFactionInfo* temp = factioninfo_;
  factioninfo_ = NULL;
  return temp;
}

// optional .PBMailTopListInfo toplist = 32;
inline bool PBMail::has_toplist() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void PBMail::set_has_toplist() {
  _has_bits_[0] |= 0x80000000u;
}
inline void PBMail::clear_has_toplist() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void PBMail::clear_toplist() {
  if (toplist_ != NULL) toplist_->::PBMailTopListInfo::Clear();
  clear_has_toplist();
}
inline const ::PBMailTopListInfo& PBMail::toplist() const {
  return toplist_ != NULL ? *toplist_ : *default_instance_->toplist_;
}
inline ::PBMailTopListInfo* PBMail::mutable_toplist() {
  set_has_toplist();
  if (toplist_ == NULL) toplist_ = new ::PBMailTopListInfo;
  return toplist_;
}
inline ::PBMailTopListInfo* PBMail::release_toplist() {
  clear_has_toplist();
  ::PBMailTopListInfo* temp = toplist_;
  toplist_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBPlayerMail

// optional uint32 saveorder = 1;
inline bool PBPlayerMail::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerMail::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerMail::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerMail::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerMail::saveorder() const {
  return saveorder_;
}
inline void PBPlayerMail::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// repeated .PBMail maillist = 2;
inline int PBPlayerMail::maillist_size() const {
  return maillist_.size();
}
inline void PBPlayerMail::clear_maillist() {
  maillist_.Clear();
}
inline const ::PBMail& PBPlayerMail::maillist(int index) const {
  return maillist_.Get(index);
}
inline ::PBMail* PBPlayerMail::mutable_maillist(int index) {
  return maillist_.Mutable(index);
}
inline ::PBMail* PBPlayerMail::add_maillist() {
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMail >&
PBPlayerMail::maillist() const {
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBMail >*
PBPlayerMail::mutable_maillist() {
  return &maillist_;
}

// -------------------------------------------------------------------

// PBFriendInfo

// optional .PBPlayerDisplay display = 1;
inline bool PBFriendInfo::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFriendInfo::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFriendInfo::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFriendInfo::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBFriendInfo::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBFriendInfo::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBFriendInfo::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 type = 2;
inline bool PBFriendInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFriendInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFriendInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFriendInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBFriendInfo::type() const {
  return type_;
}
inline void PBFriendInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bool online = 3;
inline bool PBFriendInfo::has_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFriendInfo::set_has_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFriendInfo::clear_has_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFriendInfo::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool PBFriendInfo::online() const {
  return online_;
}
inline void PBFriendInfo::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint32 friendvalue = 4;
inline bool PBFriendInfo::has_friendvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFriendInfo::set_has_friendvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFriendInfo::clear_has_friendvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFriendInfo::clear_friendvalue() {
  friendvalue_ = 0u;
  clear_has_friendvalue();
}
inline ::google::protobuf::uint32 PBFriendInfo::friendvalue() const {
  return friendvalue_;
}
inline void PBFriendInfo::set_friendvalue(::google::protobuf::uint32 value) {
  set_has_friendvalue();
  friendvalue_ = value;
}

// optional uint32 time = 5;
inline bool PBFriendInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFriendInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFriendInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFriendInfo::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBFriendInfo::time() const {
  return time_;
}
inline void PBFriendInfo::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 updatetime = 6;
inline bool PBFriendInfo::has_updatetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBFriendInfo::set_has_updatetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBFriendInfo::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBFriendInfo::clear_updatetime() {
  updatetime_ = 0u;
  clear_has_updatetime();
}
inline ::google::protobuf::uint32 PBFriendInfo::updatetime() const {
  return updatetime_;
}
inline void PBFriendInfo::set_updatetime(::google::protobuf::uint32 value) {
  set_has_updatetime();
  updatetime_ = value;
}

// optional uint32 fightpower = 7;
inline bool PBFriendInfo::has_fightpower() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBFriendInfo::set_has_fightpower() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBFriendInfo::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBFriendInfo::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBFriendInfo::fightpower() const {
  return fightpower_;
}
inline void PBFriendInfo::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// -------------------------------------------------------------------

// PBFriendGroup

// optional uint32 type = 1;
inline bool PBFriendGroup::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFriendGroup::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFriendGroup::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFriendGroup::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBFriendGroup::type() const {
  return type_;
}
inline void PBFriendGroup::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated .PBFriendInfo list = 2;
inline int PBFriendGroup::list_size() const {
  return list_.size();
}
inline void PBFriendGroup::clear_list() {
  list_.Clear();
}
inline const ::PBFriendInfo& PBFriendGroup::list(int index) const {
  return list_.Get(index);
}
inline ::PBFriendInfo* PBFriendGroup::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::PBFriendInfo* PBFriendGroup::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFriendInfo >&
PBFriendGroup::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFriendInfo >*
PBFriendGroup::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// PBPlayerFriend

// optional uint32 saveorder = 1;
inline bool PBPlayerFriend::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerFriend::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerFriend::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerFriend::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerFriend::saveorder() const {
  return saveorder_;
}
inline void PBPlayerFriend::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// repeated .PBFriendGroup group = 2;
inline int PBPlayerFriend::group_size() const {
  return group_.size();
}
inline void PBPlayerFriend::clear_group() {
  group_.Clear();
}
inline const ::PBFriendGroup& PBPlayerFriend::group(int index) const {
  return group_.Get(index);
}
inline ::PBFriendGroup* PBPlayerFriend::mutable_group(int index) {
  return group_.Mutable(index);
}
inline ::PBFriendGroup* PBPlayerFriend::add_group() {
  return group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFriendGroup >&
PBPlayerFriend::group() const {
  return group_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFriendGroup >*
PBPlayerFriend::mutable_group() {
  return &group_;
}

// -------------------------------------------------------------------

// PBFactionBossPersonalTop

// optional .PBPlayerDisplay display = 1;
inline bool PBFactionBossPersonalTop::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionBossPersonalTop::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionBossPersonalTop::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionBossPersonalTop::clear_display() {
  if (display_ != NULL) display_->::PBPlayerDisplay::Clear();
  clear_has_display();
}
inline const ::PBPlayerDisplay& PBFactionBossPersonalTop::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBPlayerDisplay* PBFactionBossPersonalTop::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBPlayerDisplay;
  return display_;
}
inline ::PBPlayerDisplay* PBFactionBossPersonalTop::release_display() {
  clear_has_display();
  ::PBPlayerDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 order = 2;
inline bool PBFactionBossPersonalTop::has_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionBossPersonalTop::set_has_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionBossPersonalTop::clear_has_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionBossPersonalTop::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PBFactionBossPersonalTop::order() const {
  return order_;
}
inline void PBFactionBossPersonalTop::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// optional uint64 score = 3;
inline bool PBFactionBossPersonalTop::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionBossPersonalTop::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionBossPersonalTop::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionBossPersonalTop::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 PBFactionBossPersonalTop::score() const {
  return score_;
}
inline void PBFactionBossPersonalTop::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 time = 4;
inline bool PBFactionBossPersonalTop::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionBossPersonalTop::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionBossPersonalTop::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionBossPersonalTop::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBFactionBossPersonalTop::time() const {
  return time_;
}
inline void PBFactionBossPersonalTop::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBFactionBossFactionTop

// optional .PBFactionDisplay faction = 1;
inline bool PBFactionBossFactionTop::has_faction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionBossFactionTop::set_has_faction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionBossFactionTop::clear_has_faction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionBossFactionTop::clear_faction() {
  if (faction_ != NULL) faction_->::PBFactionDisplay::Clear();
  clear_has_faction();
}
inline const ::PBFactionDisplay& PBFactionBossFactionTop::faction() const {
  return faction_ != NULL ? *faction_ : *default_instance_->faction_;
}
inline ::PBFactionDisplay* PBFactionBossFactionTop::mutable_faction() {
  set_has_faction();
  if (faction_ == NULL) faction_ = new ::PBFactionDisplay;
  return faction_;
}
inline ::PBFactionDisplay* PBFactionBossFactionTop::release_faction() {
  clear_has_faction();
  ::PBFactionDisplay* temp = faction_;
  faction_ = NULL;
  return temp;
}

// optional uint32 order = 2;
inline bool PBFactionBossFactionTop::has_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionBossFactionTop::set_has_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionBossFactionTop::clear_has_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionBossFactionTop::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PBFactionBossFactionTop::order() const {
  return order_;
}
inline void PBFactionBossFactionTop::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// optional uint64 score = 3;
inline bool PBFactionBossFactionTop::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionBossFactionTop::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionBossFactionTop::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionBossFactionTop::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 PBFactionBossFactionTop::score() const {
  return score_;
}
inline void PBFactionBossFactionTop::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 time = 4;
inline bool PBFactionBossFactionTop::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionBossFactionTop::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionBossFactionTop::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionBossFactionTop::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBFactionBossFactionTop::time() const {
  return time_;
}
inline void PBFactionBossFactionTop::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBFactionBossUnionTop

// optional .PBFactionDisplay faction = 1;
inline bool PBFactionBossUnionTop::has_faction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionBossUnionTop::set_has_faction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionBossUnionTop::clear_has_faction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionBossUnionTop::clear_faction() {
  if (faction_ != NULL) faction_->::PBFactionDisplay::Clear();
  clear_has_faction();
}
inline const ::PBFactionDisplay& PBFactionBossUnionTop::faction() const {
  return faction_ != NULL ? *faction_ : *default_instance_->faction_;
}
inline ::PBFactionDisplay* PBFactionBossUnionTop::mutable_faction() {
  set_has_faction();
  if (faction_ == NULL) faction_ = new ::PBFactionDisplay;
  return faction_;
}
inline ::PBFactionDisplay* PBFactionBossUnionTop::release_faction() {
  clear_has_faction();
  ::PBFactionDisplay* temp = faction_;
  faction_ = NULL;
  return temp;
}

// optional uint32 order = 2;
inline bool PBFactionBossUnionTop::has_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionBossUnionTop::set_has_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionBossUnionTop::clear_has_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionBossUnionTop::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PBFactionBossUnionTop::order() const {
  return order_;
}
inline void PBFactionBossUnionTop::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// optional uint64 score = 3;
inline bool PBFactionBossUnionTop::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionBossUnionTop::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionBossUnionTop::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionBossUnionTop::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 PBFactionBossUnionTop::score() const {
  return score_;
}
inline void PBFactionBossUnionTop::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 time = 4;
inline bool PBFactionBossUnionTop::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionBossUnionTop::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionBossUnionTop::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionBossUnionTop::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBFactionBossUnionTop::time() const {
  return time_;
}
inline void PBFactionBossUnionTop::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBPlayerData

// optional .PBAccount accountinfo = 1;
inline bool PBPlayerData::has_accountinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerData::set_has_accountinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerData::clear_has_accountinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerData::clear_accountinfo() {
  if (accountinfo_ != NULL) accountinfo_->::PBAccount::Clear();
  clear_has_accountinfo();
}
inline const ::PBAccount& PBPlayerData::accountinfo() const {
  return accountinfo_ != NULL ? *accountinfo_ : *default_instance_->accountinfo_;
}
inline ::PBAccount* PBPlayerData::mutable_accountinfo() {
  set_has_accountinfo();
  if (accountinfo_ == NULL) accountinfo_ = new ::PBAccount;
  return accountinfo_;
}
inline ::PBAccount* PBPlayerData::release_accountinfo() {
  clear_has_accountinfo();
  ::PBAccount* temp = accountinfo_;
  accountinfo_ = NULL;
  return temp;
}

// optional .PBPlayerBase playerbase = 2;
inline bool PBPlayerData::has_playerbase() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerData::set_has_playerbase() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerData::clear_has_playerbase() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerData::clear_playerbase() {
  if (playerbase_ != NULL) playerbase_->::PBPlayerBase::Clear();
  clear_has_playerbase();
}
inline const ::PBPlayerBase& PBPlayerData::playerbase() const {
  return playerbase_ != NULL ? *playerbase_ : *default_instance_->playerbase_;
}
inline ::PBPlayerBase* PBPlayerData::mutable_playerbase() {
  set_has_playerbase();
  if (playerbase_ == NULL) playerbase_ = new ::PBPlayerBase;
  return playerbase_;
}
inline ::PBPlayerBase* PBPlayerData::release_playerbase() {
  clear_has_playerbase();
  ::PBPlayerBase* temp = playerbase_;
  playerbase_ = NULL;
  return temp;
}

// optional .PBPlayerSystem playersystem = 3;
inline bool PBPlayerData::has_playersystem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerData::set_has_playersystem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerData::clear_has_playersystem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerData::clear_playersystem() {
  if (playersystem_ != NULL) playersystem_->::PBPlayerSystem::Clear();
  clear_has_playersystem();
}
inline const ::PBPlayerSystem& PBPlayerData::playersystem() const {
  return playersystem_ != NULL ? *playersystem_ : *default_instance_->playersystem_;
}
inline ::PBPlayerSystem* PBPlayerData::mutable_playersystem() {
  set_has_playersystem();
  if (playersystem_ == NULL) playersystem_ = new ::PBPlayerSystem;
  return playersystem_;
}
inline ::PBPlayerSystem* PBPlayerData::release_playersystem() {
  clear_has_playersystem();
  ::PBPlayerSystem* temp = playersystem_;
  playersystem_ = NULL;
  return temp;
}

// optional .PBPlayerBag playerBag = 4;
inline bool PBPlayerData::has_playerbag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerData::set_has_playerbag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerData::clear_has_playerbag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerData::clear_playerbag() {
  if (playerbag_ != NULL) playerbag_->::PBPlayerBag::Clear();
  clear_has_playerbag();
}
inline const ::PBPlayerBag& PBPlayerData::playerbag() const {
  return playerbag_ != NULL ? *playerbag_ : *default_instance_->playerbag_;
}
inline ::PBPlayerBag* PBPlayerData::mutable_playerbag() {
  set_has_playerbag();
  if (playerbag_ == NULL) playerbag_ = new ::PBPlayerBag;
  return playerbag_;
}
inline ::PBPlayerBag* PBPlayerData::release_playerbag() {
  clear_has_playerbag();
  ::PBPlayerBag* temp = playerbag_;
  playerbag_ = NULL;
  return temp;
}

// optional .PBClientData clientdata = 5;
inline bool PBPlayerData::has_clientdata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerData::set_has_clientdata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerData::clear_has_clientdata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerData::clear_clientdata() {
  if (clientdata_ != NULL) clientdata_->::PBClientData::Clear();
  clear_has_clientdata();
}
inline const ::PBClientData& PBPlayerData::clientdata() const {
  return clientdata_ != NULL ? *clientdata_ : *default_instance_->clientdata_;
}
inline ::PBClientData* PBPlayerData::mutable_clientdata() {
  set_has_clientdata();
  if (clientdata_ == NULL) clientdata_ = new ::PBClientData;
  return clientdata_;
}
inline ::PBClientData* PBPlayerData::release_clientdata() {
  clear_has_clientdata();
  ::PBClientData* temp = clientdata_;
  clientdata_ = NULL;
  return temp;
}

// optional .PBPlayerQuest playerquest = 6;
inline bool PBPlayerData::has_playerquest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerData::set_has_playerquest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerData::clear_has_playerquest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerData::clear_playerquest() {
  if (playerquest_ != NULL) playerquest_->::PBPlayerQuest::Clear();
  clear_has_playerquest();
}
inline const ::PBPlayerQuest& PBPlayerData::playerquest() const {
  return playerquest_ != NULL ? *playerquest_ : *default_instance_->playerquest_;
}
inline ::PBPlayerQuest* PBPlayerData::mutable_playerquest() {
  set_has_playerquest();
  if (playerquest_ == NULL) playerquest_ = new ::PBPlayerQuest;
  return playerquest_;
}
inline ::PBPlayerQuest* PBPlayerData::release_playerquest() {
  clear_has_playerquest();
  ::PBPlayerQuest* temp = playerquest_;
  playerquest_ = NULL;
  return temp;
}

// optional .PBPlayerMail playermail = 7;
inline bool PBPlayerData::has_playermail() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPlayerData::set_has_playermail() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPlayerData::clear_has_playermail() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPlayerData::clear_playermail() {
  if (playermail_ != NULL) playermail_->::PBPlayerMail::Clear();
  clear_has_playermail();
}
inline const ::PBPlayerMail& PBPlayerData::playermail() const {
  return playermail_ != NULL ? *playermail_ : *default_instance_->playermail_;
}
inline ::PBPlayerMail* PBPlayerData::mutable_playermail() {
  set_has_playermail();
  if (playermail_ == NULL) playermail_ = new ::PBPlayerMail;
  return playermail_;
}
inline ::PBPlayerMail* PBPlayerData::release_playermail() {
  clear_has_playermail();
  ::PBPlayerMail* temp = playermail_;
  playermail_ = NULL;
  return temp;
}

// optional .PBPlayerFriend playerfriend = 8;
inline bool PBPlayerData::has_playerfriend() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBPlayerData::set_has_playerfriend() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBPlayerData::clear_has_playerfriend() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBPlayerData::clear_playerfriend() {
  if (playerfriend_ != NULL) playerfriend_->::PBPlayerFriend::Clear();
  clear_has_playerfriend();
}
inline const ::PBPlayerFriend& PBPlayerData::playerfriend() const {
  return playerfriend_ != NULL ? *playerfriend_ : *default_instance_->playerfriend_;
}
inline ::PBPlayerFriend* PBPlayerData::mutable_playerfriend() {
  set_has_playerfriend();
  if (playerfriend_ == NULL) playerfriend_ = new ::PBPlayerFriend;
  return playerfriend_;
}
inline ::PBPlayerFriend* PBPlayerData::release_playerfriend() {
  clear_has_playerfriend();
  ::PBPlayerFriend* temp = playerfriend_;
  playerfriend_ = NULL;
  return temp;
}

// optional .PBPlayerFaction playerfaction = 9;
inline bool PBPlayerData::has_playerfaction() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBPlayerData::set_has_playerfaction() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBPlayerData::clear_has_playerfaction() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBPlayerData::clear_playerfaction() {
  if (playerfaction_ != NULL) playerfaction_->::PBPlayerFaction::Clear();
  clear_has_playerfaction();
}
inline const ::PBPlayerFaction& PBPlayerData::playerfaction() const {
  return playerfaction_ != NULL ? *playerfaction_ : *default_instance_->playerfaction_;
}
inline ::PBPlayerFaction* PBPlayerData::mutable_playerfaction() {
  set_has_playerfaction();
  if (playerfaction_ == NULL) playerfaction_ = new ::PBPlayerFaction;
  return playerfaction_;
}
inline ::PBPlayerFaction* PBPlayerData::release_playerfaction() {
  clear_has_playerfaction();
  ::PBPlayerFaction* temp = playerfaction_;
  playerfaction_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBPlayerEquipData

// repeated .PBItem equip = 1;
inline int PBPlayerEquipData::equip_size() const {
  return equip_.size();
}
inline void PBPlayerEquipData::clear_equip() {
  equip_.Clear();
}
inline const ::PBItem& PBPlayerEquipData::equip(int index) const {
  return equip_.Get(index);
}
inline ::PBItem* PBPlayerEquipData::mutable_equip(int index) {
  return equip_.Mutable(index);
}
inline ::PBItem* PBPlayerEquipData::add_equip() {
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
PBPlayerEquipData::equip() const {
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
PBPlayerEquipData::mutable_equip() {
  return &equip_;
}

// -------------------------------------------------------------------

// PBGhostGameAttr

// repeated int32 attr = 1;
inline int PBGhostGameAttr::attr_size() const {
  return attr_.size();
}
inline void PBGhostGameAttr::clear_attr() {
  attr_.Clear();
}
inline ::google::protobuf::int32 PBGhostGameAttr::attr(int index) const {
  return attr_.Get(index);
}
inline void PBGhostGameAttr::set_attr(int index, ::google::protobuf::int32 value) {
  attr_.Set(index, value);
}
inline void PBGhostGameAttr::add_attr(::google::protobuf::int32 value) {
  attr_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PBGhostGameAttr::attr() const {
  return attr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PBGhostGameAttr::mutable_attr() {
  return &attr_;
}

// -------------------------------------------------------------------

// PBPlayerView

// optional .PBPlayerAvatar avatar = 1;
inline bool PBPlayerView::has_avatar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerView::set_has_avatar() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerView::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerView::clear_avatar() {
  if (avatar_ != NULL) avatar_->::PBPlayerAvatar::Clear();
  clear_has_avatar();
}
inline const ::PBPlayerAvatar& PBPlayerView::avatar() const {
  return avatar_ != NULL ? *avatar_ : *default_instance_->avatar_;
}
inline ::PBPlayerAvatar* PBPlayerView::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == NULL) avatar_ = new ::PBPlayerAvatar;
  return avatar_;
}
inline ::PBPlayerAvatar* PBPlayerView::release_avatar() {
  clear_has_avatar();
  ::PBPlayerAvatar* temp = avatar_;
  avatar_ = NULL;
  return temp;
}

// optional .PBPlayerEquipData equip = 2;
inline bool PBPlayerView::has_equip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerView::set_has_equip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerView::clear_has_equip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerView::clear_equip() {
  if (equip_ != NULL) equip_->::PBPlayerEquipData::Clear();
  clear_has_equip();
}
inline const ::PBPlayerEquipData& PBPlayerView::equip() const {
  return equip_ != NULL ? *equip_ : *default_instance_->equip_;
}
inline ::PBPlayerEquipData* PBPlayerView::mutable_equip() {
  set_has_equip();
  if (equip_ == NULL) equip_ = new ::PBPlayerEquipData;
  return equip_;
}
inline ::PBPlayerEquipData* PBPlayerView::release_equip() {
  clear_has_equip();
  ::PBPlayerEquipData* temp = equip_;
  equip_ = NULL;
  return temp;
}

// optional uint32 fightpower = 3;
inline bool PBPlayerView::has_fightpower() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerView::set_has_fightpower() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerView::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerView::clear_fightpower() {
  fightpower_ = 0u;
  clear_has_fightpower();
}
inline ::google::protobuf::uint32 PBPlayerView::fightpower() const {
  return fightpower_;
}
inline void PBPlayerView::set_fightpower(::google::protobuf::uint32 value) {
  set_has_fightpower();
  fightpower_ = value;
}

// optional .PBGhostGameAttr attri = 4;
inline bool PBPlayerView::has_attri() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBPlayerView::set_has_attri() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBPlayerView::clear_has_attri() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBPlayerView::clear_attri() {
  if (attri_ != NULL) attri_->::PBGhostGameAttr::Clear();
  clear_has_attri();
}
inline const ::PBGhostGameAttr& PBPlayerView::attri() const {
  return attri_ != NULL ? *attri_ : *default_instance_->attri_;
}
inline ::PBGhostGameAttr* PBPlayerView::mutable_attri() {
  set_has_attri();
  if (attri_ == NULL) attri_ = new ::PBGhostGameAttr;
  return attri_;
}
inline ::PBGhostGameAttr* PBPlayerView::release_attri() {
  clear_has_attri();
  ::PBGhostGameAttr* temp = attri_;
  attri_ = NULL;
  return temp;
}

// optional uint32 pkvalue = 5;
inline bool PBPlayerView::has_pkvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerView::set_has_pkvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerView::clear_has_pkvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerView::clear_pkvalue() {
  pkvalue_ = 0u;
  clear_has_pkvalue();
}
inline ::google::protobuf::uint32 PBPlayerView::pkvalue() const {
  return pkvalue_;
}
inline void PBPlayerView::set_pkvalue(::google::protobuf::uint32 value) {
  set_has_pkvalue();
  pkvalue_ = value;
}

// repeated .PBBingFa bingfa = 6;
inline int PBPlayerView::bingfa_size() const {
  return bingfa_.size();
}
inline void PBPlayerView::clear_bingfa() {
  bingfa_.Clear();
}
inline const ::PBBingFa& PBPlayerView::bingfa(int index) const {
  return bingfa_.Get(index);
}
inline ::PBBingFa* PBPlayerView::mutable_bingfa(int index) {
  return bingfa_.Mutable(index);
}
inline ::PBBingFa* PBPlayerView::add_bingfa() {
  return bingfa_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBBingFa >&
PBPlayerView::bingfa() const {
  return bingfa_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBBingFa >*
PBPlayerView::mutable_bingfa() {
  return &bingfa_;
}

// optional .PBSinglePvpInfo singlePvpInfo = 7;
inline bool PBPlayerView::has_singlepvpinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBPlayerView::set_has_singlepvpinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBPlayerView::clear_has_singlepvpinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBPlayerView::clear_singlepvpinfo() {
  if (singlepvpinfo_ != NULL) singlepvpinfo_->::PBSinglePvpInfo::Clear();
  clear_has_singlepvpinfo();
}
inline const ::PBSinglePvpInfo& PBPlayerView::singlepvpinfo() const {
  return singlepvpinfo_ != NULL ? *singlepvpinfo_ : *default_instance_->singlepvpinfo_;
}
inline ::PBSinglePvpInfo* PBPlayerView::mutable_singlepvpinfo() {
  set_has_singlepvpinfo();
  if (singlepvpinfo_ == NULL) singlepvpinfo_ = new ::PBSinglePvpInfo;
  return singlepvpinfo_;
}
inline ::PBSinglePvpInfo* PBPlayerView::release_singlepvpinfo() {
  clear_has_singlepvpinfo();
  ::PBSinglePvpInfo* temp = singlepvpinfo_;
  singlepvpinfo_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBSinglePvpInfo

// optional uint32 wincount = 1;
inline bool PBSinglePvpInfo::has_wincount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBSinglePvpInfo::set_has_wincount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBSinglePvpInfo::clear_has_wincount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBSinglePvpInfo::clear_wincount() {
  wincount_ = 0u;
  clear_has_wincount();
}
inline ::google::protobuf::uint32 PBSinglePvpInfo::wincount() const {
  return wincount_;
}
inline void PBSinglePvpInfo::set_wincount(::google::protobuf::uint32 value) {
  set_has_wincount();
  wincount_ = value;
}

// optional uint32 failcount = 2;
inline bool PBSinglePvpInfo::has_failcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBSinglePvpInfo::set_has_failcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBSinglePvpInfo::clear_has_failcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBSinglePvpInfo::clear_failcount() {
  failcount_ = 0u;
  clear_has_failcount();
}
inline ::google::protobuf::uint32 PBSinglePvpInfo::failcount() const {
  return failcount_;
}
inline void PBSinglePvpInfo::set_failcount(::google::protobuf::uint32 value) {
  set_has_failcount();
  failcount_ = value;
}

// -------------------------------------------------------------------

// PBWorldBossKillInfo

// optional uint32 worldbossactivityid = 1;
inline bool PBWorldBossKillInfo::has_worldbossactivityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWorldBossKillInfo::set_has_worldbossactivityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWorldBossKillInfo::clear_has_worldbossactivityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWorldBossKillInfo::clear_worldbossactivityid() {
  worldbossactivityid_ = 0u;
  clear_has_worldbossactivityid();
}
inline ::google::protobuf::uint32 PBWorldBossKillInfo::worldbossactivityid() const {
  return worldbossactivityid_;
}
inline void PBWorldBossKillInfo::set_worldbossactivityid(::google::protobuf::uint32 value) {
  set_has_worldbossactivityid();
  worldbossactivityid_ = value;
}

// optional string lastkillername = 2;
inline bool PBWorldBossKillInfo::has_lastkillername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWorldBossKillInfo::set_has_lastkillername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWorldBossKillInfo::clear_has_lastkillername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWorldBossKillInfo::clear_lastkillername() {
  if (lastkillername_ != &::google::protobuf::internal::kEmptyString) {
    lastkillername_->clear();
  }
  clear_has_lastkillername();
}
inline const ::std::string& PBWorldBossKillInfo::lastkillername() const {
  return *lastkillername_;
}
inline void PBWorldBossKillInfo::set_lastkillername(const ::std::string& value) {
  set_has_lastkillername();
  if (lastkillername_ == &::google::protobuf::internal::kEmptyString) {
    lastkillername_ = new ::std::string;
  }
  lastkillername_->assign(value);
}
inline void PBWorldBossKillInfo::set_lastkillername(const char* value) {
  set_has_lastkillername();
  if (lastkillername_ == &::google::protobuf::internal::kEmptyString) {
    lastkillername_ = new ::std::string;
  }
  lastkillername_->assign(value);
}
inline void PBWorldBossKillInfo::set_lastkillername(const char* value, size_t size) {
  set_has_lastkillername();
  if (lastkillername_ == &::google::protobuf::internal::kEmptyString) {
    lastkillername_ = new ::std::string;
  }
  lastkillername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBWorldBossKillInfo::mutable_lastkillername() {
  set_has_lastkillername();
  if (lastkillername_ == &::google::protobuf::internal::kEmptyString) {
    lastkillername_ = new ::std::string;
  }
  return lastkillername_;
}
inline ::std::string* PBWorldBossKillInfo::release_lastkillername() {
  clear_has_lastkillername();
  if (lastkillername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = lastkillername_;
    lastkillername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint64 lastdeadtimetick = 3;
inline bool PBWorldBossKillInfo::has_lastdeadtimetick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBWorldBossKillInfo::set_has_lastdeadtimetick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBWorldBossKillInfo::clear_has_lastdeadtimetick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBWorldBossKillInfo::clear_lastdeadtimetick() {
  lastdeadtimetick_ = GOOGLE_ULONGLONG(0);
  clear_has_lastdeadtimetick();
}
inline ::google::protobuf::uint64 PBWorldBossKillInfo::lastdeadtimetick() const {
  return lastdeadtimetick_;
}
inline void PBWorldBossKillInfo::set_lastdeadtimetick(::google::protobuf::uint64 value) {
  set_has_lastdeadtimetick();
  lastdeadtimetick_ = value;
}

// -------------------------------------------------------------------

// PBWorldBossKill

// repeated .PBWorldBossKillInfo killinfos = 1;
inline int PBWorldBossKill::killinfos_size() const {
  return killinfos_.size();
}
inline void PBWorldBossKill::clear_killinfos() {
  killinfos_.Clear();
}
inline const ::PBWorldBossKillInfo& PBWorldBossKill::killinfos(int index) const {
  return killinfos_.Get(index);
}
inline ::PBWorldBossKillInfo* PBWorldBossKill::mutable_killinfos(int index) {
  return killinfos_.Mutable(index);
}
inline ::PBWorldBossKillInfo* PBWorldBossKill::add_killinfos() {
  return killinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWorldBossKillInfo >&
PBWorldBossKill::killinfos() const {
  return killinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWorldBossKillInfo >*
PBWorldBossKill::mutable_killinfos() {
  return &killinfos_;
}

// -------------------------------------------------------------------

// PBWTopListInfo

// optional uint32 type = 1;
inline bool PBWTopListInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWTopListInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWTopListInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWTopListInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBWTopListInfo::type() const {
  return type_;
}
inline void PBWTopListInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint32 cleartime = 2;
inline bool PBWTopListInfo::has_cleartime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWTopListInfo::set_has_cleartime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWTopListInfo::clear_has_cleartime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWTopListInfo::clear_cleartime() {
  cleartime_ = 0u;
  clear_has_cleartime();
}
inline ::google::protobuf::uint32 PBWTopListInfo::cleartime() const {
  return cleartime_;
}
inline void PBWTopListInfo::set_cleartime(::google::protobuf::uint32 value) {
  set_has_cleartime();
  cleartime_ = value;
}

// -------------------------------------------------------------------

// PBTopListList

// repeated .PBWTopListInfo info_list = 1;
inline int PBTopListList::info_list_size() const {
  return info_list_.size();
}
inline void PBTopListList::clear_info_list() {
  info_list_.Clear();
}
inline const ::PBWTopListInfo& PBTopListList::info_list(int index) const {
  return info_list_.Get(index);
}
inline ::PBWTopListInfo* PBTopListList::mutable_info_list(int index) {
  return info_list_.Mutable(index);
}
inline ::PBWTopListInfo* PBTopListList::add_info_list() {
  return info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBWTopListInfo >&
PBTopListList::info_list() const {
  return info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBWTopListInfo >*
PBTopListList::mutable_info_list() {
  return &info_list_;
}

// -------------------------------------------------------------------

// PBGlobalServerData

// optional .PBSaleMoneyPriceData salemoney = 1;
inline bool PBGlobalServerData::has_salemoney() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGlobalServerData::set_has_salemoney() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGlobalServerData::clear_has_salemoney() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGlobalServerData::clear_salemoney() {
  if (salemoney_ != NULL) salemoney_->::PBSaleMoneyPriceData::Clear();
  clear_has_salemoney();
}
inline const ::PBSaleMoneyPriceData& PBGlobalServerData::salemoney() const {
  return salemoney_ != NULL ? *salemoney_ : *default_instance_->salemoney_;
}
inline ::PBSaleMoneyPriceData* PBGlobalServerData::mutable_salemoney() {
  set_has_salemoney();
  if (salemoney_ == NULL) salemoney_ = new ::PBSaleMoneyPriceData;
  return salemoney_;
}
inline ::PBSaleMoneyPriceData* PBGlobalServerData::release_salemoney() {
  clear_has_salemoney();
  ::PBSaleMoneyPriceData* temp = salemoney_;
  salemoney_ = NULL;
  return temp;
}

// optional .PBAuctionPriceData auction = 2;
inline bool PBGlobalServerData::has_auction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGlobalServerData::set_has_auction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGlobalServerData::clear_has_auction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGlobalServerData::clear_auction() {
  if (auction_ != NULL) auction_->::PBAuctionPriceData::Clear();
  clear_has_auction();
}
inline const ::PBAuctionPriceData& PBGlobalServerData::auction() const {
  return auction_ != NULL ? *auction_ : *default_instance_->auction_;
}
inline ::PBAuctionPriceData* PBGlobalServerData::mutable_auction() {
  set_has_auction();
  if (auction_ == NULL) auction_ = new ::PBAuctionPriceData;
  return auction_;
}
inline ::PBAuctionPriceData* PBGlobalServerData::release_auction() {
  clear_has_auction();
  ::PBAuctionPriceData* temp = auction_;
  auction_ = NULL;
  return temp;
}

// optional .PBWorldBossKill worldbosskill = 3;
inline bool PBGlobalServerData::has_worldbosskill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGlobalServerData::set_has_worldbosskill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGlobalServerData::clear_has_worldbosskill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGlobalServerData::clear_worldbosskill() {
  if (worldbosskill_ != NULL) worldbosskill_->::PBWorldBossKill::Clear();
  clear_has_worldbosskill();
}
inline const ::PBWorldBossKill& PBGlobalServerData::worldbosskill() const {
  return worldbosskill_ != NULL ? *worldbosskill_ : *default_instance_->worldbosskill_;
}
inline ::PBWorldBossKill* PBGlobalServerData::mutable_worldbosskill() {
  set_has_worldbosskill();
  if (worldbosskill_ == NULL) worldbosskill_ = new ::PBWorldBossKill;
  return worldbosskill_;
}
inline ::PBWorldBossKill* PBGlobalServerData::release_worldbosskill() {
  clear_has_worldbosskill();
  ::PBWorldBossKill* temp = worldbosskill_;
  worldbosskill_ = NULL;
  return temp;
}

// optional .PBTopListList toplist = 4;
inline bool PBGlobalServerData::has_toplist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGlobalServerData::set_has_toplist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGlobalServerData::clear_has_toplist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGlobalServerData::clear_toplist() {
  if (toplist_ != NULL) toplist_->::PBTopListList::Clear();
  clear_has_toplist();
}
inline const ::PBTopListList& PBGlobalServerData::toplist() const {
  return toplist_ != NULL ? *toplist_ : *default_instance_->toplist_;
}
inline ::PBTopListList* PBGlobalServerData::mutable_toplist() {
  set_has_toplist();
  if (toplist_ == NULL) toplist_ = new ::PBTopListList;
  return toplist_;
}
inline ::PBTopListList* PBGlobalServerData::release_toplist() {
  clear_has_toplist();
  ::PBTopListList* temp = toplist_;
  toplist_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBWorldFactionBossData

// optional uint32 lasttime = 1;
inline bool PBWorldFactionBossData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWorldFactionBossData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWorldFactionBossData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWorldFactionBossData::clear_lasttime() {
  lasttime_ = 0u;
  clear_has_lasttime();
}
inline ::google::protobuf::uint32 PBWorldFactionBossData::lasttime() const {
  return lasttime_;
}
inline void PBWorldFactionBossData::set_lasttime(::google::protobuf::uint32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// optional uint64 wholescore = 2;
inline bool PBWorldFactionBossData::has_wholescore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWorldFactionBossData::set_has_wholescore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWorldFactionBossData::clear_has_wholescore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWorldFactionBossData::clear_wholescore() {
  wholescore_ = GOOGLE_ULONGLONG(0);
  clear_has_wholescore();
}
inline ::google::protobuf::uint64 PBWorldFactionBossData::wholescore() const {
  return wholescore_;
}
inline void PBWorldFactionBossData::set_wholescore(::google::protobuf::uint64 value) {
  set_has_wholescore();
  wholescore_ = value;
}

// -------------------------------------------------------------------

// PBTreasureValueInfo

// optional uint32 prizeid = 1;
inline bool PBTreasureValueInfo::has_prizeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBTreasureValueInfo::set_has_prizeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBTreasureValueInfo::clear_has_prizeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBTreasureValueInfo::clear_prizeid() {
  prizeid_ = 0u;
  clear_has_prizeid();
}
inline ::google::protobuf::uint32 PBTreasureValueInfo::prizeid() const {
  return prizeid_;
}
inline void PBTreasureValueInfo::set_prizeid(::google::protobuf::uint32 value) {
  set_has_prizeid();
  prizeid_ = value;
}

// optional uint32 dayvalue = 2;
inline bool PBTreasureValueInfo::has_dayvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBTreasureValueInfo::set_has_dayvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBTreasureValueInfo::clear_has_dayvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBTreasureValueInfo::clear_dayvalue() {
  dayvalue_ = 0u;
  clear_has_dayvalue();
}
inline ::google::protobuf::uint32 PBTreasureValueInfo::dayvalue() const {
  return dayvalue_;
}
inline void PBTreasureValueInfo::set_dayvalue(::google::protobuf::uint32 value) {
  set_has_dayvalue();
  dayvalue_ = value;
}

// optional uint32 daycount = 3;
inline bool PBTreasureValueInfo::has_daycount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBTreasureValueInfo::set_has_daycount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBTreasureValueInfo::clear_has_daycount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBTreasureValueInfo::clear_daycount() {
  daycount_ = 0u;
  clear_has_daycount();
}
inline ::google::protobuf::uint32 PBTreasureValueInfo::daycount() const {
  return daycount_;
}
inline void PBTreasureValueInfo::set_daycount(::google::protobuf::uint32 value) {
  set_has_daycount();
  daycount_ = value;
}

// -------------------------------------------------------------------

// PBWorldTreasureData

// repeated .PBTreasureValueInfo treasureinfo = 1;
inline int PBWorldTreasureData::treasureinfo_size() const {
  return treasureinfo_.size();
}
inline void PBWorldTreasureData::clear_treasureinfo() {
  treasureinfo_.Clear();
}
inline const ::PBTreasureValueInfo& PBWorldTreasureData::treasureinfo(int index) const {
  return treasureinfo_.Get(index);
}
inline ::PBTreasureValueInfo* PBWorldTreasureData::mutable_treasureinfo(int index) {
  return treasureinfo_.Mutable(index);
}
inline ::PBTreasureValueInfo* PBWorldTreasureData::add_treasureinfo() {
  return treasureinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTreasureValueInfo >&
PBWorldTreasureData::treasureinfo() const {
  return treasureinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBTreasureValueInfo >*
PBWorldTreasureData::mutable_treasureinfo() {
  return &treasureinfo_;
}

// -------------------------------------------------------------------

// PBCorpsMemberInfo

// optional uint32 corpsjob = 1;
inline bool PBCorpsMemberInfo::has_corpsjob() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCorpsMemberInfo::set_has_corpsjob() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCorpsMemberInfo::clear_has_corpsjob() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCorpsMemberInfo::clear_corpsjob() {
  corpsjob_ = 0u;
  clear_has_corpsjob();
}
inline ::google::protobuf::uint32 PBCorpsMemberInfo::corpsjob() const {
  return corpsjob_;
}
inline void PBCorpsMemberInfo::set_corpsjob(::google::protobuf::uint32 value) {
  set_has_corpsjob();
  corpsjob_ = value;
}

// optional .PBPlayerAvatar avatar = 2;
inline bool PBCorpsMemberInfo::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCorpsMemberInfo::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCorpsMemberInfo::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCorpsMemberInfo::clear_avatar() {
  if (avatar_ != NULL) avatar_->::PBPlayerAvatar::Clear();
  clear_has_avatar();
}
inline const ::PBPlayerAvatar& PBCorpsMemberInfo::avatar() const {
  return avatar_ != NULL ? *avatar_ : *default_instance_->avatar_;
}
inline ::PBPlayerAvatar* PBCorpsMemberInfo::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == NULL) avatar_ = new ::PBPlayerAvatar;
  return avatar_;
}
inline ::PBPlayerAvatar* PBCorpsMemberInfo::release_avatar() {
  clear_has_avatar();
  ::PBPlayerAvatar* temp = avatar_;
  avatar_ = NULL;
  return temp;
}

// optional uint32 fobitcount = 3;
inline bool PBCorpsMemberInfo::has_fobitcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBCorpsMemberInfo::set_has_fobitcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBCorpsMemberInfo::clear_has_fobitcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBCorpsMemberInfo::clear_fobitcount() {
  fobitcount_ = 0u;
  clear_has_fobitcount();
}
inline ::google::protobuf::uint32 PBCorpsMemberInfo::fobitcount() const {
  return fobitcount_;
}
inline void PBCorpsMemberInfo::set_fobitcount(::google::protobuf::uint32 value) {
  set_has_fobitcount();
  fobitcount_ = value;
}

// optional uint32 nextsettime = 4;
inline bool PBCorpsMemberInfo::has_nextsettime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBCorpsMemberInfo::set_has_nextsettime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBCorpsMemberInfo::clear_has_nextsettime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBCorpsMemberInfo::clear_nextsettime() {
  nextsettime_ = 0u;
  clear_has_nextsettime();
}
inline ::google::protobuf::uint32 PBCorpsMemberInfo::nextsettime() const {
  return nextsettime_;
}
inline void PBCorpsMemberInfo::set_nextsettime(::google::protobuf::uint32 value) {
  set_has_nextsettime();
  nextsettime_ = value;
}

// -------------------------------------------------------------------

// PBCorpsInfo

// optional uint32 corpsid = 1;
inline bool PBCorpsInfo::has_corpsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCorpsInfo::set_has_corpsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCorpsInfo::clear_has_corpsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCorpsInfo::clear_corpsid() {
  corpsid_ = 0u;
  clear_has_corpsid();
}
inline ::google::protobuf::uint32 PBCorpsInfo::corpsid() const {
  return corpsid_;
}
inline void PBCorpsInfo::set_corpsid(::google::protobuf::uint32 value) {
  set_has_corpsid();
  corpsid_ = value;
}

// repeated .PBCorpsMemberInfo memberinfo = 2;
inline int PBCorpsInfo::memberinfo_size() const {
  return memberinfo_.size();
}
inline void PBCorpsInfo::clear_memberinfo() {
  memberinfo_.Clear();
}
inline const ::PBCorpsMemberInfo& PBCorpsInfo::memberinfo(int index) const {
  return memberinfo_.Get(index);
}
inline ::PBCorpsMemberInfo* PBCorpsInfo::mutable_memberinfo(int index) {
  return memberinfo_.Mutable(index);
}
inline ::PBCorpsMemberInfo* PBCorpsInfo::add_memberinfo() {
  return memberinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsMemberInfo >&
PBCorpsInfo::memberinfo() const {
  return memberinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsMemberInfo >*
PBCorpsInfo::mutable_memberinfo() {
  return &memberinfo_;
}

// optional string declaration = 3;
inline bool PBCorpsInfo::has_declaration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBCorpsInfo::set_has_declaration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBCorpsInfo::clear_has_declaration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBCorpsInfo::clear_declaration() {
  if (declaration_ != &::google::protobuf::internal::kEmptyString) {
    declaration_->clear();
  }
  clear_has_declaration();
}
inline const ::std::string& PBCorpsInfo::declaration() const {
  return *declaration_;
}
inline void PBCorpsInfo::set_declaration(const ::std::string& value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBCorpsInfo::set_declaration(const char* value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBCorpsInfo::set_declaration(const char* value, size_t size) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBCorpsInfo::mutable_declaration() {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  return declaration_;
}
inline ::std::string* PBCorpsInfo::release_declaration() {
  clear_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = declaration_;
    declaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBWorldCorpsData

// repeated .PBCorpsInfo corpsinfo = 1;
inline int PBWorldCorpsData::corpsinfo_size() const {
  return corpsinfo_.size();
}
inline void PBWorldCorpsData::clear_corpsinfo() {
  corpsinfo_.Clear();
}
inline const ::PBCorpsInfo& PBWorldCorpsData::corpsinfo(int index) const {
  return corpsinfo_.Get(index);
}
inline ::PBCorpsInfo* PBWorldCorpsData::mutable_corpsinfo(int index) {
  return corpsinfo_.Mutable(index);
}
inline ::PBCorpsInfo* PBWorldCorpsData::add_corpsinfo() {
  return corpsinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBCorpsInfo >&
PBWorldCorpsData::corpsinfo() const {
  return corpsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBCorpsInfo >*
PBWorldCorpsData::mutable_corpsinfo() {
  return &corpsinfo_;
}

// -------------------------------------------------------------------

// PBWorldServerData

// optional uint32 starttime = 1;
inline bool PBWorldServerData::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBWorldServerData::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBWorldServerData::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBWorldServerData::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 PBWorldServerData::starttime() const {
  return starttime_;
}
inline void PBWorldServerData::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional .PBWorldFactionBossData factionboss = 2;
inline bool PBWorldServerData::has_factionboss() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBWorldServerData::set_has_factionboss() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBWorldServerData::clear_has_factionboss() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBWorldServerData::clear_factionboss() {
  if (factionboss_ != NULL) factionboss_->::PBWorldFactionBossData::Clear();
  clear_has_factionboss();
}
inline const ::PBWorldFactionBossData& PBWorldServerData::factionboss() const {
  return factionboss_ != NULL ? *factionboss_ : *default_instance_->factionboss_;
}
inline ::PBWorldFactionBossData* PBWorldServerData::mutable_factionboss() {
  set_has_factionboss();
  if (factionboss_ == NULL) factionboss_ = new ::PBWorldFactionBossData;
  return factionboss_;
}
inline ::PBWorldFactionBossData* PBWorldServerData::release_factionboss() {
  clear_has_factionboss();
  ::PBWorldFactionBossData* temp = factionboss_;
  factionboss_ = NULL;
  return temp;
}

// optional .PBWorldTreasureData treasure = 3;
inline bool PBWorldServerData::has_treasure() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBWorldServerData::set_has_treasure() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBWorldServerData::clear_has_treasure() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBWorldServerData::clear_treasure() {
  if (treasure_ != NULL) treasure_->::PBWorldTreasureData::Clear();
  clear_has_treasure();
}
inline const ::PBWorldTreasureData& PBWorldServerData::treasure() const {
  return treasure_ != NULL ? *treasure_ : *default_instance_->treasure_;
}
inline ::PBWorldTreasureData* PBWorldServerData::mutable_treasure() {
  set_has_treasure();
  if (treasure_ == NULL) treasure_ = new ::PBWorldTreasureData;
  return treasure_;
}
inline ::PBWorldTreasureData* PBWorldServerData::release_treasure() {
  clear_has_treasure();
  ::PBWorldTreasureData* temp = treasure_;
  treasure_ = NULL;
  return temp;
}

// optional uint32 cleardaytime = 4;
inline bool PBWorldServerData::has_cleardaytime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBWorldServerData::set_has_cleardaytime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBWorldServerData::clear_has_cleardaytime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBWorldServerData::clear_cleardaytime() {
  cleardaytime_ = 0u;
  clear_has_cleardaytime();
}
inline ::google::protobuf::uint32 PBWorldServerData::cleardaytime() const {
  return cleardaytime_;
}
inline void PBWorldServerData::set_cleardaytime(::google::protobuf::uint32 value) {
  set_has_cleardaytime();
  cleardaytime_ = value;
}

// optional .PBWorldCorpsData corps = 5;
inline bool PBWorldServerData::has_corps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBWorldServerData::set_has_corps() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBWorldServerData::clear_has_corps() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBWorldServerData::clear_corps() {
  if (corps_ != NULL) corps_->::PBWorldCorpsData::Clear();
  clear_has_corps();
}
inline const ::PBWorldCorpsData& PBWorldServerData::corps() const {
  return corps_ != NULL ? *corps_ : *default_instance_->corps_;
}
inline ::PBWorldCorpsData* PBWorldServerData::mutable_corps() {
  set_has_corps();
  if (corps_ == NULL) corps_ = new ::PBWorldCorpsData;
  return corps_;
}
inline ::PBWorldCorpsData* PBWorldServerData::release_corps() {
  clear_has_corps();
  ::PBWorldCorpsData* temp = corps_;
  corps_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerStruct_2eproto__INCLUDED
