// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WADBMsg.proto

#ifndef PROTOBUF_WADBMsg_2eproto__INCLUDED
#define PROTOBUF_WADBMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "PlayerStruct.pb.h"
#include "AccountStruct.pb.h"
#include "Faction.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_WADBMsg_2eproto();
void protobuf_AssignDesc_WADBMsg_2eproto();
void protobuf_ShutdownFile_WADBMsg_2eproto();

class PBW2DBStartLoadAsk;
class PBW2DBAccountLoadAsk;
class PBW2DBPlayerCreateAsk;
class PBW2DBPlayerSelectAsk;
class PBW2DBPlayerDelAsk;
class PBDB2WAccountLoadAck;
class PBDB2WPlayerCreateAck;
class PBDB2WPlayerSelectAck;
class PBDB2WPPlayerDelAck;
class PBDBAWFactionBossData;
class PBDBAWFactionBossDataList;
class PBFactionChallengerDB;
class PBManorInfoDB;
class PBDBAWManorDataList;

// ===================================================================

class PBW2DBStartLoadAsk : public ::google::protobuf::Message {
 public:
  PBW2DBStartLoadAsk();
  virtual ~PBW2DBStartLoadAsk();
  
  PBW2DBStartLoadAsk(const PBW2DBStartLoadAsk& from);
  
  inline PBW2DBStartLoadAsk& operator=(const PBW2DBStartLoadAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2DBStartLoadAsk& default_instance();
  
  void Swap(PBW2DBStartLoadAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2DBStartLoadAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2DBStartLoadAsk& from);
  void MergeFrom(const PBW2DBStartLoadAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 worldid = 1;
  inline int worldid_size() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid(int index) const;
  inline void set_worldid(int index, ::google::protobuf::uint32 value);
  inline void add_worldid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      worldid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_worldid();
  
  // @@protoc_insertion_point(class_scope:PBW2DBStartLoadAsk)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > worldid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2DBStartLoadAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2DBAccountLoadAsk : public ::google::protobuf::Message {
 public:
  PBW2DBAccountLoadAsk();
  virtual ~PBW2DBAccountLoadAsk();
  
  PBW2DBAccountLoadAsk(const PBW2DBAccountLoadAsk& from);
  
  inline PBW2DBAccountLoadAsk& operator=(const PBW2DBAccountLoadAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2DBAccountLoadAsk& default_instance();
  
  void Swap(PBW2DBAccountLoadAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2DBAccountLoadAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2DBAccountLoadAsk& from);
  void MergeFrom(const PBW2DBAccountLoadAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 worldid = 1;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 accountid = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2DBAccountLoadAsk)
 private:
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 accountid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2DBAccountLoadAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2DBPlayerCreateAsk : public ::google::protobuf::Message {
 public:
  PBW2DBPlayerCreateAsk();
  virtual ~PBW2DBPlayerCreateAsk();
  
  PBW2DBPlayerCreateAsk(const PBW2DBPlayerCreateAsk& from);
  
  inline PBW2DBPlayerCreateAsk& operator=(const PBW2DBPlayerCreateAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2DBPlayerCreateAsk& default_instance();
  
  void Swap(PBW2DBPlayerCreateAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2DBPlayerCreateAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2DBPlayerCreateAsk& from);
  void MergeFrom(const PBW2DBPlayerCreateAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBAccountFlag accountflag = 1;
  inline bool has_accountflag() const;
  inline void clear_accountflag();
  static const int kAccountflagFieldNumber = 1;
  inline const ::PBAccountFlag& accountflag() const;
  inline ::PBAccountFlag* mutable_accountflag();
  inline ::PBAccountFlag* release_accountflag();
  
  // optional .PBPlayerBase playerBase = 2;
  inline bool has_playerbase() const;
  inline void clear_playerbase();
  static const int kPlayerBaseFieldNumber = 2;
  inline const ::PBPlayerBase& playerbase() const;
  inline ::PBPlayerBase* mutable_playerbase();
  inline ::PBPlayerBase* release_playerbase();
  
  // @@protoc_insertion_point(class_scope:PBW2DBPlayerCreateAsk)
 private:
  inline void set_has_accountflag();
  inline void clear_has_accountflag();
  inline void set_has_playerbase();
  inline void clear_has_playerbase();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBAccountFlag* accountflag_;
  ::PBPlayerBase* playerbase_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2DBPlayerCreateAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2DBPlayerSelectAsk : public ::google::protobuf::Message {
 public:
  PBW2DBPlayerSelectAsk();
  virtual ~PBW2DBPlayerSelectAsk();
  
  PBW2DBPlayerSelectAsk(const PBW2DBPlayerSelectAsk& from);
  
  inline PBW2DBPlayerSelectAsk& operator=(const PBW2DBPlayerSelectAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2DBPlayerSelectAsk& default_instance();
  
  void Swap(PBW2DBPlayerSelectAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2DBPlayerSelectAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2DBPlayerSelectAsk& from);
  void MergeFrom(const PBW2DBPlayerSelectAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2DBPlayerSelectAsk)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2DBPlayerSelectAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBW2DBPlayerDelAsk : public ::google::protobuf::Message {
 public:
  PBW2DBPlayerDelAsk();
  virtual ~PBW2DBPlayerDelAsk();
  
  PBW2DBPlayerDelAsk(const PBW2DBPlayerDelAsk& from);
  
  inline PBW2DBPlayerDelAsk& operator=(const PBW2DBPlayerDelAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2DBPlayerDelAsk& default_instance();
  
  void Swap(PBW2DBPlayerDelAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBW2DBPlayerDelAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2DBPlayerDelAsk& from);
  void MergeFrom(const PBW2DBPlayerDelAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2DBPlayerDelAsk)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2DBPlayerDelAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBDB2WAccountLoadAck : public ::google::protobuf::Message {
 public:
  PBDB2WAccountLoadAck();
  virtual ~PBDB2WAccountLoadAck();
  
  PBDB2WAccountLoadAck(const PBDB2WAccountLoadAck& from);
  
  inline PBDB2WAccountLoadAck& operator=(const PBDB2WAccountLoadAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDB2WAccountLoadAck& default_instance();
  
  void Swap(PBDB2WAccountLoadAck* other);
  
  // implements Message ----------------------------------------------
  
  PBDB2WAccountLoadAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDB2WAccountLoadAck& from);
  void MergeFrom(const PBDB2WAccountLoadAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // repeated .PBPlayerBase playerbase = 2;
  inline int playerbase_size() const;
  inline void clear_playerbase();
  static const int kPlayerbaseFieldNumber = 2;
  inline const ::PBPlayerBase& playerbase(int index) const;
  inline ::PBPlayerBase* mutable_playerbase(int index);
  inline ::PBPlayerBase* add_playerbase();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerBase >&
      playerbase() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerBase >*
      mutable_playerbase();
  
  // @@protoc_insertion_point(class_scope:PBDB2WAccountLoadAck)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBPlayerBase > playerbase_;
  ::google::protobuf::uint32 accountid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDB2WAccountLoadAck* default_instance_;
};
// -------------------------------------------------------------------

class PBDB2WPlayerCreateAck : public ::google::protobuf::Message {
 public:
  PBDB2WPlayerCreateAck();
  virtual ~PBDB2WPlayerCreateAck();
  
  PBDB2WPlayerCreateAck(const PBDB2WPlayerCreateAck& from);
  
  inline PBDB2WPlayerCreateAck& operator=(const PBDB2WPlayerCreateAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDB2WPlayerCreateAck& default_instance();
  
  void Swap(PBDB2WPlayerCreateAck* other);
  
  // implements Message ----------------------------------------------
  
  PBDB2WPlayerCreateAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDB2WPlayerCreateAck& from);
  void MergeFrom(const PBDB2WPlayerCreateAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBAccountFlag accountflag = 1;
  inline bool has_accountflag() const;
  inline void clear_accountflag();
  static const int kAccountflagFieldNumber = 1;
  inline const ::PBAccountFlag& accountflag() const;
  inline ::PBAccountFlag* mutable_accountflag();
  inline ::PBAccountFlag* release_accountflag();
  
  // optional .PBPlayerDisplay playerdisplay = 2;
  inline bool has_playerdisplay() const;
  inline void clear_playerdisplay();
  static const int kPlayerdisplayFieldNumber = 2;
  inline const ::PBPlayerDisplay& playerdisplay() const;
  inline ::PBPlayerDisplay* mutable_playerdisplay();
  inline ::PBPlayerDisplay* release_playerdisplay();
  
  // @@protoc_insertion_point(class_scope:PBDB2WPlayerCreateAck)
 private:
  inline void set_has_accountflag();
  inline void clear_has_accountflag();
  inline void set_has_playerdisplay();
  inline void clear_has_playerdisplay();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBAccountFlag* accountflag_;
  ::PBPlayerDisplay* playerdisplay_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDB2WPlayerCreateAck* default_instance_;
};
// -------------------------------------------------------------------

class PBDB2WPlayerSelectAck : public ::google::protobuf::Message {
 public:
  PBDB2WPlayerSelectAck();
  virtual ~PBDB2WPlayerSelectAck();
  
  PBDB2WPlayerSelectAck(const PBDB2WPlayerSelectAck& from);
  
  inline PBDB2WPlayerSelectAck& operator=(const PBDB2WPlayerSelectAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDB2WPlayerSelectAck& default_instance();
  
  void Swap(PBDB2WPlayerSelectAck* other);
  
  // implements Message ----------------------------------------------
  
  PBDB2WPlayerSelectAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDB2WPlayerSelectAck& from);
  void MergeFrom(const PBDB2WPlayerSelectAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBDB2WPlayerSelectAck)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDB2WPlayerSelectAck* default_instance_;
};
// -------------------------------------------------------------------

class PBDB2WPPlayerDelAck : public ::google::protobuf::Message {
 public:
  PBDB2WPPlayerDelAck();
  virtual ~PBDB2WPPlayerDelAck();
  
  PBDB2WPPlayerDelAck(const PBDB2WPPlayerDelAck& from);
  
  inline PBDB2WPPlayerDelAck& operator=(const PBDB2WPPlayerDelAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDB2WPPlayerDelAck& default_instance();
  
  void Swap(PBDB2WPPlayerDelAck* other);
  
  // implements Message ----------------------------------------------
  
  PBDB2WPPlayerDelAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDB2WPPlayerDelAck& from);
  void MergeFrom(const PBDB2WPPlayerDelAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBDB2WPPlayerDelAck)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 playerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDB2WPPlayerDelAck* default_instance_;
};
// -------------------------------------------------------------------

class PBDBAWFactionBossData : public ::google::protobuf::Message {
 public:
  PBDBAWFactionBossData();
  virtual ~PBDBAWFactionBossData();
  
  PBDBAWFactionBossData(const PBDBAWFactionBossData& from);
  
  inline PBDBAWFactionBossData& operator=(const PBDBAWFactionBossData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDBAWFactionBossData& default_instance();
  
  void Swap(PBDBAWFactionBossData* other);
  
  // implements Message ----------------------------------------------
  
  PBDBAWFactionBossData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDBAWFactionBossData& from);
  void MergeFrom(const PBDBAWFactionBossData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 toptype = 1;
  inline bool has_toptype() const;
  inline void clear_toptype();
  static const int kToptypeFieldNumber = 1;
  inline ::google::protobuf::uint32 toptype() const;
  inline void set_toptype(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  
  // @@protoc_insertion_point(class_scope:PBDBAWFactionBossData)
 private:
  inline void set_has_toptype();
  inline void clear_has_toptype();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 toptype_;
  ::google::protobuf::uint32 id_;
  ::std::string* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDBAWFactionBossData* default_instance_;
};
// -------------------------------------------------------------------

class PBDBAWFactionBossDataList : public ::google::protobuf::Message {
 public:
  PBDBAWFactionBossDataList();
  virtual ~PBDBAWFactionBossDataList();
  
  PBDBAWFactionBossDataList(const PBDBAWFactionBossDataList& from);
  
  inline PBDBAWFactionBossDataList& operator=(const PBDBAWFactionBossDataList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDBAWFactionBossDataList& default_instance();
  
  void Swap(PBDBAWFactionBossDataList* other);
  
  // implements Message ----------------------------------------------
  
  PBDBAWFactionBossDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDBAWFactionBossDataList& from);
  void MergeFrom(const PBDBAWFactionBossDataList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBDBAWFactionBossData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::PBDBAWFactionBossData& data(int index) const;
  inline ::PBDBAWFactionBossData* mutable_data(int index);
  inline ::PBDBAWFactionBossData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::PBDBAWFactionBossData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBDBAWFactionBossData >*
      mutable_data();
  
  // @@protoc_insertion_point(class_scope:PBDBAWFactionBossDataList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBDBAWFactionBossData > data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDBAWFactionBossDataList* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionChallengerDB : public ::google::protobuf::Message {
 public:
  PBFactionChallengerDB();
  virtual ~PBFactionChallengerDB();
  
  PBFactionChallengerDB(const PBFactionChallengerDB& from);
  
  inline PBFactionChallengerDB& operator=(const PBFactionChallengerDB& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionChallengerDB& default_instance();
  
  void Swap(PBFactionChallengerDB* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionChallengerDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionChallengerDB& from);
  void MergeFrom(const PBFactionChallengerDB& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 applytime = 2;
  inline bool has_applytime() const;
  inline void clear_applytime();
  static const int kApplytimeFieldNumber = 2;
  inline ::google::protobuf::uint32 applytime() const;
  inline void set_applytime(::google::protobuf::uint32 value);
  
  // optional bool ischallenger = 3;
  inline bool has_ischallenger() const;
  inline void clear_ischallenger();
  static const int kIschallengerFieldNumber = 3;
  inline bool ischallenger() const;
  inline void set_ischallenger(bool value);
  
  // @@protoc_insertion_point(class_scope:PBFactionChallengerDB)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_applytime();
  inline void clear_has_applytime();
  inline void set_has_ischallenger();
  inline void clear_has_ischallenger();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 applytime_;
  bool ischallenger_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionChallengerDB* default_instance_;
};
// -------------------------------------------------------------------

class PBManorInfoDB : public ::google::protobuf::Message {
 public:
  PBManorInfoDB();
  virtual ~PBManorInfoDB();
  
  PBManorInfoDB(const PBManorInfoDB& from);
  
  inline PBManorInfoDB& operator=(const PBManorInfoDB& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBManorInfoDB& default_instance();
  
  void Swap(PBManorInfoDB* other);
  
  // implements Message ----------------------------------------------
  
  PBManorInfoDB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBManorInfoDB& from);
  void MergeFrom(const PBManorInfoDB& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 manorid = 1;
  inline bool has_manorid() const;
  inline void clear_manorid();
  static const int kManoridFieldNumber = 1;
  inline ::google::protobuf::uint32 manorid() const;
  inline void set_manorid(::google::protobuf::uint32 value);
  
  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional uint32 ownerfactionid = 3;
  inline bool has_ownerfactionid() const;
  inline void clear_ownerfactionid();
  static const int kOwnerfactionidFieldNumber = 3;
  inline ::google::protobuf::uint32 ownerfactionid() const;
  inline void set_ownerfactionid(::google::protobuf::uint32 value);
  
  // repeated .PBFactionChallengerDB challengers = 4;
  inline int challengers_size() const;
  inline void clear_challengers();
  static const int kChallengersFieldNumber = 4;
  inline const ::PBFactionChallengerDB& challengers(int index) const;
  inline ::PBFactionChallengerDB* mutable_challengers(int index);
  inline ::PBFactionChallengerDB* add_challengers();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionChallengerDB >&
      challengers() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionChallengerDB >*
      mutable_challengers();
  
  // optional uint64 weekprizetime = 5;
  inline bool has_weekprizetime() const;
  inline void clear_weekprizetime();
  static const int kWeekprizetimeFieldNumber = 5;
  inline ::google::protobuf::uint64 weekprizetime() const;
  inline void set_weekprizetime(::google::protobuf::uint64 value);
  
  // optional uint64 dailyprizetime = 6;
  inline bool has_dailyprizetime() const;
  inline void clear_dailyprizetime();
  static const int kDailyprizetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 dailyprizetime() const;
  inline void set_dailyprizetime(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBManorInfoDB)
 private:
  inline void set_has_manorid();
  inline void clear_has_manorid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_ownerfactionid();
  inline void clear_has_ownerfactionid();
  inline void set_has_weekprizetime();
  inline void clear_has_weekprizetime();
  inline void set_has_dailyprizetime();
  inline void clear_has_dailyprizetime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manorid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionChallengerDB > challengers_;
  ::google::protobuf::uint64 weekprizetime_;
  ::google::protobuf::uint64 dailyprizetime_;
  ::google::protobuf::uint32 ownerfactionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBManorInfoDB* default_instance_;
};
// -------------------------------------------------------------------

class PBDBAWManorDataList : public ::google::protobuf::Message {
 public:
  PBDBAWManorDataList();
  virtual ~PBDBAWManorDataList();
  
  PBDBAWManorDataList(const PBDBAWManorDataList& from);
  
  inline PBDBAWManorDataList& operator=(const PBDBAWManorDataList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDBAWManorDataList& default_instance();
  
  void Swap(PBDBAWManorDataList* other);
  
  // implements Message ----------------------------------------------
  
  PBDBAWManorDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBDBAWManorDataList& from);
  void MergeFrom(const PBDBAWManorDataList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBManorInfoDB allmanors = 1;
  inline int allmanors_size() const;
  inline void clear_allmanors();
  static const int kAllmanorsFieldNumber = 1;
  inline const ::PBManorInfoDB& allmanors(int index) const;
  inline ::PBManorInfoDB* mutable_allmanors(int index);
  inline ::PBManorInfoDB* add_allmanors();
  inline const ::google::protobuf::RepeatedPtrField< ::PBManorInfoDB >&
      allmanors() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBManorInfoDB >*
      mutable_allmanors();
  
  // @@protoc_insertion_point(class_scope:PBDBAWManorDataList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBManorInfoDB > allmanors_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_WADBMsg_2eproto();
  friend void protobuf_AssignDesc_WADBMsg_2eproto();
  friend void protobuf_ShutdownFile_WADBMsg_2eproto();
  
  void InitAsDefaultInstance();
  static PBDBAWManorDataList* default_instance_;
};
// ===================================================================


// ===================================================================

// PBW2DBStartLoadAsk

// repeated uint32 worldid = 1;
inline int PBW2DBStartLoadAsk::worldid_size() const {
  return worldid_.size();
}
inline void PBW2DBStartLoadAsk::clear_worldid() {
  worldid_.Clear();
}
inline ::google::protobuf::uint32 PBW2DBStartLoadAsk::worldid(int index) const {
  return worldid_.Get(index);
}
inline void PBW2DBStartLoadAsk::set_worldid(int index, ::google::protobuf::uint32 value) {
  worldid_.Set(index, value);
}
inline void PBW2DBStartLoadAsk::add_worldid(::google::protobuf::uint32 value) {
  worldid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBW2DBStartLoadAsk::worldid() const {
  return worldid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBW2DBStartLoadAsk::mutable_worldid() {
  return &worldid_;
}

// -------------------------------------------------------------------

// PBW2DBAccountLoadAsk

// optional uint32 worldid = 1;
inline bool PBW2DBAccountLoadAsk::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2DBAccountLoadAsk::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2DBAccountLoadAsk::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2DBAccountLoadAsk::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 PBW2DBAccountLoadAsk::worldid() const {
  return worldid_;
}
inline void PBW2DBAccountLoadAsk::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional uint32 accountid = 2;
inline bool PBW2DBAccountLoadAsk::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2DBAccountLoadAsk::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2DBAccountLoadAsk::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2DBAccountLoadAsk::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PBW2DBAccountLoadAsk::accountid() const {
  return accountid_;
}
inline void PBW2DBAccountLoadAsk::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// -------------------------------------------------------------------

// PBW2DBPlayerCreateAsk

// optional .PBAccountFlag accountflag = 1;
inline bool PBW2DBPlayerCreateAsk::has_accountflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2DBPlayerCreateAsk::set_has_accountflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2DBPlayerCreateAsk::clear_has_accountflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2DBPlayerCreateAsk::clear_accountflag() {
  if (accountflag_ != NULL) accountflag_->::PBAccountFlag::Clear();
  clear_has_accountflag();
}
inline const ::PBAccountFlag& PBW2DBPlayerCreateAsk::accountflag() const {
  return accountflag_ != NULL ? *accountflag_ : *default_instance_->accountflag_;
}
inline ::PBAccountFlag* PBW2DBPlayerCreateAsk::mutable_accountflag() {
  set_has_accountflag();
  if (accountflag_ == NULL) accountflag_ = new ::PBAccountFlag;
  return accountflag_;
}
inline ::PBAccountFlag* PBW2DBPlayerCreateAsk::release_accountflag() {
  clear_has_accountflag();
  ::PBAccountFlag* temp = accountflag_;
  accountflag_ = NULL;
  return temp;
}

// optional .PBPlayerBase playerBase = 2;
inline bool PBW2DBPlayerCreateAsk::has_playerbase() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2DBPlayerCreateAsk::set_has_playerbase() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2DBPlayerCreateAsk::clear_has_playerbase() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2DBPlayerCreateAsk::clear_playerbase() {
  if (playerbase_ != NULL) playerbase_->::PBPlayerBase::Clear();
  clear_has_playerbase();
}
inline const ::PBPlayerBase& PBW2DBPlayerCreateAsk::playerbase() const {
  return playerbase_ != NULL ? *playerbase_ : *default_instance_->playerbase_;
}
inline ::PBPlayerBase* PBW2DBPlayerCreateAsk::mutable_playerbase() {
  set_has_playerbase();
  if (playerbase_ == NULL) playerbase_ = new ::PBPlayerBase;
  return playerbase_;
}
inline ::PBPlayerBase* PBW2DBPlayerCreateAsk::release_playerbase() {
  clear_has_playerbase();
  ::PBPlayerBase* temp = playerbase_;
  playerbase_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBW2DBPlayerSelectAsk

// optional uint32 playerid = 1;
inline bool PBW2DBPlayerSelectAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2DBPlayerSelectAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2DBPlayerSelectAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2DBPlayerSelectAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2DBPlayerSelectAsk::playerid() const {
  return playerid_;
}
inline void PBW2DBPlayerSelectAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBW2DBPlayerDelAsk

// optional uint32 playerid = 1;
inline bool PBW2DBPlayerDelAsk::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2DBPlayerDelAsk::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2DBPlayerDelAsk::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2DBPlayerDelAsk::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2DBPlayerDelAsk::playerid() const {
  return playerid_;
}
inline void PBW2DBPlayerDelAsk::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBDB2WAccountLoadAck

// optional uint32 accountid = 1;
inline bool PBDB2WAccountLoadAck::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDB2WAccountLoadAck::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDB2WAccountLoadAck::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDB2WAccountLoadAck::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PBDB2WAccountLoadAck::accountid() const {
  return accountid_;
}
inline void PBDB2WAccountLoadAck::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// repeated .PBPlayerBase playerbase = 2;
inline int PBDB2WAccountLoadAck::playerbase_size() const {
  return playerbase_.size();
}
inline void PBDB2WAccountLoadAck::clear_playerbase() {
  playerbase_.Clear();
}
inline const ::PBPlayerBase& PBDB2WAccountLoadAck::playerbase(int index) const {
  return playerbase_.Get(index);
}
inline ::PBPlayerBase* PBDB2WAccountLoadAck::mutable_playerbase(int index) {
  return playerbase_.Mutable(index);
}
inline ::PBPlayerBase* PBDB2WAccountLoadAck::add_playerbase() {
  return playerbase_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerBase >&
PBDB2WAccountLoadAck::playerbase() const {
  return playerbase_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerBase >*
PBDB2WAccountLoadAck::mutable_playerbase() {
  return &playerbase_;
}

// -------------------------------------------------------------------

// PBDB2WPlayerCreateAck

// optional .PBAccountFlag accountflag = 1;
inline bool PBDB2WPlayerCreateAck::has_accountflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDB2WPlayerCreateAck::set_has_accountflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDB2WPlayerCreateAck::clear_has_accountflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDB2WPlayerCreateAck::clear_accountflag() {
  if (accountflag_ != NULL) accountflag_->::PBAccountFlag::Clear();
  clear_has_accountflag();
}
inline const ::PBAccountFlag& PBDB2WPlayerCreateAck::accountflag() const {
  return accountflag_ != NULL ? *accountflag_ : *default_instance_->accountflag_;
}
inline ::PBAccountFlag* PBDB2WPlayerCreateAck::mutable_accountflag() {
  set_has_accountflag();
  if (accountflag_ == NULL) accountflag_ = new ::PBAccountFlag;
  return accountflag_;
}
inline ::PBAccountFlag* PBDB2WPlayerCreateAck::release_accountflag() {
  clear_has_accountflag();
  ::PBAccountFlag* temp = accountflag_;
  accountflag_ = NULL;
  return temp;
}

// optional .PBPlayerDisplay playerdisplay = 2;
inline bool PBDB2WPlayerCreateAck::has_playerdisplay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDB2WPlayerCreateAck::set_has_playerdisplay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDB2WPlayerCreateAck::clear_has_playerdisplay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDB2WPlayerCreateAck::clear_playerdisplay() {
  if (playerdisplay_ != NULL) playerdisplay_->::PBPlayerDisplay::Clear();
  clear_has_playerdisplay();
}
inline const ::PBPlayerDisplay& PBDB2WPlayerCreateAck::playerdisplay() const {
  return playerdisplay_ != NULL ? *playerdisplay_ : *default_instance_->playerdisplay_;
}
inline ::PBPlayerDisplay* PBDB2WPlayerCreateAck::mutable_playerdisplay() {
  set_has_playerdisplay();
  if (playerdisplay_ == NULL) playerdisplay_ = new ::PBPlayerDisplay;
  return playerdisplay_;
}
inline ::PBPlayerDisplay* PBDB2WPlayerCreateAck::release_playerdisplay() {
  clear_has_playerdisplay();
  ::PBPlayerDisplay* temp = playerdisplay_;
  playerdisplay_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBDB2WPlayerSelectAck

// optional uint32 accountid = 1;
inline bool PBDB2WPlayerSelectAck::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDB2WPlayerSelectAck::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDB2WPlayerSelectAck::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDB2WPlayerSelectAck::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PBDB2WPlayerSelectAck::accountid() const {
  return accountid_;
}
inline void PBDB2WPlayerSelectAck::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBDB2WPlayerSelectAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDB2WPlayerSelectAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDB2WPlayerSelectAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDB2WPlayerSelectAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBDB2WPlayerSelectAck::playerid() const {
  return playerid_;
}
inline void PBDB2WPlayerSelectAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBDB2WPPlayerDelAck

// optional uint32 accountid = 1;
inline bool PBDB2WPPlayerDelAck::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDB2WPPlayerDelAck::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDB2WPPlayerDelAck::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDB2WPPlayerDelAck::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PBDB2WPPlayerDelAck::accountid() const {
  return accountid_;
}
inline void PBDB2WPPlayerDelAck::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 playerid = 2;
inline bool PBDB2WPPlayerDelAck::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDB2WPPlayerDelAck::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDB2WPPlayerDelAck::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDB2WPPlayerDelAck::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBDB2WPPlayerDelAck::playerid() const {
  return playerid_;
}
inline void PBDB2WPPlayerDelAck::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// PBDBAWFactionBossData

// optional uint32 toptype = 1;
inline bool PBDBAWFactionBossData::has_toptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBDBAWFactionBossData::set_has_toptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBDBAWFactionBossData::clear_has_toptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBDBAWFactionBossData::clear_toptype() {
  toptype_ = 0u;
  clear_has_toptype();
}
inline ::google::protobuf::uint32 PBDBAWFactionBossData::toptype() const {
  return toptype_;
}
inline void PBDBAWFactionBossData::set_toptype(::google::protobuf::uint32 value) {
  set_has_toptype();
  toptype_ = value;
}

// optional uint32 id = 2;
inline bool PBDBAWFactionBossData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBDBAWFactionBossData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBDBAWFactionBossData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBDBAWFactionBossData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBDBAWFactionBossData::id() const {
  return id_;
}
inline void PBDBAWFactionBossData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional bytes data = 3;
inline bool PBDBAWFactionBossData::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBDBAWFactionBossData::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBDBAWFactionBossData::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBDBAWFactionBossData::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& PBDBAWFactionBossData::data() const {
  return *data_;
}
inline void PBDBAWFactionBossData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void PBDBAWFactionBossData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void PBDBAWFactionBossData::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBDBAWFactionBossData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* PBDBAWFactionBossData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBDBAWFactionBossDataList

// repeated .PBDBAWFactionBossData data = 1;
inline int PBDBAWFactionBossDataList::data_size() const {
  return data_.size();
}
inline void PBDBAWFactionBossDataList::clear_data() {
  data_.Clear();
}
inline const ::PBDBAWFactionBossData& PBDBAWFactionBossDataList::data(int index) const {
  return data_.Get(index);
}
inline ::PBDBAWFactionBossData* PBDBAWFactionBossDataList::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::PBDBAWFactionBossData* PBDBAWFactionBossDataList::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBDBAWFactionBossData >&
PBDBAWFactionBossDataList::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBDBAWFactionBossData >*
PBDBAWFactionBossDataList::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// PBFactionChallengerDB

// optional uint32 factionid = 1;
inline bool PBFactionChallengerDB::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionChallengerDB::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionChallengerDB::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionChallengerDB::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBFactionChallengerDB::factionid() const {
  return factionid_;
}
inline void PBFactionChallengerDB::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 applytime = 2;
inline bool PBFactionChallengerDB::has_applytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionChallengerDB::set_has_applytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionChallengerDB::clear_has_applytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionChallengerDB::clear_applytime() {
  applytime_ = 0u;
  clear_has_applytime();
}
inline ::google::protobuf::uint32 PBFactionChallengerDB::applytime() const {
  return applytime_;
}
inline void PBFactionChallengerDB::set_applytime(::google::protobuf::uint32 value) {
  set_has_applytime();
  applytime_ = value;
}

// optional bool ischallenger = 3;
inline bool PBFactionChallengerDB::has_ischallenger() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionChallengerDB::set_has_ischallenger() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionChallengerDB::clear_has_ischallenger() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionChallengerDB::clear_ischallenger() {
  ischallenger_ = false;
  clear_has_ischallenger();
}
inline bool PBFactionChallengerDB::ischallenger() const {
  return ischallenger_;
}
inline void PBFactionChallengerDB::set_ischallenger(bool value) {
  set_has_ischallenger();
  ischallenger_ = value;
}

// -------------------------------------------------------------------

// PBManorInfoDB

// optional uint32 manorid = 1;
inline bool PBManorInfoDB::has_manorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBManorInfoDB::set_has_manorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBManorInfoDB::clear_has_manorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBManorInfoDB::clear_manorid() {
  manorid_ = 0u;
  clear_has_manorid();
}
inline ::google::protobuf::uint32 PBManorInfoDB::manorid() const {
  return manorid_;
}
inline void PBManorInfoDB::set_manorid(::google::protobuf::uint32 value) {
  set_has_manorid();
  manorid_ = value;
}

// optional uint32 status = 2;
inline bool PBManorInfoDB::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBManorInfoDB::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBManorInfoDB::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBManorInfoDB::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 PBManorInfoDB::status() const {
  return status_;
}
inline void PBManorInfoDB::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 ownerfactionid = 3;
inline bool PBManorInfoDB::has_ownerfactionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBManorInfoDB::set_has_ownerfactionid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBManorInfoDB::clear_has_ownerfactionid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBManorInfoDB::clear_ownerfactionid() {
  ownerfactionid_ = 0u;
  clear_has_ownerfactionid();
}
inline ::google::protobuf::uint32 PBManorInfoDB::ownerfactionid() const {
  return ownerfactionid_;
}
inline void PBManorInfoDB::set_ownerfactionid(::google::protobuf::uint32 value) {
  set_has_ownerfactionid();
  ownerfactionid_ = value;
}

// repeated .PBFactionChallengerDB challengers = 4;
inline int PBManorInfoDB::challengers_size() const {
  return challengers_.size();
}
inline void PBManorInfoDB::clear_challengers() {
  challengers_.Clear();
}
inline const ::PBFactionChallengerDB& PBManorInfoDB::challengers(int index) const {
  return challengers_.Get(index);
}
inline ::PBFactionChallengerDB* PBManorInfoDB::mutable_challengers(int index) {
  return challengers_.Mutable(index);
}
inline ::PBFactionChallengerDB* PBManorInfoDB::add_challengers() {
  return challengers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionChallengerDB >&
PBManorInfoDB::challengers() const {
  return challengers_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionChallengerDB >*
PBManorInfoDB::mutable_challengers() {
  return &challengers_;
}

// optional uint64 weekprizetime = 5;
inline bool PBManorInfoDB::has_weekprizetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBManorInfoDB::set_has_weekprizetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBManorInfoDB::clear_has_weekprizetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBManorInfoDB::clear_weekprizetime() {
  weekprizetime_ = GOOGLE_ULONGLONG(0);
  clear_has_weekprizetime();
}
inline ::google::protobuf::uint64 PBManorInfoDB::weekprizetime() const {
  return weekprizetime_;
}
inline void PBManorInfoDB::set_weekprizetime(::google::protobuf::uint64 value) {
  set_has_weekprizetime();
  weekprizetime_ = value;
}

// optional uint64 dailyprizetime = 6;
inline bool PBManorInfoDB::has_dailyprizetime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBManorInfoDB::set_has_dailyprizetime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBManorInfoDB::clear_has_dailyprizetime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBManorInfoDB::clear_dailyprizetime() {
  dailyprizetime_ = GOOGLE_ULONGLONG(0);
  clear_has_dailyprizetime();
}
inline ::google::protobuf::uint64 PBManorInfoDB::dailyprizetime() const {
  return dailyprizetime_;
}
inline void PBManorInfoDB::set_dailyprizetime(::google::protobuf::uint64 value) {
  set_has_dailyprizetime();
  dailyprizetime_ = value;
}

// -------------------------------------------------------------------

// PBDBAWManorDataList

// repeated .PBManorInfoDB allmanors = 1;
inline int PBDBAWManorDataList::allmanors_size() const {
  return allmanors_.size();
}
inline void PBDBAWManorDataList::clear_allmanors() {
  allmanors_.Clear();
}
inline const ::PBManorInfoDB& PBDBAWManorDataList::allmanors(int index) const {
  return allmanors_.Get(index);
}
inline ::PBManorInfoDB* PBDBAWManorDataList::mutable_allmanors(int index) {
  return allmanors_.Mutable(index);
}
inline ::PBManorInfoDB* PBDBAWManorDataList::add_allmanors() {
  return allmanors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBManorInfoDB >&
PBDBAWManorDataList::allmanors() const {
  return allmanors_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBManorInfoDB >*
PBDBAWManorDataList::mutable_allmanors() {
  return &allmanors_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_WADBMsg_2eproto__INCLUDED
