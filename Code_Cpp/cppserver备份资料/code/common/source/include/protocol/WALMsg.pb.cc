// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "WALMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBW2LAccountLoginAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBW2LAccountLoginAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBL2WAccountLoginAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBL2WAccountLoginAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBW2LAccountUnloginAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBW2LAccountUnloginAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBW2LAccountlogoutAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBW2LAccountlogoutAsk_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBW2LAccountGameEnterAsk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBW2LAccountGameEnterAsk_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_WALMsg_2eproto() {
  protobuf_AddDesc_WALMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "WALMsg.proto");
  GOOGLE_CHECK(file != NULL);
  PBW2LAccountLoginAsk_descriptor_ = file->message_type(0);
  static const int PBW2LAccountLoginAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountLoginAsk, account_),
  };
  PBW2LAccountLoginAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBW2LAccountLoginAsk_descriptor_,
      PBW2LAccountLoginAsk::default_instance_,
      PBW2LAccountLoginAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountLoginAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountLoginAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBW2LAccountLoginAsk));
  PBL2WAccountLoginAck_descriptor_ = file->message_type(1);
  static const int PBL2WAccountLoginAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBL2WAccountLoginAck, account_),
  };
  PBL2WAccountLoginAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBL2WAccountLoginAck_descriptor_,
      PBL2WAccountLoginAck::default_instance_,
      PBL2WAccountLoginAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBL2WAccountLoginAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBL2WAccountLoginAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBL2WAccountLoginAck));
  PBW2LAccountUnloginAsk_descriptor_ = file->message_type(2);
  static const int PBW2LAccountUnloginAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountUnloginAsk, loginsn_),
  };
  PBW2LAccountUnloginAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBW2LAccountUnloginAsk_descriptor_,
      PBW2LAccountUnloginAsk::default_instance_,
      PBW2LAccountUnloginAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountUnloginAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountUnloginAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBW2LAccountUnloginAsk));
  PBW2LAccountlogoutAsk_descriptor_ = file->message_type(3);
  static const int PBW2LAccountlogoutAsk_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountlogoutAsk, accountid_),
  };
  PBW2LAccountlogoutAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBW2LAccountlogoutAsk_descriptor_,
      PBW2LAccountlogoutAsk::default_instance_,
      PBW2LAccountlogoutAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountlogoutAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountlogoutAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBW2LAccountlogoutAsk));
  PBW2LAccountGameEnterAsk_descriptor_ = file->message_type(4);
  static const int PBW2LAccountGameEnterAsk_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountGameEnterAsk, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountGameEnterAsk, playerid_),
  };
  PBW2LAccountGameEnterAsk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PBW2LAccountGameEnterAsk_descriptor_,
      PBW2LAccountGameEnterAsk::default_instance_,
      PBW2LAccountGameEnterAsk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountGameEnterAsk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBW2LAccountGameEnterAsk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PBW2LAccountGameEnterAsk));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_WALMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBW2LAccountLoginAsk_descriptor_, &PBW2LAccountLoginAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBL2WAccountLoginAck_descriptor_, &PBL2WAccountLoginAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBW2LAccountUnloginAsk_descriptor_, &PBW2LAccountUnloginAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBW2LAccountlogoutAsk_descriptor_, &PBW2LAccountlogoutAsk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PBW2LAccountGameEnterAsk_descriptor_, &PBW2LAccountGameEnterAsk::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_WALMsg_2eproto() {
  delete PBW2LAccountLoginAsk::default_instance_;
  delete PBW2LAccountLoginAsk_reflection_;
  delete PBL2WAccountLoginAck::default_instance_;
  delete PBL2WAccountLoginAck_reflection_;
  delete PBW2LAccountUnloginAsk::default_instance_;
  delete PBW2LAccountUnloginAsk_reflection_;
  delete PBW2LAccountlogoutAsk::default_instance_;
  delete PBW2LAccountlogoutAsk_reflection_;
  delete PBW2LAccountGameEnterAsk::default_instance_;
  delete PBW2LAccountGameEnterAsk_reflection_;
}

void protobuf_AddDesc_WALMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_AccountStruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014WALMsg.proto\032\023AccountStruct.proto\"3\n\024P"
    "BW2LAccountLoginAsk\022\033\n\007account\030\001 \001(\0132\n.P"
    "BAccount\"3\n\024PBL2WAccountLoginAck\022\033\n\007acco"
    "unt\030\001 \001(\0132\n.PBAccount\")\n\026PBW2LAccountUnl"
    "oginAsk\022\017\n\007loginsn\030\001 \001(\004\"*\n\025PBW2LAccount"
    "logoutAsk\022\021\n\taccountid\030\001 \001(\r\"\?\n\030PBW2LAcc"
    "ountGameEnterAsk\022\021\n\taccountid\030\001 \001(\r\022\020\n\010p"
    "layerid\030\002 \001(\r", 293);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "WALMsg.proto", &protobuf_RegisterTypes);
  PBW2LAccountLoginAsk::default_instance_ = new PBW2LAccountLoginAsk();
  PBL2WAccountLoginAck::default_instance_ = new PBL2WAccountLoginAck();
  PBW2LAccountUnloginAsk::default_instance_ = new PBW2LAccountUnloginAsk();
  PBW2LAccountlogoutAsk::default_instance_ = new PBW2LAccountlogoutAsk();
  PBW2LAccountGameEnterAsk::default_instance_ = new PBW2LAccountGameEnterAsk();
  PBW2LAccountLoginAsk::default_instance_->InitAsDefaultInstance();
  PBL2WAccountLoginAck::default_instance_->InitAsDefaultInstance();
  PBW2LAccountUnloginAsk::default_instance_->InitAsDefaultInstance();
  PBW2LAccountlogoutAsk::default_instance_->InitAsDefaultInstance();
  PBW2LAccountGameEnterAsk::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_WALMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_WALMsg_2eproto {
  StaticDescriptorInitializer_WALMsg_2eproto() {
    protobuf_AddDesc_WALMsg_2eproto();
  }
} static_descriptor_initializer_WALMsg_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int PBW2LAccountLoginAsk::kAccountFieldNumber;
#endif  // !_MSC_VER

PBW2LAccountLoginAsk::PBW2LAccountLoginAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBW2LAccountLoginAsk::InitAsDefaultInstance() {
  account_ = const_cast< ::PBAccount*>(&::PBAccount::default_instance());
}

PBW2LAccountLoginAsk::PBW2LAccountLoginAsk(const PBW2LAccountLoginAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBW2LAccountLoginAsk::SharedCtor() {
  _cached_size_ = 0;
  account_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBW2LAccountLoginAsk::~PBW2LAccountLoginAsk() {
  SharedDtor();
}

void PBW2LAccountLoginAsk::SharedDtor() {
  if (this != default_instance_) {
    delete account_;
  }
}

void PBW2LAccountLoginAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBW2LAccountLoginAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBW2LAccountLoginAsk_descriptor_;
}

const PBW2LAccountLoginAsk& PBW2LAccountLoginAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WALMsg_2eproto();  return *default_instance_;
}

PBW2LAccountLoginAsk* PBW2LAccountLoginAsk::default_instance_ = NULL;

PBW2LAccountLoginAsk* PBW2LAccountLoginAsk::New() const {
  return new PBW2LAccountLoginAsk;
}

void PBW2LAccountLoginAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account()) {
      if (account_ != NULL) account_->::PBAccount::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBW2LAccountLoginAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBAccount account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBW2LAccountLoginAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PBAccount account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->account(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBW2LAccountLoginAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBAccount account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->account(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBW2LAccountLoginAsk::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBAccount account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->account());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBW2LAccountLoginAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBW2LAccountLoginAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBW2LAccountLoginAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBW2LAccountLoginAsk::MergeFrom(const PBW2LAccountLoginAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      mutable_account()->::PBAccount::MergeFrom(from.account());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBW2LAccountLoginAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBW2LAccountLoginAsk::CopyFrom(const PBW2LAccountLoginAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBW2LAccountLoginAsk::IsInitialized() const {
  
  return true;
}

void PBW2LAccountLoginAsk::Swap(PBW2LAccountLoginAsk* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBW2LAccountLoginAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBW2LAccountLoginAsk_descriptor_;
  metadata.reflection = PBW2LAccountLoginAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBL2WAccountLoginAck::kAccountFieldNumber;
#endif  // !_MSC_VER

PBL2WAccountLoginAck::PBL2WAccountLoginAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBL2WAccountLoginAck::InitAsDefaultInstance() {
  account_ = const_cast< ::PBAccount*>(&::PBAccount::default_instance());
}

PBL2WAccountLoginAck::PBL2WAccountLoginAck(const PBL2WAccountLoginAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBL2WAccountLoginAck::SharedCtor() {
  _cached_size_ = 0;
  account_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBL2WAccountLoginAck::~PBL2WAccountLoginAck() {
  SharedDtor();
}

void PBL2WAccountLoginAck::SharedDtor() {
  if (this != default_instance_) {
    delete account_;
  }
}

void PBL2WAccountLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBL2WAccountLoginAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBL2WAccountLoginAck_descriptor_;
}

const PBL2WAccountLoginAck& PBL2WAccountLoginAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WALMsg_2eproto();  return *default_instance_;
}

PBL2WAccountLoginAck* PBL2WAccountLoginAck::default_instance_ = NULL;

PBL2WAccountLoginAck* PBL2WAccountLoginAck::New() const {
  return new PBL2WAccountLoginAck;
}

void PBL2WAccountLoginAck::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_account()) {
      if (account_ != NULL) account_->::PBAccount::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBL2WAccountLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBAccount account = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_account()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBL2WAccountLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PBAccount account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->account(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBL2WAccountLoginAck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PBAccount account = 1;
  if (has_account()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->account(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBL2WAccountLoginAck::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PBAccount account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->account());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBL2WAccountLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBL2WAccountLoginAck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBL2WAccountLoginAck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBL2WAccountLoginAck::MergeFrom(const PBL2WAccountLoginAck& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      mutable_account()->::PBAccount::MergeFrom(from.account());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBL2WAccountLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBL2WAccountLoginAck::CopyFrom(const PBL2WAccountLoginAck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBL2WAccountLoginAck::IsInitialized() const {
  
  return true;
}

void PBL2WAccountLoginAck::Swap(PBL2WAccountLoginAck* other) {
  if (other != this) {
    std::swap(account_, other->account_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBL2WAccountLoginAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBL2WAccountLoginAck_descriptor_;
  metadata.reflection = PBL2WAccountLoginAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBW2LAccountUnloginAsk::kLoginsnFieldNumber;
#endif  // !_MSC_VER

PBW2LAccountUnloginAsk::PBW2LAccountUnloginAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBW2LAccountUnloginAsk::InitAsDefaultInstance() {
}

PBW2LAccountUnloginAsk::PBW2LAccountUnloginAsk(const PBW2LAccountUnloginAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBW2LAccountUnloginAsk::SharedCtor() {
  _cached_size_ = 0;
  loginsn_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBW2LAccountUnloginAsk::~PBW2LAccountUnloginAsk() {
  SharedDtor();
}

void PBW2LAccountUnloginAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBW2LAccountUnloginAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBW2LAccountUnloginAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBW2LAccountUnloginAsk_descriptor_;
}

const PBW2LAccountUnloginAsk& PBW2LAccountUnloginAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WALMsg_2eproto();  return *default_instance_;
}

PBW2LAccountUnloginAsk* PBW2LAccountUnloginAsk::default_instance_ = NULL;

PBW2LAccountUnloginAsk* PBW2LAccountUnloginAsk::New() const {
  return new PBW2LAccountUnloginAsk;
}

void PBW2LAccountUnloginAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    loginsn_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBW2LAccountUnloginAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 loginsn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &loginsn_)));
          set_has_loginsn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBW2LAccountUnloginAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 loginsn = 1;
  if (has_loginsn()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->loginsn(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBW2LAccountUnloginAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 loginsn = 1;
  if (has_loginsn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->loginsn(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBW2LAccountUnloginAsk::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 loginsn = 1;
    if (has_loginsn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->loginsn());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBW2LAccountUnloginAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBW2LAccountUnloginAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBW2LAccountUnloginAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBW2LAccountUnloginAsk::MergeFrom(const PBW2LAccountUnloginAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_loginsn()) {
      set_loginsn(from.loginsn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBW2LAccountUnloginAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBW2LAccountUnloginAsk::CopyFrom(const PBW2LAccountUnloginAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBW2LAccountUnloginAsk::IsInitialized() const {
  
  return true;
}

void PBW2LAccountUnloginAsk::Swap(PBW2LAccountUnloginAsk* other) {
  if (other != this) {
    std::swap(loginsn_, other->loginsn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBW2LAccountUnloginAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBW2LAccountUnloginAsk_descriptor_;
  metadata.reflection = PBW2LAccountUnloginAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBW2LAccountlogoutAsk::kAccountidFieldNumber;
#endif  // !_MSC_VER

PBW2LAccountlogoutAsk::PBW2LAccountlogoutAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBW2LAccountlogoutAsk::InitAsDefaultInstance() {
}

PBW2LAccountlogoutAsk::PBW2LAccountlogoutAsk(const PBW2LAccountlogoutAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBW2LAccountlogoutAsk::SharedCtor() {
  _cached_size_ = 0;
  accountid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBW2LAccountlogoutAsk::~PBW2LAccountlogoutAsk() {
  SharedDtor();
}

void PBW2LAccountlogoutAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBW2LAccountlogoutAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBW2LAccountlogoutAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBW2LAccountlogoutAsk_descriptor_;
}

const PBW2LAccountlogoutAsk& PBW2LAccountlogoutAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WALMsg_2eproto();  return *default_instance_;
}

PBW2LAccountlogoutAsk* PBW2LAccountlogoutAsk::default_instance_ = NULL;

PBW2LAccountlogoutAsk* PBW2LAccountlogoutAsk::New() const {
  return new PBW2LAccountlogoutAsk;
}

void PBW2LAccountlogoutAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    accountid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBW2LAccountlogoutAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBW2LAccountlogoutAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBW2LAccountlogoutAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBW2LAccountlogoutAsk::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBW2LAccountlogoutAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBW2LAccountlogoutAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBW2LAccountlogoutAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBW2LAccountlogoutAsk::MergeFrom(const PBW2LAccountlogoutAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBW2LAccountlogoutAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBW2LAccountlogoutAsk::CopyFrom(const PBW2LAccountlogoutAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBW2LAccountlogoutAsk::IsInitialized() const {
  
  return true;
}

void PBW2LAccountlogoutAsk::Swap(PBW2LAccountlogoutAsk* other) {
  if (other != this) {
    std::swap(accountid_, other->accountid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBW2LAccountlogoutAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBW2LAccountlogoutAsk_descriptor_;
  metadata.reflection = PBW2LAccountlogoutAsk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PBW2LAccountGameEnterAsk::kAccountidFieldNumber;
const int PBW2LAccountGameEnterAsk::kPlayeridFieldNumber;
#endif  // !_MSC_VER

PBW2LAccountGameEnterAsk::PBW2LAccountGameEnterAsk()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PBW2LAccountGameEnterAsk::InitAsDefaultInstance() {
}

PBW2LAccountGameEnterAsk::PBW2LAccountGameEnterAsk(const PBW2LAccountGameEnterAsk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PBW2LAccountGameEnterAsk::SharedCtor() {
  _cached_size_ = 0;
  accountid_ = 0u;
  playerid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBW2LAccountGameEnterAsk::~PBW2LAccountGameEnterAsk() {
  SharedDtor();
}

void PBW2LAccountGameEnterAsk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBW2LAccountGameEnterAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBW2LAccountGameEnterAsk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBW2LAccountGameEnterAsk_descriptor_;
}

const PBW2LAccountGameEnterAsk& PBW2LAccountGameEnterAsk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_WALMsg_2eproto();  return *default_instance_;
}

PBW2LAccountGameEnterAsk* PBW2LAccountGameEnterAsk::default_instance_ = NULL;

PBW2LAccountGameEnterAsk* PBW2LAccountGameEnterAsk::New() const {
  return new PBW2LAccountGameEnterAsk;
}

void PBW2LAccountGameEnterAsk::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    accountid_ = 0u;
    playerid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PBW2LAccountGameEnterAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
          set_has_accountid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_playerid;
        break;
      }
      
      // optional uint32 playerid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_playerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
          set_has_playerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PBW2LAccountGameEnterAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }
  
  // optional uint32 playerid = 2;
  if (has_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->playerid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PBW2LAccountGameEnterAsk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 accountid = 1;
  if (has_accountid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }
  
  // optional uint32 playerid = 2;
  if (has_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->playerid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PBW2LAccountGameEnterAsk::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }
    
    // optional uint32 playerid = 2;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->playerid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBW2LAccountGameEnterAsk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PBW2LAccountGameEnterAsk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PBW2LAccountGameEnterAsk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBW2LAccountGameEnterAsk::MergeFrom(const PBW2LAccountGameEnterAsk& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accountid()) {
      set_accountid(from.accountid());
    }
    if (from.has_playerid()) {
      set_playerid(from.playerid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PBW2LAccountGameEnterAsk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBW2LAccountGameEnterAsk::CopyFrom(const PBW2LAccountGameEnterAsk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBW2LAccountGameEnterAsk::IsInitialized() const {
  
  return true;
}

void PBW2LAccountGameEnterAsk::Swap(PBW2LAccountGameEnterAsk* other) {
  if (other != this) {
    std::swap(accountid_, other->accountid_);
    std::swap(playerid_, other->playerid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PBW2LAccountGameEnterAsk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBW2LAccountGameEnterAsk_descriptor_;
  metadata.reflection = PBW2LAccountGameEnterAsk_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
