// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Faction.proto

#ifndef PROTOBUF_Faction_2eproto__INCLUDED
#define PROTOBUF_Faction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "CASProtocol.pb.h"
#include "GameStruct.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Faction_2eproto();
void protobuf_AssignDesc_Faction_2eproto();
void protobuf_ShutdownFile_Faction_2eproto();

class PBFactionBase;
class PBFactionDBMember;
class PBFactionMemberBase;
class PBFactionApplyData;
class PBFactionSkill;
class PBFactionStudy;
class PBFactionStudyConfig;
class PBFactionJobPrivilege;
class PBFactionImpeach;
class PBFactionDBData;
class PBFactionDepot;
class PBFactionMember;
class PBFactionDisplay;
class PBPlayerFactionSkill;
class PBPlayerFactionDonateMoney;
class PBPlayerFactionTaskItem;
class PBPlayerFactionTask;
class PBPlayerFaction;
class PBFactionOfflineRemove;
class PBFactionEvent;
class PBFactionEventAll;
class PBC2GFactionCreate;
class PBC2GFactionApply;
class PBG2CFactionList;
class PBC2GFactionEdit;
class PBG2CFactionApplyList;
class PBG2CFactionMemberList;
class PBC2GFactionRequire;
class PBG2CFactionSyn;
class PBG2CFactionApplying;
class PBG2CImpeachAck;
class PBC2GFactionOpt;
class PBG2CFactionOptFeedback;
class PBG2CFactionOptResult;
class PBCAGSetElite;
class PBCAGSetBeauty;
class PBCAGSetPrivilege;
class PBG2CFactionBeInviteJoin;
class PBG2CFactionInviteJoinResult;
class FactionSelfSkillInfo;
class PBG2CFactionSelfSkillList;
class FactionStudyFactionInfo;
class PBG2CFactionStudyFactionList;
class PBC2GWatchOhterSkill;
class FactionOhterSkillInfo;
class PBG2CFactionOhterSkillList;
class PBC2GUpgradeSelfSkill;
class PBG2CUpgradeSelfSkill;
class PBGAWUpgradeSelfSkill;
class PBAddStudyRelation;
class PBC2GAddStudyRelation;
class PBC2GDelStudyRelation;
class PBG2CDelStudyRelation;
class PBC2GFactionDevelopSkill;
class PBG2CFactionDevelopSkill;
class PBC2GFactionSuspendDevelopSkill;
class PBG2CFactionSuspendDevelopSkill;
class PBC2GFactionOpenStudy;
class PBG2CFactionOpenStudy;
class PBW2GFactionMemberAttr;
class PBG2CFactionMemberAttr;
class PBC2GFactionDonateMoney;
class PBG2CFactionDrinkWine;
class PBC2GFactionDrinkWine;
class PBPlayerDrinkWine;
class PBG2CFactionDonateMoney;
class PBGAWFactionDonateMoney;
class PBG2CFactionDonateMoneyBroad;
class PBC2GFactionCompleteTask;
class PBG2CFactionCompleteTask;
class PBGAWFactionCompleteTask;
class PBC2GFactionAllotMoneyAsk;
class PBC2GFactionAllotItemAsk;
class PBFactionChallenger;
class PBManorCpymapInfo;
class PBManorInfo;
class PBAllManor;
class PBManorBattlefieldPlayerScore;
class PBManorBattleFieldReport;
class PBW2GFactionSyn;
class PBGL2WFactionSynPlayer;
class PBCorpsOfflineChangeJob;

// ===================================================================

class PBFactionBase : public ::google::protobuf::Message {
 public:
  PBFactionBase();
  virtual ~PBFactionBase();
  
  PBFactionBase(const PBFactionBase& from);
  
  inline PBFactionBase& operator=(const PBFactionBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionBase& default_instance();
  
  void Swap(PBFactionBase* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionBase& from);
  void MergeFrom(const PBFactionBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 factionid = 2;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 2;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 leader = 3;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 3;
  inline ::google::protobuf::uint32 leader() const;
  inline void set_leader(::google::protobuf::uint32 value);
  
  // optional uint32 worldid = 4;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 4;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 union = 6;
  inline bool has_union_() const;
  inline void clear_union_();
  static const int kUnionFieldNumber = 6;
  inline ::google::protobuf::uint32 union_() const;
  inline void set_union_(::google::protobuf::uint32 value);
  
  // optional string banner = 7;
  inline bool has_banner() const;
  inline void clear_banner();
  static const int kBannerFieldNumber = 7;
  inline const ::std::string& banner() const;
  inline void set_banner(const ::std::string& value);
  inline void set_banner(const char* value);
  inline void set_banner(const char* value, size_t size);
  inline ::std::string* mutable_banner();
  inline ::std::string* release_banner();
  
  // optional uint32 corps = 8;
  inline bool has_corps() const;
  inline void clear_corps();
  static const int kCorpsFieldNumber = 8;
  inline ::google::protobuf::uint32 corps() const;
  inline void set_corps(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionBase)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_union_();
  inline void clear_has_union_();
  inline void set_has_banner();
  inline void clear_has_banner();
  inline void set_has_corps();
  inline void clear_has_corps();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 leader_;
  ::google::protobuf::uint32 worldid_;
  ::google::protobuf::uint32 level_;
  ::std::string* banner_;
  ::google::protobuf::uint32 union__;
  ::google::protobuf::uint32 corps_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionBase* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionDBMember : public ::google::protobuf::Message {
 public:
  PBFactionDBMember();
  virtual ~PBFactionDBMember();
  
  PBFactionDBMember(const PBFactionDBMember& from);
  
  inline PBFactionDBMember& operator=(const PBFactionDBMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionDBMember& default_instance();
  
  void Swap(PBFactionDBMember* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionDBMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionDBMember& from);
  void MergeFrom(const PBFactionDBMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 contribution = 2;
  inline bool has_contribution() const;
  inline void clear_contribution();
  static const int kContributionFieldNumber = 2;
  inline ::google::protobuf::uint32 contribution() const;
  inline void set_contribution(::google::protobuf::uint32 value);
  
  // optional uint32 experience = 3;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 3;
  inline ::google::protobuf::uint32 experience() const;
  inline void set_experience(::google::protobuf::uint32 value);
  
  // optional uint32 jointime = 4;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJointimeFieldNumber = 4;
  inline ::google::protobuf::uint32 jointime() const;
  inline void set_jointime(::google::protobuf::uint32 value);
  
  // optional uint32 job = 5;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 5;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // repeated uint32 title = 6;
  inline int title_size() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 6;
  inline ::google::protobuf::uint32 title(int index) const;
  inline void set_title(int index, ::google::protobuf::uint32 value);
  inline void add_title(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      title() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_title();
  
  // optional uint32 lastofflinetime = 7;
  inline bool has_lastofflinetime() const;
  inline void clear_lastofflinetime();
  static const int kLastofflinetimeFieldNumber = 7;
  inline ::google::protobuf::uint32 lastofflinetime() const;
  inline void set_lastofflinetime(::google::protobuf::uint32 value);
  
  // optional uint32 fobitcount = 8;
  inline bool has_fobitcount() const;
  inline void clear_fobitcount();
  static const int kFobitcountFieldNumber = 8;
  inline ::google::protobuf::uint32 fobitcount() const;
  inline void set_fobitcount(::google::protobuf::uint32 value);
  
  // optional uint32 fobittime = 9;
  inline bool has_fobittime() const;
  inline void clear_fobittime();
  static const int kFobittimeFieldNumber = 9;
  inline ::google::protobuf::uint32 fobittime() const;
  inline void set_fobittime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionDBMember)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_contribution();
  inline void clear_has_contribution();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_lastofflinetime();
  inline void clear_has_lastofflinetime();
  inline void set_has_fobitcount();
  inline void clear_has_fobitcount();
  inline void set_has_fobittime();
  inline void clear_has_fobittime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 contribution_;
  ::google::protobuf::uint32 experience_;
  ::google::protobuf::uint32 jointime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > title_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 lastofflinetime_;
  ::google::protobuf::uint32 fobitcount_;
  ::google::protobuf::uint32 fobittime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionDBMember* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionMemberBase : public ::google::protobuf::Message {
 public:
  PBFactionMemberBase();
  virtual ~PBFactionMemberBase();
  
  PBFactionMemberBase(const PBFactionMemberBase& from);
  
  inline PBFactionMemberBase& operator=(const PBFactionMemberBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionMemberBase& default_instance();
  
  void Swap(PBFactionMemberBase* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionMemberBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionMemberBase& from);
  void MergeFrom(const PBFactionMemberBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional string playername = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  
  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 job = 4;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 4;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // optional uint32 identity = 5;
  inline bool has_identity() const;
  inline void clear_identity();
  static const int kIdentityFieldNumber = 5;
  inline ::google::protobuf::uint32 identity() const;
  inline void set_identity(::google::protobuf::uint32 value);
  
  // optional uint32 force = 6;
  inline bool has_force() const;
  inline void clear_force();
  static const int kForceFieldNumber = 6;
  inline ::google::protobuf::uint32 force() const;
  inline void set_force(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionMemberBase)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_identity();
  inline void clear_has_identity();
  inline void set_has_force();
  inline void clear_has_force();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* playername_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 identity_;
  ::google::protobuf::uint32 force_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionMemberBase* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionApplyData : public ::google::protobuf::Message {
 public:
  PBFactionApplyData();
  virtual ~PBFactionApplyData();
  
  PBFactionApplyData(const PBFactionApplyData& from);
  
  inline PBFactionApplyData& operator=(const PBFactionApplyData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionApplyData& default_instance();
  
  void Swap(PBFactionApplyData* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionApplyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionApplyData& from);
  void MergeFrom(const PBFactionApplyData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionMemberBase base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::PBFactionMemberBase& base() const;
  inline ::PBFactionMemberBase* mutable_base();
  inline ::PBFactionMemberBase* release_base();
  
  // optional uint32 stamp = 2;
  inline bool has_stamp() const;
  inline void clear_stamp();
  static const int kStampFieldNumber = 2;
  inline ::google::protobuf::uint32 stamp() const;
  inline void set_stamp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionApplyData)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_stamp();
  inline void clear_has_stamp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionMemberBase* base_;
  ::google::protobuf::uint32 stamp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionApplyData* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionSkill : public ::google::protobuf::Message {
 public:
  PBFactionSkill();
  virtual ~PBFactionSkill();
  
  PBFactionSkill(const PBFactionSkill& from);
  
  inline PBFactionSkill& operator=(const PBFactionSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionSkill& default_instance();
  
  void Swap(PBFactionSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionSkill& from);
  void MergeFrom(const PBFactionSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
  // optional uint32 developlefttime = 4;
  inline bool has_developlefttime() const;
  inline void clear_developlefttime();
  static const int kDeveloplefttimeFieldNumber = 4;
  inline ::google::protobuf::uint32 developlefttime() const;
  inline void set_developlefttime(::google::protobuf::uint32 value);
  
  // optional uint32 developlasttime = 5;
  inline bool has_developlasttime() const;
  inline void clear_developlasttime();
  static const int kDeveloplasttimeFieldNumber = 5;
  inline ::google::protobuf::uint32 developlasttime() const;
  inline void set_developlasttime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_developlefttime();
  inline void clear_has_developlefttime();
  inline void set_has_developlasttime();
  inline void clear_has_developlasttime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 developlefttime_;
  ::google::protobuf::uint32 developlasttime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionStudy : public ::google::protobuf::Message {
 public:
  PBFactionStudy();
  virtual ~PBFactionStudy();
  
  PBFactionStudy(const PBFactionStudy& from);
  
  inline PBFactionStudy& operator=(const PBFactionStudy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionStudy& default_instance();
  
  void Swap(PBFactionStudy* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionStudy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionStudy& from);
  void MergeFrom(const PBFactionStudy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 begintime = 2;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 2;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionStudy)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 begintime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionStudy* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionStudyConfig : public ::google::protobuf::Message {
 public:
  PBFactionStudyConfig();
  virtual ~PBFactionStudyConfig();
  
  PBFactionStudyConfig(const PBFactionStudyConfig& from);
  
  inline PBFactionStudyConfig& operator=(const PBFactionStudyConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionStudyConfig& default_instance();
  
  void Swap(PBFactionStudyConfig* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionStudyConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionStudyConfig& from);
  void MergeFrom(const PBFactionStudyConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool openstudy = 1;
  inline bool has_openstudy() const;
  inline void clear_openstudy();
  static const int kOpenstudyFieldNumber = 1;
  inline bool openstudy() const;
  inline void set_openstudy(bool value);
  
  // optional uint32 studymoneytype = 2;
  inline bool has_studymoneytype() const;
  inline void clear_studymoneytype();
  static const int kStudymoneytypeFieldNumber = 2;
  inline ::google::protobuf::uint32 studymoneytype() const;
  inline void set_studymoneytype(::google::protobuf::uint32 value);
  
  // optional uint32 studymoneyvalue = 3;
  inline bool has_studymoneyvalue() const;
  inline void clear_studymoneyvalue();
  static const int kStudymoneyvalueFieldNumber = 3;
  inline ::google::protobuf::uint32 studymoneyvalue() const;
  inline void set_studymoneyvalue(::google::protobuf::uint32 value);
  
  // optional uint32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionStudyConfig)
 private:
  inline void set_has_openstudy();
  inline void clear_has_openstudy();
  inline void set_has_studymoneytype();
  inline void clear_has_studymoneytype();
  inline void set_has_studymoneyvalue();
  inline void clear_has_studymoneyvalue();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool openstudy_;
  ::google::protobuf::uint32 studymoneytype_;
  ::google::protobuf::uint32 studymoneyvalue_;
  ::google::protobuf::uint32 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionStudyConfig* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionJobPrivilege : public ::google::protobuf::Message {
 public:
  PBFactionJobPrivilege();
  virtual ~PBFactionJobPrivilege();
  
  PBFactionJobPrivilege(const PBFactionJobPrivilege& from);
  
  inline PBFactionJobPrivilege& operator=(const PBFactionJobPrivilege& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionJobPrivilege& default_instance();
  
  void Swap(PBFactionJobPrivilege* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionJobPrivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionJobPrivilege& from);
  void MergeFrom(const PBFactionJobPrivilege& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 job = 1;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 1;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // optional uint64 privilegeid = 2;
  inline bool has_privilegeid() const;
  inline void clear_privilegeid();
  static const int kPrivilegeidFieldNumber = 2;
  inline ::google::protobuf::uint64 privilegeid() const;
  inline void set_privilegeid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionJobPrivilege)
 private:
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_privilegeid();
  inline void clear_has_privilegeid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 privilegeid_;
  ::google::protobuf::uint32 job_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionJobPrivilege* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionImpeach : public ::google::protobuf::Message {
 public:
  PBFactionImpeach();
  virtual ~PBFactionImpeach();
  
  PBFactionImpeach(const PBFactionImpeach& from);
  
  inline PBFactionImpeach& operator=(const PBFactionImpeach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionImpeach& default_instance();
  
  void Swap(PBFactionImpeach* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionImpeach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionImpeach& from);
  void MergeFrom(const PBFactionImpeach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 impeachid = 1;
  inline bool has_impeachid() const;
  inline void clear_impeachid();
  static const int kImpeachidFieldNumber = 1;
  inline ::google::protobuf::uint32 impeachid() const;
  inline void set_impeachid(::google::protobuf::uint32 value);
  
  // optional uint32 impeachtime = 2;
  inline bool has_impeachtime() const;
  inline void clear_impeachtime();
  static const int kImpeachtimeFieldNumber = 2;
  inline ::google::protobuf::uint32 impeachtime() const;
  inline void set_impeachtime(::google::protobuf::uint32 value);
  
  // optional uint32 maxmembernum = 3;
  inline bool has_maxmembernum() const;
  inline void clear_maxmembernum();
  static const int kMaxmembernumFieldNumber = 3;
  inline ::google::protobuf::uint32 maxmembernum() const;
  inline void set_maxmembernum(::google::protobuf::uint32 value);
  
  // repeated uint32 agreemember = 4;
  inline int agreemember_size() const;
  inline void clear_agreemember();
  static const int kAgreememberFieldNumber = 4;
  inline ::google::protobuf::uint32 agreemember(int index) const;
  inline void set_agreemember(int index, ::google::protobuf::uint32 value);
  inline void add_agreemember(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      agreemember() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_agreemember();
  
  // repeated uint32 refusemember = 5;
  inline int refusemember_size() const;
  inline void clear_refusemember();
  static const int kRefusememberFieldNumber = 5;
  inline ::google::protobuf::uint32 refusemember(int index) const;
  inline void set_refusemember(int index, ::google::protobuf::uint32 value);
  inline void add_refusemember(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      refusemember() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_refusemember();
  
  // @@protoc_insertion_point(class_scope:PBFactionImpeach)
 private:
  inline void set_has_impeachid();
  inline void clear_has_impeachid();
  inline void set_has_impeachtime();
  inline void clear_has_impeachtime();
  inline void set_has_maxmembernum();
  inline void clear_has_maxmembernum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 impeachid_;
  ::google::protobuf::uint32 impeachtime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > agreemember_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > refusemember_;
  ::google::protobuf::uint32 maxmembernum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionImpeach* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionDBData : public ::google::protobuf::Message {
 public:
  PBFactionDBData();
  virtual ~PBFactionDBData();
  
  PBFactionDBData(const PBFactionDBData& from);
  
  inline PBFactionDBData& operator=(const PBFactionDBData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionDBData& default_instance();
  
  void Swap(PBFactionDBData* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionDBData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionDBData& from);
  void MergeFrom(const PBFactionDBData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionBase base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::PBFactionBase& base() const;
  inline ::PBFactionBase* mutable_base();
  inline ::PBFactionBase* release_base();
  
  // optional string declaration = 2;
  inline bool has_declaration() const;
  inline void clear_declaration();
  static const int kDeclarationFieldNumber = 2;
  inline const ::std::string& declaration() const;
  inline void set_declaration(const ::std::string& value);
  inline void set_declaration(const char* value);
  inline void set_declaration(const char* value, size_t size);
  inline ::std::string* mutable_declaration();
  inline ::std::string* release_declaration();
  
  // optional uint32 createtime = 3;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 3;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);
  
  // optional uint64 stone = 4;
  inline bool has_stone() const;
  inline void clear_stone();
  static const int kStoneFieldNumber = 4;
  inline ::google::protobuf::uint64 stone() const;
  inline void set_stone(::google::protobuf::uint64 value);
  
  // optional uint64 sliver = 5;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 5;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint64 energy = 6;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 6;
  inline ::google::protobuf::uint64 energy() const;
  inline void set_energy(::google::protobuf::uint64 value);
  
  // optional uint64 score = 7;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 7;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // optional uint64 boom = 8;
  inline bool has_boom() const;
  inline void clear_boom();
  static const int kBoomFieldNumber = 8;
  inline ::google::protobuf::uint64 boom() const;
  inline void set_boom(::google::protobuf::uint64 value);
  
  // optional uint64 experience = 9;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 9;
  inline ::google::protobuf::uint64 experience() const;
  inline void set_experience(::google::protobuf::uint64 value);
  
  // optional uint32 order = 10;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 10;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);
  
  // repeated .PBFactionDBMember members = 11;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 11;
  inline const ::PBFactionDBMember& members(int index) const;
  inline ::PBFactionDBMember* mutable_members(int index);
  inline ::PBFactionDBMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionDBMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionDBMember >*
      mutable_members();
  
  // repeated .PBFactionApplyData applys = 12;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 12;
  inline const ::PBFactionApplyData& applys(int index) const;
  inline ::PBFactionApplyData* mutable_applys(int index);
  inline ::PBFactionApplyData* add_applys();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >&
      applys() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >*
      mutable_applys();
  
  // optional uint32 requirelevel = 13;
  inline bool has_requirelevel() const;
  inline void clear_requirelevel();
  static const int kRequirelevelFieldNumber = 13;
  inline ::google::protobuf::uint32 requirelevel() const;
  inline void set_requirelevel(::google::protobuf::uint32 value);
  
  // repeated .PBIDStamp refuses = 14;
  inline int refuses_size() const;
  inline void clear_refuses();
  static const int kRefusesFieldNumber = 14;
  inline const ::PBIDStamp& refuses(int index) const;
  inline ::PBIDStamp* mutable_refuses(int index);
  inline ::PBIDStamp* add_refuses();
  inline const ::google::protobuf::RepeatedPtrField< ::PBIDStamp >&
      refuses() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBIDStamp >*
      mutable_refuses();
  
  // repeated .PBFactionSkill skill = 15;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 15;
  inline const ::PBFactionSkill& skill(int index) const;
  inline ::PBFactionSkill* mutable_skill(int index);
  inline ::PBFactionSkill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionSkill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionSkill >*
      mutable_skill();
  
  // repeated .PBFactionStudy study = 16;
  inline int study_size() const;
  inline void clear_study();
  static const int kStudyFieldNumber = 16;
  inline const ::PBFactionStudy& study(int index) const;
  inline ::PBFactionStudy* mutable_study(int index);
  inline ::PBFactionStudy* add_study();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionStudy >&
      study() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionStudy >*
      mutable_study();
  
  // optional .PBFactionStudyConfig curstudyconfig = 17;
  inline bool has_curstudyconfig() const;
  inline void clear_curstudyconfig();
  static const int kCurstudyconfigFieldNumber = 17;
  inline const ::PBFactionStudyConfig& curstudyconfig() const;
  inline ::PBFactionStudyConfig* mutable_curstudyconfig();
  inline ::PBFactionStudyConfig* release_curstudyconfig();
  
  // optional .PBFactionStudyConfig frontstudyconfig = 18;
  inline bool has_frontstudyconfig() const;
  inline void clear_frontstudyconfig();
  static const int kFrontstudyconfigFieldNumber = 18;
  inline const ::PBFactionStudyConfig& frontstudyconfig() const;
  inline ::PBFactionStudyConfig* mutable_frontstudyconfig();
  inline ::PBFactionStudyConfig* release_frontstudyconfig();
  
  // repeated .PBFactionJobPrivilege privilege = 19;
  inline int privilege_size() const;
  inline void clear_privilege();
  static const int kPrivilegeFieldNumber = 19;
  inline const ::PBFactionJobPrivilege& privilege(int index) const;
  inline ::PBFactionJobPrivilege* mutable_privilege(int index);
  inline ::PBFactionJobPrivilege* add_privilege();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionJobPrivilege >&
      privilege() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionJobPrivilege >*
      mutable_privilege();
  
  // optional .PBFactionImpeach impeach = 20;
  inline bool has_impeach() const;
  inline void clear_impeach();
  static const int kImpeachFieldNumber = 20;
  inline const ::PBFactionImpeach& impeach() const;
  inline ::PBFactionImpeach* mutable_impeach();
  inline ::PBFactionImpeach* release_impeach();
  
  // optional .PBTopListData toplist = 21;
  inline bool has_toplist() const;
  inline void clear_toplist();
  static const int kToplistFieldNumber = 21;
  inline const ::PBTopListData& toplist() const;
  inline ::PBTopListData* mutable_toplist();
  inline ::PBTopListData* release_toplist();
  
  // optional bool autoapply = 22;
  inline bool has_autoapply() const;
  inline void clear_autoapply();
  static const int kAutoapplyFieldNumber = 22;
  inline bool autoapply() const;
  inline void set_autoapply(bool value);
  
  // @@protoc_insertion_point(class_scope:PBFactionDBData)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_declaration();
  inline void clear_has_declaration();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_stone();
  inline void clear_has_stone();
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_boom();
  inline void clear_has_boom();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_requirelevel();
  inline void clear_has_requirelevel();
  inline void set_has_curstudyconfig();
  inline void clear_has_curstudyconfig();
  inline void set_has_frontstudyconfig();
  inline void clear_has_frontstudyconfig();
  inline void set_has_impeach();
  inline void clear_has_impeach();
  inline void set_has_toplist();
  inline void clear_has_toplist();
  inline void set_has_autoapply();
  inline void clear_has_autoapply();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionBase* base_;
  ::std::string* declaration_;
  ::google::protobuf::uint64 stone_;
  ::google::protobuf::uint64 sliver_;
  ::google::protobuf::uint64 energy_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 order_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint64 boom_;
  ::google::protobuf::uint64 experience_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionDBMember > members_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData > applys_;
  ::google::protobuf::RepeatedPtrField< ::PBIDStamp > refuses_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionSkill > skill_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionStudy > study_;
  ::PBFactionStudyConfig* curstudyconfig_;
  ::google::protobuf::uint32 requirelevel_;
  bool autoapply_;
  ::PBFactionStudyConfig* frontstudyconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionJobPrivilege > privilege_;
  ::PBFactionImpeach* impeach_;
  ::PBTopListData* toplist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionDBData* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionDepot : public ::google::protobuf::Message {
 public:
  PBFactionDepot();
  virtual ~PBFactionDepot();
  
  PBFactionDepot(const PBFactionDepot& from);
  
  inline PBFactionDepot& operator=(const PBFactionDepot& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionDepot& default_instance();
  
  void Swap(PBFactionDepot* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionDepot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionDepot& from);
  void MergeFrom(const PBFactionDepot& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 uniqueindex = 1;
  inline bool has_uniqueindex() const;
  inline void clear_uniqueindex();
  static const int kUniqueindexFieldNumber = 1;
  inline ::google::protobuf::uint64 uniqueindex() const;
  inline void set_uniqueindex(::google::protobuf::uint64 value);
  
  // repeated .PBItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::PBItem& item(int index) const;
  inline ::PBItem* mutable_item(int index);
  inline ::PBItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_item();
  
  // optional uint64 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint64 money() const;
  inline void set_money(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionDepot)
 private:
  inline void set_has_uniqueindex();
  inline void clear_has_uniqueindex();
  inline void set_has_money();
  inline void clear_has_money();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 uniqueindex_;
  ::google::protobuf::RepeatedPtrField< ::PBItem > item_;
  ::google::protobuf::uint64 money_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionDepot* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionMember : public ::google::protobuf::Message {
 public:
  PBFactionMember();
  virtual ~PBFactionMember();
  
  PBFactionMember(const PBFactionMember& from);
  
  inline PBFactionMember& operator=(const PBFactionMember& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionMember& default_instance();
  
  void Swap(PBFactionMember* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionMember& from);
  void MergeFrom(const PBFactionMember& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionMemberBase base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::PBFactionMemberBase& base() const;
  inline ::PBFactionMemberBase* mutable_base();
  inline ::PBFactionMemberBase* release_base();
  
  // optional uint32 contribution = 2;
  inline bool has_contribution() const;
  inline void clear_contribution();
  static const int kContributionFieldNumber = 2;
  inline ::google::protobuf::uint32 contribution() const;
  inline void set_contribution(::google::protobuf::uint32 value);
  
  // optional uint32 experience = 3;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 3;
  inline ::google::protobuf::uint32 experience() const;
  inline void set_experience(::google::protobuf::uint32 value);
  
  // optional uint32 jointime = 4;
  inline bool has_jointime() const;
  inline void clear_jointime();
  static const int kJointimeFieldNumber = 4;
  inline ::google::protobuf::uint32 jointime() const;
  inline void set_jointime(::google::protobuf::uint32 value);
  
  // optional bool online = 5;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 5;
  inline bool online() const;
  inline void set_online(bool value);
  
  // optional uint32 job = 6;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 6;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // repeated uint32 title = 7;
  inline int title_size() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 7;
  inline ::google::protobuf::uint32 title(int index) const;
  inline void set_title(int index, ::google::protobuf::uint32 value);
  inline void add_title(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      title() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_title();
  
  // optional uint32 lastofflinetime = 8;
  inline bool has_lastofflinetime() const;
  inline void clear_lastofflinetime();
  static const int kLastofflinetimeFieldNumber = 8;
  inline ::google::protobuf::uint32 lastofflinetime() const;
  inline void set_lastofflinetime(::google::protobuf::uint32 value);
  
  // optional uint32 fobitcount = 9;
  inline bool has_fobitcount() const;
  inline void clear_fobitcount();
  static const int kFobitcountFieldNumber = 9;
  inline ::google::protobuf::uint32 fobitcount() const;
  inline void set_fobitcount(::google::protobuf::uint32 value);
  
  // optional uint32 fobittime = 10;
  inline bool has_fobittime() const;
  inline void clear_fobittime();
  static const int kFobittimeFieldNumber = 10;
  inline ::google::protobuf::uint32 fobittime() const;
  inline void set_fobittime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionMember)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_contribution();
  inline void clear_has_contribution();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_jointime();
  inline void clear_has_jointime();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_lastofflinetime();
  inline void clear_has_lastofflinetime();
  inline void set_has_fobitcount();
  inline void clear_has_fobitcount();
  inline void set_has_fobittime();
  inline void clear_has_fobittime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionMemberBase* base_;
  ::google::protobuf::uint32 contribution_;
  ::google::protobuf::uint32 experience_;
  ::google::protobuf::uint32 jointime_;
  bool online_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > title_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 lastofflinetime_;
  ::google::protobuf::uint32 fobitcount_;
  ::google::protobuf::uint32 fobittime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionMember* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionDisplay : public ::google::protobuf::Message {
 public:
  PBFactionDisplay();
  virtual ~PBFactionDisplay();
  
  PBFactionDisplay(const PBFactionDisplay& from);
  
  inline PBFactionDisplay& operator=(const PBFactionDisplay& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionDisplay& default_instance();
  
  void Swap(PBFactionDisplay* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionDisplay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionDisplay& from);
  void MergeFrom(const PBFactionDisplay& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionBase base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::PBFactionBase& base() const;
  inline ::PBFactionBase* mutable_base();
  inline ::PBFactionBase* release_base();
  
  // optional string leadername = 2;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 2;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  
  // optional uint32 people = 3;
  inline bool has_people() const;
  inline void clear_people();
  static const int kPeopleFieldNumber = 3;
  inline ::google::protobuf::uint32 people() const;
  inline void set_people(::google::protobuf::uint32 value);
  
  // optional uint32 peoplemax = 4;
  inline bool has_peoplemax() const;
  inline void clear_peoplemax();
  static const int kPeoplemaxFieldNumber = 4;
  inline ::google::protobuf::uint32 peoplemax() const;
  inline void set_peoplemax(::google::protobuf::uint32 value);
  
  // optional bool isleaderonline = 5;
  inline bool has_isleaderonline() const;
  inline void clear_isleaderonline();
  static const int kIsleaderonlineFieldNumber = 5;
  inline bool isleaderonline() const;
  inline void set_isleaderonline(bool value);
  
  // optional uint64 boom = 6;
  inline bool has_boom() const;
  inline void clear_boom();
  static const int kBoomFieldNumber = 6;
  inline ::google::protobuf::uint64 boom() const;
  inline void set_boom(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionDisplay)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_leadername();
  inline void clear_has_leadername();
  inline void set_has_people();
  inline void clear_has_people();
  inline void set_has_peoplemax();
  inline void clear_has_peoplemax();
  inline void set_has_isleaderonline();
  inline void clear_has_isleaderonline();
  inline void set_has_boom();
  inline void clear_has_boom();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionBase* base_;
  ::std::string* leadername_;
  ::google::protobuf::uint32 people_;
  ::google::protobuf::uint32 peoplemax_;
  ::google::protobuf::uint64 boom_;
  bool isleaderonline_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionDisplay* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFactionSkill : public ::google::protobuf::Message {
 public:
  PBPlayerFactionSkill();
  virtual ~PBPlayerFactionSkill();
  
  PBPlayerFactionSkill(const PBPlayerFactionSkill& from);
  
  inline PBPlayerFactionSkill& operator=(const PBPlayerFactionSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFactionSkill& default_instance();
  
  void Swap(PBPlayerFactionSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFactionSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFactionSkill& from);
  void MergeFrom(const PBPlayerFactionSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerFactionSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFactionSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFactionDonateMoney : public ::google::protobuf::Message {
 public:
  PBPlayerFactionDonateMoney();
  virtual ~PBPlayerFactionDonateMoney();
  
  PBPlayerFactionDonateMoney(const PBPlayerFactionDonateMoney& from);
  
  inline PBPlayerFactionDonateMoney& operator=(const PBPlayerFactionDonateMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFactionDonateMoney& default_instance();
  
  void Swap(PBPlayerFactionDonateMoney* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFactionDonateMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFactionDonateMoney& from);
  void MergeFrom(const PBPlayerFactionDonateMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerFactionDonateMoney)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFactionDonateMoney* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFactionTaskItem : public ::google::protobuf::Message {
 public:
  PBPlayerFactionTaskItem();
  virtual ~PBPlayerFactionTaskItem();
  
  PBPlayerFactionTaskItem(const PBPlayerFactionTaskItem& from);
  
  inline PBPlayerFactionTaskItem& operator=(const PBPlayerFactionTaskItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFactionTaskItem& default_instance();
  
  void Swap(PBPlayerFactionTaskItem* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFactionTaskItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFactionTaskItem& from);
  void MergeFrom(const PBPlayerFactionTaskItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerFactionTaskItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFactionTaskItem* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFactionTask : public ::google::protobuf::Message {
 public:
  PBPlayerFactionTask();
  virtual ~PBPlayerFactionTask();
  
  PBPlayerFactionTask(const PBPlayerFactionTask& from);
  
  inline PBPlayerFactionTask& operator=(const PBPlayerFactionTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFactionTask& default_instance();
  
  void Swap(PBPlayerFactionTask* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFactionTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFactionTask& from);
  void MergeFrom(const PBPlayerFactionTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 taskcount = 1;
  inline bool has_taskcount() const;
  inline void clear_taskcount();
  static const int kTaskcountFieldNumber = 1;
  inline ::google::protobuf::uint32 taskcount() const;
  inline void set_taskcount(::google::protobuf::uint32 value);
  
  // optional uint32 taskid = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // repeated .PBPlayerFactionTaskItem taskitem = 3;
  inline int taskitem_size() const;
  inline void clear_taskitem();
  static const int kTaskitemFieldNumber = 3;
  inline const ::PBPlayerFactionTaskItem& taskitem(int index) const;
  inline ::PBPlayerFactionTaskItem* mutable_taskitem(int index);
  inline ::PBPlayerFactionTaskItem* add_taskitem();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionTaskItem >&
      taskitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionTaskItem >*
      mutable_taskitem();
  
  // @@protoc_insertion_point(class_scope:PBPlayerFactionTask)
 private:
  inline void set_has_taskcount();
  inline void clear_has_taskcount();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 taskcount_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionTaskItem > taskitem_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFactionTask* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerFaction : public ::google::protobuf::Message {
 public:
  PBPlayerFaction();
  virtual ~PBPlayerFaction();
  
  PBPlayerFaction(const PBPlayerFaction& from);
  
  inline PBPlayerFaction& operator=(const PBPlayerFaction& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerFaction& default_instance();
  
  void Swap(PBPlayerFaction* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerFaction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerFaction& from);
  void MergeFrom(const PBPlayerFaction& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 saveorder = 1;
  inline bool has_saveorder() const;
  inline void clear_saveorder();
  static const int kSaveorderFieldNumber = 1;
  inline ::google::protobuf::uint32 saveorder() const;
  inline void set_saveorder(::google::protobuf::uint32 value);
  
  // optional uint32 lastleavetime = 2;
  inline bool has_lastleavetime() const;
  inline void clear_lastleavetime();
  static const int kLastleavetimeFieldNumber = 2;
  inline ::google::protobuf::uint32 lastleavetime() const;
  inline void set_lastleavetime(::google::protobuf::uint32 value);
  
  // repeated .PBPlayerFactionSkill skill = 3;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 3;
  inline const ::PBPlayerFactionSkill& skill(int index) const;
  inline ::PBPlayerFactionSkill* mutable_skill(int index);
  inline ::PBPlayerFactionSkill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionSkill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionSkill >*
      mutable_skill();
  
  // repeated .PBPlayerFactionDonateMoney donatemoney = 4;
  inline int donatemoney_size() const;
  inline void clear_donatemoney();
  static const int kDonatemoneyFieldNumber = 4;
  inline const ::PBPlayerFactionDonateMoney& donatemoney(int index) const;
  inline ::PBPlayerFactionDonateMoney* mutable_donatemoney(int index);
  inline ::PBPlayerFactionDonateMoney* add_donatemoney();
  inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionDonateMoney >&
      donatemoney() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionDonateMoney >*
      mutable_donatemoney();
  
  // optional .PBPlayerFactionTask task = 5;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 5;
  inline const ::PBPlayerFactionTask& task() const;
  inline ::PBPlayerFactionTask* mutable_task();
  inline ::PBPlayerFactionTask* release_task();
  
  // optional .PBPlayerDrinkWine drinkwine = 7;
  inline bool has_drinkwine() const;
  inline void clear_drinkwine();
  static const int kDrinkwineFieldNumber = 7;
  inline const ::PBPlayerDrinkWine& drinkwine() const;
  inline ::PBPlayerDrinkWine* mutable_drinkwine();
  inline ::PBPlayerDrinkWine* release_drinkwine();
  
  // @@protoc_insertion_point(class_scope:PBPlayerFaction)
 private:
  inline void set_has_saveorder();
  inline void clear_has_saveorder();
  inline void set_has_lastleavetime();
  inline void clear_has_lastleavetime();
  inline void set_has_task();
  inline void clear_has_task();
  inline void set_has_drinkwine();
  inline void clear_has_drinkwine();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 saveorder_;
  ::google::protobuf::uint32 lastleavetime_;
  ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionSkill > skill_;
  ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionDonateMoney > donatemoney_;
  ::PBPlayerFactionTask* task_;
  ::PBPlayerDrinkWine* drinkwine_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerFaction* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionOfflineRemove : public ::google::protobuf::Message {
 public:
  PBFactionOfflineRemove();
  virtual ~PBFactionOfflineRemove();
  
  PBFactionOfflineRemove(const PBFactionOfflineRemove& from);
  
  inline PBFactionOfflineRemove& operator=(const PBFactionOfflineRemove& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionOfflineRemove& default_instance();
  
  void Swap(PBFactionOfflineRemove* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionOfflineRemove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionOfflineRemove& from);
  void MergeFrom(const PBFactionOfflineRemove& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 lastleavetime = 1;
  inline bool has_lastleavetime() const;
  inline void clear_lastleavetime();
  static const int kLastleavetimeFieldNumber = 1;
  inline ::google::protobuf::uint32 lastleavetime() const;
  inline void set_lastleavetime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionOfflineRemove)
 private:
  inline void set_has_lastleavetime();
  inline void clear_has_lastleavetime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 lastleavetime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionOfflineRemove* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionEvent : public ::google::protobuf::Message {
 public:
  PBFactionEvent();
  virtual ~PBFactionEvent();
  
  PBFactionEvent(const PBFactionEvent& from);
  
  inline PBFactionEvent& operator=(const PBFactionEvent& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionEvent& default_instance();
  
  void Swap(PBFactionEvent* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionEvent& from);
  void MergeFrom(const PBFactionEvent& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint64 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint64 level() const;
  inline void set_level(::google::protobuf::uint64 value);
  
  // repeated .PBFactionMember member = 4;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 4;
  inline const ::PBFactionMember& member(int index) const;
  inline ::PBFactionMember* mutable_member(int index);
  inline ::PBFactionMember* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionMember >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionMember >*
      mutable_member();
  
  // optional uint64 stone = 5;
  inline bool has_stone() const;
  inline void clear_stone();
  static const int kStoneFieldNumber = 5;
  inline ::google::protobuf::uint64 stone() const;
  inline void set_stone(::google::protobuf::uint64 value);
  
  // optional uint64 sliver = 6;
  inline bool has_sliver() const;
  inline void clear_sliver();
  static const int kSliverFieldNumber = 6;
  inline ::google::protobuf::uint64 sliver() const;
  inline void set_sliver(::google::protobuf::uint64 value);
  
  // optional uint64 experience = 7;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 7;
  inline ::google::protobuf::uint64 experience() const;
  inline void set_experience(::google::protobuf::uint64 value);
  
  // repeated .PBItem item = 8;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 8;
  inline const ::PBItem& item(int index) const;
  inline ::PBItem* mutable_item(int index);
  inline ::PBItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
      mutable_item();
  
  // optional uint64 money = 9;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 9;
  inline ::google::protobuf::uint64 money() const;
  inline void set_money(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBFactionEvent)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_stone();
  inline void clear_has_stone();
  inline void set_has_sliver();
  inline void clear_has_sliver();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_money();
  inline void clear_has_money();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint64 level_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionMember > member_;
  ::google::protobuf::uint64 stone_;
  ::google::protobuf::uint64 sliver_;
  ::google::protobuf::uint64 experience_;
  ::google::protobuf::RepeatedPtrField< ::PBItem > item_;
  ::google::protobuf::uint64 money_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionEvent* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionEventAll : public ::google::protobuf::Message {
 public:
  PBFactionEventAll();
  virtual ~PBFactionEventAll();
  
  PBFactionEventAll(const PBFactionEventAll& from);
  
  inline PBFactionEventAll& operator=(const PBFactionEventAll& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionEventAll& default_instance();
  
  void Swap(PBFactionEventAll* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionEventAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionEventAll& from);
  void MergeFrom(const PBFactionEventAll& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBFactionEvent member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::PBFactionEvent& member(int index) const;
  inline ::PBFactionEvent* mutable_member(int index);
  inline ::PBFactionEvent* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >*
      mutable_member();
  
  // repeated .PBFactionEvent experience = 2;
  inline int experience_size() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 2;
  inline const ::PBFactionEvent& experience(int index) const;
  inline ::PBFactionEvent* mutable_experience(int index);
  inline ::PBFactionEvent* add_experience();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >&
      experience() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >*
      mutable_experience();
  
  // repeated .PBFactionEvent depot = 3;
  inline int depot_size() const;
  inline void clear_depot();
  static const int kDepotFieldNumber = 3;
  inline const ::PBFactionEvent& depot(int index) const;
  inline ::PBFactionEvent* mutable_depot(int index);
  inline ::PBFactionEvent* add_depot();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >&
      depot() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >*
      mutable_depot();
  
  // @@protoc_insertion_point(class_scope:PBFactionEventAll)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFactionEvent > member_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionEvent > experience_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionEvent > depot_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionEventAll* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionCreate : public ::google::protobuf::Message {
 public:
  PBC2GFactionCreate();
  virtual ~PBC2GFactionCreate();
  
  PBC2GFactionCreate(const PBC2GFactionCreate& from);
  
  inline PBC2GFactionCreate& operator=(const PBC2GFactionCreate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionCreate& default_instance();
  
  void Swap(PBC2GFactionCreate* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionCreate& from);
  void MergeFrom(const PBC2GFactionCreate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 factionid = 2;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 2;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 worldid = 3;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 3;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional string banner = 4;
  inline bool has_banner() const;
  inline void clear_banner();
  static const int kBannerFieldNumber = 4;
  inline const ::std::string& banner() const;
  inline void set_banner(const ::std::string& value);
  inline void set_banner(const char* value);
  inline void set_banner(const char* value, size_t size);
  inline ::std::string* mutable_banner();
  inline ::std::string* release_banner();
  
  // optional string declaration = 5;
  inline bool has_declaration() const;
  inline void clear_declaration();
  static const int kDeclarationFieldNumber = 5;
  inline const ::std::string& declaration() const;
  inline void set_declaration(const ::std::string& value);
  inline void set_declaration(const char* value);
  inline void set_declaration(const char* value, size_t size);
  inline ::std::string* mutable_declaration();
  inline ::std::string* release_declaration();
  
  // optional uint32 playerid = 6;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 6;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 corps = 7;
  inline bool has_corps() const;
  inline void clear_corps();
  static const int kCorpsFieldNumber = 7;
  inline ::google::protobuf::uint32 corps() const;
  inline void set_corps(::google::protobuf::uint32 value);
  
  // optional uint32 creattime = 8;
  inline bool has_creattime() const;
  inline void clear_creattime();
  static const int kCreattimeFieldNumber = 8;
  inline ::google::protobuf::uint32 creattime() const;
  inline void set_creattime(::google::protobuf::uint32 value);
  
  // optional .PBMoneyConsume consume = 9;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 9;
  inline const ::PBMoneyConsume& consume() const;
  inline ::PBMoneyConsume* mutable_consume();
  inline ::PBMoneyConsume* release_consume();
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionCreate)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_banner();
  inline void clear_has_banner();
  inline void set_has_declaration();
  inline void clear_has_declaration();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_corps();
  inline void clear_has_corps();
  inline void set_has_creattime();
  inline void clear_has_creattime();
  inline void set_has_consume();
  inline void clear_has_consume();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 worldid_;
  ::std::string* banner_;
  ::std::string* declaration_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 corps_;
  ::PBMoneyConsume* consume_;
  ::google::protobuf::uint32 creattime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionCreate* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionApply : public ::google::protobuf::Message {
 public:
  PBC2GFactionApply();
  virtual ~PBC2GFactionApply();
  
  PBC2GFactionApply(const PBC2GFactionApply& from);
  
  inline PBC2GFactionApply& operator=(const PBC2GFactionApply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionApply& default_instance();
  
  void Swap(PBC2GFactionApply* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionApply& from);
  void MergeFrom(const PBC2GFactionApply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 worldid = 2;
  inline bool has_worldid() const;
  inline void clear_worldid();
  static const int kWorldidFieldNumber = 2;
  inline ::google::protobuf::uint32 worldid() const;
  inline void set_worldid(::google::protobuf::uint32 value);
  
  // optional bool isapply = 3;
  inline bool has_isapply() const;
  inline void clear_isapply();
  static const int kIsapplyFieldNumber = 3;
  inline bool isapply() const;
  inline void set_isapply(bool value);
  
  // optional .PBFactionMemberBase base = 4;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 4;
  inline const ::PBFactionMemberBase& base() const;
  inline ::PBFactionMemberBase* mutable_base();
  inline ::PBFactionMemberBase* release_base();
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionApply)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_worldid();
  inline void clear_has_worldid();
  inline void set_has_isapply();
  inline void clear_has_isapply();
  inline void set_has_base();
  inline void clear_has_base();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 worldid_;
  ::PBFactionMemberBase* base_;
  bool isapply_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionApply* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionList : public ::google::protobuf::Message {
 public:
  PBG2CFactionList();
  virtual ~PBG2CFactionList();
  
  PBG2CFactionList(const PBG2CFactionList& from);
  
  inline PBG2CFactionList& operator=(const PBG2CFactionList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionList& default_instance();
  
  void Swap(PBG2CFactionList* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionList& from);
  void MergeFrom(const PBG2CFactionList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBFactionDisplay list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::PBFactionDisplay& list(int index) const;
  inline ::PBFactionDisplay* mutable_list(int index);
  inline ::PBFactionDisplay* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionDisplay >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionDisplay >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFactionDisplay > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionList* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionEdit : public ::google::protobuf::Message {
 public:
  PBC2GFactionEdit();
  virtual ~PBC2GFactionEdit();
  
  PBC2GFactionEdit(const PBC2GFactionEdit& from);
  
  inline PBC2GFactionEdit& operator=(const PBC2GFactionEdit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionEdit& default_instance();
  
  void Swap(PBC2GFactionEdit* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionEdit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionEdit& from);
  void MergeFrom(const PBC2GFactionEdit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string declaration = 1;
  inline bool has_declaration() const;
  inline void clear_declaration();
  static const int kDeclarationFieldNumber = 1;
  inline const ::std::string& declaration() const;
  inline void set_declaration(const ::std::string& value);
  inline void set_declaration(const char* value);
  inline void set_declaration(const char* value, size_t size);
  inline ::std::string* mutable_declaration();
  inline ::std::string* release_declaration();
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionEdit)
 private:
  inline void set_has_declaration();
  inline void clear_has_declaration();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* declaration_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionEdit* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionApplyList : public ::google::protobuf::Message {
 public:
  PBG2CFactionApplyList();
  virtual ~PBG2CFactionApplyList();
  
  PBG2CFactionApplyList(const PBG2CFactionApplyList& from);
  
  inline PBG2CFactionApplyList& operator=(const PBG2CFactionApplyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionApplyList& default_instance();
  
  void Swap(PBG2CFactionApplyList* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionApplyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionApplyList& from);
  void MergeFrom(const PBG2CFactionApplyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBFactionApplyData applys = 1;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 1;
  inline const ::PBFactionApplyData& applys(int index) const;
  inline ::PBFactionApplyData* mutable_applys(int index);
  inline ::PBFactionApplyData* add_applys();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >&
      applys() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >*
      mutable_applys();
  
  // optional bool autoapply = 2;
  inline bool has_autoapply() const;
  inline void clear_autoapply();
  static const int kAutoapplyFieldNumber = 2;
  inline bool autoapply() const;
  inline void set_autoapply(bool value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionApplyList)
 private:
  inline void set_has_autoapply();
  inline void clear_has_autoapply();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData > applys_;
  bool autoapply_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionApplyList* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionMemberList : public ::google::protobuf::Message {
 public:
  PBG2CFactionMemberList();
  virtual ~PBG2CFactionMemberList();
  
  PBG2CFactionMemberList(const PBG2CFactionMemberList& from);
  
  inline PBG2CFactionMemberList& operator=(const PBG2CFactionMemberList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionMemberList& default_instance();
  
  void Swap(PBG2CFactionMemberList* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionMemberList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionMemberList& from);
  void MergeFrom(const PBG2CFactionMemberList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBFactionMember members = 1;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 1;
  inline const ::PBFactionMember& members(int index) const;
  inline ::PBFactionMember* mutable_members(int index);
  inline ::PBFactionMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionMember >*
      mutable_members();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionMemberList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBFactionMember > members_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionMemberList* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionRequire : public ::google::protobuf::Message {
 public:
  PBC2GFactionRequire();
  virtual ~PBC2GFactionRequire();
  
  PBC2GFactionRequire(const PBC2GFactionRequire& from);
  
  inline PBC2GFactionRequire& operator=(const PBC2GFactionRequire& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionRequire& default_instance();
  
  void Swap(PBC2GFactionRequire* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionRequire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionRequire& from);
  void MergeFrom(const PBC2GFactionRequire& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionRequire)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionRequire* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionSyn : public ::google::protobuf::Message {
 public:
  PBG2CFactionSyn();
  virtual ~PBG2CFactionSyn();
  
  PBG2CFactionSyn(const PBG2CFactionSyn& from);
  
  inline PBG2CFactionSyn& operator=(const PBG2CFactionSyn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionSyn& default_instance();
  
  void Swap(PBG2CFactionSyn* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionSyn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionSyn& from);
  void MergeFrom(const PBG2CFactionSyn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionDBData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::PBFactionDBData& data() const;
  inline ::PBFactionDBData* mutable_data();
  inline ::PBFactionDBData* release_data();
  
  // optional string leadername = 2;
  inline bool has_leadername() const;
  inline void clear_leadername();
  static const int kLeadernameFieldNumber = 2;
  inline const ::std::string& leadername() const;
  inline void set_leadername(const ::std::string& value);
  inline void set_leadername(const char* value);
  inline void set_leadername(const char* value, size_t size);
  inline ::std::string* mutable_leadername();
  inline ::std::string* release_leadername();
  
  // optional uint32 job = 3;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 3;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionSyn)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_leadername();
  inline void clear_has_leadername();
  inline void set_has_job();
  inline void clear_has_job();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionDBData* data_;
  ::std::string* leadername_;
  ::google::protobuf::uint32 job_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionSyn* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionApplying : public ::google::protobuf::Message {
 public:
  PBG2CFactionApplying();
  virtual ~PBG2CFactionApplying();
  
  PBG2CFactionApplying(const PBG2CFactionApplying& from);
  
  inline PBG2CFactionApplying& operator=(const PBG2CFactionApplying& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionApplying& default_instance();
  
  void Swap(PBG2CFactionApplying* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionApplying* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionApplying& from);
  void MergeFrom(const PBG2CFactionApplying& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 applys = 1;
  inline int applys_size() const;
  inline void clear_applys();
  static const int kApplysFieldNumber = 1;
  inline ::google::protobuf::uint32 applys(int index) const;
  inline void set_applys(int index, ::google::protobuf::uint32 value);
  inline void add_applys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      applys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_applys();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionApplying)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > applys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionApplying* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CImpeachAck : public ::google::protobuf::Message {
 public:
  PBG2CImpeachAck();
  virtual ~PBG2CImpeachAck();
  
  PBG2CImpeachAck(const PBG2CImpeachAck& from);
  
  inline PBG2CImpeachAck& operator=(const PBG2CImpeachAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CImpeachAck& default_instance();
  
  void Swap(PBG2CImpeachAck* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CImpeachAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CImpeachAck& from);
  void MergeFrom(const PBG2CImpeachAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionImpeach impeach = 1;
  inline bool has_impeach() const;
  inline void clear_impeach();
  static const int kImpeachFieldNumber = 1;
  inline const ::PBFactionImpeach& impeach() const;
  inline ::PBFactionImpeach* mutable_impeach();
  inline ::PBFactionImpeach* release_impeach();
  
  // @@protoc_insertion_point(class_scope:PBG2CImpeachAck)
 private:
  inline void set_has_impeach();
  inline void clear_has_impeach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionImpeach* impeach_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CImpeachAck* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionOpt : public ::google::protobuf::Message {
 public:
  PBC2GFactionOpt();
  virtual ~PBC2GFactionOpt();
  
  PBC2GFactionOpt(const PBC2GFactionOpt& from);
  
  inline PBC2GFactionOpt& operator=(const PBC2GFactionOpt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionOpt& default_instance();
  
  void Swap(PBC2GFactionOpt* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionOpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionOpt& from);
  void MergeFrom(const PBC2GFactionOpt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 uparam1 = 2;
  inline bool has_uparam1() const;
  inline void clear_uparam1();
  static const int kUparam1FieldNumber = 2;
  inline ::google::protobuf::uint32 uparam1() const;
  inline void set_uparam1(::google::protobuf::uint32 value);
  
  // optional uint32 uparam2 = 3;
  inline bool has_uparam2() const;
  inline void clear_uparam2();
  static const int kUparam2FieldNumber = 3;
  inline ::google::protobuf::uint32 uparam2() const;
  inline void set_uparam2(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionOpt)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_uparam1();
  inline void clear_has_uparam1();
  inline void set_has_uparam2();
  inline void clear_has_uparam2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 uparam1_;
  ::google::protobuf::uint32 uparam2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionOpt* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionOptFeedback : public ::google::protobuf::Message {
 public:
  PBG2CFactionOptFeedback();
  virtual ~PBG2CFactionOptFeedback();
  
  PBG2CFactionOptFeedback(const PBG2CFactionOptFeedback& from);
  
  inline PBG2CFactionOptFeedback& operator=(const PBG2CFactionOptFeedback& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionOptFeedback& default_instance();
  
  void Swap(PBG2CFactionOptFeedback* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionOptFeedback* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionOptFeedback& from);
  void MergeFrom(const PBG2CFactionOptFeedback& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // optional uint32 uparam1 = 3;
  inline bool has_uparam1() const;
  inline void clear_uparam1();
  static const int kUparam1FieldNumber = 3;
  inline ::google::protobuf::uint32 uparam1() const;
  inline void set_uparam1(::google::protobuf::uint32 value);
  
  // optional uint32 uparam2 = 4;
  inline bool has_uparam2() const;
  inline void clear_uparam2();
  static const int kUparam2FieldNumber = 4;
  inline ::google::protobuf::uint32 uparam2() const;
  inline void set_uparam2(::google::protobuf::uint32 value);
  
  // optional string sparam1 = 5;
  inline bool has_sparam1() const;
  inline void clear_sparam1();
  static const int kSparam1FieldNumber = 5;
  inline const ::std::string& sparam1() const;
  inline void set_sparam1(const ::std::string& value);
  inline void set_sparam1(const char* value);
  inline void set_sparam1(const char* value, size_t size);
  inline ::std::string* mutable_sparam1();
  inline ::std::string* release_sparam1();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionOptFeedback)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_uparam1();
  inline void clear_has_uparam1();
  inline void set_has_uparam2();
  inline void clear_has_uparam2();
  inline void set_has_sparam1();
  inline void clear_has_sparam1();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 opt_;
  ::google::protobuf::uint32 uparam1_;
  ::google::protobuf::uint32 uparam2_;
  ::std::string* sparam1_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionOptFeedback* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionOptResult : public ::google::protobuf::Message {
 public:
  PBG2CFactionOptResult();
  virtual ~PBG2CFactionOptResult();
  
  PBG2CFactionOptResult(const PBG2CFactionOptResult& from);
  
  inline PBG2CFactionOptResult& operator=(const PBG2CFactionOptResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionOptResult& default_instance();
  
  void Swap(PBG2CFactionOptResult* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionOptResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionOptResult& from);
  void MergeFrom(const PBG2CFactionOptResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // optional uint32 uparam1 = 3;
  inline bool has_uparam1() const;
  inline void clear_uparam1();
  static const int kUparam1FieldNumber = 3;
  inline ::google::protobuf::uint32 uparam1() const;
  inline void set_uparam1(::google::protobuf::uint32 value);
  
  // optional uint32 uparam2 = 4;
  inline bool has_uparam2() const;
  inline void clear_uparam2();
  static const int kUparam2FieldNumber = 4;
  inline ::google::protobuf::uint32 uparam2() const;
  inline void set_uparam2(::google::protobuf::uint32 value);
  
  // optional string sparam1 = 5;
  inline bool has_sparam1() const;
  inline void clear_sparam1();
  static const int kSparam1FieldNumber = 5;
  inline const ::std::string& sparam1() const;
  inline void set_sparam1(const ::std::string& value);
  inline void set_sparam1(const char* value);
  inline void set_sparam1(const char* value, size_t size);
  inline ::std::string* mutable_sparam1();
  inline ::std::string* release_sparam1();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionOptResult)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_opt();
  inline void clear_has_opt();
  inline void set_has_uparam1();
  inline void clear_has_uparam1();
  inline void set_has_uparam2();
  inline void clear_has_uparam2();
  inline void set_has_sparam1();
  inline void clear_has_sparam1();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 opt_;
  ::google::protobuf::uint32 uparam1_;
  ::google::protobuf::uint32 uparam2_;
  ::std::string* sparam1_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionOptResult* default_instance_;
};
// -------------------------------------------------------------------

class PBCAGSetElite : public ::google::protobuf::Message {
 public:
  PBCAGSetElite();
  virtual ~PBCAGSetElite();
  
  PBCAGSetElite(const PBCAGSetElite& from);
  
  inline PBCAGSetElite& operator=(const PBCAGSetElite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCAGSetElite& default_instance();
  
  void Swap(PBCAGSetElite* other);
  
  // implements Message ----------------------------------------------
  
  PBCAGSetElite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCAGSetElite& from);
  void MergeFrom(const PBCAGSetElite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 memberid = 1;
  inline int memberid_size() const;
  inline void clear_memberid();
  static const int kMemberidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberid(int index) const;
  inline void set_memberid(int index, ::google::protobuf::uint32 value);
  inline void add_memberid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      memberid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_memberid();
  
  // @@protoc_insertion_point(class_scope:PBCAGSetElite)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > memberid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBCAGSetElite* default_instance_;
};
// -------------------------------------------------------------------

class PBCAGSetBeauty : public ::google::protobuf::Message {
 public:
  PBCAGSetBeauty();
  virtual ~PBCAGSetBeauty();
  
  PBCAGSetBeauty(const PBCAGSetBeauty& from);
  
  inline PBCAGSetBeauty& operator=(const PBCAGSetBeauty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCAGSetBeauty& default_instance();
  
  void Swap(PBCAGSetBeauty* other);
  
  // implements Message ----------------------------------------------
  
  PBCAGSetBeauty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCAGSetBeauty& from);
  void MergeFrom(const PBCAGSetBeauty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 memberid = 1;
  inline int memberid_size() const;
  inline void clear_memberid();
  static const int kMemberidFieldNumber = 1;
  inline ::google::protobuf::uint32 memberid(int index) const;
  inline void set_memberid(int index, ::google::protobuf::uint32 value);
  inline void add_memberid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      memberid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_memberid();
  
  // @@protoc_insertion_point(class_scope:PBCAGSetBeauty)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > memberid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBCAGSetBeauty* default_instance_;
};
// -------------------------------------------------------------------

class PBCAGSetPrivilege : public ::google::protobuf::Message {
 public:
  PBCAGSetPrivilege();
  virtual ~PBCAGSetPrivilege();
  
  PBCAGSetPrivilege(const PBCAGSetPrivilege& from);
  
  inline PBCAGSetPrivilege& operator=(const PBCAGSetPrivilege& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCAGSetPrivilege& default_instance();
  
  void Swap(PBCAGSetPrivilege* other);
  
  // implements Message ----------------------------------------------
  
  PBCAGSetPrivilege* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCAGSetPrivilege& from);
  void MergeFrom(const PBCAGSetPrivilege& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 jobid = 1;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobidFieldNumber = 1;
  inline ::google::protobuf::uint32 jobid() const;
  inline void set_jobid(::google::protobuf::uint32 value);
  
  // optional uint64 privilegeid = 2;
  inline bool has_privilegeid() const;
  inline void clear_privilegeid();
  static const int kPrivilegeidFieldNumber = 2;
  inline ::google::protobuf::uint64 privilegeid() const;
  inline void set_privilegeid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBCAGSetPrivilege)
 private:
  inline void set_has_jobid();
  inline void clear_has_jobid();
  inline void set_has_privilegeid();
  inline void clear_has_privilegeid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 privilegeid_;
  ::google::protobuf::uint32 jobid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBCAGSetPrivilege* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionBeInviteJoin : public ::google::protobuf::Message {
 public:
  PBG2CFactionBeInviteJoin();
  virtual ~PBG2CFactionBeInviteJoin();
  
  PBG2CFactionBeInviteJoin(const PBG2CFactionBeInviteJoin& from);
  
  inline PBG2CFactionBeInviteJoin& operator=(const PBG2CFactionBeInviteJoin& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionBeInviteJoin& default_instance();
  
  void Swap(PBG2CFactionBeInviteJoin* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionBeInviteJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionBeInviteJoin& from);
  void MergeFrom(const PBG2CFactionBeInviteJoin& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionDisplay display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline const ::PBFactionDisplay& display() const;
  inline ::PBFactionDisplay* mutable_display();
  inline ::PBFactionDisplay* release_display();
  
  // optional uint32 inviterid = 2;
  inline bool has_inviterid() const;
  inline void clear_inviterid();
  static const int kInviteridFieldNumber = 2;
  inline ::google::protobuf::uint32 inviterid() const;
  inline void set_inviterid(::google::protobuf::uint32 value);
  
  // optional string invitername = 3;
  inline bool has_invitername() const;
  inline void clear_invitername();
  static const int kInviternameFieldNumber = 3;
  inline const ::std::string& invitername() const;
  inline void set_invitername(const ::std::string& value);
  inline void set_invitername(const char* value);
  inline void set_invitername(const char* value, size_t size);
  inline ::std::string* mutable_invitername();
  inline ::std::string* release_invitername();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionBeInviteJoin)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_inviterid();
  inline void clear_has_inviterid();
  inline void set_has_invitername();
  inline void clear_has_invitername();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionDisplay* display_;
  ::std::string* invitername_;
  ::google::protobuf::uint32 inviterid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionBeInviteJoin* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionInviteJoinResult : public ::google::protobuf::Message {
 public:
  PBG2CFactionInviteJoinResult();
  virtual ~PBG2CFactionInviteJoinResult();
  
  PBG2CFactionInviteJoinResult(const PBG2CFactionInviteJoinResult& from);
  
  inline PBG2CFactionInviteJoinResult& operator=(const PBG2CFactionInviteJoinResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionInviteJoinResult& default_instance();
  
  void Swap(PBG2CFactionInviteJoinResult* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionInviteJoinResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionInviteJoinResult& from);
  void MergeFrom(const PBG2CFactionInviteJoinResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 playerid = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional string playername = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  
  // optional bool isagree = 3;
  inline bool has_isagree() const;
  inline void clear_isagree();
  static const int kIsagreeFieldNumber = 3;
  inline bool isagree() const;
  inline void set_isagree(bool value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionInviteJoinResult)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_isagree();
  inline void clear_has_isagree();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* playername_;
  ::google::protobuf::uint32 playerid_;
  bool isagree_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionInviteJoinResult* default_instance_;
};
// -------------------------------------------------------------------

class FactionSelfSkillInfo : public ::google::protobuf::Message {
 public:
  FactionSelfSkillInfo();
  virtual ~FactionSelfSkillInfo();
  
  FactionSelfSkillInfo(const FactionSelfSkillInfo& from);
  
  inline FactionSelfSkillInfo& operator=(const FactionSelfSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FactionSelfSkillInfo& default_instance();
  
  void Swap(FactionSelfSkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  FactionSelfSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactionSelfSkillInfo& from);
  void MergeFrom(const FactionSelfSkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 selflevel = 2;
  inline bool has_selflevel() const;
  inline void clear_selflevel();
  static const int kSelflevelFieldNumber = 2;
  inline ::google::protobuf::uint32 selflevel() const;
  inline void set_selflevel(::google::protobuf::uint32 value);
  
  // optional uint32 studylevel = 3;
  inline bool has_studylevel() const;
  inline void clear_studylevel();
  static const int kStudylevelFieldNumber = 3;
  inline ::google::protobuf::uint32 studylevel() const;
  inline void set_studylevel(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FactionSelfSkillInfo)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_selflevel();
  inline void clear_has_selflevel();
  inline void set_has_studylevel();
  inline void clear_has_studylevel();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 selflevel_;
  ::google::protobuf::uint32 studylevel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static FactionSelfSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionSelfSkillList : public ::google::protobuf::Message {
 public:
  PBG2CFactionSelfSkillList();
  virtual ~PBG2CFactionSelfSkillList();
  
  PBG2CFactionSelfSkillList(const PBG2CFactionSelfSkillList& from);
  
  inline PBG2CFactionSelfSkillList& operator=(const PBG2CFactionSelfSkillList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionSelfSkillList& default_instance();
  
  void Swap(PBG2CFactionSelfSkillList* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionSelfSkillList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionSelfSkillList& from);
  void MergeFrom(const PBG2CFactionSelfSkillList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .FactionSelfSkillInfo list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::FactionSelfSkillInfo& list(int index) const;
  inline ::FactionSelfSkillInfo* mutable_list(int index);
  inline ::FactionSelfSkillInfo* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::FactionSelfSkillInfo >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::FactionSelfSkillInfo >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionSelfSkillList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::FactionSelfSkillInfo > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionSelfSkillList* default_instance_;
};
// -------------------------------------------------------------------

class FactionStudyFactionInfo : public ::google::protobuf::Message {
 public:
  FactionStudyFactionInfo();
  virtual ~FactionStudyFactionInfo();
  
  FactionStudyFactionInfo(const FactionStudyFactionInfo& from);
  
  inline FactionStudyFactionInfo& operator=(const FactionStudyFactionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FactionStudyFactionInfo& default_instance();
  
  void Swap(FactionStudyFactionInfo* other);
  
  // implements Message ----------------------------------------------
  
  FactionStudyFactionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactionStudyFactionInfo& from);
  void MergeFrom(const FactionStudyFactionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionDisplay info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::PBFactionDisplay& info() const;
  inline ::PBFactionDisplay* mutable_info();
  inline ::PBFactionDisplay* release_info();
  
  // optional uint32 levelsum = 2;
  inline bool has_levelsum() const;
  inline void clear_levelsum();
  static const int kLevelsumFieldNumber = 2;
  inline ::google::protobuf::uint32 levelsum() const;
  inline void set_levelsum(::google::protobuf::uint32 value);
  
  // optional uint32 moneytype = 3;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneytypeFieldNumber = 3;
  inline ::google::protobuf::uint32 moneytype() const;
  inline void set_moneytype(::google::protobuf::uint32 value);
  
  // optional uint32 moneyvalue = 4;
  inline bool has_moneyvalue() const;
  inline void clear_moneyvalue();
  static const int kMoneyvalueFieldNumber = 4;
  inline ::google::protobuf::uint32 moneyvalue() const;
  inline void set_moneyvalue(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FactionStudyFactionInfo)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_levelsum();
  inline void clear_has_levelsum();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_moneyvalue();
  inline void clear_has_moneyvalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionDisplay* info_;
  ::google::protobuf::uint32 levelsum_;
  ::google::protobuf::uint32 moneytype_;
  ::google::protobuf::uint32 moneyvalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static FactionStudyFactionInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionStudyFactionList : public ::google::protobuf::Message {
 public:
  PBG2CFactionStudyFactionList();
  virtual ~PBG2CFactionStudyFactionList();
  
  PBG2CFactionStudyFactionList(const PBG2CFactionStudyFactionList& from);
  
  inline PBG2CFactionStudyFactionList& operator=(const PBG2CFactionStudyFactionList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionStudyFactionList& default_instance();
  
  void Swap(PBG2CFactionStudyFactionList* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionStudyFactionList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionStudyFactionList& from);
  void MergeFrom(const PBG2CFactionStudyFactionList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .FactionStudyFactionInfo list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::FactionStudyFactionInfo& list(int index) const;
  inline ::FactionStudyFactionInfo* mutable_list(int index);
  inline ::FactionStudyFactionInfo* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::FactionStudyFactionInfo >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::FactionStudyFactionInfo >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionStudyFactionList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::FactionStudyFactionInfo > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionStudyFactionList* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GWatchOhterSkill : public ::google::protobuf::Message {
 public:
  PBC2GWatchOhterSkill();
  virtual ~PBC2GWatchOhterSkill();
  
  PBC2GWatchOhterSkill(const PBC2GWatchOhterSkill& from);
  
  inline PBC2GWatchOhterSkill& operator=(const PBC2GWatchOhterSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GWatchOhterSkill& default_instance();
  
  void Swap(PBC2GWatchOhterSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GWatchOhterSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GWatchOhterSkill& from);
  void MergeFrom(const PBC2GWatchOhterSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GWatchOhterSkill)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GWatchOhterSkill* default_instance_;
};
// -------------------------------------------------------------------

class FactionOhterSkillInfo : public ::google::protobuf::Message {
 public:
  FactionOhterSkillInfo();
  virtual ~FactionOhterSkillInfo();
  
  FactionOhterSkillInfo(const FactionOhterSkillInfo& from);
  
  inline FactionOhterSkillInfo& operator=(const FactionOhterSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FactionOhterSkillInfo& default_instance();
  
  void Swap(FactionOhterSkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  FactionOhterSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactionOhterSkillInfo& from);
  void MergeFrom(const FactionOhterSkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 selflevel = 2;
  inline bool has_selflevel() const;
  inline void clear_selflevel();
  static const int kSelflevelFieldNumber = 2;
  inline ::google::protobuf::uint32 selflevel() const;
  inline void set_selflevel(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FactionOhterSkillInfo)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_selflevel();
  inline void clear_has_selflevel();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 selflevel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static FactionOhterSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionOhterSkillList : public ::google::protobuf::Message {
 public:
  PBG2CFactionOhterSkillList();
  virtual ~PBG2CFactionOhterSkillList();
  
  PBG2CFactionOhterSkillList(const PBG2CFactionOhterSkillList& from);
  
  inline PBG2CFactionOhterSkillList& operator=(const PBG2CFactionOhterSkillList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionOhterSkillList& default_instance();
  
  void Swap(PBG2CFactionOhterSkillList* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionOhterSkillList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionOhterSkillList& from);
  void MergeFrom(const PBG2CFactionOhterSkillList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // repeated .FactionOhterSkillInfo list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::FactionOhterSkillInfo& list(int index) const;
  inline ::FactionOhterSkillInfo* mutable_list(int index);
  inline ::FactionOhterSkillInfo* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::FactionOhterSkillInfo >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::FactionOhterSkillInfo >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionOhterSkillList)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::FactionOhterSkillInfo > list_;
  ::google::protobuf::uint32 factionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionOhterSkillList* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GUpgradeSelfSkill : public ::google::protobuf::Message {
 public:
  PBC2GUpgradeSelfSkill();
  virtual ~PBC2GUpgradeSelfSkill();
  
  PBC2GUpgradeSelfSkill(const PBC2GUpgradeSelfSkill& from);
  
  inline PBC2GUpgradeSelfSkill& operator=(const PBC2GUpgradeSelfSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GUpgradeSelfSkill& default_instance();
  
  void Swap(PBC2GUpgradeSelfSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GUpgradeSelfSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GUpgradeSelfSkill& from);
  void MergeFrom(const PBC2GUpgradeSelfSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GUpgradeSelfSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GUpgradeSelfSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CUpgradeSelfSkill : public ::google::protobuf::Message {
 public:
  PBG2CUpgradeSelfSkill();
  virtual ~PBG2CUpgradeSelfSkill();
  
  PBG2CUpgradeSelfSkill(const PBG2CUpgradeSelfSkill& from);
  
  inline PBG2CUpgradeSelfSkill& operator=(const PBG2CUpgradeSelfSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CUpgradeSelfSkill& default_instance();
  
  void Swap(PBG2CUpgradeSelfSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CUpgradeSelfSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CUpgradeSelfSkill& from);
  void MergeFrom(const PBG2CUpgradeSelfSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CUpgradeSelfSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CUpgradeSelfSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBGAWUpgradeSelfSkill : public ::google::protobuf::Message {
 public:
  PBGAWUpgradeSelfSkill();
  virtual ~PBGAWUpgradeSelfSkill();
  
  PBGAWUpgradeSelfSkill(const PBGAWUpgradeSelfSkill& from);
  
  inline PBGAWUpgradeSelfSkill& operator=(const PBGAWUpgradeSelfSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGAWUpgradeSelfSkill& default_instance();
  
  void Swap(PBGAWUpgradeSelfSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBGAWUpgradeSelfSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGAWUpgradeSelfSkill& from);
  void MergeFrom(const PBGAWUpgradeSelfSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional .PBMoneyConsume money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline const ::PBMoneyConsume& money() const;
  inline ::PBMoneyConsume* mutable_money();
  inline ::PBMoneyConsume* release_money();
  
  // optional uint32 contribution = 4;
  inline bool has_contribution() const;
  inline void clear_contribution();
  static const int kContributionFieldNumber = 4;
  inline ::google::protobuf::uint32 contribution() const;
  inline void set_contribution(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBGAWUpgradeSelfSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_contribution();
  inline void clear_has_contribution();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  ::PBMoneyConsume* money_;
  ::google::protobuf::uint32 contribution_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBGAWUpgradeSelfSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBAddStudyRelation : public ::google::protobuf::Message {
 public:
  PBAddStudyRelation();
  virtual ~PBAddStudyRelation();
  
  PBAddStudyRelation(const PBAddStudyRelation& from);
  
  inline PBAddStudyRelation& operator=(const PBAddStudyRelation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAddStudyRelation& default_instance();
  
  void Swap(PBAddStudyRelation* other);
  
  // implements Message ----------------------------------------------
  
  PBAddStudyRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAddStudyRelation& from);
  void MergeFrom(const PBAddStudyRelation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 moneytype = 2;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneytypeFieldNumber = 2;
  inline ::google::protobuf::uint32 moneytype() const;
  inline void set_moneytype(::google::protobuf::uint32 value);
  
  // optional uint32 moneyvalue = 3;
  inline bool has_moneyvalue() const;
  inline void clear_moneyvalue();
  static const int kMoneyvalueFieldNumber = 3;
  inline ::google::protobuf::uint32 moneyvalue() const;
  inline void set_moneyvalue(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBAddStudyRelation)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_moneyvalue();
  inline void clear_has_moneyvalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 moneytype_;
  ::google::protobuf::uint32 moneyvalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBAddStudyRelation* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GAddStudyRelation : public ::google::protobuf::Message {
 public:
  PBC2GAddStudyRelation();
  virtual ~PBC2GAddStudyRelation();
  
  PBC2GAddStudyRelation(const PBC2GAddStudyRelation& from);
  
  inline PBC2GAddStudyRelation& operator=(const PBC2GAddStudyRelation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GAddStudyRelation& default_instance();
  
  void Swap(PBC2GAddStudyRelation* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GAddStudyRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GAddStudyRelation& from);
  void MergeFrom(const PBC2GAddStudyRelation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBAddStudyRelation faction = 1;
  inline int faction_size() const;
  inline void clear_faction();
  static const int kFactionFieldNumber = 1;
  inline const ::PBAddStudyRelation& faction(int index) const;
  inline ::PBAddStudyRelation* mutable_faction(int index);
  inline ::PBAddStudyRelation* add_faction();
  inline const ::google::protobuf::RepeatedPtrField< ::PBAddStudyRelation >&
      faction() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBAddStudyRelation >*
      mutable_faction();
  
  // @@protoc_insertion_point(class_scope:PBC2GAddStudyRelation)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBAddStudyRelation > faction_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GAddStudyRelation* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GDelStudyRelation : public ::google::protobuf::Message {
 public:
  PBC2GDelStudyRelation();
  virtual ~PBC2GDelStudyRelation();
  
  PBC2GDelStudyRelation(const PBC2GDelStudyRelation& from);
  
  inline PBC2GDelStudyRelation& operator=(const PBC2GDelStudyRelation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GDelStudyRelation& default_instance();
  
  void Swap(PBC2GDelStudyRelation* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GDelStudyRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GDelStudyRelation& from);
  void MergeFrom(const PBC2GDelStudyRelation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GDelStudyRelation)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GDelStudyRelation* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CDelStudyRelation : public ::google::protobuf::Message {
 public:
  PBG2CDelStudyRelation();
  virtual ~PBG2CDelStudyRelation();
  
  PBG2CDelStudyRelation(const PBG2CDelStudyRelation& from);
  
  inline PBG2CDelStudyRelation& operator=(const PBG2CDelStudyRelation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CDelStudyRelation& default_instance();
  
  void Swap(PBG2CDelStudyRelation* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CDelStudyRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CDelStudyRelation& from);
  void MergeFrom(const PBG2CDelStudyRelation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CDelStudyRelation)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CDelStudyRelation* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionDevelopSkill : public ::google::protobuf::Message {
 public:
  PBC2GFactionDevelopSkill();
  virtual ~PBC2GFactionDevelopSkill();
  
  PBC2GFactionDevelopSkill(const PBC2GFactionDevelopSkill& from);
  
  inline PBC2GFactionDevelopSkill& operator=(const PBC2GFactionDevelopSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionDevelopSkill& default_instance();
  
  void Swap(PBC2GFactionDevelopSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionDevelopSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionDevelopSkill& from);
  void MergeFrom(const PBC2GFactionDevelopSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionDevelopSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionDevelopSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionDevelopSkill : public ::google::protobuf::Message {
 public:
  PBG2CFactionDevelopSkill();
  virtual ~PBG2CFactionDevelopSkill();
  
  PBG2CFactionDevelopSkill(const PBG2CFactionDevelopSkill& from);
  
  inline PBG2CFactionDevelopSkill& operator=(const PBG2CFactionDevelopSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionDevelopSkill& default_instance();
  
  void Swap(PBG2CFactionDevelopSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionDevelopSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionDevelopSkill& from);
  void MergeFrom(const PBG2CFactionDevelopSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 lefttime = 3;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLefttimeFieldNumber = 3;
  inline ::google::protobuf::uint32 lefttime() const;
  inline void set_lefttime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionDevelopSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 lefttime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionDevelopSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionSuspendDevelopSkill : public ::google::protobuf::Message {
 public:
  PBC2GFactionSuspendDevelopSkill();
  virtual ~PBC2GFactionSuspendDevelopSkill();
  
  PBC2GFactionSuspendDevelopSkill(const PBC2GFactionSuspendDevelopSkill& from);
  
  inline PBC2GFactionSuspendDevelopSkill& operator=(const PBC2GFactionSuspendDevelopSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionSuspendDevelopSkill& default_instance();
  
  void Swap(PBC2GFactionSuspendDevelopSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionSuspendDevelopSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionSuspendDevelopSkill& from);
  void MergeFrom(const PBC2GFactionSuspendDevelopSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional bool suspend = 2;
  inline bool has_suspend() const;
  inline void clear_suspend();
  static const int kSuspendFieldNumber = 2;
  inline bool suspend() const;
  inline void set_suspend(bool value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionSuspendDevelopSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_suspend();
  inline void clear_has_suspend();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  bool suspend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionSuspendDevelopSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionSuspendDevelopSkill : public ::google::protobuf::Message {
 public:
  PBG2CFactionSuspendDevelopSkill();
  virtual ~PBG2CFactionSuspendDevelopSkill();
  
  PBG2CFactionSuspendDevelopSkill(const PBG2CFactionSuspendDevelopSkill& from);
  
  inline PBG2CFactionSuspendDevelopSkill& operator=(const PBG2CFactionSuspendDevelopSkill& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionSuspendDevelopSkill& default_instance();
  
  void Swap(PBG2CFactionSuspendDevelopSkill* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionSuspendDevelopSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionSuspendDevelopSkill& from);
  void MergeFrom(const PBG2CFactionSuspendDevelopSkill& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillid = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillidFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional bool suspend = 2;
  inline bool has_suspend() const;
  inline void clear_suspend();
  static const int kSuspendFieldNumber = 2;
  inline bool suspend() const;
  inline void set_suspend(bool value);
  
  // optional uint32 lefttime = 3;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLefttimeFieldNumber = 3;
  inline ::google::protobuf::uint32 lefttime() const;
  inline void set_lefttime(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionSuspendDevelopSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_suspend();
  inline void clear_has_suspend();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skillid_;
  bool suspend_;
  ::google::protobuf::uint32 lefttime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionSuspendDevelopSkill* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionOpenStudy : public ::google::protobuf::Message {
 public:
  PBC2GFactionOpenStudy();
  virtual ~PBC2GFactionOpenStudy();
  
  PBC2GFactionOpenStudy(const PBC2GFactionOpenStudy& from);
  
  inline PBC2GFactionOpenStudy& operator=(const PBC2GFactionOpenStudy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionOpenStudy& default_instance();
  
  void Swap(PBC2GFactionOpenStudy* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionOpenStudy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionOpenStudy& from);
  void MergeFrom(const PBC2GFactionOpenStudy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 moneytype = 1;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneytypeFieldNumber = 1;
  inline ::google::protobuf::uint32 moneytype() const;
  inline void set_moneytype(::google::protobuf::uint32 value);
  
  // optional uint32 moneyvalue = 2;
  inline bool has_moneyvalue() const;
  inline void clear_moneyvalue();
  static const int kMoneyvalueFieldNumber = 2;
  inline ::google::protobuf::uint32 moneyvalue() const;
  inline void set_moneyvalue(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionOpenStudy)
 private:
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_moneyvalue();
  inline void clear_has_moneyvalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 moneytype_;
  ::google::protobuf::uint32 moneyvalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionOpenStudy* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionOpenStudy : public ::google::protobuf::Message {
 public:
  PBG2CFactionOpenStudy();
  virtual ~PBG2CFactionOpenStudy();
  
  PBG2CFactionOpenStudy(const PBG2CFactionOpenStudy& from);
  
  inline PBG2CFactionOpenStudy& operator=(const PBG2CFactionOpenStudy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionOpenStudy& default_instance();
  
  void Swap(PBG2CFactionOpenStudy* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionOpenStudy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionOpenStudy& from);
  void MergeFrom(const PBG2CFactionOpenStudy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 moneytype = 1;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneytypeFieldNumber = 1;
  inline ::google::protobuf::uint32 moneytype() const;
  inline void set_moneytype(::google::protobuf::uint32 value);
  
  // optional uint32 moneyvalue = 2;
  inline bool has_moneyvalue() const;
  inline void clear_moneyvalue();
  static const int kMoneyvalueFieldNumber = 2;
  inline ::google::protobuf::uint32 moneyvalue() const;
  inline void set_moneyvalue(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionOpenStudy)
 private:
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_moneyvalue();
  inline void clear_has_moneyvalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 moneytype_;
  ::google::protobuf::uint32 moneyvalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionOpenStudy* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GFactionMemberAttr : public ::google::protobuf::Message {
 public:
  PBW2GFactionMemberAttr();
  virtual ~PBW2GFactionMemberAttr();
  
  PBW2GFactionMemberAttr(const PBW2GFactionMemberAttr& from);
  
  inline PBW2GFactionMemberAttr& operator=(const PBW2GFactionMemberAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GFactionMemberAttr& default_instance();
  
  void Swap(PBW2GFactionMemberAttr* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GFactionMemberAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GFactionMemberAttr& from);
  void MergeFrom(const PBW2GFactionMemberAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // optional int32 doing = 2;
  inline bool has_doing() const;
  inline void clear_doing();
  static const int kDoingFieldNumber = 2;
  inline ::google::protobuf::int32 doing() const;
  inline void set_doing(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PBW2GFactionMemberAttr)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_doing();
  inline void clear_has_doing();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 doing_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GFactionMemberAttr* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionMemberAttr : public ::google::protobuf::Message {
 public:
  PBG2CFactionMemberAttr();
  virtual ~PBG2CFactionMemberAttr();
  
  PBG2CFactionMemberAttr(const PBG2CFactionMemberAttr& from);
  
  inline PBG2CFactionMemberAttr& operator=(const PBG2CFactionMemberAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionMemberAttr& default_instance();
  
  void Swap(PBG2CFactionMemberAttr* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionMemberAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionMemberAttr& from);
  void MergeFrom(const PBG2CFactionMemberAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionMemberAttr)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionMemberAttr* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionDonateMoney : public ::google::protobuf::Message {
 public:
  PBC2GFactionDonateMoney();
  virtual ~PBC2GFactionDonateMoney();
  
  PBC2GFactionDonateMoney(const PBC2GFactionDonateMoney& from);
  
  inline PBC2GFactionDonateMoney& operator=(const PBC2GFactionDonateMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionDonateMoney& default_instance();
  
  void Swap(PBC2GFactionDonateMoney* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionDonateMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionDonateMoney& from);
  void MergeFrom(const PBC2GFactionDonateMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionDonateMoney)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionDonateMoney* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionDrinkWine : public ::google::protobuf::Message {
 public:
  PBG2CFactionDrinkWine();
  virtual ~PBG2CFactionDrinkWine();
  
  PBG2CFactionDrinkWine(const PBG2CFactionDrinkWine& from);
  
  inline PBG2CFactionDrinkWine& operator=(const PBG2CFactionDrinkWine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionDrinkWine& default_instance();
  
  void Swap(PBG2CFactionDrinkWine* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionDrinkWine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionDrinkWine& from);
  void MergeFrom(const PBG2CFactionDrinkWine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionDrinkWine)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionDrinkWine* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionDrinkWine : public ::google::protobuf::Message {
 public:
  PBC2GFactionDrinkWine();
  virtual ~PBC2GFactionDrinkWine();
  
  PBC2GFactionDrinkWine(const PBC2GFactionDrinkWine& from);
  
  inline PBC2GFactionDrinkWine& operator=(const PBC2GFactionDrinkWine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionDrinkWine& default_instance();
  
  void Swap(PBC2GFactionDrinkWine* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionDrinkWine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionDrinkWine& from);
  void MergeFrom(const PBC2GFactionDrinkWine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionDrinkWine)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionDrinkWine* default_instance_;
};
// -------------------------------------------------------------------

class PBPlayerDrinkWine : public ::google::protobuf::Message {
 public:
  PBPlayerDrinkWine();
  virtual ~PBPlayerDrinkWine();
  
  PBPlayerDrinkWine(const PBPlayerDrinkWine& from);
  
  inline PBPlayerDrinkWine& operator=(const PBPlayerDrinkWine& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPlayerDrinkWine& default_instance();
  
  void Swap(PBPlayerDrinkWine* other);
  
  // implements Message ----------------------------------------------
  
  PBPlayerDrinkWine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPlayerDrinkWine& from);
  void MergeFrom(const PBPlayerDrinkWine& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 daywisdom = 1;
  inline bool has_daywisdom() const;
  inline void clear_daywisdom();
  static const int kDaywisdomFieldNumber = 1;
  inline ::google::protobuf::uint32 daywisdom() const;
  inline void set_daywisdom(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 curwisdom = 3;
  inline bool has_curwisdom() const;
  inline void clear_curwisdom();
  static const int kCurwisdomFieldNumber = 3;
  inline ::google::protobuf::uint32 curwisdom() const;
  inline void set_curwisdom(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBPlayerDrinkWine)
 private:
  inline void set_has_daywisdom();
  inline void clear_has_daywisdom();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_curwisdom();
  inline void clear_has_curwisdom();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 daywisdom_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 curwisdom_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBPlayerDrinkWine* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionDonateMoney : public ::google::protobuf::Message {
 public:
  PBG2CFactionDonateMoney();
  virtual ~PBG2CFactionDonateMoney();
  
  PBG2CFactionDonateMoney(const PBG2CFactionDonateMoney& from);
  
  inline PBG2CFactionDonateMoney& operator=(const PBG2CFactionDonateMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionDonateMoney& default_instance();
  
  void Swap(PBG2CFactionDonateMoney* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionDonateMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionDonateMoney& from);
  void MergeFrom(const PBG2CFactionDonateMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionDonateMoney)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionDonateMoney* default_instance_;
};
// -------------------------------------------------------------------

class PBGAWFactionDonateMoney : public ::google::protobuf::Message {
 public:
  PBGAWFactionDonateMoney();
  virtual ~PBGAWFactionDonateMoney();
  
  PBGAWFactionDonateMoney(const PBGAWFactionDonateMoney& from);
  
  inline PBGAWFactionDonateMoney& operator=(const PBGAWFactionDonateMoney& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGAWFactionDonateMoney& default_instance();
  
  void Swap(PBGAWFactionDonateMoney* other);
  
  // implements Message ----------------------------------------------
  
  PBGAWFactionDonateMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGAWFactionDonateMoney& from);
  void MergeFrom(const PBGAWFactionDonateMoney& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional .PBMoneyConsume money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline const ::PBMoneyConsume& money() const;
  inline ::PBMoneyConsume* mutable_money();
  inline ::PBMoneyConsume* release_money();
  
  // @@protoc_insertion_point(class_scope:PBGAWFactionDonateMoney)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_money();
  inline void clear_has_money();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBMoneyConsume* money_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBGAWFactionDonateMoney* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionDonateMoneyBroad : public ::google::protobuf::Message {
 public:
  PBG2CFactionDonateMoneyBroad();
  virtual ~PBG2CFactionDonateMoneyBroad();
  
  PBG2CFactionDonateMoneyBroad(const PBG2CFactionDonateMoneyBroad& from);
  
  inline PBG2CFactionDonateMoneyBroad& operator=(const PBG2CFactionDonateMoneyBroad& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionDonateMoneyBroad& default_instance();
  
  void Swap(PBG2CFactionDonateMoneyBroad* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionDonateMoneyBroad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionDonateMoneyBroad& from);
  void MergeFrom(const PBG2CFactionDonateMoneyBroad& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionMember member = 1;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::PBFactionMember& member() const;
  inline ::PBFactionMember* mutable_member();
  inline ::PBFactionMember* release_member();
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionDonateMoneyBroad)
 private:
  inline void set_has_member();
  inline void clear_has_member();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionMember* member_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionDonateMoneyBroad* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionCompleteTask : public ::google::protobuf::Message {
 public:
  PBC2GFactionCompleteTask();
  virtual ~PBC2GFactionCompleteTask();
  
  PBC2GFactionCompleteTask(const PBC2GFactionCompleteTask& from);
  
  inline PBC2GFactionCompleteTask& operator=(const PBC2GFactionCompleteTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionCompleteTask& default_instance();
  
  void Swap(PBC2GFactionCompleteTask* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionCompleteTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionCompleteTask& from);
  void MergeFrom(const PBC2GFactionCompleteTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionCompleteTask)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 taskid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionCompleteTask* default_instance_;
};
// -------------------------------------------------------------------

class PBG2CFactionCompleteTask : public ::google::protobuf::Message {
 public:
  PBG2CFactionCompleteTask();
  virtual ~PBG2CFactionCompleteTask();
  
  PBG2CFactionCompleteTask(const PBG2CFactionCompleteTask& from);
  
  inline PBG2CFactionCompleteTask& operator=(const PBG2CFactionCompleteTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBG2CFactionCompleteTask& default_instance();
  
  void Swap(PBG2CFactionCompleteTask* other);
  
  // implements Message ----------------------------------------------
  
  PBG2CFactionCompleteTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBG2CFactionCompleteTask& from);
  void MergeFrom(const PBG2CFactionCompleteTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 completetaskid = 1;
  inline bool has_completetaskid() const;
  inline void clear_completetaskid();
  static const int kCompletetaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 completetaskid() const;
  inline void set_completetaskid(::google::protobuf::uint32 value);
  
  // optional .PBPlayerFactionTask newtask = 2;
  inline bool has_newtask() const;
  inline void clear_newtask();
  static const int kNewtaskFieldNumber = 2;
  inline const ::PBPlayerFactionTask& newtask() const;
  inline ::PBPlayerFactionTask* mutable_newtask();
  inline ::PBPlayerFactionTask* release_newtask();
  
  // @@protoc_insertion_point(class_scope:PBG2CFactionCompleteTask)
 private:
  inline void set_has_completetaskid();
  inline void clear_has_completetaskid();
  inline void set_has_newtask();
  inline void clear_has_newtask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBPlayerFactionTask* newtask_;
  ::google::protobuf::uint32 completetaskid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBG2CFactionCompleteTask* default_instance_;
};
// -------------------------------------------------------------------

class PBGAWFactionCompleteTask : public ::google::protobuf::Message {
 public:
  PBGAWFactionCompleteTask();
  virtual ~PBGAWFactionCompleteTask();
  
  PBGAWFactionCompleteTask(const PBGAWFactionCompleteTask& from);
  
  inline PBGAWFactionCompleteTask& operator=(const PBGAWFactionCompleteTask& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGAWFactionCompleteTask& default_instance();
  
  void Swap(PBGAWFactionCompleteTask* other);
  
  // implements Message ----------------------------------------------
  
  PBGAWFactionCompleteTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGAWFactionCompleteTask& from);
  void MergeFrom(const PBGAWFactionCompleteTask& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 tackindex = 2;
  inline bool has_tackindex() const;
  inline void clear_tackindex();
  static const int kTackindexFieldNumber = 2;
  inline ::google::protobuf::uint32 tackindex() const;
  inline void set_tackindex(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBGAWFactionCompleteTask)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_tackindex();
  inline void clear_has_tackindex();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 tackindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBGAWFactionCompleteTask* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionAllotMoneyAsk : public ::google::protobuf::Message {
 public:
  PBC2GFactionAllotMoneyAsk();
  virtual ~PBC2GFactionAllotMoneyAsk();
  
  PBC2GFactionAllotMoneyAsk(const PBC2GFactionAllotMoneyAsk& from);
  
  inline PBC2GFactionAllotMoneyAsk& operator=(const PBC2GFactionAllotMoneyAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionAllotMoneyAsk& default_instance();
  
  void Swap(PBC2GFactionAllotMoneyAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionAllotMoneyAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionAllotMoneyAsk& from);
  void MergeFrom(const PBC2GFactionAllotMoneyAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // repeated uint32 memberid = 2;
  inline int memberid_size() const;
  inline void clear_memberid();
  static const int kMemberidFieldNumber = 2;
  inline ::google::protobuf::uint32 memberid(int index) const;
  inline void set_memberid(int index, ::google::protobuf::uint32 value);
  inline void add_memberid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      memberid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_memberid();
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionAllotMoneyAsk)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > memberid_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionAllotMoneyAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBC2GFactionAllotItemAsk : public ::google::protobuf::Message {
 public:
  PBC2GFactionAllotItemAsk();
  virtual ~PBC2GFactionAllotItemAsk();
  
  PBC2GFactionAllotItemAsk(const PBC2GFactionAllotItemAsk& from);
  
  inline PBC2GFactionAllotItemAsk& operator=(const PBC2GFactionAllotItemAsk& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBC2GFactionAllotItemAsk& default_instance();
  
  void Swap(PBC2GFactionAllotItemAsk* other);
  
  // implements Message ----------------------------------------------
  
  PBC2GFactionAllotItemAsk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBC2GFactionAllotItemAsk& from);
  void MergeFrom(const PBC2GFactionAllotItemAsk& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 itemsn = 1;
  inline bool has_itemsn() const;
  inline void clear_itemsn();
  static const int kItemsnFieldNumber = 1;
  inline ::google::protobuf::uint64 itemsn() const;
  inline void set_itemsn(::google::protobuf::uint64 value);
  
  // optional uint32 itemcount = 2;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemcountFieldNumber = 2;
  inline ::google::protobuf::uint32 itemcount() const;
  inline void set_itemcount(::google::protobuf::uint32 value);
  
  // repeated uint32 memberid = 3;
  inline int memberid_size() const;
  inline void clear_memberid();
  static const int kMemberidFieldNumber = 3;
  inline ::google::protobuf::uint32 memberid(int index) const;
  inline void set_memberid(int index, ::google::protobuf::uint32 value);
  inline void add_memberid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      memberid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_memberid();
  
  // @@protoc_insertion_point(class_scope:PBC2GFactionAllotItemAsk)
 private:
  inline void set_has_itemsn();
  inline void clear_has_itemsn();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 itemsn_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > memberid_;
  ::google::protobuf::uint32 itemcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBC2GFactionAllotItemAsk* default_instance_;
};
// -------------------------------------------------------------------

class PBFactionChallenger : public ::google::protobuf::Message {
 public:
  PBFactionChallenger();
  virtual ~PBFactionChallenger();
  
  PBFactionChallenger(const PBFactionChallenger& from);
  
  inline PBFactionChallenger& operator=(const PBFactionChallenger& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBFactionChallenger& default_instance();
  
  void Swap(PBFactionChallenger* other);
  
  // implements Message ----------------------------------------------
  
  PBFactionChallenger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBFactionChallenger& from);
  void MergeFrom(const PBFactionChallenger& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionBase factionbase = 1;
  inline bool has_factionbase() const;
  inline void clear_factionbase();
  static const int kFactionbaseFieldNumber = 1;
  inline const ::PBFactionBase& factionbase() const;
  inline ::PBFactionBase* mutable_factionbase();
  inline ::PBFactionBase* release_factionbase();
  
  // optional uint32 applytime = 2;
  inline bool has_applytime() const;
  inline void clear_applytime();
  static const int kApplytimeFieldNumber = 2;
  inline ::google::protobuf::uint32 applytime() const;
  inline void set_applytime(::google::protobuf::uint32 value);
  
  // optional bool ischallenger = 3;
  inline bool has_ischallenger() const;
  inline void clear_ischallenger();
  static const int kIschallengerFieldNumber = 3;
  inline bool ischallenger() const;
  inline void set_ischallenger(bool value);
  
  // @@protoc_insertion_point(class_scope:PBFactionChallenger)
 private:
  inline void set_has_factionbase();
  inline void clear_has_factionbase();
  inline void set_has_applytime();
  inline void clear_has_applytime();
  inline void set_has_ischallenger();
  inline void clear_has_ischallenger();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionBase* factionbase_;
  ::google::protobuf::uint32 applytime_;
  bool ischallenger_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBFactionChallenger* default_instance_;
};
// -------------------------------------------------------------------

class PBManorCpymapInfo : public ::google::protobuf::Message {
 public:
  PBManorCpymapInfo();
  virtual ~PBManorCpymapInfo();
  
  PBManorCpymapInfo(const PBManorCpymapInfo& from);
  
  inline PBManorCpymapInfo& operator=(const PBManorCpymapInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBManorCpymapInfo& default_instance();
  
  void Swap(PBManorCpymapInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBManorCpymapInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBManorCpymapInfo& from);
  void MergeFrom(const PBManorCpymapInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneid = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional uint64 dynid = 2;
  inline bool has_dynid() const;
  inline void clear_dynid();
  static const int kDynidFieldNumber = 2;
  inline ::google::protobuf::uint64 dynid() const;
  inline void set_dynid(::google::protobuf::uint64 value);
  
  // optional uint32 cellid = 3;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 3;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);
  
  // optional uint32 regionid = 4;
  inline bool has_regionid() const;
  inline void clear_regionid();
  static const int kRegionidFieldNumber = 4;
  inline ::google::protobuf::uint32 regionid() const;
  inline void set_regionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBManorCpymapInfo)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_dynid();
  inline void clear_has_dynid();
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_regionid();
  inline void clear_has_regionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 dynid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint32 regionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBManorCpymapInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBManorInfo : public ::google::protobuf::Message {
 public:
  PBManorInfo();
  virtual ~PBManorInfo();
  
  PBManorInfo(const PBManorInfo& from);
  
  inline PBManorInfo& operator=(const PBManorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBManorInfo& default_instance();
  
  void Swap(PBManorInfo* other);
  
  // implements Message ----------------------------------------------
  
  PBManorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBManorInfo& from);
  void MergeFrom(const PBManorInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 manorid = 1;
  inline bool has_manorid() const;
  inline void clear_manorid();
  static const int kManoridFieldNumber = 1;
  inline ::google::protobuf::uint32 manorid() const;
  inline void set_manorid(::google::protobuf::uint32 value);
  
  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // optional .PBFactionBase owner = 3;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 3;
  inline const ::PBFactionBase& owner() const;
  inline ::PBFactionBase* mutable_owner();
  inline ::PBFactionBase* release_owner();
  
  // repeated .PBFactionChallenger challengers = 4;
  inline int challengers_size() const;
  inline void clear_challengers();
  static const int kChallengersFieldNumber = 4;
  inline const ::PBFactionChallenger& challengers(int index) const;
  inline ::PBFactionChallenger* mutable_challengers(int index);
  inline ::PBFactionChallenger* add_challengers();
  inline const ::google::protobuf::RepeatedPtrField< ::PBFactionChallenger >&
      challengers() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBFactionChallenger >*
      mutable_challengers();
  
  // repeated .PBManorCpymapInfo battlefields = 5;
  inline int battlefields_size() const;
  inline void clear_battlefields();
  static const int kBattlefieldsFieldNumber = 5;
  inline const ::PBManorCpymapInfo& battlefields(int index) const;
  inline ::PBManorCpymapInfo* mutable_battlefields(int index);
  inline ::PBManorCpymapInfo* add_battlefields();
  inline const ::google::protobuf::RepeatedPtrField< ::PBManorCpymapInfo >&
      battlefields() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBManorCpymapInfo >*
      mutable_battlefields();
  
  // optional .PBManorCpymapInfo defenderlobby = 6;
  inline bool has_defenderlobby() const;
  inline void clear_defenderlobby();
  static const int kDefenderlobbyFieldNumber = 6;
  inline const ::PBManorCpymapInfo& defenderlobby() const;
  inline ::PBManorCpymapInfo* mutable_defenderlobby();
  inline ::PBManorCpymapInfo* release_defenderlobby();
  
  // optional .PBManorCpymapInfo challengerlobby = 7;
  inline bool has_challengerlobby() const;
  inline void clear_challengerlobby();
  static const int kChallengerlobbyFieldNumber = 7;
  inline const ::PBManorCpymapInfo& challengerlobby() const;
  inline ::PBManorCpymapInfo* mutable_challengerlobby();
  inline ::PBManorCpymapInfo* release_challengerlobby();
  
  // repeated uint32 eliteplayers = 8;
  inline int eliteplayers_size() const;
  inline void clear_eliteplayers();
  static const int kEliteplayersFieldNumber = 8;
  inline ::google::protobuf::uint32 eliteplayers(int index) const;
  inline void set_eliteplayers(int index, ::google::protobuf::uint32 value);
  inline void add_eliteplayers(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      eliteplayers() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_eliteplayers();
  
  // optional uint64 cancleapplycd = 9;
  inline bool has_cancleapplycd() const;
  inline void clear_cancleapplycd();
  static const int kCancleapplycdFieldNumber = 9;
  inline ::google::protobuf::uint64 cancleapplycd() const;
  inline void set_cancleapplycd(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:PBManorInfo)
 private:
  inline void set_has_manorid();
  inline void clear_has_manorid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_defenderlobby();
  inline void clear_has_defenderlobby();
  inline void set_has_challengerlobby();
  inline void clear_has_challengerlobby();
  inline void set_has_cancleapplycd();
  inline void clear_has_cancleapplycd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manorid_;
  ::google::protobuf::uint32 status_;
  ::PBFactionBase* owner_;
  ::google::protobuf::RepeatedPtrField< ::PBFactionChallenger > challengers_;
  ::google::protobuf::RepeatedPtrField< ::PBManorCpymapInfo > battlefields_;
  ::PBManorCpymapInfo* defenderlobby_;
  ::PBManorCpymapInfo* challengerlobby_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > eliteplayers_;
  ::google::protobuf::uint64 cancleapplycd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBManorInfo* default_instance_;
};
// -------------------------------------------------------------------

class PBAllManor : public ::google::protobuf::Message {
 public:
  PBAllManor();
  virtual ~PBAllManor();
  
  PBAllManor(const PBAllManor& from);
  
  inline PBAllManor& operator=(const PBAllManor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBAllManor& default_instance();
  
  void Swap(PBAllManor* other);
  
  // implements Message ----------------------------------------------
  
  PBAllManor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBAllManor& from);
  void MergeFrom(const PBAllManor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PBManorInfo manors = 1;
  inline int manors_size() const;
  inline void clear_manors();
  static const int kManorsFieldNumber = 1;
  inline const ::PBManorInfo& manors(int index) const;
  inline ::PBManorInfo* mutable_manors(int index);
  inline ::PBManorInfo* add_manors();
  inline const ::google::protobuf::RepeatedPtrField< ::PBManorInfo >&
      manors() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBManorInfo >*
      mutable_manors();
  
  // @@protoc_insertion_point(class_scope:PBAllManor)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PBManorInfo > manors_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBAllManor* default_instance_;
};
// -------------------------------------------------------------------

class PBManorBattlefieldPlayerScore : public ::google::protobuf::Message {
 public:
  PBManorBattlefieldPlayerScore();
  virtual ~PBManorBattlefieldPlayerScore();
  
  PBManorBattlefieldPlayerScore(const PBManorBattlefieldPlayerScore& from);
  
  inline PBManorBattlefieldPlayerScore& operator=(const PBManorBattlefieldPlayerScore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBManorBattlefieldPlayerScore& default_instance();
  
  void Swap(PBManorBattlefieldPlayerScore* other);
  
  // implements Message ----------------------------------------------
  
  PBManorBattlefieldPlayerScore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBManorBattlefieldPlayerScore& from);
  void MergeFrom(const PBManorBattlefieldPlayerScore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 job = 1;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 1;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // optional uint32 kill = 4;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 4;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);
  
  // optional uint32 dead = 5;
  inline bool has_dead() const;
  inline void clear_dead();
  static const int kDeadFieldNumber = 5;
  inline ::google::protobuf::uint32 dead() const;
  inline void set_dead(::google::protobuf::uint32 value);
  
  // optional bool ischallenger = 6;
  inline bool has_ischallenger() const;
  inline void clear_ischallenger();
  static const int kIschallengerFieldNumber = 6;
  inline bool ischallenger() const;
  inline void set_ischallenger(bool value);
  
  // optional uint32 playerid = 7;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 7;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint64 takehurt = 8;
  inline bool has_takehurt() const;
  inline void clear_takehurt();
  static const int kTakehurtFieldNumber = 8;
  inline ::google::protobuf::uint64 takehurt() const;
  inline void set_takehurt(::google::protobuf::uint64 value);
  
  // optional uint32 assistkill = 9;
  inline bool has_assistkill() const;
  inline void clear_assistkill();
  static const int kAssistkillFieldNumber = 9;
  inline ::google::protobuf::uint32 assistkill() const;
  inline void set_assistkill(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBManorBattlefieldPlayerScore)
 private:
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_kill();
  inline void clear_has_kill();
  inline void set_has_dead();
  inline void clear_has_dead();
  inline void set_has_ischallenger();
  inline void clear_has_ischallenger();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_takehurt();
  inline void clear_has_takehurt();
  inline void set_has_assistkill();
  inline void clear_has_assistkill();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kill_;
  ::google::protobuf::uint32 dead_;
  bool ischallenger_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint64 takehurt_;
  ::google::protobuf::uint32 assistkill_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBManorBattlefieldPlayerScore* default_instance_;
};
// -------------------------------------------------------------------

class PBManorBattleFieldReport : public ::google::protobuf::Message {
 public:
  PBManorBattleFieldReport();
  virtual ~PBManorBattleFieldReport();
  
  PBManorBattleFieldReport(const PBManorBattleFieldReport& from);
  
  inline PBManorBattleFieldReport& operator=(const PBManorBattleFieldReport& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBManorBattleFieldReport& default_instance();
  
  void Swap(PBManorBattleFieldReport* other);
  
  // implements Message ----------------------------------------------
  
  PBManorBattleFieldReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBManorBattleFieldReport& from);
  void MergeFrom(const PBManorBattleFieldReport& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 factionid = 1;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 1;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // repeated .PBManorBattlefieldPlayerScore playerscores = 3;
  inline int playerscores_size() const;
  inline void clear_playerscores();
  static const int kPlayerscoresFieldNumber = 3;
  inline const ::PBManorBattlefieldPlayerScore& playerscores(int index) const;
  inline ::PBManorBattlefieldPlayerScore* mutable_playerscores(int index);
  inline ::PBManorBattlefieldPlayerScore* add_playerscores();
  inline const ::google::protobuf::RepeatedPtrField< ::PBManorBattlefieldPlayerScore >&
      playerscores() const;
  inline ::google::protobuf::RepeatedPtrField< ::PBManorBattlefieldPlayerScore >*
      mutable_playerscores();
  
  // optional uint32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBManorBattleFieldReport)
 private:
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_score();
  inline void clear_has_score();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::RepeatedPtrField< ::PBManorBattlefieldPlayerScore > playerscores_;
  ::google::protobuf::uint32 score_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBManorBattleFieldReport* default_instance_;
};
// -------------------------------------------------------------------

class PBW2GFactionSyn : public ::google::protobuf::Message {
 public:
  PBW2GFactionSyn();
  virtual ~PBW2GFactionSyn();
  
  PBW2GFactionSyn(const PBW2GFactionSyn& from);
  
  inline PBW2GFactionSyn& operator=(const PBW2GFactionSyn& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBW2GFactionSyn& default_instance();
  
  void Swap(PBW2GFactionSyn* other);
  
  // implements Message ----------------------------------------------
  
  PBW2GFactionSyn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBW2GFactionSyn& from);
  void MergeFrom(const PBW2GFactionSyn& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 factionid = 2;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 2;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // optional uint32 playerid = 3;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);
  
  // optional uint32 leader = 4;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 4;
  inline ::google::protobuf::uint32 leader() const;
  inline void set_leader(::google::protobuf::uint32 value);
  
  // optional uint32 union = 5;
  inline bool has_union_() const;
  inline void clear_union_();
  static const int kUnionFieldNumber = 5;
  inline ::google::protobuf::uint32 union_() const;
  inline void set_union_(::google::protobuf::uint32 value);
  
  // optional uint32 corps = 6;
  inline bool has_corps() const;
  inline void clear_corps();
  static const int kCorpsFieldNumber = 6;
  inline ::google::protobuf::uint32 corps() const;
  inline void set_corps(::google::protobuf::uint32 value);
  
  // optional uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 job = 8;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 8;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);
  
  // optional string unionname = 9;
  inline bool has_unionname() const;
  inline void clear_unionname();
  static const int kUnionnameFieldNumber = 9;
  inline const ::std::string& unionname() const;
  inline void set_unionname(const ::std::string& value);
  inline void set_unionname(const char* value);
  inline void set_unionname(const char* value, size_t size);
  inline ::std::string* mutable_unionname();
  inline ::std::string* release_unionname();
  
  // optional string banner = 10;
  inline bool has_banner() const;
  inline void clear_banner();
  static const int kBannerFieldNumber = 10;
  inline const ::std::string& banner() const;
  inline void set_banner(const ::std::string& value);
  inline void set_banner(const char* value);
  inline void set_banner(const char* value, size_t size);
  inline ::std::string* mutable_banner();
  inline ::std::string* release_banner();
  
  // @@protoc_insertion_point(class_scope:PBW2GFactionSyn)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_factionid();
  inline void clear_has_factionid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_union_();
  inline void clear_has_union_();
  inline void set_has_corps();
  inline void clear_has_corps();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_unionname();
  inline void clear_has_unionname();
  inline void set_has_banner();
  inline void clear_has_banner();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::uint32 factionid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 leader_;
  ::google::protobuf::uint32 union__;
  ::google::protobuf::uint32 corps_;
  ::google::protobuf::uint32 level_;
  ::std::string* unionname_;
  ::std::string* banner_;
  ::google::protobuf::uint32 job_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBW2GFactionSyn* default_instance_;
};
// -------------------------------------------------------------------

class PBGL2WFactionSynPlayer : public ::google::protobuf::Message {
 public:
  PBGL2WFactionSynPlayer();
  virtual ~PBGL2WFactionSynPlayer();
  
  PBGL2WFactionSynPlayer(const PBGL2WFactionSynPlayer& from);
  
  inline PBGL2WFactionSynPlayer& operator=(const PBGL2WFactionSynPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBGL2WFactionSynPlayer& default_instance();
  
  void Swap(PBGL2WFactionSynPlayer* other);
  
  // implements Message ----------------------------------------------
  
  PBGL2WFactionSynPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBGL2WFactionSynPlayer& from);
  void MergeFrom(const PBGL2WFactionSynPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PBFactionMemberBase base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::PBFactionMemberBase& base() const;
  inline ::PBFactionMemberBase* mutable_base();
  inline ::PBFactionMemberBase* release_base();
  
  // optional uint32 factionid = 2;
  inline bool has_factionid() const;
  inline void clear_factionid();
  static const int kFactionidFieldNumber = 2;
  inline ::google::protobuf::uint32 factionid() const;
  inline void set_factionid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBGL2WFactionSynPlayer)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_factionid();
  inline void clear_has_factionid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PBFactionMemberBase* base_;
  ::google::protobuf::uint32 factionid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBGL2WFactionSynPlayer* default_instance_;
};
// -------------------------------------------------------------------

class PBCorpsOfflineChangeJob : public ::google::protobuf::Message {
 public:
  PBCorpsOfflineChangeJob();
  virtual ~PBCorpsOfflineChangeJob();
  
  PBCorpsOfflineChangeJob(const PBCorpsOfflineChangeJob& from);
  
  inline PBCorpsOfflineChangeJob& operator=(const PBCorpsOfflineChangeJob& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBCorpsOfflineChangeJob& default_instance();
  
  void Swap(PBCorpsOfflineChangeJob* other);
  
  // implements Message ----------------------------------------------
  
  PBCorpsOfflineChangeJob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBCorpsOfflineChangeJob& from);
  void MergeFrom(const PBCorpsOfflineChangeJob& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 deljob = 1;
  inline bool has_deljob() const;
  inline void clear_deljob();
  static const int kDeljobFieldNumber = 1;
  inline ::google::protobuf::uint32 deljob() const;
  inline void set_deljob(::google::protobuf::uint32 value);
  
  // optional uint32 addjob = 2;
  inline bool has_addjob() const;
  inline void clear_addjob();
  static const int kAddjobFieldNumber = 2;
  inline ::google::protobuf::uint32 addjob() const;
  inline void set_addjob(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PBCorpsOfflineChangeJob)
 private:
  inline void set_has_deljob();
  inline void clear_has_deljob();
  inline void set_has_addjob();
  inline void clear_has_addjob();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 deljob_;
  ::google::protobuf::uint32 addjob_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Faction_2eproto();
  friend void protobuf_AssignDesc_Faction_2eproto();
  friend void protobuf_ShutdownFile_Faction_2eproto();
  
  void InitAsDefaultInstance();
  static PBCorpsOfflineChangeJob* default_instance_;
};
// ===================================================================


// ===================================================================

// PBFactionBase

// optional string name = 1;
inline bool PBFactionBase::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionBase::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBFactionBase::name() const {
  return *name_;
}
inline void PBFactionBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBFactionBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBFactionBase::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBFactionBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBFactionBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 factionid = 2;
inline bool PBFactionBase::has_factionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionBase::set_has_factionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionBase::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionBase::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBFactionBase::factionid() const {
  return factionid_;
}
inline void PBFactionBase::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 leader = 3;
inline bool PBFactionBase::has_leader() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionBase::set_has_leader() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionBase::clear_has_leader() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionBase::clear_leader() {
  leader_ = 0u;
  clear_has_leader();
}
inline ::google::protobuf::uint32 PBFactionBase::leader() const {
  return leader_;
}
inline void PBFactionBase::set_leader(::google::protobuf::uint32 value) {
  set_has_leader();
  leader_ = value;
}

// optional uint32 worldid = 4;
inline bool PBFactionBase::has_worldid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionBase::set_has_worldid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionBase::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionBase::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 PBFactionBase::worldid() const {
  return worldid_;
}
inline void PBFactionBase::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional uint32 level = 5;
inline bool PBFactionBase::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionBase::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBFactionBase::level() const {
  return level_;
}
inline void PBFactionBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 union = 6;
inline bool PBFactionBase::has_union_() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBFactionBase::set_has_union_() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBFactionBase::clear_has_union_() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBFactionBase::clear_union_() {
  union__ = 0u;
  clear_has_union_();
}
inline ::google::protobuf::uint32 PBFactionBase::union_() const {
  return union__;
}
inline void PBFactionBase::set_union_(::google::protobuf::uint32 value) {
  set_has_union_();
  union__ = value;
}

// optional string banner = 7;
inline bool PBFactionBase::has_banner() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBFactionBase::set_has_banner() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBFactionBase::clear_has_banner() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBFactionBase::clear_banner() {
  if (banner_ != &::google::protobuf::internal::kEmptyString) {
    banner_->clear();
  }
  clear_has_banner();
}
inline const ::std::string& PBFactionBase::banner() const {
  return *banner_;
}
inline void PBFactionBase::set_banner(const ::std::string& value) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(value);
}
inline void PBFactionBase::set_banner(const char* value) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(value);
}
inline void PBFactionBase::set_banner(const char* value, size_t size) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBFactionBase::mutable_banner() {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  return banner_;
}
inline ::std::string* PBFactionBase::release_banner() {
  clear_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = banner_;
    banner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 corps = 8;
inline bool PBFactionBase::has_corps() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBFactionBase::set_has_corps() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBFactionBase::clear_has_corps() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBFactionBase::clear_corps() {
  corps_ = 0u;
  clear_has_corps();
}
inline ::google::protobuf::uint32 PBFactionBase::corps() const {
  return corps_;
}
inline void PBFactionBase::set_corps(::google::protobuf::uint32 value) {
  set_has_corps();
  corps_ = value;
}

// -------------------------------------------------------------------

// PBFactionDBMember

// optional uint32 playerid = 1;
inline bool PBFactionDBMember::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionDBMember::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionDBMember::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionDBMember::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBFactionDBMember::playerid() const {
  return playerid_;
}
inline void PBFactionDBMember::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 contribution = 2;
inline bool PBFactionDBMember::has_contribution() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionDBMember::set_has_contribution() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionDBMember::clear_has_contribution() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionDBMember::clear_contribution() {
  contribution_ = 0u;
  clear_has_contribution();
}
inline ::google::protobuf::uint32 PBFactionDBMember::contribution() const {
  return contribution_;
}
inline void PBFactionDBMember::set_contribution(::google::protobuf::uint32 value) {
  set_has_contribution();
  contribution_ = value;
}

// optional uint32 experience = 3;
inline bool PBFactionDBMember::has_experience() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionDBMember::set_has_experience() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionDBMember::clear_has_experience() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionDBMember::clear_experience() {
  experience_ = 0u;
  clear_has_experience();
}
inline ::google::protobuf::uint32 PBFactionDBMember::experience() const {
  return experience_;
}
inline void PBFactionDBMember::set_experience(::google::protobuf::uint32 value) {
  set_has_experience();
  experience_ = value;
}

// optional uint32 jointime = 4;
inline bool PBFactionDBMember::has_jointime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionDBMember::set_has_jointime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionDBMember::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionDBMember::clear_jointime() {
  jointime_ = 0u;
  clear_has_jointime();
}
inline ::google::protobuf::uint32 PBFactionDBMember::jointime() const {
  return jointime_;
}
inline void PBFactionDBMember::set_jointime(::google::protobuf::uint32 value) {
  set_has_jointime();
  jointime_ = value;
}

// optional uint32 job = 5;
inline bool PBFactionDBMember::has_job() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionDBMember::set_has_job() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionDBMember::clear_has_job() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionDBMember::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBFactionDBMember::job() const {
  return job_;
}
inline void PBFactionDBMember::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// repeated uint32 title = 6;
inline int PBFactionDBMember::title_size() const {
  return title_.size();
}
inline void PBFactionDBMember::clear_title() {
  title_.Clear();
}
inline ::google::protobuf::uint32 PBFactionDBMember::title(int index) const {
  return title_.Get(index);
}
inline void PBFactionDBMember::set_title(int index, ::google::protobuf::uint32 value) {
  title_.Set(index, value);
}
inline void PBFactionDBMember::add_title(::google::protobuf::uint32 value) {
  title_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFactionDBMember::title() const {
  return title_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFactionDBMember::mutable_title() {
  return &title_;
}

// optional uint32 lastofflinetime = 7;
inline bool PBFactionDBMember::has_lastofflinetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBFactionDBMember::set_has_lastofflinetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBFactionDBMember::clear_has_lastofflinetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBFactionDBMember::clear_lastofflinetime() {
  lastofflinetime_ = 0u;
  clear_has_lastofflinetime();
}
inline ::google::protobuf::uint32 PBFactionDBMember::lastofflinetime() const {
  return lastofflinetime_;
}
inline void PBFactionDBMember::set_lastofflinetime(::google::protobuf::uint32 value) {
  set_has_lastofflinetime();
  lastofflinetime_ = value;
}

// optional uint32 fobitcount = 8;
inline bool PBFactionDBMember::has_fobitcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBFactionDBMember::set_has_fobitcount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBFactionDBMember::clear_has_fobitcount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBFactionDBMember::clear_fobitcount() {
  fobitcount_ = 0u;
  clear_has_fobitcount();
}
inline ::google::protobuf::uint32 PBFactionDBMember::fobitcount() const {
  return fobitcount_;
}
inline void PBFactionDBMember::set_fobitcount(::google::protobuf::uint32 value) {
  set_has_fobitcount();
  fobitcount_ = value;
}

// optional uint32 fobittime = 9;
inline bool PBFactionDBMember::has_fobittime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBFactionDBMember::set_has_fobittime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBFactionDBMember::clear_has_fobittime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBFactionDBMember::clear_fobittime() {
  fobittime_ = 0u;
  clear_has_fobittime();
}
inline ::google::protobuf::uint32 PBFactionDBMember::fobittime() const {
  return fobittime_;
}
inline void PBFactionDBMember::set_fobittime(::google::protobuf::uint32 value) {
  set_has_fobittime();
  fobittime_ = value;
}

// -------------------------------------------------------------------

// PBFactionMemberBase

// optional uint32 playerid = 1;
inline bool PBFactionMemberBase::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionMemberBase::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionMemberBase::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionMemberBase::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBFactionMemberBase::playerid() const {
  return playerid_;
}
inline void PBFactionMemberBase::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string playername = 2;
inline bool PBFactionMemberBase::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionMemberBase::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionMemberBase::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionMemberBase::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PBFactionMemberBase::playername() const {
  return *playername_;
}
inline void PBFactionMemberBase::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBFactionMemberBase::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBFactionMemberBase::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBFactionMemberBase::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PBFactionMemberBase::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 level = 3;
inline bool PBFactionMemberBase::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionMemberBase::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionMemberBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionMemberBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBFactionMemberBase::level() const {
  return level_;
}
inline void PBFactionMemberBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 job = 4;
inline bool PBFactionMemberBase::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionMemberBase::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionMemberBase::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionMemberBase::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBFactionMemberBase::job() const {
  return job_;
}
inline void PBFactionMemberBase::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// optional uint32 identity = 5;
inline bool PBFactionMemberBase::has_identity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionMemberBase::set_has_identity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionMemberBase::clear_has_identity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionMemberBase::clear_identity() {
  identity_ = 0u;
  clear_has_identity();
}
inline ::google::protobuf::uint32 PBFactionMemberBase::identity() const {
  return identity_;
}
inline void PBFactionMemberBase::set_identity(::google::protobuf::uint32 value) {
  set_has_identity();
  identity_ = value;
}

// optional uint32 force = 6;
inline bool PBFactionMemberBase::has_force() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBFactionMemberBase::set_has_force() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBFactionMemberBase::clear_has_force() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBFactionMemberBase::clear_force() {
  force_ = 0u;
  clear_has_force();
}
inline ::google::protobuf::uint32 PBFactionMemberBase::force() const {
  return force_;
}
inline void PBFactionMemberBase::set_force(::google::protobuf::uint32 value) {
  set_has_force();
  force_ = value;
}

// -------------------------------------------------------------------

// PBFactionApplyData

// optional .PBFactionMemberBase base = 1;
inline bool PBFactionApplyData::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionApplyData::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionApplyData::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionApplyData::clear_base() {
  if (base_ != NULL) base_->::PBFactionMemberBase::Clear();
  clear_has_base();
}
inline const ::PBFactionMemberBase& PBFactionApplyData::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::PBFactionMemberBase* PBFactionApplyData::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::PBFactionMemberBase;
  return base_;
}
inline ::PBFactionMemberBase* PBFactionApplyData::release_base() {
  clear_has_base();
  ::PBFactionMemberBase* temp = base_;
  base_ = NULL;
  return temp;
}

// optional uint32 stamp = 2;
inline bool PBFactionApplyData::has_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionApplyData::set_has_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionApplyData::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionApplyData::clear_stamp() {
  stamp_ = 0u;
  clear_has_stamp();
}
inline ::google::protobuf::uint32 PBFactionApplyData::stamp() const {
  return stamp_;
}
inline void PBFactionApplyData::set_stamp(::google::protobuf::uint32 value) {
  set_has_stamp();
  stamp_ = value;
}

// -------------------------------------------------------------------

// PBFactionSkill

// optional uint32 skillid = 1;
inline bool PBFactionSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBFactionSkill::skillid() const {
  return skillid_;
}
inline void PBFactionSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 level = 2;
inline bool PBFactionSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBFactionSkill::level() const {
  return level_;
}
inline void PBFactionSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 state = 3;
inline bool PBFactionSkill::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionSkill::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionSkill::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionSkill::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 PBFactionSkill::state() const {
  return state_;
}
inline void PBFactionSkill::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// optional uint32 developlefttime = 4;
inline bool PBFactionSkill::has_developlefttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionSkill::set_has_developlefttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionSkill::clear_has_developlefttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionSkill::clear_developlefttime() {
  developlefttime_ = 0u;
  clear_has_developlefttime();
}
inline ::google::protobuf::uint32 PBFactionSkill::developlefttime() const {
  return developlefttime_;
}
inline void PBFactionSkill::set_developlefttime(::google::protobuf::uint32 value) {
  set_has_developlefttime();
  developlefttime_ = value;
}

// optional uint32 developlasttime = 5;
inline bool PBFactionSkill::has_developlasttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionSkill::set_has_developlasttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionSkill::clear_has_developlasttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionSkill::clear_developlasttime() {
  developlasttime_ = 0u;
  clear_has_developlasttime();
}
inline ::google::protobuf::uint32 PBFactionSkill::developlasttime() const {
  return developlasttime_;
}
inline void PBFactionSkill::set_developlasttime(::google::protobuf::uint32 value) {
  set_has_developlasttime();
  developlasttime_ = value;
}

// -------------------------------------------------------------------

// PBFactionStudy

// optional uint32 factionid = 1;
inline bool PBFactionStudy::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionStudy::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionStudy::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionStudy::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBFactionStudy::factionid() const {
  return factionid_;
}
inline void PBFactionStudy::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 begintime = 2;
inline bool PBFactionStudy::has_begintime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionStudy::set_has_begintime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionStudy::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionStudy::clear_begintime() {
  begintime_ = 0u;
  clear_has_begintime();
}
inline ::google::protobuf::uint32 PBFactionStudy::begintime() const {
  return begintime_;
}
inline void PBFactionStudy::set_begintime(::google::protobuf::uint32 value) {
  set_has_begintime();
  begintime_ = value;
}

// -------------------------------------------------------------------

// PBFactionStudyConfig

// optional bool openstudy = 1;
inline bool PBFactionStudyConfig::has_openstudy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionStudyConfig::set_has_openstudy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionStudyConfig::clear_has_openstudy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionStudyConfig::clear_openstudy() {
  openstudy_ = false;
  clear_has_openstudy();
}
inline bool PBFactionStudyConfig::openstudy() const {
  return openstudy_;
}
inline void PBFactionStudyConfig::set_openstudy(bool value) {
  set_has_openstudy();
  openstudy_ = value;
}

// optional uint32 studymoneytype = 2;
inline bool PBFactionStudyConfig::has_studymoneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionStudyConfig::set_has_studymoneytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionStudyConfig::clear_has_studymoneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionStudyConfig::clear_studymoneytype() {
  studymoneytype_ = 0u;
  clear_has_studymoneytype();
}
inline ::google::protobuf::uint32 PBFactionStudyConfig::studymoneytype() const {
  return studymoneytype_;
}
inline void PBFactionStudyConfig::set_studymoneytype(::google::protobuf::uint32 value) {
  set_has_studymoneytype();
  studymoneytype_ = value;
}

// optional uint32 studymoneyvalue = 3;
inline bool PBFactionStudyConfig::has_studymoneyvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionStudyConfig::set_has_studymoneyvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionStudyConfig::clear_has_studymoneyvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionStudyConfig::clear_studymoneyvalue() {
  studymoneyvalue_ = 0u;
  clear_has_studymoneyvalue();
}
inline ::google::protobuf::uint32 PBFactionStudyConfig::studymoneyvalue() const {
  return studymoneyvalue_;
}
inline void PBFactionStudyConfig::set_studymoneyvalue(::google::protobuf::uint32 value) {
  set_has_studymoneyvalue();
  studymoneyvalue_ = value;
}

// optional uint32 time = 4;
inline bool PBFactionStudyConfig::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionStudyConfig::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionStudyConfig::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionStudyConfig::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBFactionStudyConfig::time() const {
  return time_;
}
inline void PBFactionStudyConfig::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PBFactionJobPrivilege

// optional uint32 job = 1;
inline bool PBFactionJobPrivilege::has_job() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionJobPrivilege::set_has_job() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionJobPrivilege::clear_has_job() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionJobPrivilege::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBFactionJobPrivilege::job() const {
  return job_;
}
inline void PBFactionJobPrivilege::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// optional uint64 privilegeid = 2;
inline bool PBFactionJobPrivilege::has_privilegeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionJobPrivilege::set_has_privilegeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionJobPrivilege::clear_has_privilegeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionJobPrivilege::clear_privilegeid() {
  privilegeid_ = GOOGLE_ULONGLONG(0);
  clear_has_privilegeid();
}
inline ::google::protobuf::uint64 PBFactionJobPrivilege::privilegeid() const {
  return privilegeid_;
}
inline void PBFactionJobPrivilege::set_privilegeid(::google::protobuf::uint64 value) {
  set_has_privilegeid();
  privilegeid_ = value;
}

// -------------------------------------------------------------------

// PBFactionImpeach

// optional uint32 impeachid = 1;
inline bool PBFactionImpeach::has_impeachid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionImpeach::set_has_impeachid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionImpeach::clear_has_impeachid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionImpeach::clear_impeachid() {
  impeachid_ = 0u;
  clear_has_impeachid();
}
inline ::google::protobuf::uint32 PBFactionImpeach::impeachid() const {
  return impeachid_;
}
inline void PBFactionImpeach::set_impeachid(::google::protobuf::uint32 value) {
  set_has_impeachid();
  impeachid_ = value;
}

// optional uint32 impeachtime = 2;
inline bool PBFactionImpeach::has_impeachtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionImpeach::set_has_impeachtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionImpeach::clear_has_impeachtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionImpeach::clear_impeachtime() {
  impeachtime_ = 0u;
  clear_has_impeachtime();
}
inline ::google::protobuf::uint32 PBFactionImpeach::impeachtime() const {
  return impeachtime_;
}
inline void PBFactionImpeach::set_impeachtime(::google::protobuf::uint32 value) {
  set_has_impeachtime();
  impeachtime_ = value;
}

// optional uint32 maxmembernum = 3;
inline bool PBFactionImpeach::has_maxmembernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionImpeach::set_has_maxmembernum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionImpeach::clear_has_maxmembernum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionImpeach::clear_maxmembernum() {
  maxmembernum_ = 0u;
  clear_has_maxmembernum();
}
inline ::google::protobuf::uint32 PBFactionImpeach::maxmembernum() const {
  return maxmembernum_;
}
inline void PBFactionImpeach::set_maxmembernum(::google::protobuf::uint32 value) {
  set_has_maxmembernum();
  maxmembernum_ = value;
}

// repeated uint32 agreemember = 4;
inline int PBFactionImpeach::agreemember_size() const {
  return agreemember_.size();
}
inline void PBFactionImpeach::clear_agreemember() {
  agreemember_.Clear();
}
inline ::google::protobuf::uint32 PBFactionImpeach::agreemember(int index) const {
  return agreemember_.Get(index);
}
inline void PBFactionImpeach::set_agreemember(int index, ::google::protobuf::uint32 value) {
  agreemember_.Set(index, value);
}
inline void PBFactionImpeach::add_agreemember(::google::protobuf::uint32 value) {
  agreemember_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFactionImpeach::agreemember() const {
  return agreemember_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFactionImpeach::mutable_agreemember() {
  return &agreemember_;
}

// repeated uint32 refusemember = 5;
inline int PBFactionImpeach::refusemember_size() const {
  return refusemember_.size();
}
inline void PBFactionImpeach::clear_refusemember() {
  refusemember_.Clear();
}
inline ::google::protobuf::uint32 PBFactionImpeach::refusemember(int index) const {
  return refusemember_.Get(index);
}
inline void PBFactionImpeach::set_refusemember(int index, ::google::protobuf::uint32 value) {
  refusemember_.Set(index, value);
}
inline void PBFactionImpeach::add_refusemember(::google::protobuf::uint32 value) {
  refusemember_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFactionImpeach::refusemember() const {
  return refusemember_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFactionImpeach::mutable_refusemember() {
  return &refusemember_;
}

// -------------------------------------------------------------------

// PBFactionDBData

// optional .PBFactionBase base = 1;
inline bool PBFactionDBData::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionDBData::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionDBData::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionDBData::clear_base() {
  if (base_ != NULL) base_->::PBFactionBase::Clear();
  clear_has_base();
}
inline const ::PBFactionBase& PBFactionDBData::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::PBFactionBase* PBFactionDBData::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::PBFactionBase;
  return base_;
}
inline ::PBFactionBase* PBFactionDBData::release_base() {
  clear_has_base();
  ::PBFactionBase* temp = base_;
  base_ = NULL;
  return temp;
}

// optional string declaration = 2;
inline bool PBFactionDBData::has_declaration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionDBData::set_has_declaration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionDBData::clear_has_declaration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionDBData::clear_declaration() {
  if (declaration_ != &::google::protobuf::internal::kEmptyString) {
    declaration_->clear();
  }
  clear_has_declaration();
}
inline const ::std::string& PBFactionDBData::declaration() const {
  return *declaration_;
}
inline void PBFactionDBData::set_declaration(const ::std::string& value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBFactionDBData::set_declaration(const char* value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBFactionDBData::set_declaration(const char* value, size_t size) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBFactionDBData::mutable_declaration() {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  return declaration_;
}
inline ::std::string* PBFactionDBData::release_declaration() {
  clear_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = declaration_;
    declaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 createtime = 3;
inline bool PBFactionDBData::has_createtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionDBData::set_has_createtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionDBData::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionDBData::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 PBFactionDBData::createtime() const {
  return createtime_;
}
inline void PBFactionDBData::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
}

// optional uint64 stone = 4;
inline bool PBFactionDBData::has_stone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionDBData::set_has_stone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionDBData::clear_has_stone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionDBData::clear_stone() {
  stone_ = GOOGLE_ULONGLONG(0);
  clear_has_stone();
}
inline ::google::protobuf::uint64 PBFactionDBData::stone() const {
  return stone_;
}
inline void PBFactionDBData::set_stone(::google::protobuf::uint64 value) {
  set_has_stone();
  stone_ = value;
}

// optional uint64 sliver = 5;
inline bool PBFactionDBData::has_sliver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionDBData::set_has_sliver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionDBData::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionDBData::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBFactionDBData::sliver() const {
  return sliver_;
}
inline void PBFactionDBData::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint64 energy = 6;
inline bool PBFactionDBData::has_energy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBFactionDBData::set_has_energy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBFactionDBData::clear_has_energy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBFactionDBData::clear_energy() {
  energy_ = GOOGLE_ULONGLONG(0);
  clear_has_energy();
}
inline ::google::protobuf::uint64 PBFactionDBData::energy() const {
  return energy_;
}
inline void PBFactionDBData::set_energy(::google::protobuf::uint64 value) {
  set_has_energy();
  energy_ = value;
}

// optional uint64 score = 7;
inline bool PBFactionDBData::has_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBFactionDBData::set_has_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBFactionDBData::clear_has_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBFactionDBData::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 PBFactionDBData::score() const {
  return score_;
}
inline void PBFactionDBData::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// optional uint64 boom = 8;
inline bool PBFactionDBData::has_boom() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBFactionDBData::set_has_boom() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBFactionDBData::clear_has_boom() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBFactionDBData::clear_boom() {
  boom_ = GOOGLE_ULONGLONG(0);
  clear_has_boom();
}
inline ::google::protobuf::uint64 PBFactionDBData::boom() const {
  return boom_;
}
inline void PBFactionDBData::set_boom(::google::protobuf::uint64 value) {
  set_has_boom();
  boom_ = value;
}

// optional uint64 experience = 9;
inline bool PBFactionDBData::has_experience() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBFactionDBData::set_has_experience() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBFactionDBData::clear_has_experience() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBFactionDBData::clear_experience() {
  experience_ = GOOGLE_ULONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::uint64 PBFactionDBData::experience() const {
  return experience_;
}
inline void PBFactionDBData::set_experience(::google::protobuf::uint64 value) {
  set_has_experience();
  experience_ = value;
}

// optional uint32 order = 10;
inline bool PBFactionDBData::has_order() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBFactionDBData::set_has_order() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBFactionDBData::clear_has_order() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBFactionDBData::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 PBFactionDBData::order() const {
  return order_;
}
inline void PBFactionDBData::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// repeated .PBFactionDBMember members = 11;
inline int PBFactionDBData::members_size() const {
  return members_.size();
}
inline void PBFactionDBData::clear_members() {
  members_.Clear();
}
inline const ::PBFactionDBMember& PBFactionDBData::members(int index) const {
  return members_.Get(index);
}
inline ::PBFactionDBMember* PBFactionDBData::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::PBFactionDBMember* PBFactionDBData::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionDBMember >&
PBFactionDBData::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionDBMember >*
PBFactionDBData::mutable_members() {
  return &members_;
}

// repeated .PBFactionApplyData applys = 12;
inline int PBFactionDBData::applys_size() const {
  return applys_.size();
}
inline void PBFactionDBData::clear_applys() {
  applys_.Clear();
}
inline const ::PBFactionApplyData& PBFactionDBData::applys(int index) const {
  return applys_.Get(index);
}
inline ::PBFactionApplyData* PBFactionDBData::mutable_applys(int index) {
  return applys_.Mutable(index);
}
inline ::PBFactionApplyData* PBFactionDBData::add_applys() {
  return applys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >&
PBFactionDBData::applys() const {
  return applys_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >*
PBFactionDBData::mutable_applys() {
  return &applys_;
}

// optional uint32 requirelevel = 13;
inline bool PBFactionDBData::has_requirelevel() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PBFactionDBData::set_has_requirelevel() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PBFactionDBData::clear_has_requirelevel() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PBFactionDBData::clear_requirelevel() {
  requirelevel_ = 0u;
  clear_has_requirelevel();
}
inline ::google::protobuf::uint32 PBFactionDBData::requirelevel() const {
  return requirelevel_;
}
inline void PBFactionDBData::set_requirelevel(::google::protobuf::uint32 value) {
  set_has_requirelevel();
  requirelevel_ = value;
}

// repeated .PBIDStamp refuses = 14;
inline int PBFactionDBData::refuses_size() const {
  return refuses_.size();
}
inline void PBFactionDBData::clear_refuses() {
  refuses_.Clear();
}
inline const ::PBIDStamp& PBFactionDBData::refuses(int index) const {
  return refuses_.Get(index);
}
inline ::PBIDStamp* PBFactionDBData::mutable_refuses(int index) {
  return refuses_.Mutable(index);
}
inline ::PBIDStamp* PBFactionDBData::add_refuses() {
  return refuses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBIDStamp >&
PBFactionDBData::refuses() const {
  return refuses_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBIDStamp >*
PBFactionDBData::mutable_refuses() {
  return &refuses_;
}

// repeated .PBFactionSkill skill = 15;
inline int PBFactionDBData::skill_size() const {
  return skill_.size();
}
inline void PBFactionDBData::clear_skill() {
  skill_.Clear();
}
inline const ::PBFactionSkill& PBFactionDBData::skill(int index) const {
  return skill_.Get(index);
}
inline ::PBFactionSkill* PBFactionDBData::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::PBFactionSkill* PBFactionDBData::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionSkill >&
PBFactionDBData::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionSkill >*
PBFactionDBData::mutable_skill() {
  return &skill_;
}

// repeated .PBFactionStudy study = 16;
inline int PBFactionDBData::study_size() const {
  return study_.size();
}
inline void PBFactionDBData::clear_study() {
  study_.Clear();
}
inline const ::PBFactionStudy& PBFactionDBData::study(int index) const {
  return study_.Get(index);
}
inline ::PBFactionStudy* PBFactionDBData::mutable_study(int index) {
  return study_.Mutable(index);
}
inline ::PBFactionStudy* PBFactionDBData::add_study() {
  return study_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionStudy >&
PBFactionDBData::study() const {
  return study_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionStudy >*
PBFactionDBData::mutable_study() {
  return &study_;
}

// optional .PBFactionStudyConfig curstudyconfig = 17;
inline bool PBFactionDBData::has_curstudyconfig() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PBFactionDBData::set_has_curstudyconfig() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PBFactionDBData::clear_has_curstudyconfig() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PBFactionDBData::clear_curstudyconfig() {
  if (curstudyconfig_ != NULL) curstudyconfig_->::PBFactionStudyConfig::Clear();
  clear_has_curstudyconfig();
}
inline const ::PBFactionStudyConfig& PBFactionDBData::curstudyconfig() const {
  return curstudyconfig_ != NULL ? *curstudyconfig_ : *default_instance_->curstudyconfig_;
}
inline ::PBFactionStudyConfig* PBFactionDBData::mutable_curstudyconfig() {
  set_has_curstudyconfig();
  if (curstudyconfig_ == NULL) curstudyconfig_ = new ::PBFactionStudyConfig;
  return curstudyconfig_;
}
inline ::PBFactionStudyConfig* PBFactionDBData::release_curstudyconfig() {
  clear_has_curstudyconfig();
  ::PBFactionStudyConfig* temp = curstudyconfig_;
  curstudyconfig_ = NULL;
  return temp;
}

// optional .PBFactionStudyConfig frontstudyconfig = 18;
inline bool PBFactionDBData::has_frontstudyconfig() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PBFactionDBData::set_has_frontstudyconfig() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PBFactionDBData::clear_has_frontstudyconfig() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PBFactionDBData::clear_frontstudyconfig() {
  if (frontstudyconfig_ != NULL) frontstudyconfig_->::PBFactionStudyConfig::Clear();
  clear_has_frontstudyconfig();
}
inline const ::PBFactionStudyConfig& PBFactionDBData::frontstudyconfig() const {
  return frontstudyconfig_ != NULL ? *frontstudyconfig_ : *default_instance_->frontstudyconfig_;
}
inline ::PBFactionStudyConfig* PBFactionDBData::mutable_frontstudyconfig() {
  set_has_frontstudyconfig();
  if (frontstudyconfig_ == NULL) frontstudyconfig_ = new ::PBFactionStudyConfig;
  return frontstudyconfig_;
}
inline ::PBFactionStudyConfig* PBFactionDBData::release_frontstudyconfig() {
  clear_has_frontstudyconfig();
  ::PBFactionStudyConfig* temp = frontstudyconfig_;
  frontstudyconfig_ = NULL;
  return temp;
}

// repeated .PBFactionJobPrivilege privilege = 19;
inline int PBFactionDBData::privilege_size() const {
  return privilege_.size();
}
inline void PBFactionDBData::clear_privilege() {
  privilege_.Clear();
}
inline const ::PBFactionJobPrivilege& PBFactionDBData::privilege(int index) const {
  return privilege_.Get(index);
}
inline ::PBFactionJobPrivilege* PBFactionDBData::mutable_privilege(int index) {
  return privilege_.Mutable(index);
}
inline ::PBFactionJobPrivilege* PBFactionDBData::add_privilege() {
  return privilege_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionJobPrivilege >&
PBFactionDBData::privilege() const {
  return privilege_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionJobPrivilege >*
PBFactionDBData::mutable_privilege() {
  return &privilege_;
}

// optional .PBFactionImpeach impeach = 20;
inline bool PBFactionDBData::has_impeach() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PBFactionDBData::set_has_impeach() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PBFactionDBData::clear_has_impeach() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PBFactionDBData::clear_impeach() {
  if (impeach_ != NULL) impeach_->::PBFactionImpeach::Clear();
  clear_has_impeach();
}
inline const ::PBFactionImpeach& PBFactionDBData::impeach() const {
  return impeach_ != NULL ? *impeach_ : *default_instance_->impeach_;
}
inline ::PBFactionImpeach* PBFactionDBData::mutable_impeach() {
  set_has_impeach();
  if (impeach_ == NULL) impeach_ = new ::PBFactionImpeach;
  return impeach_;
}
inline ::PBFactionImpeach* PBFactionDBData::release_impeach() {
  clear_has_impeach();
  ::PBFactionImpeach* temp = impeach_;
  impeach_ = NULL;
  return temp;
}

// optional .PBTopListData toplist = 21;
inline bool PBFactionDBData::has_toplist() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PBFactionDBData::set_has_toplist() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PBFactionDBData::clear_has_toplist() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PBFactionDBData::clear_toplist() {
  if (toplist_ != NULL) toplist_->::PBTopListData::Clear();
  clear_has_toplist();
}
inline const ::PBTopListData& PBFactionDBData::toplist() const {
  return toplist_ != NULL ? *toplist_ : *default_instance_->toplist_;
}
inline ::PBTopListData* PBFactionDBData::mutable_toplist() {
  set_has_toplist();
  if (toplist_ == NULL) toplist_ = new ::PBTopListData;
  return toplist_;
}
inline ::PBTopListData* PBFactionDBData::release_toplist() {
  clear_has_toplist();
  ::PBTopListData* temp = toplist_;
  toplist_ = NULL;
  return temp;
}

// optional bool autoapply = 22;
inline bool PBFactionDBData::has_autoapply() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PBFactionDBData::set_has_autoapply() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PBFactionDBData::clear_has_autoapply() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PBFactionDBData::clear_autoapply() {
  autoapply_ = false;
  clear_has_autoapply();
}
inline bool PBFactionDBData::autoapply() const {
  return autoapply_;
}
inline void PBFactionDBData::set_autoapply(bool value) {
  set_has_autoapply();
  autoapply_ = value;
}

// -------------------------------------------------------------------

// PBFactionDepot

// optional uint64 uniqueindex = 1;
inline bool PBFactionDepot::has_uniqueindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionDepot::set_has_uniqueindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionDepot::clear_has_uniqueindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionDepot::clear_uniqueindex() {
  uniqueindex_ = GOOGLE_ULONGLONG(0);
  clear_has_uniqueindex();
}
inline ::google::protobuf::uint64 PBFactionDepot::uniqueindex() const {
  return uniqueindex_;
}
inline void PBFactionDepot::set_uniqueindex(::google::protobuf::uint64 value) {
  set_has_uniqueindex();
  uniqueindex_ = value;
}

// repeated .PBItem item = 2;
inline int PBFactionDepot::item_size() const {
  return item_.size();
}
inline void PBFactionDepot::clear_item() {
  item_.Clear();
}
inline const ::PBItem& PBFactionDepot::item(int index) const {
  return item_.Get(index);
}
inline ::PBItem* PBFactionDepot::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBItem* PBFactionDepot::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
PBFactionDepot::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
PBFactionDepot::mutable_item() {
  return &item_;
}

// optional uint64 money = 3;
inline bool PBFactionDepot::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionDepot::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionDepot::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionDepot::clear_money() {
  money_ = GOOGLE_ULONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::uint64 PBFactionDepot::money() const {
  return money_;
}
inline void PBFactionDepot::set_money(::google::protobuf::uint64 value) {
  set_has_money();
  money_ = value;
}

// -------------------------------------------------------------------

// PBFactionMember

// optional .PBFactionMemberBase base = 1;
inline bool PBFactionMember::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionMember::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionMember::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionMember::clear_base() {
  if (base_ != NULL) base_->::PBFactionMemberBase::Clear();
  clear_has_base();
}
inline const ::PBFactionMemberBase& PBFactionMember::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::PBFactionMemberBase* PBFactionMember::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::PBFactionMemberBase;
  return base_;
}
inline ::PBFactionMemberBase* PBFactionMember::release_base() {
  clear_has_base();
  ::PBFactionMemberBase* temp = base_;
  base_ = NULL;
  return temp;
}

// optional uint32 contribution = 2;
inline bool PBFactionMember::has_contribution() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionMember::set_has_contribution() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionMember::clear_has_contribution() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionMember::clear_contribution() {
  contribution_ = 0u;
  clear_has_contribution();
}
inline ::google::protobuf::uint32 PBFactionMember::contribution() const {
  return contribution_;
}
inline void PBFactionMember::set_contribution(::google::protobuf::uint32 value) {
  set_has_contribution();
  contribution_ = value;
}

// optional uint32 experience = 3;
inline bool PBFactionMember::has_experience() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionMember::set_has_experience() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionMember::clear_has_experience() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionMember::clear_experience() {
  experience_ = 0u;
  clear_has_experience();
}
inline ::google::protobuf::uint32 PBFactionMember::experience() const {
  return experience_;
}
inline void PBFactionMember::set_experience(::google::protobuf::uint32 value) {
  set_has_experience();
  experience_ = value;
}

// optional uint32 jointime = 4;
inline bool PBFactionMember::has_jointime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionMember::set_has_jointime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionMember::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionMember::clear_jointime() {
  jointime_ = 0u;
  clear_has_jointime();
}
inline ::google::protobuf::uint32 PBFactionMember::jointime() const {
  return jointime_;
}
inline void PBFactionMember::set_jointime(::google::protobuf::uint32 value) {
  set_has_jointime();
  jointime_ = value;
}

// optional bool online = 5;
inline bool PBFactionMember::has_online() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionMember::set_has_online() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionMember::clear_has_online() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionMember::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool PBFactionMember::online() const {
  return online_;
}
inline void PBFactionMember::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional uint32 job = 6;
inline bool PBFactionMember::has_job() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBFactionMember::set_has_job() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBFactionMember::clear_has_job() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBFactionMember::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBFactionMember::job() const {
  return job_;
}
inline void PBFactionMember::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// repeated uint32 title = 7;
inline int PBFactionMember::title_size() const {
  return title_.size();
}
inline void PBFactionMember::clear_title() {
  title_.Clear();
}
inline ::google::protobuf::uint32 PBFactionMember::title(int index) const {
  return title_.Get(index);
}
inline void PBFactionMember::set_title(int index, ::google::protobuf::uint32 value) {
  title_.Set(index, value);
}
inline void PBFactionMember::add_title(::google::protobuf::uint32 value) {
  title_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBFactionMember::title() const {
  return title_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBFactionMember::mutable_title() {
  return &title_;
}

// optional uint32 lastofflinetime = 8;
inline bool PBFactionMember::has_lastofflinetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBFactionMember::set_has_lastofflinetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBFactionMember::clear_has_lastofflinetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBFactionMember::clear_lastofflinetime() {
  lastofflinetime_ = 0u;
  clear_has_lastofflinetime();
}
inline ::google::protobuf::uint32 PBFactionMember::lastofflinetime() const {
  return lastofflinetime_;
}
inline void PBFactionMember::set_lastofflinetime(::google::protobuf::uint32 value) {
  set_has_lastofflinetime();
  lastofflinetime_ = value;
}

// optional uint32 fobitcount = 9;
inline bool PBFactionMember::has_fobitcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBFactionMember::set_has_fobitcount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBFactionMember::clear_has_fobitcount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBFactionMember::clear_fobitcount() {
  fobitcount_ = 0u;
  clear_has_fobitcount();
}
inline ::google::protobuf::uint32 PBFactionMember::fobitcount() const {
  return fobitcount_;
}
inline void PBFactionMember::set_fobitcount(::google::protobuf::uint32 value) {
  set_has_fobitcount();
  fobitcount_ = value;
}

// optional uint32 fobittime = 10;
inline bool PBFactionMember::has_fobittime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBFactionMember::set_has_fobittime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBFactionMember::clear_has_fobittime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBFactionMember::clear_fobittime() {
  fobittime_ = 0u;
  clear_has_fobittime();
}
inline ::google::protobuf::uint32 PBFactionMember::fobittime() const {
  return fobittime_;
}
inline void PBFactionMember::set_fobittime(::google::protobuf::uint32 value) {
  set_has_fobittime();
  fobittime_ = value;
}

// -------------------------------------------------------------------

// PBFactionDisplay

// optional .PBFactionBase base = 1;
inline bool PBFactionDisplay::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionDisplay::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionDisplay::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionDisplay::clear_base() {
  if (base_ != NULL) base_->::PBFactionBase::Clear();
  clear_has_base();
}
inline const ::PBFactionBase& PBFactionDisplay::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::PBFactionBase* PBFactionDisplay::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::PBFactionBase;
  return base_;
}
inline ::PBFactionBase* PBFactionDisplay::release_base() {
  clear_has_base();
  ::PBFactionBase* temp = base_;
  base_ = NULL;
  return temp;
}

// optional string leadername = 2;
inline bool PBFactionDisplay::has_leadername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionDisplay::set_has_leadername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionDisplay::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionDisplay::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::kEmptyString) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& PBFactionDisplay::leadername() const {
  return *leadername_;
}
inline void PBFactionDisplay::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
}
inline void PBFactionDisplay::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
}
inline void PBFactionDisplay::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBFactionDisplay::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  return leadername_;
}
inline ::std::string* PBFactionDisplay::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 people = 3;
inline bool PBFactionDisplay::has_people() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionDisplay::set_has_people() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionDisplay::clear_has_people() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionDisplay::clear_people() {
  people_ = 0u;
  clear_has_people();
}
inline ::google::protobuf::uint32 PBFactionDisplay::people() const {
  return people_;
}
inline void PBFactionDisplay::set_people(::google::protobuf::uint32 value) {
  set_has_people();
  people_ = value;
}

// optional uint32 peoplemax = 4;
inline bool PBFactionDisplay::has_peoplemax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBFactionDisplay::set_has_peoplemax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBFactionDisplay::clear_has_peoplemax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBFactionDisplay::clear_peoplemax() {
  peoplemax_ = 0u;
  clear_has_peoplemax();
}
inline ::google::protobuf::uint32 PBFactionDisplay::peoplemax() const {
  return peoplemax_;
}
inline void PBFactionDisplay::set_peoplemax(::google::protobuf::uint32 value) {
  set_has_peoplemax();
  peoplemax_ = value;
}

// optional bool isleaderonline = 5;
inline bool PBFactionDisplay::has_isleaderonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionDisplay::set_has_isleaderonline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionDisplay::clear_has_isleaderonline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionDisplay::clear_isleaderonline() {
  isleaderonline_ = false;
  clear_has_isleaderonline();
}
inline bool PBFactionDisplay::isleaderonline() const {
  return isleaderonline_;
}
inline void PBFactionDisplay::set_isleaderonline(bool value) {
  set_has_isleaderonline();
  isleaderonline_ = value;
}

// optional uint64 boom = 6;
inline bool PBFactionDisplay::has_boom() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBFactionDisplay::set_has_boom() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBFactionDisplay::clear_has_boom() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBFactionDisplay::clear_boom() {
  boom_ = GOOGLE_ULONGLONG(0);
  clear_has_boom();
}
inline ::google::protobuf::uint64 PBFactionDisplay::boom() const {
  return boom_;
}
inline void PBFactionDisplay::set_boom(::google::protobuf::uint64 value) {
  set_has_boom();
  boom_ = value;
}

// -------------------------------------------------------------------

// PBPlayerFactionSkill

// optional uint32 skillid = 1;
inline bool PBPlayerFactionSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerFactionSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerFactionSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerFactionSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBPlayerFactionSkill::skillid() const {
  return skillid_;
}
inline void PBPlayerFactionSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 level = 2;
inline bool PBPlayerFactionSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerFactionSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerFactionSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerFactionSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBPlayerFactionSkill::level() const {
  return level_;
}
inline void PBPlayerFactionSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PBPlayerFactionDonateMoney

// optional uint32 id = 1;
inline bool PBPlayerFactionDonateMoney::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerFactionDonateMoney::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerFactionDonateMoney::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerFactionDonateMoney::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBPlayerFactionDonateMoney::id() const {
  return id_;
}
inline void PBPlayerFactionDonateMoney::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 count = 2;
inline bool PBPlayerFactionDonateMoney::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerFactionDonateMoney::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerFactionDonateMoney::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerFactionDonateMoney::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBPlayerFactionDonateMoney::count() const {
  return count_;
}
inline void PBPlayerFactionDonateMoney::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PBPlayerFactionTaskItem

// optional uint32 itemid = 1;
inline bool PBPlayerFactionTaskItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerFactionTaskItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerFactionTaskItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerFactionTaskItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PBPlayerFactionTaskItem::itemid() const {
  return itemid_;
}
inline void PBPlayerFactionTaskItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 count = 2;
inline bool PBPlayerFactionTaskItem::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerFactionTaskItem::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerFactionTaskItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerFactionTaskItem::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBPlayerFactionTaskItem::count() const {
  return count_;
}
inline void PBPlayerFactionTaskItem::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PBPlayerFactionTask

// optional uint32 taskcount = 1;
inline bool PBPlayerFactionTask::has_taskcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerFactionTask::set_has_taskcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerFactionTask::clear_has_taskcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerFactionTask::clear_taskcount() {
  taskcount_ = 0u;
  clear_has_taskcount();
}
inline ::google::protobuf::uint32 PBPlayerFactionTask::taskcount() const {
  return taskcount_;
}
inline void PBPlayerFactionTask::set_taskcount(::google::protobuf::uint32 value) {
  set_has_taskcount();
  taskcount_ = value;
}

// optional uint32 taskid = 2;
inline bool PBPlayerFactionTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerFactionTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerFactionTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerFactionTask::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 PBPlayerFactionTask::taskid() const {
  return taskid_;
}
inline void PBPlayerFactionTask::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
}

// repeated .PBPlayerFactionTaskItem taskitem = 3;
inline int PBPlayerFactionTask::taskitem_size() const {
  return taskitem_.size();
}
inline void PBPlayerFactionTask::clear_taskitem() {
  taskitem_.Clear();
}
inline const ::PBPlayerFactionTaskItem& PBPlayerFactionTask::taskitem(int index) const {
  return taskitem_.Get(index);
}
inline ::PBPlayerFactionTaskItem* PBPlayerFactionTask::mutable_taskitem(int index) {
  return taskitem_.Mutable(index);
}
inline ::PBPlayerFactionTaskItem* PBPlayerFactionTask::add_taskitem() {
  return taskitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionTaskItem >&
PBPlayerFactionTask::taskitem() const {
  return taskitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionTaskItem >*
PBPlayerFactionTask::mutable_taskitem() {
  return &taskitem_;
}

// -------------------------------------------------------------------

// PBPlayerFaction

// optional uint32 saveorder = 1;
inline bool PBPlayerFaction::has_saveorder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerFaction::set_has_saveorder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerFaction::clear_has_saveorder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerFaction::clear_saveorder() {
  saveorder_ = 0u;
  clear_has_saveorder();
}
inline ::google::protobuf::uint32 PBPlayerFaction::saveorder() const {
  return saveorder_;
}
inline void PBPlayerFaction::set_saveorder(::google::protobuf::uint32 value) {
  set_has_saveorder();
  saveorder_ = value;
}

// optional uint32 lastleavetime = 2;
inline bool PBPlayerFaction::has_lastleavetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerFaction::set_has_lastleavetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerFaction::clear_has_lastleavetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerFaction::clear_lastleavetime() {
  lastleavetime_ = 0u;
  clear_has_lastleavetime();
}
inline ::google::protobuf::uint32 PBPlayerFaction::lastleavetime() const {
  return lastleavetime_;
}
inline void PBPlayerFaction::set_lastleavetime(::google::protobuf::uint32 value) {
  set_has_lastleavetime();
  lastleavetime_ = value;
}

// repeated .PBPlayerFactionSkill skill = 3;
inline int PBPlayerFaction::skill_size() const {
  return skill_.size();
}
inline void PBPlayerFaction::clear_skill() {
  skill_.Clear();
}
inline const ::PBPlayerFactionSkill& PBPlayerFaction::skill(int index) const {
  return skill_.Get(index);
}
inline ::PBPlayerFactionSkill* PBPlayerFaction::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::PBPlayerFactionSkill* PBPlayerFaction::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionSkill >&
PBPlayerFaction::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionSkill >*
PBPlayerFaction::mutable_skill() {
  return &skill_;
}

// repeated .PBPlayerFactionDonateMoney donatemoney = 4;
inline int PBPlayerFaction::donatemoney_size() const {
  return donatemoney_.size();
}
inline void PBPlayerFaction::clear_donatemoney() {
  donatemoney_.Clear();
}
inline const ::PBPlayerFactionDonateMoney& PBPlayerFaction::donatemoney(int index) const {
  return donatemoney_.Get(index);
}
inline ::PBPlayerFactionDonateMoney* PBPlayerFaction::mutable_donatemoney(int index) {
  return donatemoney_.Mutable(index);
}
inline ::PBPlayerFactionDonateMoney* PBPlayerFaction::add_donatemoney() {
  return donatemoney_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionDonateMoney >&
PBPlayerFaction::donatemoney() const {
  return donatemoney_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBPlayerFactionDonateMoney >*
PBPlayerFaction::mutable_donatemoney() {
  return &donatemoney_;
}

// optional .PBPlayerFactionTask task = 5;
inline bool PBPlayerFaction::has_task() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBPlayerFaction::set_has_task() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBPlayerFaction::clear_has_task() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBPlayerFaction::clear_task() {
  if (task_ != NULL) task_->::PBPlayerFactionTask::Clear();
  clear_has_task();
}
inline const ::PBPlayerFactionTask& PBPlayerFaction::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::PBPlayerFactionTask* PBPlayerFaction::mutable_task() {
  set_has_task();
  if (task_ == NULL) task_ = new ::PBPlayerFactionTask;
  return task_;
}
inline ::PBPlayerFactionTask* PBPlayerFaction::release_task() {
  clear_has_task();
  ::PBPlayerFactionTask* temp = task_;
  task_ = NULL;
  return temp;
}

// optional .PBPlayerDrinkWine drinkwine = 7;
inline bool PBPlayerFaction::has_drinkwine() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBPlayerFaction::set_has_drinkwine() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBPlayerFaction::clear_has_drinkwine() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBPlayerFaction::clear_drinkwine() {
  if (drinkwine_ != NULL) drinkwine_->::PBPlayerDrinkWine::Clear();
  clear_has_drinkwine();
}
inline const ::PBPlayerDrinkWine& PBPlayerFaction::drinkwine() const {
  return drinkwine_ != NULL ? *drinkwine_ : *default_instance_->drinkwine_;
}
inline ::PBPlayerDrinkWine* PBPlayerFaction::mutable_drinkwine() {
  set_has_drinkwine();
  if (drinkwine_ == NULL) drinkwine_ = new ::PBPlayerDrinkWine;
  return drinkwine_;
}
inline ::PBPlayerDrinkWine* PBPlayerFaction::release_drinkwine() {
  clear_has_drinkwine();
  ::PBPlayerDrinkWine* temp = drinkwine_;
  drinkwine_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBFactionOfflineRemove

// optional uint32 lastleavetime = 1;
inline bool PBFactionOfflineRemove::has_lastleavetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionOfflineRemove::set_has_lastleavetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionOfflineRemove::clear_has_lastleavetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionOfflineRemove::clear_lastleavetime() {
  lastleavetime_ = 0u;
  clear_has_lastleavetime();
}
inline ::google::protobuf::uint32 PBFactionOfflineRemove::lastleavetime() const {
  return lastleavetime_;
}
inline void PBFactionOfflineRemove::set_lastleavetime(::google::protobuf::uint32 value) {
  set_has_lastleavetime();
  lastleavetime_ = value;
}

// -------------------------------------------------------------------

// PBFactionEvent

// optional uint32 time = 1;
inline bool PBFactionEvent::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionEvent::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionEvent::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionEvent::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 PBFactionEvent::time() const {
  return time_;
}
inline void PBFactionEvent::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 type = 2;
inline bool PBFactionEvent::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionEvent::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionEvent::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PBFactionEvent::type() const {
  return type_;
}
inline void PBFactionEvent::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 level = 3;
inline bool PBFactionEvent::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionEvent::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionEvent::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionEvent::clear_level() {
  level_ = GOOGLE_ULONGLONG(0);
  clear_has_level();
}
inline ::google::protobuf::uint64 PBFactionEvent::level() const {
  return level_;
}
inline void PBFactionEvent::set_level(::google::protobuf::uint64 value) {
  set_has_level();
  level_ = value;
}

// repeated .PBFactionMember member = 4;
inline int PBFactionEvent::member_size() const {
  return member_.size();
}
inline void PBFactionEvent::clear_member() {
  member_.Clear();
}
inline const ::PBFactionMember& PBFactionEvent::member(int index) const {
  return member_.Get(index);
}
inline ::PBFactionMember* PBFactionEvent::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::PBFactionMember* PBFactionEvent::add_member() {
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionMember >&
PBFactionEvent::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionMember >*
PBFactionEvent::mutable_member() {
  return &member_;
}

// optional uint64 stone = 5;
inline bool PBFactionEvent::has_stone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBFactionEvent::set_has_stone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBFactionEvent::clear_has_stone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBFactionEvent::clear_stone() {
  stone_ = GOOGLE_ULONGLONG(0);
  clear_has_stone();
}
inline ::google::protobuf::uint64 PBFactionEvent::stone() const {
  return stone_;
}
inline void PBFactionEvent::set_stone(::google::protobuf::uint64 value) {
  set_has_stone();
  stone_ = value;
}

// optional uint64 sliver = 6;
inline bool PBFactionEvent::has_sliver() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBFactionEvent::set_has_sliver() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBFactionEvent::clear_has_sliver() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBFactionEvent::clear_sliver() {
  sliver_ = GOOGLE_ULONGLONG(0);
  clear_has_sliver();
}
inline ::google::protobuf::uint64 PBFactionEvent::sliver() const {
  return sliver_;
}
inline void PBFactionEvent::set_sliver(::google::protobuf::uint64 value) {
  set_has_sliver();
  sliver_ = value;
}

// optional uint64 experience = 7;
inline bool PBFactionEvent::has_experience() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBFactionEvent::set_has_experience() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBFactionEvent::clear_has_experience() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBFactionEvent::clear_experience() {
  experience_ = GOOGLE_ULONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::uint64 PBFactionEvent::experience() const {
  return experience_;
}
inline void PBFactionEvent::set_experience(::google::protobuf::uint64 value) {
  set_has_experience();
  experience_ = value;
}

// repeated .PBItem item = 8;
inline int PBFactionEvent::item_size() const {
  return item_.size();
}
inline void PBFactionEvent::clear_item() {
  item_.Clear();
}
inline const ::PBItem& PBFactionEvent::item(int index) const {
  return item_.Get(index);
}
inline ::PBItem* PBFactionEvent::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::PBItem* PBFactionEvent::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBItem >&
PBFactionEvent::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBItem >*
PBFactionEvent::mutable_item() {
  return &item_;
}

// optional uint64 money = 9;
inline bool PBFactionEvent::has_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBFactionEvent::set_has_money() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBFactionEvent::clear_has_money() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBFactionEvent::clear_money() {
  money_ = GOOGLE_ULONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::uint64 PBFactionEvent::money() const {
  return money_;
}
inline void PBFactionEvent::set_money(::google::protobuf::uint64 value) {
  set_has_money();
  money_ = value;
}

// -------------------------------------------------------------------

// PBFactionEventAll

// repeated .PBFactionEvent member = 1;
inline int PBFactionEventAll::member_size() const {
  return member_.size();
}
inline void PBFactionEventAll::clear_member() {
  member_.Clear();
}
inline const ::PBFactionEvent& PBFactionEventAll::member(int index) const {
  return member_.Get(index);
}
inline ::PBFactionEvent* PBFactionEventAll::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::PBFactionEvent* PBFactionEventAll::add_member() {
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >&
PBFactionEventAll::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >*
PBFactionEventAll::mutable_member() {
  return &member_;
}

// repeated .PBFactionEvent experience = 2;
inline int PBFactionEventAll::experience_size() const {
  return experience_.size();
}
inline void PBFactionEventAll::clear_experience() {
  experience_.Clear();
}
inline const ::PBFactionEvent& PBFactionEventAll::experience(int index) const {
  return experience_.Get(index);
}
inline ::PBFactionEvent* PBFactionEventAll::mutable_experience(int index) {
  return experience_.Mutable(index);
}
inline ::PBFactionEvent* PBFactionEventAll::add_experience() {
  return experience_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >&
PBFactionEventAll::experience() const {
  return experience_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >*
PBFactionEventAll::mutable_experience() {
  return &experience_;
}

// repeated .PBFactionEvent depot = 3;
inline int PBFactionEventAll::depot_size() const {
  return depot_.size();
}
inline void PBFactionEventAll::clear_depot() {
  depot_.Clear();
}
inline const ::PBFactionEvent& PBFactionEventAll::depot(int index) const {
  return depot_.Get(index);
}
inline ::PBFactionEvent* PBFactionEventAll::mutable_depot(int index) {
  return depot_.Mutable(index);
}
inline ::PBFactionEvent* PBFactionEventAll::add_depot() {
  return depot_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >&
PBFactionEventAll::depot() const {
  return depot_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionEvent >*
PBFactionEventAll::mutable_depot() {
  return &depot_;
}

// -------------------------------------------------------------------

// PBC2GFactionCreate

// optional string name = 1;
inline bool PBC2GFactionCreate::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionCreate::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionCreate::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionCreate::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBC2GFactionCreate::name() const {
  return *name_;
}
inline void PBC2GFactionCreate::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBC2GFactionCreate::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBC2GFactionCreate::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBC2GFactionCreate::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBC2GFactionCreate::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 factionid = 2;
inline bool PBC2GFactionCreate::has_factionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GFactionCreate::set_has_factionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GFactionCreate::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GFactionCreate::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBC2GFactionCreate::factionid() const {
  return factionid_;
}
inline void PBC2GFactionCreate::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 worldid = 3;
inline bool PBC2GFactionCreate::has_worldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GFactionCreate::set_has_worldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GFactionCreate::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GFactionCreate::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 PBC2GFactionCreate::worldid() const {
  return worldid_;
}
inline void PBC2GFactionCreate::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional string banner = 4;
inline bool PBC2GFactionCreate::has_banner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBC2GFactionCreate::set_has_banner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBC2GFactionCreate::clear_has_banner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBC2GFactionCreate::clear_banner() {
  if (banner_ != &::google::protobuf::internal::kEmptyString) {
    banner_->clear();
  }
  clear_has_banner();
}
inline const ::std::string& PBC2GFactionCreate::banner() const {
  return *banner_;
}
inline void PBC2GFactionCreate::set_banner(const ::std::string& value) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(value);
}
inline void PBC2GFactionCreate::set_banner(const char* value) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(value);
}
inline void PBC2GFactionCreate::set_banner(const char* value, size_t size) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBC2GFactionCreate::mutable_banner() {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  return banner_;
}
inline ::std::string* PBC2GFactionCreate::release_banner() {
  clear_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = banner_;
    banner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string declaration = 5;
inline bool PBC2GFactionCreate::has_declaration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBC2GFactionCreate::set_has_declaration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBC2GFactionCreate::clear_has_declaration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBC2GFactionCreate::clear_declaration() {
  if (declaration_ != &::google::protobuf::internal::kEmptyString) {
    declaration_->clear();
  }
  clear_has_declaration();
}
inline const ::std::string& PBC2GFactionCreate::declaration() const {
  return *declaration_;
}
inline void PBC2GFactionCreate::set_declaration(const ::std::string& value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBC2GFactionCreate::set_declaration(const char* value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBC2GFactionCreate::set_declaration(const char* value, size_t size) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBC2GFactionCreate::mutable_declaration() {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  return declaration_;
}
inline ::std::string* PBC2GFactionCreate::release_declaration() {
  clear_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = declaration_;
    declaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 playerid = 6;
inline bool PBC2GFactionCreate::has_playerid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBC2GFactionCreate::set_has_playerid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBC2GFactionCreate::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBC2GFactionCreate::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBC2GFactionCreate::playerid() const {
  return playerid_;
}
inline void PBC2GFactionCreate::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 corps = 7;
inline bool PBC2GFactionCreate::has_corps() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBC2GFactionCreate::set_has_corps() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBC2GFactionCreate::clear_has_corps() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBC2GFactionCreate::clear_corps() {
  corps_ = 0u;
  clear_has_corps();
}
inline ::google::protobuf::uint32 PBC2GFactionCreate::corps() const {
  return corps_;
}
inline void PBC2GFactionCreate::set_corps(::google::protobuf::uint32 value) {
  set_has_corps();
  corps_ = value;
}

// optional uint32 creattime = 8;
inline bool PBC2GFactionCreate::has_creattime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBC2GFactionCreate::set_has_creattime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBC2GFactionCreate::clear_has_creattime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBC2GFactionCreate::clear_creattime() {
  creattime_ = 0u;
  clear_has_creattime();
}
inline ::google::protobuf::uint32 PBC2GFactionCreate::creattime() const {
  return creattime_;
}
inline void PBC2GFactionCreate::set_creattime(::google::protobuf::uint32 value) {
  set_has_creattime();
  creattime_ = value;
}

// optional .PBMoneyConsume consume = 9;
inline bool PBC2GFactionCreate::has_consume() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBC2GFactionCreate::set_has_consume() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBC2GFactionCreate::clear_has_consume() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBC2GFactionCreate::clear_consume() {
  if (consume_ != NULL) consume_->::PBMoneyConsume::Clear();
  clear_has_consume();
}
inline const ::PBMoneyConsume& PBC2GFactionCreate::consume() const {
  return consume_ != NULL ? *consume_ : *default_instance_->consume_;
}
inline ::PBMoneyConsume* PBC2GFactionCreate::mutable_consume() {
  set_has_consume();
  if (consume_ == NULL) consume_ = new ::PBMoneyConsume;
  return consume_;
}
inline ::PBMoneyConsume* PBC2GFactionCreate::release_consume() {
  clear_has_consume();
  ::PBMoneyConsume* temp = consume_;
  consume_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBC2GFactionApply

// optional uint32 factionid = 1;
inline bool PBC2GFactionApply::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionApply::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionApply::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionApply::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBC2GFactionApply::factionid() const {
  return factionid_;
}
inline void PBC2GFactionApply::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 worldid = 2;
inline bool PBC2GFactionApply::has_worldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GFactionApply::set_has_worldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GFactionApply::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GFactionApply::clear_worldid() {
  worldid_ = 0u;
  clear_has_worldid();
}
inline ::google::protobuf::uint32 PBC2GFactionApply::worldid() const {
  return worldid_;
}
inline void PBC2GFactionApply::set_worldid(::google::protobuf::uint32 value) {
  set_has_worldid();
  worldid_ = value;
}

// optional bool isapply = 3;
inline bool PBC2GFactionApply::has_isapply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GFactionApply::set_has_isapply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GFactionApply::clear_has_isapply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GFactionApply::clear_isapply() {
  isapply_ = false;
  clear_has_isapply();
}
inline bool PBC2GFactionApply::isapply() const {
  return isapply_;
}
inline void PBC2GFactionApply::set_isapply(bool value) {
  set_has_isapply();
  isapply_ = value;
}

// optional .PBFactionMemberBase base = 4;
inline bool PBC2GFactionApply::has_base() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBC2GFactionApply::set_has_base() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBC2GFactionApply::clear_has_base() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBC2GFactionApply::clear_base() {
  if (base_ != NULL) base_->::PBFactionMemberBase::Clear();
  clear_has_base();
}
inline const ::PBFactionMemberBase& PBC2GFactionApply::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::PBFactionMemberBase* PBC2GFactionApply::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::PBFactionMemberBase;
  return base_;
}
inline ::PBFactionMemberBase* PBC2GFactionApply::release_base() {
  clear_has_base();
  ::PBFactionMemberBase* temp = base_;
  base_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2CFactionList

// repeated .PBFactionDisplay list = 1;
inline int PBG2CFactionList::list_size() const {
  return list_.size();
}
inline void PBG2CFactionList::clear_list() {
  list_.Clear();
}
inline const ::PBFactionDisplay& PBG2CFactionList::list(int index) const {
  return list_.Get(index);
}
inline ::PBFactionDisplay* PBG2CFactionList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::PBFactionDisplay* PBG2CFactionList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionDisplay >&
PBG2CFactionList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionDisplay >*
PBG2CFactionList::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// PBC2GFactionEdit

// optional string declaration = 1;
inline bool PBC2GFactionEdit::has_declaration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionEdit::set_has_declaration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionEdit::clear_has_declaration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionEdit::clear_declaration() {
  if (declaration_ != &::google::protobuf::internal::kEmptyString) {
    declaration_->clear();
  }
  clear_has_declaration();
}
inline const ::std::string& PBC2GFactionEdit::declaration() const {
  return *declaration_;
}
inline void PBC2GFactionEdit::set_declaration(const ::std::string& value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBC2GFactionEdit::set_declaration(const char* value) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(value);
}
inline void PBC2GFactionEdit::set_declaration(const char* value, size_t size) {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  declaration_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBC2GFactionEdit::mutable_declaration() {
  set_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    declaration_ = new ::std::string;
  }
  return declaration_;
}
inline ::std::string* PBC2GFactionEdit::release_declaration() {
  clear_has_declaration();
  if (declaration_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = declaration_;
    declaration_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBG2CFactionApplyList

// repeated .PBFactionApplyData applys = 1;
inline int PBG2CFactionApplyList::applys_size() const {
  return applys_.size();
}
inline void PBG2CFactionApplyList::clear_applys() {
  applys_.Clear();
}
inline const ::PBFactionApplyData& PBG2CFactionApplyList::applys(int index) const {
  return applys_.Get(index);
}
inline ::PBFactionApplyData* PBG2CFactionApplyList::mutable_applys(int index) {
  return applys_.Mutable(index);
}
inline ::PBFactionApplyData* PBG2CFactionApplyList::add_applys() {
  return applys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >&
PBG2CFactionApplyList::applys() const {
  return applys_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionApplyData >*
PBG2CFactionApplyList::mutable_applys() {
  return &applys_;
}

// optional bool autoapply = 2;
inline bool PBG2CFactionApplyList::has_autoapply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionApplyList::set_has_autoapply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionApplyList::clear_has_autoapply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionApplyList::clear_autoapply() {
  autoapply_ = false;
  clear_has_autoapply();
}
inline bool PBG2CFactionApplyList::autoapply() const {
  return autoapply_;
}
inline void PBG2CFactionApplyList::set_autoapply(bool value) {
  set_has_autoapply();
  autoapply_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionMemberList

// repeated .PBFactionMember members = 1;
inline int PBG2CFactionMemberList::members_size() const {
  return members_.size();
}
inline void PBG2CFactionMemberList::clear_members() {
  members_.Clear();
}
inline const ::PBFactionMember& PBG2CFactionMemberList::members(int index) const {
  return members_.Get(index);
}
inline ::PBFactionMember* PBG2CFactionMemberList::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::PBFactionMember* PBG2CFactionMemberList::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionMember >&
PBG2CFactionMemberList::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionMember >*
PBG2CFactionMemberList::mutable_members() {
  return &members_;
}

// -------------------------------------------------------------------

// PBC2GFactionRequire

// optional uint32 level = 1;
inline bool PBC2GFactionRequire::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionRequire::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionRequire::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionRequire::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBC2GFactionRequire::level() const {
  return level_;
}
inline void PBC2GFactionRequire::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionSyn

// optional .PBFactionDBData data = 1;
inline bool PBG2CFactionSyn::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionSyn::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionSyn::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionSyn::clear_data() {
  if (data_ != NULL) data_->::PBFactionDBData::Clear();
  clear_has_data();
}
inline const ::PBFactionDBData& PBG2CFactionSyn::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::PBFactionDBData* PBG2CFactionSyn::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::PBFactionDBData;
  return data_;
}
inline ::PBFactionDBData* PBG2CFactionSyn::release_data() {
  clear_has_data();
  ::PBFactionDBData* temp = data_;
  data_ = NULL;
  return temp;
}

// optional string leadername = 2;
inline bool PBG2CFactionSyn::has_leadername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionSyn::set_has_leadername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionSyn::clear_has_leadername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionSyn::clear_leadername() {
  if (leadername_ != &::google::protobuf::internal::kEmptyString) {
    leadername_->clear();
  }
  clear_has_leadername();
}
inline const ::std::string& PBG2CFactionSyn::leadername() const {
  return *leadername_;
}
inline void PBG2CFactionSyn::set_leadername(const ::std::string& value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
}
inline void PBG2CFactionSyn::set_leadername(const char* value) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(value);
}
inline void PBG2CFactionSyn::set_leadername(const char* value, size_t size) {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  leadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CFactionSyn::mutable_leadername() {
  set_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    leadername_ = new ::std::string;
  }
  return leadername_;
}
inline ::std::string* PBG2CFactionSyn::release_leadername() {
  clear_has_leadername();
  if (leadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leadername_;
    leadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 job = 3;
inline bool PBG2CFactionSyn::has_job() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CFactionSyn::set_has_job() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CFactionSyn::clear_has_job() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CFactionSyn::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBG2CFactionSyn::job() const {
  return job_;
}
inline void PBG2CFactionSyn::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionApplying

// repeated uint32 applys = 1;
inline int PBG2CFactionApplying::applys_size() const {
  return applys_.size();
}
inline void PBG2CFactionApplying::clear_applys() {
  applys_.Clear();
}
inline ::google::protobuf::uint32 PBG2CFactionApplying::applys(int index) const {
  return applys_.Get(index);
}
inline void PBG2CFactionApplying::set_applys(int index, ::google::protobuf::uint32 value) {
  applys_.Set(index, value);
}
inline void PBG2CFactionApplying::add_applys(::google::protobuf::uint32 value) {
  applys_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBG2CFactionApplying::applys() const {
  return applys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBG2CFactionApplying::mutable_applys() {
  return &applys_;
}

// -------------------------------------------------------------------

// PBG2CImpeachAck

// optional .PBFactionImpeach impeach = 1;
inline bool PBG2CImpeachAck::has_impeach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CImpeachAck::set_has_impeach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CImpeachAck::clear_has_impeach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CImpeachAck::clear_impeach() {
  if (impeach_ != NULL) impeach_->::PBFactionImpeach::Clear();
  clear_has_impeach();
}
inline const ::PBFactionImpeach& PBG2CImpeachAck::impeach() const {
  return impeach_ != NULL ? *impeach_ : *default_instance_->impeach_;
}
inline ::PBFactionImpeach* PBG2CImpeachAck::mutable_impeach() {
  set_has_impeach();
  if (impeach_ == NULL) impeach_ = new ::PBFactionImpeach;
  return impeach_;
}
inline ::PBFactionImpeach* PBG2CImpeachAck::release_impeach() {
  clear_has_impeach();
  ::PBFactionImpeach* temp = impeach_;
  impeach_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBC2GFactionOpt

// optional uint32 factionid = 1;
inline bool PBC2GFactionOpt::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionOpt::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionOpt::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionOpt::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBC2GFactionOpt::factionid() const {
  return factionid_;
}
inline void PBC2GFactionOpt::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 uparam1 = 2;
inline bool PBC2GFactionOpt::has_uparam1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GFactionOpt::set_has_uparam1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GFactionOpt::clear_has_uparam1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GFactionOpt::clear_uparam1() {
  uparam1_ = 0u;
  clear_has_uparam1();
}
inline ::google::protobuf::uint32 PBC2GFactionOpt::uparam1() const {
  return uparam1_;
}
inline void PBC2GFactionOpt::set_uparam1(::google::protobuf::uint32 value) {
  set_has_uparam1();
  uparam1_ = value;
}

// optional uint32 uparam2 = 3;
inline bool PBC2GFactionOpt::has_uparam2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBC2GFactionOpt::set_has_uparam2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBC2GFactionOpt::clear_has_uparam2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBC2GFactionOpt::clear_uparam2() {
  uparam2_ = 0u;
  clear_has_uparam2();
}
inline ::google::protobuf::uint32 PBC2GFactionOpt::uparam2() const {
  return uparam2_;
}
inline void PBC2GFactionOpt::set_uparam2(::google::protobuf::uint32 value) {
  set_has_uparam2();
  uparam2_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionOptFeedback

// optional uint32 factionid = 1;
inline bool PBG2CFactionOptFeedback::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionOptFeedback::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionOptFeedback::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionOptFeedback::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBG2CFactionOptFeedback::factionid() const {
  return factionid_;
}
inline void PBG2CFactionOptFeedback::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 opt = 2;
inline bool PBG2CFactionOptFeedback::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionOptFeedback::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionOptFeedback::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionOptFeedback::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 PBG2CFactionOptFeedback::opt() const {
  return opt_;
}
inline void PBG2CFactionOptFeedback::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// optional uint32 uparam1 = 3;
inline bool PBG2CFactionOptFeedback::has_uparam1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CFactionOptFeedback::set_has_uparam1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CFactionOptFeedback::clear_has_uparam1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CFactionOptFeedback::clear_uparam1() {
  uparam1_ = 0u;
  clear_has_uparam1();
}
inline ::google::protobuf::uint32 PBG2CFactionOptFeedback::uparam1() const {
  return uparam1_;
}
inline void PBG2CFactionOptFeedback::set_uparam1(::google::protobuf::uint32 value) {
  set_has_uparam1();
  uparam1_ = value;
}

// optional uint32 uparam2 = 4;
inline bool PBG2CFactionOptFeedback::has_uparam2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2CFactionOptFeedback::set_has_uparam2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2CFactionOptFeedback::clear_has_uparam2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2CFactionOptFeedback::clear_uparam2() {
  uparam2_ = 0u;
  clear_has_uparam2();
}
inline ::google::protobuf::uint32 PBG2CFactionOptFeedback::uparam2() const {
  return uparam2_;
}
inline void PBG2CFactionOptFeedback::set_uparam2(::google::protobuf::uint32 value) {
  set_has_uparam2();
  uparam2_ = value;
}

// optional string sparam1 = 5;
inline bool PBG2CFactionOptFeedback::has_sparam1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBG2CFactionOptFeedback::set_has_sparam1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBG2CFactionOptFeedback::clear_has_sparam1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBG2CFactionOptFeedback::clear_sparam1() {
  if (sparam1_ != &::google::protobuf::internal::kEmptyString) {
    sparam1_->clear();
  }
  clear_has_sparam1();
}
inline const ::std::string& PBG2CFactionOptFeedback::sparam1() const {
  return *sparam1_;
}
inline void PBG2CFactionOptFeedback::set_sparam1(const ::std::string& value) {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  sparam1_->assign(value);
}
inline void PBG2CFactionOptFeedback::set_sparam1(const char* value) {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  sparam1_->assign(value);
}
inline void PBG2CFactionOptFeedback::set_sparam1(const char* value, size_t size) {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  sparam1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CFactionOptFeedback::mutable_sparam1() {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  return sparam1_;
}
inline ::std::string* PBG2CFactionOptFeedback::release_sparam1() {
  clear_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sparam1_;
    sparam1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBG2CFactionOptResult

// optional uint32 factionid = 1;
inline bool PBG2CFactionOptResult::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionOptResult::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionOptResult::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionOptResult::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBG2CFactionOptResult::factionid() const {
  return factionid_;
}
inline void PBG2CFactionOptResult::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 opt = 2;
inline bool PBG2CFactionOptResult::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionOptResult::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionOptResult::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionOptResult::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 PBG2CFactionOptResult::opt() const {
  return opt_;
}
inline void PBG2CFactionOptResult::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// optional uint32 uparam1 = 3;
inline bool PBG2CFactionOptResult::has_uparam1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CFactionOptResult::set_has_uparam1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CFactionOptResult::clear_has_uparam1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CFactionOptResult::clear_uparam1() {
  uparam1_ = 0u;
  clear_has_uparam1();
}
inline ::google::protobuf::uint32 PBG2CFactionOptResult::uparam1() const {
  return uparam1_;
}
inline void PBG2CFactionOptResult::set_uparam1(::google::protobuf::uint32 value) {
  set_has_uparam1();
  uparam1_ = value;
}

// optional uint32 uparam2 = 4;
inline bool PBG2CFactionOptResult::has_uparam2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBG2CFactionOptResult::set_has_uparam2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBG2CFactionOptResult::clear_has_uparam2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBG2CFactionOptResult::clear_uparam2() {
  uparam2_ = 0u;
  clear_has_uparam2();
}
inline ::google::protobuf::uint32 PBG2CFactionOptResult::uparam2() const {
  return uparam2_;
}
inline void PBG2CFactionOptResult::set_uparam2(::google::protobuf::uint32 value) {
  set_has_uparam2();
  uparam2_ = value;
}

// optional string sparam1 = 5;
inline bool PBG2CFactionOptResult::has_sparam1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBG2CFactionOptResult::set_has_sparam1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBG2CFactionOptResult::clear_has_sparam1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBG2CFactionOptResult::clear_sparam1() {
  if (sparam1_ != &::google::protobuf::internal::kEmptyString) {
    sparam1_->clear();
  }
  clear_has_sparam1();
}
inline const ::std::string& PBG2CFactionOptResult::sparam1() const {
  return *sparam1_;
}
inline void PBG2CFactionOptResult::set_sparam1(const ::std::string& value) {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  sparam1_->assign(value);
}
inline void PBG2CFactionOptResult::set_sparam1(const char* value) {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  sparam1_->assign(value);
}
inline void PBG2CFactionOptResult::set_sparam1(const char* value, size_t size) {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  sparam1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CFactionOptResult::mutable_sparam1() {
  set_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    sparam1_ = new ::std::string;
  }
  return sparam1_;
}
inline ::std::string* PBG2CFactionOptResult::release_sparam1() {
  clear_has_sparam1();
  if (sparam1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sparam1_;
    sparam1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBCAGSetElite

// repeated uint32 memberid = 1;
inline int PBCAGSetElite::memberid_size() const {
  return memberid_.size();
}
inline void PBCAGSetElite::clear_memberid() {
  memberid_.Clear();
}
inline ::google::protobuf::uint32 PBCAGSetElite::memberid(int index) const {
  return memberid_.Get(index);
}
inline void PBCAGSetElite::set_memberid(int index, ::google::protobuf::uint32 value) {
  memberid_.Set(index, value);
}
inline void PBCAGSetElite::add_memberid(::google::protobuf::uint32 value) {
  memberid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCAGSetElite::memberid() const {
  return memberid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCAGSetElite::mutable_memberid() {
  return &memberid_;
}

// -------------------------------------------------------------------

// PBCAGSetBeauty

// repeated uint32 memberid = 1;
inline int PBCAGSetBeauty::memberid_size() const {
  return memberid_.size();
}
inline void PBCAGSetBeauty::clear_memberid() {
  memberid_.Clear();
}
inline ::google::protobuf::uint32 PBCAGSetBeauty::memberid(int index) const {
  return memberid_.Get(index);
}
inline void PBCAGSetBeauty::set_memberid(int index, ::google::protobuf::uint32 value) {
  memberid_.Set(index, value);
}
inline void PBCAGSetBeauty::add_memberid(::google::protobuf::uint32 value) {
  memberid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBCAGSetBeauty::memberid() const {
  return memberid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBCAGSetBeauty::mutable_memberid() {
  return &memberid_;
}

// -------------------------------------------------------------------

// PBCAGSetPrivilege

// optional uint32 jobid = 1;
inline bool PBCAGSetPrivilege::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCAGSetPrivilege::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCAGSetPrivilege::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCAGSetPrivilege::clear_jobid() {
  jobid_ = 0u;
  clear_has_jobid();
}
inline ::google::protobuf::uint32 PBCAGSetPrivilege::jobid() const {
  return jobid_;
}
inline void PBCAGSetPrivilege::set_jobid(::google::protobuf::uint32 value) {
  set_has_jobid();
  jobid_ = value;
}

// optional uint64 privilegeid = 2;
inline bool PBCAGSetPrivilege::has_privilegeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCAGSetPrivilege::set_has_privilegeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCAGSetPrivilege::clear_has_privilegeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCAGSetPrivilege::clear_privilegeid() {
  privilegeid_ = GOOGLE_ULONGLONG(0);
  clear_has_privilegeid();
}
inline ::google::protobuf::uint64 PBCAGSetPrivilege::privilegeid() const {
  return privilegeid_;
}
inline void PBCAGSetPrivilege::set_privilegeid(::google::protobuf::uint64 value) {
  set_has_privilegeid();
  privilegeid_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionBeInviteJoin

// optional .PBFactionDisplay display = 1;
inline bool PBG2CFactionBeInviteJoin::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionBeInviteJoin::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionBeInviteJoin::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionBeInviteJoin::clear_display() {
  if (display_ != NULL) display_->::PBFactionDisplay::Clear();
  clear_has_display();
}
inline const ::PBFactionDisplay& PBG2CFactionBeInviteJoin::display() const {
  return display_ != NULL ? *display_ : *default_instance_->display_;
}
inline ::PBFactionDisplay* PBG2CFactionBeInviteJoin::mutable_display() {
  set_has_display();
  if (display_ == NULL) display_ = new ::PBFactionDisplay;
  return display_;
}
inline ::PBFactionDisplay* PBG2CFactionBeInviteJoin::release_display() {
  clear_has_display();
  ::PBFactionDisplay* temp = display_;
  display_ = NULL;
  return temp;
}

// optional uint32 inviterid = 2;
inline bool PBG2CFactionBeInviteJoin::has_inviterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionBeInviteJoin::set_has_inviterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionBeInviteJoin::clear_has_inviterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionBeInviteJoin::clear_inviterid() {
  inviterid_ = 0u;
  clear_has_inviterid();
}
inline ::google::protobuf::uint32 PBG2CFactionBeInviteJoin::inviterid() const {
  return inviterid_;
}
inline void PBG2CFactionBeInviteJoin::set_inviterid(::google::protobuf::uint32 value) {
  set_has_inviterid();
  inviterid_ = value;
}

// optional string invitername = 3;
inline bool PBG2CFactionBeInviteJoin::has_invitername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CFactionBeInviteJoin::set_has_invitername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CFactionBeInviteJoin::clear_has_invitername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CFactionBeInviteJoin::clear_invitername() {
  if (invitername_ != &::google::protobuf::internal::kEmptyString) {
    invitername_->clear();
  }
  clear_has_invitername();
}
inline const ::std::string& PBG2CFactionBeInviteJoin::invitername() const {
  return *invitername_;
}
inline void PBG2CFactionBeInviteJoin::set_invitername(const ::std::string& value) {
  set_has_invitername();
  if (invitername_ == &::google::protobuf::internal::kEmptyString) {
    invitername_ = new ::std::string;
  }
  invitername_->assign(value);
}
inline void PBG2CFactionBeInviteJoin::set_invitername(const char* value) {
  set_has_invitername();
  if (invitername_ == &::google::protobuf::internal::kEmptyString) {
    invitername_ = new ::std::string;
  }
  invitername_->assign(value);
}
inline void PBG2CFactionBeInviteJoin::set_invitername(const char* value, size_t size) {
  set_has_invitername();
  if (invitername_ == &::google::protobuf::internal::kEmptyString) {
    invitername_ = new ::std::string;
  }
  invitername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CFactionBeInviteJoin::mutable_invitername() {
  set_has_invitername();
  if (invitername_ == &::google::protobuf::internal::kEmptyString) {
    invitername_ = new ::std::string;
  }
  return invitername_;
}
inline ::std::string* PBG2CFactionBeInviteJoin::release_invitername() {
  clear_has_invitername();
  if (invitername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = invitername_;
    invitername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBG2CFactionInviteJoinResult

// optional uint32 playerid = 1;
inline bool PBG2CFactionInviteJoinResult::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionInviteJoinResult::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionInviteJoinResult::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionInviteJoinResult::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBG2CFactionInviteJoinResult::playerid() const {
  return playerid_;
}
inline void PBG2CFactionInviteJoinResult::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional string playername = 2;
inline bool PBG2CFactionInviteJoinResult::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionInviteJoinResult::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionInviteJoinResult::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionInviteJoinResult::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PBG2CFactionInviteJoinResult::playername() const {
  return *playername_;
}
inline void PBG2CFactionInviteJoinResult::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CFactionInviteJoinResult::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PBG2CFactionInviteJoinResult::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBG2CFactionInviteJoinResult::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PBG2CFactionInviteJoinResult::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool isagree = 3;
inline bool PBG2CFactionInviteJoinResult::has_isagree() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CFactionInviteJoinResult::set_has_isagree() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CFactionInviteJoinResult::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CFactionInviteJoinResult::clear_isagree() {
  isagree_ = false;
  clear_has_isagree();
}
inline bool PBG2CFactionInviteJoinResult::isagree() const {
  return isagree_;
}
inline void PBG2CFactionInviteJoinResult::set_isagree(bool value) {
  set_has_isagree();
  isagree_ = value;
}

// -------------------------------------------------------------------

// FactionSelfSkillInfo

// optional uint32 skillid = 1;
inline bool FactionSelfSkillInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactionSelfSkillInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactionSelfSkillInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactionSelfSkillInfo::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 FactionSelfSkillInfo::skillid() const {
  return skillid_;
}
inline void FactionSelfSkillInfo::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 selflevel = 2;
inline bool FactionSelfSkillInfo::has_selflevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactionSelfSkillInfo::set_has_selflevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactionSelfSkillInfo::clear_has_selflevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactionSelfSkillInfo::clear_selflevel() {
  selflevel_ = 0u;
  clear_has_selflevel();
}
inline ::google::protobuf::uint32 FactionSelfSkillInfo::selflevel() const {
  return selflevel_;
}
inline void FactionSelfSkillInfo::set_selflevel(::google::protobuf::uint32 value) {
  set_has_selflevel();
  selflevel_ = value;
}

// optional uint32 studylevel = 3;
inline bool FactionSelfSkillInfo::has_studylevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactionSelfSkillInfo::set_has_studylevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactionSelfSkillInfo::clear_has_studylevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactionSelfSkillInfo::clear_studylevel() {
  studylevel_ = 0u;
  clear_has_studylevel();
}
inline ::google::protobuf::uint32 FactionSelfSkillInfo::studylevel() const {
  return studylevel_;
}
inline void FactionSelfSkillInfo::set_studylevel(::google::protobuf::uint32 value) {
  set_has_studylevel();
  studylevel_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionSelfSkillList

// repeated .FactionSelfSkillInfo list = 1;
inline int PBG2CFactionSelfSkillList::list_size() const {
  return list_.size();
}
inline void PBG2CFactionSelfSkillList::clear_list() {
  list_.Clear();
}
inline const ::FactionSelfSkillInfo& PBG2CFactionSelfSkillList::list(int index) const {
  return list_.Get(index);
}
inline ::FactionSelfSkillInfo* PBG2CFactionSelfSkillList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::FactionSelfSkillInfo* PBG2CFactionSelfSkillList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FactionSelfSkillInfo >&
PBG2CFactionSelfSkillList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::FactionSelfSkillInfo >*
PBG2CFactionSelfSkillList::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// FactionStudyFactionInfo

// optional .PBFactionDisplay info = 1;
inline bool FactionStudyFactionInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactionStudyFactionInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactionStudyFactionInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactionStudyFactionInfo::clear_info() {
  if (info_ != NULL) info_->::PBFactionDisplay::Clear();
  clear_has_info();
}
inline const ::PBFactionDisplay& FactionStudyFactionInfo::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::PBFactionDisplay* FactionStudyFactionInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::PBFactionDisplay;
  return info_;
}
inline ::PBFactionDisplay* FactionStudyFactionInfo::release_info() {
  clear_has_info();
  ::PBFactionDisplay* temp = info_;
  info_ = NULL;
  return temp;
}

// optional uint32 levelsum = 2;
inline bool FactionStudyFactionInfo::has_levelsum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactionStudyFactionInfo::set_has_levelsum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactionStudyFactionInfo::clear_has_levelsum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactionStudyFactionInfo::clear_levelsum() {
  levelsum_ = 0u;
  clear_has_levelsum();
}
inline ::google::protobuf::uint32 FactionStudyFactionInfo::levelsum() const {
  return levelsum_;
}
inline void FactionStudyFactionInfo::set_levelsum(::google::protobuf::uint32 value) {
  set_has_levelsum();
  levelsum_ = value;
}

// optional uint32 moneytype = 3;
inline bool FactionStudyFactionInfo::has_moneytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactionStudyFactionInfo::set_has_moneytype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactionStudyFactionInfo::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactionStudyFactionInfo::clear_moneytype() {
  moneytype_ = 0u;
  clear_has_moneytype();
}
inline ::google::protobuf::uint32 FactionStudyFactionInfo::moneytype() const {
  return moneytype_;
}
inline void FactionStudyFactionInfo::set_moneytype(::google::protobuf::uint32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional uint32 moneyvalue = 4;
inline bool FactionStudyFactionInfo::has_moneyvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FactionStudyFactionInfo::set_has_moneyvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FactionStudyFactionInfo::clear_has_moneyvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FactionStudyFactionInfo::clear_moneyvalue() {
  moneyvalue_ = 0u;
  clear_has_moneyvalue();
}
inline ::google::protobuf::uint32 FactionStudyFactionInfo::moneyvalue() const {
  return moneyvalue_;
}
inline void FactionStudyFactionInfo::set_moneyvalue(::google::protobuf::uint32 value) {
  set_has_moneyvalue();
  moneyvalue_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionStudyFactionList

// repeated .FactionStudyFactionInfo list = 1;
inline int PBG2CFactionStudyFactionList::list_size() const {
  return list_.size();
}
inline void PBG2CFactionStudyFactionList::clear_list() {
  list_.Clear();
}
inline const ::FactionStudyFactionInfo& PBG2CFactionStudyFactionList::list(int index) const {
  return list_.Get(index);
}
inline ::FactionStudyFactionInfo* PBG2CFactionStudyFactionList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::FactionStudyFactionInfo* PBG2CFactionStudyFactionList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FactionStudyFactionInfo >&
PBG2CFactionStudyFactionList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::FactionStudyFactionInfo >*
PBG2CFactionStudyFactionList::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// PBC2GWatchOhterSkill

// optional uint32 factionid = 1;
inline bool PBC2GWatchOhterSkill::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GWatchOhterSkill::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GWatchOhterSkill::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GWatchOhterSkill::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBC2GWatchOhterSkill::factionid() const {
  return factionid_;
}
inline void PBC2GWatchOhterSkill::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// -------------------------------------------------------------------

// FactionOhterSkillInfo

// optional uint32 skillid = 1;
inline bool FactionOhterSkillInfo::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactionOhterSkillInfo::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactionOhterSkillInfo::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactionOhterSkillInfo::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 FactionOhterSkillInfo::skillid() const {
  return skillid_;
}
inline void FactionOhterSkillInfo::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 selflevel = 2;
inline bool FactionOhterSkillInfo::has_selflevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactionOhterSkillInfo::set_has_selflevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactionOhterSkillInfo::clear_has_selflevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactionOhterSkillInfo::clear_selflevel() {
  selflevel_ = 0u;
  clear_has_selflevel();
}
inline ::google::protobuf::uint32 FactionOhterSkillInfo::selflevel() const {
  return selflevel_;
}
inline void FactionOhterSkillInfo::set_selflevel(::google::protobuf::uint32 value) {
  set_has_selflevel();
  selflevel_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionOhterSkillList

// optional uint32 factionid = 1;
inline bool PBG2CFactionOhterSkillList::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionOhterSkillList::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionOhterSkillList::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionOhterSkillList::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBG2CFactionOhterSkillList::factionid() const {
  return factionid_;
}
inline void PBG2CFactionOhterSkillList::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// repeated .FactionOhterSkillInfo list = 2;
inline int PBG2CFactionOhterSkillList::list_size() const {
  return list_.size();
}
inline void PBG2CFactionOhterSkillList::clear_list() {
  list_.Clear();
}
inline const ::FactionOhterSkillInfo& PBG2CFactionOhterSkillList::list(int index) const {
  return list_.Get(index);
}
inline ::FactionOhterSkillInfo* PBG2CFactionOhterSkillList::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::FactionOhterSkillInfo* PBG2CFactionOhterSkillList::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FactionOhterSkillInfo >&
PBG2CFactionOhterSkillList::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::FactionOhterSkillInfo >*
PBG2CFactionOhterSkillList::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// PBC2GUpgradeSelfSkill

// optional uint32 skillid = 1;
inline bool PBC2GUpgradeSelfSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GUpgradeSelfSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GUpgradeSelfSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GUpgradeSelfSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBC2GUpgradeSelfSkill::skillid() const {
  return skillid_;
}
inline void PBC2GUpgradeSelfSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 level = 2;
inline bool PBC2GUpgradeSelfSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GUpgradeSelfSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GUpgradeSelfSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GUpgradeSelfSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBC2GUpgradeSelfSkill::level() const {
  return level_;
}
inline void PBC2GUpgradeSelfSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PBG2CUpgradeSelfSkill

// optional uint32 skillid = 1;
inline bool PBG2CUpgradeSelfSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CUpgradeSelfSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CUpgradeSelfSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CUpgradeSelfSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBG2CUpgradeSelfSkill::skillid() const {
  return skillid_;
}
inline void PBG2CUpgradeSelfSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 level = 2;
inline bool PBG2CUpgradeSelfSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CUpgradeSelfSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CUpgradeSelfSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CUpgradeSelfSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBG2CUpgradeSelfSkill::level() const {
  return level_;
}
inline void PBG2CUpgradeSelfSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PBGAWUpgradeSelfSkill

// optional uint32 skillid = 1;
inline bool PBGAWUpgradeSelfSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGAWUpgradeSelfSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGAWUpgradeSelfSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGAWUpgradeSelfSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBGAWUpgradeSelfSkill::skillid() const {
  return skillid_;
}
inline void PBGAWUpgradeSelfSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 level = 2;
inline bool PBGAWUpgradeSelfSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGAWUpgradeSelfSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGAWUpgradeSelfSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGAWUpgradeSelfSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBGAWUpgradeSelfSkill::level() const {
  return level_;
}
inline void PBGAWUpgradeSelfSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional .PBMoneyConsume money = 3;
inline bool PBGAWUpgradeSelfSkill::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBGAWUpgradeSelfSkill::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBGAWUpgradeSelfSkill::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBGAWUpgradeSelfSkill::clear_money() {
  if (money_ != NULL) money_->::PBMoneyConsume::Clear();
  clear_has_money();
}
inline const ::PBMoneyConsume& PBGAWUpgradeSelfSkill::money() const {
  return money_ != NULL ? *money_ : *default_instance_->money_;
}
inline ::PBMoneyConsume* PBGAWUpgradeSelfSkill::mutable_money() {
  set_has_money();
  if (money_ == NULL) money_ = new ::PBMoneyConsume;
  return money_;
}
inline ::PBMoneyConsume* PBGAWUpgradeSelfSkill::release_money() {
  clear_has_money();
  ::PBMoneyConsume* temp = money_;
  money_ = NULL;
  return temp;
}

// optional uint32 contribution = 4;
inline bool PBGAWUpgradeSelfSkill::has_contribution() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBGAWUpgradeSelfSkill::set_has_contribution() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBGAWUpgradeSelfSkill::clear_has_contribution() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBGAWUpgradeSelfSkill::clear_contribution() {
  contribution_ = 0u;
  clear_has_contribution();
}
inline ::google::protobuf::uint32 PBGAWUpgradeSelfSkill::contribution() const {
  return contribution_;
}
inline void PBGAWUpgradeSelfSkill::set_contribution(::google::protobuf::uint32 value) {
  set_has_contribution();
  contribution_ = value;
}

// -------------------------------------------------------------------

// PBAddStudyRelation

// optional uint32 factionid = 1;
inline bool PBAddStudyRelation::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBAddStudyRelation::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBAddStudyRelation::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBAddStudyRelation::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBAddStudyRelation::factionid() const {
  return factionid_;
}
inline void PBAddStudyRelation::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 moneytype = 2;
inline bool PBAddStudyRelation::has_moneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBAddStudyRelation::set_has_moneytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBAddStudyRelation::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBAddStudyRelation::clear_moneytype() {
  moneytype_ = 0u;
  clear_has_moneytype();
}
inline ::google::protobuf::uint32 PBAddStudyRelation::moneytype() const {
  return moneytype_;
}
inline void PBAddStudyRelation::set_moneytype(::google::protobuf::uint32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional uint32 moneyvalue = 3;
inline bool PBAddStudyRelation::has_moneyvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBAddStudyRelation::set_has_moneyvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBAddStudyRelation::clear_has_moneyvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBAddStudyRelation::clear_moneyvalue() {
  moneyvalue_ = 0u;
  clear_has_moneyvalue();
}
inline ::google::protobuf::uint32 PBAddStudyRelation::moneyvalue() const {
  return moneyvalue_;
}
inline void PBAddStudyRelation::set_moneyvalue(::google::protobuf::uint32 value) {
  set_has_moneyvalue();
  moneyvalue_ = value;
}

// -------------------------------------------------------------------

// PBC2GAddStudyRelation

// repeated .PBAddStudyRelation faction = 1;
inline int PBC2GAddStudyRelation::faction_size() const {
  return faction_.size();
}
inline void PBC2GAddStudyRelation::clear_faction() {
  faction_.Clear();
}
inline const ::PBAddStudyRelation& PBC2GAddStudyRelation::faction(int index) const {
  return faction_.Get(index);
}
inline ::PBAddStudyRelation* PBC2GAddStudyRelation::mutable_faction(int index) {
  return faction_.Mutable(index);
}
inline ::PBAddStudyRelation* PBC2GAddStudyRelation::add_faction() {
  return faction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBAddStudyRelation >&
PBC2GAddStudyRelation::faction() const {
  return faction_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBAddStudyRelation >*
PBC2GAddStudyRelation::mutable_faction() {
  return &faction_;
}

// -------------------------------------------------------------------

// PBC2GDelStudyRelation

// optional uint32 factionid = 1;
inline bool PBC2GDelStudyRelation::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GDelStudyRelation::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GDelStudyRelation::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GDelStudyRelation::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBC2GDelStudyRelation::factionid() const {
  return factionid_;
}
inline void PBC2GDelStudyRelation::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// -------------------------------------------------------------------

// PBG2CDelStudyRelation

// optional uint32 factionid = 1;
inline bool PBG2CDelStudyRelation::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CDelStudyRelation::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CDelStudyRelation::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CDelStudyRelation::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBG2CDelStudyRelation::factionid() const {
  return factionid_;
}
inline void PBG2CDelStudyRelation::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// -------------------------------------------------------------------

// PBC2GFactionDevelopSkill

// optional uint32 skillid = 1;
inline bool PBC2GFactionDevelopSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionDevelopSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionDevelopSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionDevelopSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBC2GFactionDevelopSkill::skillid() const {
  return skillid_;
}
inline void PBC2GFactionDevelopSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 level = 2;
inline bool PBC2GFactionDevelopSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GFactionDevelopSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GFactionDevelopSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GFactionDevelopSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBC2GFactionDevelopSkill::level() const {
  return level_;
}
inline void PBC2GFactionDevelopSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionDevelopSkill

// optional uint32 skillid = 1;
inline bool PBG2CFactionDevelopSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionDevelopSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionDevelopSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionDevelopSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBG2CFactionDevelopSkill::skillid() const {
  return skillid_;
}
inline void PBG2CFactionDevelopSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 level = 2;
inline bool PBG2CFactionDevelopSkill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionDevelopSkill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionDevelopSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionDevelopSkill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBG2CFactionDevelopSkill::level() const {
  return level_;
}
inline void PBG2CFactionDevelopSkill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 lefttime = 3;
inline bool PBG2CFactionDevelopSkill::has_lefttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CFactionDevelopSkill::set_has_lefttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CFactionDevelopSkill::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CFactionDevelopSkill::clear_lefttime() {
  lefttime_ = 0u;
  clear_has_lefttime();
}
inline ::google::protobuf::uint32 PBG2CFactionDevelopSkill::lefttime() const {
  return lefttime_;
}
inline void PBG2CFactionDevelopSkill::set_lefttime(::google::protobuf::uint32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// -------------------------------------------------------------------

// PBC2GFactionSuspendDevelopSkill

// optional uint32 skillid = 1;
inline bool PBC2GFactionSuspendDevelopSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionSuspendDevelopSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionSuspendDevelopSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionSuspendDevelopSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBC2GFactionSuspendDevelopSkill::skillid() const {
  return skillid_;
}
inline void PBC2GFactionSuspendDevelopSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional bool suspend = 2;
inline bool PBC2GFactionSuspendDevelopSkill::has_suspend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GFactionSuspendDevelopSkill::set_has_suspend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GFactionSuspendDevelopSkill::clear_has_suspend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GFactionSuspendDevelopSkill::clear_suspend() {
  suspend_ = false;
  clear_has_suspend();
}
inline bool PBC2GFactionSuspendDevelopSkill::suspend() const {
  return suspend_;
}
inline void PBC2GFactionSuspendDevelopSkill::set_suspend(bool value) {
  set_has_suspend();
  suspend_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionSuspendDevelopSkill

// optional uint32 skillid = 1;
inline bool PBG2CFactionSuspendDevelopSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionSuspendDevelopSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionSuspendDevelopSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionSuspendDevelopSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 PBG2CFactionSuspendDevelopSkill::skillid() const {
  return skillid_;
}
inline void PBG2CFactionSuspendDevelopSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional bool suspend = 2;
inline bool PBG2CFactionSuspendDevelopSkill::has_suspend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionSuspendDevelopSkill::set_has_suspend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionSuspendDevelopSkill::clear_has_suspend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionSuspendDevelopSkill::clear_suspend() {
  suspend_ = false;
  clear_has_suspend();
}
inline bool PBG2CFactionSuspendDevelopSkill::suspend() const {
  return suspend_;
}
inline void PBG2CFactionSuspendDevelopSkill::set_suspend(bool value) {
  set_has_suspend();
  suspend_ = value;
}

// optional uint32 lefttime = 3;
inline bool PBG2CFactionSuspendDevelopSkill::has_lefttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBG2CFactionSuspendDevelopSkill::set_has_lefttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBG2CFactionSuspendDevelopSkill::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBG2CFactionSuspendDevelopSkill::clear_lefttime() {
  lefttime_ = 0u;
  clear_has_lefttime();
}
inline ::google::protobuf::uint32 PBG2CFactionSuspendDevelopSkill::lefttime() const {
  return lefttime_;
}
inline void PBG2CFactionSuspendDevelopSkill::set_lefttime(::google::protobuf::uint32 value) {
  set_has_lefttime();
  lefttime_ = value;
}

// -------------------------------------------------------------------

// PBC2GFactionOpenStudy

// optional uint32 moneytype = 1;
inline bool PBC2GFactionOpenStudy::has_moneytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionOpenStudy::set_has_moneytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionOpenStudy::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionOpenStudy::clear_moneytype() {
  moneytype_ = 0u;
  clear_has_moneytype();
}
inline ::google::protobuf::uint32 PBC2GFactionOpenStudy::moneytype() const {
  return moneytype_;
}
inline void PBC2GFactionOpenStudy::set_moneytype(::google::protobuf::uint32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional uint32 moneyvalue = 2;
inline bool PBC2GFactionOpenStudy::has_moneyvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GFactionOpenStudy::set_has_moneyvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GFactionOpenStudy::clear_has_moneyvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GFactionOpenStudy::clear_moneyvalue() {
  moneyvalue_ = 0u;
  clear_has_moneyvalue();
}
inline ::google::protobuf::uint32 PBC2GFactionOpenStudy::moneyvalue() const {
  return moneyvalue_;
}
inline void PBC2GFactionOpenStudy::set_moneyvalue(::google::protobuf::uint32 value) {
  set_has_moneyvalue();
  moneyvalue_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionOpenStudy

// optional uint32 moneytype = 1;
inline bool PBG2CFactionOpenStudy::has_moneytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionOpenStudy::set_has_moneytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionOpenStudy::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionOpenStudy::clear_moneytype() {
  moneytype_ = 0u;
  clear_has_moneytype();
}
inline ::google::protobuf::uint32 PBG2CFactionOpenStudy::moneytype() const {
  return moneytype_;
}
inline void PBG2CFactionOpenStudy::set_moneytype(::google::protobuf::uint32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional uint32 moneyvalue = 2;
inline bool PBG2CFactionOpenStudy::has_moneyvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionOpenStudy::set_has_moneyvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionOpenStudy::clear_has_moneyvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionOpenStudy::clear_moneyvalue() {
  moneyvalue_ = 0u;
  clear_has_moneyvalue();
}
inline ::google::protobuf::uint32 PBG2CFactionOpenStudy::moneyvalue() const {
  return moneyvalue_;
}
inline void PBG2CFactionOpenStudy::set_moneyvalue(::google::protobuf::uint32 value) {
  set_has_moneyvalue();
  moneyvalue_ = value;
}

// -------------------------------------------------------------------

// PBW2GFactionMemberAttr

// optional int32 value = 1;
inline bool PBW2GFactionMemberAttr::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GFactionMemberAttr::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GFactionMemberAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GFactionMemberAttr::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 PBW2GFactionMemberAttr::value() const {
  return value_;
}
inline void PBW2GFactionMemberAttr::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// optional int32 doing = 2;
inline bool PBW2GFactionMemberAttr::has_doing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GFactionMemberAttr::set_has_doing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GFactionMemberAttr::clear_has_doing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GFactionMemberAttr::clear_doing() {
  doing_ = 0;
  clear_has_doing();
}
inline ::google::protobuf::int32 PBW2GFactionMemberAttr::doing() const {
  return doing_;
}
inline void PBW2GFactionMemberAttr::set_doing(::google::protobuf::int32 value) {
  set_has_doing();
  doing_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionMemberAttr

// optional uint64 value = 1;
inline bool PBG2CFactionMemberAttr::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionMemberAttr::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionMemberAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionMemberAttr::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 PBG2CFactionMemberAttr::value() const {
  return value_;
}
inline void PBG2CFactionMemberAttr::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// PBC2GFactionDonateMoney

// optional uint32 id = 1;
inline bool PBC2GFactionDonateMoney::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionDonateMoney::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionDonateMoney::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionDonateMoney::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GFactionDonateMoney::id() const {
  return id_;
}
inline void PBC2GFactionDonateMoney::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionDrinkWine

// optional uint32 id = 1;
inline bool PBG2CFactionDrinkWine::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionDrinkWine::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionDrinkWine::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionDrinkWine::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CFactionDrinkWine::id() const {
  return id_;
}
inline void PBG2CFactionDrinkWine::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBC2GFactionDrinkWine

// optional uint32 id = 1;
inline bool PBC2GFactionDrinkWine::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionDrinkWine::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionDrinkWine::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionDrinkWine::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBC2GFactionDrinkWine::id() const {
  return id_;
}
inline void PBC2GFactionDrinkWine::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBPlayerDrinkWine

// optional uint32 daywisdom = 1;
inline bool PBPlayerDrinkWine::has_daywisdom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPlayerDrinkWine::set_has_daywisdom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPlayerDrinkWine::clear_has_daywisdom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPlayerDrinkWine::clear_daywisdom() {
  daywisdom_ = 0u;
  clear_has_daywisdom();
}
inline ::google::protobuf::uint32 PBPlayerDrinkWine::daywisdom() const {
  return daywisdom_;
}
inline void PBPlayerDrinkWine::set_daywisdom(::google::protobuf::uint32 value) {
  set_has_daywisdom();
  daywisdom_ = value;
}

// optional uint32 id = 2;
inline bool PBPlayerDrinkWine::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPlayerDrinkWine::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPlayerDrinkWine::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPlayerDrinkWine::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBPlayerDrinkWine::id() const {
  return id_;
}
inline void PBPlayerDrinkWine::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 curwisdom = 3;
inline bool PBPlayerDrinkWine::has_curwisdom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBPlayerDrinkWine::set_has_curwisdom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBPlayerDrinkWine::clear_has_curwisdom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBPlayerDrinkWine::clear_curwisdom() {
  curwisdom_ = 0u;
  clear_has_curwisdom();
}
inline ::google::protobuf::uint32 PBPlayerDrinkWine::curwisdom() const {
  return curwisdom_;
}
inline void PBPlayerDrinkWine::set_curwisdom(::google::protobuf::uint32 value) {
  set_has_curwisdom();
  curwisdom_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionDonateMoney

// optional uint32 id = 1;
inline bool PBG2CFactionDonateMoney::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionDonateMoney::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionDonateMoney::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionDonateMoney::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CFactionDonateMoney::id() const {
  return id_;
}
inline void PBG2CFactionDonateMoney::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBGAWFactionDonateMoney

// optional uint32 id = 1;
inline bool PBGAWFactionDonateMoney::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGAWFactionDonateMoney::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGAWFactionDonateMoney::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGAWFactionDonateMoney::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBGAWFactionDonateMoney::id() const {
  return id_;
}
inline void PBGAWFactionDonateMoney::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .PBMoneyConsume money = 3;
inline bool PBGAWFactionDonateMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGAWFactionDonateMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGAWFactionDonateMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGAWFactionDonateMoney::clear_money() {
  if (money_ != NULL) money_->::PBMoneyConsume::Clear();
  clear_has_money();
}
inline const ::PBMoneyConsume& PBGAWFactionDonateMoney::money() const {
  return money_ != NULL ? *money_ : *default_instance_->money_;
}
inline ::PBMoneyConsume* PBGAWFactionDonateMoney::mutable_money() {
  set_has_money();
  if (money_ == NULL) money_ = new ::PBMoneyConsume;
  return money_;
}
inline ::PBMoneyConsume* PBGAWFactionDonateMoney::release_money() {
  clear_has_money();
  ::PBMoneyConsume* temp = money_;
  money_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBG2CFactionDonateMoneyBroad

// optional .PBFactionMember member = 1;
inline bool PBG2CFactionDonateMoneyBroad::has_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionDonateMoneyBroad::set_has_member() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionDonateMoneyBroad::clear_has_member() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionDonateMoneyBroad::clear_member() {
  if (member_ != NULL) member_->::PBFactionMember::Clear();
  clear_has_member();
}
inline const ::PBFactionMember& PBG2CFactionDonateMoneyBroad::member() const {
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::PBFactionMember* PBG2CFactionDonateMoneyBroad::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::PBFactionMember;
  return member_;
}
inline ::PBFactionMember* PBG2CFactionDonateMoneyBroad::release_member() {
  clear_has_member();
  ::PBFactionMember* temp = member_;
  member_ = NULL;
  return temp;
}

// optional uint32 id = 2;
inline bool PBG2CFactionDonateMoneyBroad::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionDonateMoneyBroad::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionDonateMoneyBroad::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionDonateMoneyBroad::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PBG2CFactionDonateMoneyBroad::id() const {
  return id_;
}
inline void PBG2CFactionDonateMoneyBroad::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PBC2GFactionCompleteTask

// optional uint32 taskid = 1;
inline bool PBC2GFactionCompleteTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionCompleteTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionCompleteTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionCompleteTask::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 PBC2GFactionCompleteTask::taskid() const {
  return taskid_;
}
inline void PBC2GFactionCompleteTask::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
}

// -------------------------------------------------------------------

// PBG2CFactionCompleteTask

// optional uint32 completetaskid = 1;
inline bool PBG2CFactionCompleteTask::has_completetaskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBG2CFactionCompleteTask::set_has_completetaskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBG2CFactionCompleteTask::clear_has_completetaskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBG2CFactionCompleteTask::clear_completetaskid() {
  completetaskid_ = 0u;
  clear_has_completetaskid();
}
inline ::google::protobuf::uint32 PBG2CFactionCompleteTask::completetaskid() const {
  return completetaskid_;
}
inline void PBG2CFactionCompleteTask::set_completetaskid(::google::protobuf::uint32 value) {
  set_has_completetaskid();
  completetaskid_ = value;
}

// optional .PBPlayerFactionTask newtask = 2;
inline bool PBG2CFactionCompleteTask::has_newtask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBG2CFactionCompleteTask::set_has_newtask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBG2CFactionCompleteTask::clear_has_newtask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBG2CFactionCompleteTask::clear_newtask() {
  if (newtask_ != NULL) newtask_->::PBPlayerFactionTask::Clear();
  clear_has_newtask();
}
inline const ::PBPlayerFactionTask& PBG2CFactionCompleteTask::newtask() const {
  return newtask_ != NULL ? *newtask_ : *default_instance_->newtask_;
}
inline ::PBPlayerFactionTask* PBG2CFactionCompleteTask::mutable_newtask() {
  set_has_newtask();
  if (newtask_ == NULL) newtask_ = new ::PBPlayerFactionTask;
  return newtask_;
}
inline ::PBPlayerFactionTask* PBG2CFactionCompleteTask::release_newtask() {
  clear_has_newtask();
  ::PBPlayerFactionTask* temp = newtask_;
  newtask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PBGAWFactionCompleteTask

// optional uint32 taskid = 1;
inline bool PBGAWFactionCompleteTask::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGAWFactionCompleteTask::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGAWFactionCompleteTask::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGAWFactionCompleteTask::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 PBGAWFactionCompleteTask::taskid() const {
  return taskid_;
}
inline void PBGAWFactionCompleteTask::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
}

// optional uint32 tackindex = 2;
inline bool PBGAWFactionCompleteTask::has_tackindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGAWFactionCompleteTask::set_has_tackindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGAWFactionCompleteTask::clear_has_tackindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGAWFactionCompleteTask::clear_tackindex() {
  tackindex_ = 0u;
  clear_has_tackindex();
}
inline ::google::protobuf::uint32 PBGAWFactionCompleteTask::tackindex() const {
  return tackindex_;
}
inline void PBGAWFactionCompleteTask::set_tackindex(::google::protobuf::uint32 value) {
  set_has_tackindex();
  tackindex_ = value;
}

// -------------------------------------------------------------------

// PBC2GFactionAllotMoneyAsk

// optional uint32 count = 1;
inline bool PBC2GFactionAllotMoneyAsk::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionAllotMoneyAsk::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionAllotMoneyAsk::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionAllotMoneyAsk::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBC2GFactionAllotMoneyAsk::count() const {
  return count_;
}
inline void PBC2GFactionAllotMoneyAsk::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// repeated uint32 memberid = 2;
inline int PBC2GFactionAllotMoneyAsk::memberid_size() const {
  return memberid_.size();
}
inline void PBC2GFactionAllotMoneyAsk::clear_memberid() {
  memberid_.Clear();
}
inline ::google::protobuf::uint32 PBC2GFactionAllotMoneyAsk::memberid(int index) const {
  return memberid_.Get(index);
}
inline void PBC2GFactionAllotMoneyAsk::set_memberid(int index, ::google::protobuf::uint32 value) {
  memberid_.Set(index, value);
}
inline void PBC2GFactionAllotMoneyAsk::add_memberid(::google::protobuf::uint32 value) {
  memberid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBC2GFactionAllotMoneyAsk::memberid() const {
  return memberid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBC2GFactionAllotMoneyAsk::mutable_memberid() {
  return &memberid_;
}

// -------------------------------------------------------------------

// PBC2GFactionAllotItemAsk

// optional uint64 itemsn = 1;
inline bool PBC2GFactionAllotItemAsk::has_itemsn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBC2GFactionAllotItemAsk::set_has_itemsn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBC2GFactionAllotItemAsk::clear_has_itemsn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBC2GFactionAllotItemAsk::clear_itemsn() {
  itemsn_ = GOOGLE_ULONGLONG(0);
  clear_has_itemsn();
}
inline ::google::protobuf::uint64 PBC2GFactionAllotItemAsk::itemsn() const {
  return itemsn_;
}
inline void PBC2GFactionAllotItemAsk::set_itemsn(::google::protobuf::uint64 value) {
  set_has_itemsn();
  itemsn_ = value;
}

// optional uint32 itemcount = 2;
inline bool PBC2GFactionAllotItemAsk::has_itemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBC2GFactionAllotItemAsk::set_has_itemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBC2GFactionAllotItemAsk::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBC2GFactionAllotItemAsk::clear_itemcount() {
  itemcount_ = 0u;
  clear_has_itemcount();
}
inline ::google::protobuf::uint32 PBC2GFactionAllotItemAsk::itemcount() const {
  return itemcount_;
}
inline void PBC2GFactionAllotItemAsk::set_itemcount(::google::protobuf::uint32 value) {
  set_has_itemcount();
  itemcount_ = value;
}

// repeated uint32 memberid = 3;
inline int PBC2GFactionAllotItemAsk::memberid_size() const {
  return memberid_.size();
}
inline void PBC2GFactionAllotItemAsk::clear_memberid() {
  memberid_.Clear();
}
inline ::google::protobuf::uint32 PBC2GFactionAllotItemAsk::memberid(int index) const {
  return memberid_.Get(index);
}
inline void PBC2GFactionAllotItemAsk::set_memberid(int index, ::google::protobuf::uint32 value) {
  memberid_.Set(index, value);
}
inline void PBC2GFactionAllotItemAsk::add_memberid(::google::protobuf::uint32 value) {
  memberid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBC2GFactionAllotItemAsk::memberid() const {
  return memberid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBC2GFactionAllotItemAsk::mutable_memberid() {
  return &memberid_;
}

// -------------------------------------------------------------------

// PBFactionChallenger

// optional .PBFactionBase factionbase = 1;
inline bool PBFactionChallenger::has_factionbase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBFactionChallenger::set_has_factionbase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBFactionChallenger::clear_has_factionbase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBFactionChallenger::clear_factionbase() {
  if (factionbase_ != NULL) factionbase_->::PBFactionBase::Clear();
  clear_has_factionbase();
}
inline const ::PBFactionBase& PBFactionChallenger::factionbase() const {
  return factionbase_ != NULL ? *factionbase_ : *default_instance_->factionbase_;
}
inline ::PBFactionBase* PBFactionChallenger::mutable_factionbase() {
  set_has_factionbase();
  if (factionbase_ == NULL) factionbase_ = new ::PBFactionBase;
  return factionbase_;
}
inline ::PBFactionBase* PBFactionChallenger::release_factionbase() {
  clear_has_factionbase();
  ::PBFactionBase* temp = factionbase_;
  factionbase_ = NULL;
  return temp;
}

// optional uint32 applytime = 2;
inline bool PBFactionChallenger::has_applytime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBFactionChallenger::set_has_applytime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBFactionChallenger::clear_has_applytime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBFactionChallenger::clear_applytime() {
  applytime_ = 0u;
  clear_has_applytime();
}
inline ::google::protobuf::uint32 PBFactionChallenger::applytime() const {
  return applytime_;
}
inline void PBFactionChallenger::set_applytime(::google::protobuf::uint32 value) {
  set_has_applytime();
  applytime_ = value;
}

// optional bool ischallenger = 3;
inline bool PBFactionChallenger::has_ischallenger() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBFactionChallenger::set_has_ischallenger() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBFactionChallenger::clear_has_ischallenger() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBFactionChallenger::clear_ischallenger() {
  ischallenger_ = false;
  clear_has_ischallenger();
}
inline bool PBFactionChallenger::ischallenger() const {
  return ischallenger_;
}
inline void PBFactionChallenger::set_ischallenger(bool value) {
  set_has_ischallenger();
  ischallenger_ = value;
}

// -------------------------------------------------------------------

// PBManorCpymapInfo

// optional uint32 sceneid = 1;
inline bool PBManorCpymapInfo::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBManorCpymapInfo::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBManorCpymapInfo::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBManorCpymapInfo::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 PBManorCpymapInfo::sceneid() const {
  return sceneid_;
}
inline void PBManorCpymapInfo::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// optional uint64 dynid = 2;
inline bool PBManorCpymapInfo::has_dynid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBManorCpymapInfo::set_has_dynid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBManorCpymapInfo::clear_has_dynid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBManorCpymapInfo::clear_dynid() {
  dynid_ = GOOGLE_ULONGLONG(0);
  clear_has_dynid();
}
inline ::google::protobuf::uint64 PBManorCpymapInfo::dynid() const {
  return dynid_;
}
inline void PBManorCpymapInfo::set_dynid(::google::protobuf::uint64 value) {
  set_has_dynid();
  dynid_ = value;
}

// optional uint32 cellid = 3;
inline bool PBManorCpymapInfo::has_cellid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBManorCpymapInfo::set_has_cellid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBManorCpymapInfo::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBManorCpymapInfo::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 PBManorCpymapInfo::cellid() const {
  return cellid_;
}
inline void PBManorCpymapInfo::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// optional uint32 regionid = 4;
inline bool PBManorCpymapInfo::has_regionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBManorCpymapInfo::set_has_regionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBManorCpymapInfo::clear_has_regionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBManorCpymapInfo::clear_regionid() {
  regionid_ = 0u;
  clear_has_regionid();
}
inline ::google::protobuf::uint32 PBManorCpymapInfo::regionid() const {
  return regionid_;
}
inline void PBManorCpymapInfo::set_regionid(::google::protobuf::uint32 value) {
  set_has_regionid();
  regionid_ = value;
}

// -------------------------------------------------------------------

// PBManorInfo

// optional uint32 manorid = 1;
inline bool PBManorInfo::has_manorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBManorInfo::set_has_manorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBManorInfo::clear_has_manorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBManorInfo::clear_manorid() {
  manorid_ = 0u;
  clear_has_manorid();
}
inline ::google::protobuf::uint32 PBManorInfo::manorid() const {
  return manorid_;
}
inline void PBManorInfo::set_manorid(::google::protobuf::uint32 value) {
  set_has_manorid();
  manorid_ = value;
}

// optional uint32 status = 2;
inline bool PBManorInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBManorInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBManorInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBManorInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 PBManorInfo::status() const {
  return status_;
}
inline void PBManorInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional .PBFactionBase owner = 3;
inline bool PBManorInfo::has_owner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBManorInfo::set_has_owner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBManorInfo::clear_has_owner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBManorInfo::clear_owner() {
  if (owner_ != NULL) owner_->::PBFactionBase::Clear();
  clear_has_owner();
}
inline const ::PBFactionBase& PBManorInfo::owner() const {
  return owner_ != NULL ? *owner_ : *default_instance_->owner_;
}
inline ::PBFactionBase* PBManorInfo::mutable_owner() {
  set_has_owner();
  if (owner_ == NULL) owner_ = new ::PBFactionBase;
  return owner_;
}
inline ::PBFactionBase* PBManorInfo::release_owner() {
  clear_has_owner();
  ::PBFactionBase* temp = owner_;
  owner_ = NULL;
  return temp;
}

// repeated .PBFactionChallenger challengers = 4;
inline int PBManorInfo::challengers_size() const {
  return challengers_.size();
}
inline void PBManorInfo::clear_challengers() {
  challengers_.Clear();
}
inline const ::PBFactionChallenger& PBManorInfo::challengers(int index) const {
  return challengers_.Get(index);
}
inline ::PBFactionChallenger* PBManorInfo::mutable_challengers(int index) {
  return challengers_.Mutable(index);
}
inline ::PBFactionChallenger* PBManorInfo::add_challengers() {
  return challengers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBFactionChallenger >&
PBManorInfo::challengers() const {
  return challengers_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBFactionChallenger >*
PBManorInfo::mutable_challengers() {
  return &challengers_;
}

// repeated .PBManorCpymapInfo battlefields = 5;
inline int PBManorInfo::battlefields_size() const {
  return battlefields_.size();
}
inline void PBManorInfo::clear_battlefields() {
  battlefields_.Clear();
}
inline const ::PBManorCpymapInfo& PBManorInfo::battlefields(int index) const {
  return battlefields_.Get(index);
}
inline ::PBManorCpymapInfo* PBManorInfo::mutable_battlefields(int index) {
  return battlefields_.Mutable(index);
}
inline ::PBManorCpymapInfo* PBManorInfo::add_battlefields() {
  return battlefields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBManorCpymapInfo >&
PBManorInfo::battlefields() const {
  return battlefields_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBManorCpymapInfo >*
PBManorInfo::mutable_battlefields() {
  return &battlefields_;
}

// optional .PBManorCpymapInfo defenderlobby = 6;
inline bool PBManorInfo::has_defenderlobby() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBManorInfo::set_has_defenderlobby() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBManorInfo::clear_has_defenderlobby() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBManorInfo::clear_defenderlobby() {
  if (defenderlobby_ != NULL) defenderlobby_->::PBManorCpymapInfo::Clear();
  clear_has_defenderlobby();
}
inline const ::PBManorCpymapInfo& PBManorInfo::defenderlobby() const {
  return defenderlobby_ != NULL ? *defenderlobby_ : *default_instance_->defenderlobby_;
}
inline ::PBManorCpymapInfo* PBManorInfo::mutable_defenderlobby() {
  set_has_defenderlobby();
  if (defenderlobby_ == NULL) defenderlobby_ = new ::PBManorCpymapInfo;
  return defenderlobby_;
}
inline ::PBManorCpymapInfo* PBManorInfo::release_defenderlobby() {
  clear_has_defenderlobby();
  ::PBManorCpymapInfo* temp = defenderlobby_;
  defenderlobby_ = NULL;
  return temp;
}

// optional .PBManorCpymapInfo challengerlobby = 7;
inline bool PBManorInfo::has_challengerlobby() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBManorInfo::set_has_challengerlobby() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBManorInfo::clear_has_challengerlobby() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBManorInfo::clear_challengerlobby() {
  if (challengerlobby_ != NULL) challengerlobby_->::PBManorCpymapInfo::Clear();
  clear_has_challengerlobby();
}
inline const ::PBManorCpymapInfo& PBManorInfo::challengerlobby() const {
  return challengerlobby_ != NULL ? *challengerlobby_ : *default_instance_->challengerlobby_;
}
inline ::PBManorCpymapInfo* PBManorInfo::mutable_challengerlobby() {
  set_has_challengerlobby();
  if (challengerlobby_ == NULL) challengerlobby_ = new ::PBManorCpymapInfo;
  return challengerlobby_;
}
inline ::PBManorCpymapInfo* PBManorInfo::release_challengerlobby() {
  clear_has_challengerlobby();
  ::PBManorCpymapInfo* temp = challengerlobby_;
  challengerlobby_ = NULL;
  return temp;
}

// repeated uint32 eliteplayers = 8;
inline int PBManorInfo::eliteplayers_size() const {
  return eliteplayers_.size();
}
inline void PBManorInfo::clear_eliteplayers() {
  eliteplayers_.Clear();
}
inline ::google::protobuf::uint32 PBManorInfo::eliteplayers(int index) const {
  return eliteplayers_.Get(index);
}
inline void PBManorInfo::set_eliteplayers(int index, ::google::protobuf::uint32 value) {
  eliteplayers_.Set(index, value);
}
inline void PBManorInfo::add_eliteplayers(::google::protobuf::uint32 value) {
  eliteplayers_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBManorInfo::eliteplayers() const {
  return eliteplayers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBManorInfo::mutable_eliteplayers() {
  return &eliteplayers_;
}

// optional uint64 cancleapplycd = 9;
inline bool PBManorInfo::has_cancleapplycd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBManorInfo::set_has_cancleapplycd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBManorInfo::clear_has_cancleapplycd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBManorInfo::clear_cancleapplycd() {
  cancleapplycd_ = GOOGLE_ULONGLONG(0);
  clear_has_cancleapplycd();
}
inline ::google::protobuf::uint64 PBManorInfo::cancleapplycd() const {
  return cancleapplycd_;
}
inline void PBManorInfo::set_cancleapplycd(::google::protobuf::uint64 value) {
  set_has_cancleapplycd();
  cancleapplycd_ = value;
}

// -------------------------------------------------------------------

// PBAllManor

// repeated .PBManorInfo manors = 1;
inline int PBAllManor::manors_size() const {
  return manors_.size();
}
inline void PBAllManor::clear_manors() {
  manors_.Clear();
}
inline const ::PBManorInfo& PBAllManor::manors(int index) const {
  return manors_.Get(index);
}
inline ::PBManorInfo* PBAllManor::mutable_manors(int index) {
  return manors_.Mutable(index);
}
inline ::PBManorInfo* PBAllManor::add_manors() {
  return manors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBManorInfo >&
PBAllManor::manors() const {
  return manors_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBManorInfo >*
PBAllManor::mutable_manors() {
  return &manors_;
}

// -------------------------------------------------------------------

// PBManorBattlefieldPlayerScore

// optional uint32 job = 1;
inline bool PBManorBattlefieldPlayerScore::has_job() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_job() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_job() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBManorBattlefieldPlayerScore::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBManorBattlefieldPlayerScore::job() const {
  return job_;
}
inline void PBManorBattlefieldPlayerScore::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// optional string name = 2;
inline bool PBManorBattlefieldPlayerScore::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBManorBattlefieldPlayerScore::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBManorBattlefieldPlayerScore::name() const {
  return *name_;
}
inline void PBManorBattlefieldPlayerScore::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBManorBattlefieldPlayerScore::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBManorBattlefieldPlayerScore::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBManorBattlefieldPlayerScore::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBManorBattlefieldPlayerScore::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 score = 3;
inline bool PBManorBattlefieldPlayerScore::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBManorBattlefieldPlayerScore::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PBManorBattlefieldPlayerScore::score() const {
  return score_;
}
inline void PBManorBattlefieldPlayerScore::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 kill = 4;
inline bool PBManorBattlefieldPlayerScore::has_kill() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_kill() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_kill() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBManorBattlefieldPlayerScore::clear_kill() {
  kill_ = 0u;
  clear_has_kill();
}
inline ::google::protobuf::uint32 PBManorBattlefieldPlayerScore::kill() const {
  return kill_;
}
inline void PBManorBattlefieldPlayerScore::set_kill(::google::protobuf::uint32 value) {
  set_has_kill();
  kill_ = value;
}

// optional uint32 dead = 5;
inline bool PBManorBattlefieldPlayerScore::has_dead() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_dead() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_dead() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBManorBattlefieldPlayerScore::clear_dead() {
  dead_ = 0u;
  clear_has_dead();
}
inline ::google::protobuf::uint32 PBManorBattlefieldPlayerScore::dead() const {
  return dead_;
}
inline void PBManorBattlefieldPlayerScore::set_dead(::google::protobuf::uint32 value) {
  set_has_dead();
  dead_ = value;
}

// optional bool ischallenger = 6;
inline bool PBManorBattlefieldPlayerScore::has_ischallenger() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_ischallenger() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_ischallenger() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBManorBattlefieldPlayerScore::clear_ischallenger() {
  ischallenger_ = false;
  clear_has_ischallenger();
}
inline bool PBManorBattlefieldPlayerScore::ischallenger() const {
  return ischallenger_;
}
inline void PBManorBattlefieldPlayerScore::set_ischallenger(bool value) {
  set_has_ischallenger();
  ischallenger_ = value;
}

// optional uint32 playerid = 7;
inline bool PBManorBattlefieldPlayerScore::has_playerid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_playerid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBManorBattlefieldPlayerScore::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBManorBattlefieldPlayerScore::playerid() const {
  return playerid_;
}
inline void PBManorBattlefieldPlayerScore::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 takehurt = 8;
inline bool PBManorBattlefieldPlayerScore::has_takehurt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_takehurt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_takehurt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBManorBattlefieldPlayerScore::clear_takehurt() {
  takehurt_ = GOOGLE_ULONGLONG(0);
  clear_has_takehurt();
}
inline ::google::protobuf::uint64 PBManorBattlefieldPlayerScore::takehurt() const {
  return takehurt_;
}
inline void PBManorBattlefieldPlayerScore::set_takehurt(::google::protobuf::uint64 value) {
  set_has_takehurt();
  takehurt_ = value;
}

// optional uint32 assistkill = 9;
inline bool PBManorBattlefieldPlayerScore::has_assistkill() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBManorBattlefieldPlayerScore::set_has_assistkill() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBManorBattlefieldPlayerScore::clear_has_assistkill() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBManorBattlefieldPlayerScore::clear_assistkill() {
  assistkill_ = 0u;
  clear_has_assistkill();
}
inline ::google::protobuf::uint32 PBManorBattlefieldPlayerScore::assistkill() const {
  return assistkill_;
}
inline void PBManorBattlefieldPlayerScore::set_assistkill(::google::protobuf::uint32 value) {
  set_has_assistkill();
  assistkill_ = value;
}

// -------------------------------------------------------------------

// PBManorBattleFieldReport

// optional uint32 factionid = 1;
inline bool PBManorBattleFieldReport::has_factionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBManorBattleFieldReport::set_has_factionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBManorBattleFieldReport::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBManorBattleFieldReport::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBManorBattleFieldReport::factionid() const {
  return factionid_;
}
inline void PBManorBattleFieldReport::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 count = 2;
inline bool PBManorBattleFieldReport::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBManorBattleFieldReport::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBManorBattleFieldReport::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBManorBattleFieldReport::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 PBManorBattleFieldReport::count() const {
  return count_;
}
inline void PBManorBattleFieldReport::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// repeated .PBManorBattlefieldPlayerScore playerscores = 3;
inline int PBManorBattleFieldReport::playerscores_size() const {
  return playerscores_.size();
}
inline void PBManorBattleFieldReport::clear_playerscores() {
  playerscores_.Clear();
}
inline const ::PBManorBattlefieldPlayerScore& PBManorBattleFieldReport::playerscores(int index) const {
  return playerscores_.Get(index);
}
inline ::PBManorBattlefieldPlayerScore* PBManorBattleFieldReport::mutable_playerscores(int index) {
  return playerscores_.Mutable(index);
}
inline ::PBManorBattlefieldPlayerScore* PBManorBattleFieldReport::add_playerscores() {
  return playerscores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PBManorBattlefieldPlayerScore >&
PBManorBattleFieldReport::playerscores() const {
  return playerscores_;
}
inline ::google::protobuf::RepeatedPtrField< ::PBManorBattlefieldPlayerScore >*
PBManorBattleFieldReport::mutable_playerscores() {
  return &playerscores_;
}

// optional uint32 score = 4;
inline bool PBManorBattleFieldReport::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBManorBattleFieldReport::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBManorBattleFieldReport::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBManorBattleFieldReport::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PBManorBattleFieldReport::score() const {
  return score_;
}
inline void PBManorBattleFieldReport::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// PBW2GFactionSyn

// optional string name = 1;
inline bool PBW2GFactionSyn::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBW2GFactionSyn::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBW2GFactionSyn::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBW2GFactionSyn::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PBW2GFactionSyn::name() const {
  return *name_;
}
inline void PBW2GFactionSyn::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBW2GFactionSyn::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PBW2GFactionSyn::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBW2GFactionSyn::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PBW2GFactionSyn::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 factionid = 2;
inline bool PBW2GFactionSyn::has_factionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBW2GFactionSyn::set_has_factionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBW2GFactionSyn::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBW2GFactionSyn::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBW2GFactionSyn::factionid() const {
  return factionid_;
}
inline void PBW2GFactionSyn::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// optional uint32 playerid = 3;
inline bool PBW2GFactionSyn::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBW2GFactionSyn::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBW2GFactionSyn::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBW2GFactionSyn::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PBW2GFactionSyn::playerid() const {
  return playerid_;
}
inline void PBW2GFactionSyn::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint32 leader = 4;
inline bool PBW2GFactionSyn::has_leader() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBW2GFactionSyn::set_has_leader() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBW2GFactionSyn::clear_has_leader() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBW2GFactionSyn::clear_leader() {
  leader_ = 0u;
  clear_has_leader();
}
inline ::google::protobuf::uint32 PBW2GFactionSyn::leader() const {
  return leader_;
}
inline void PBW2GFactionSyn::set_leader(::google::protobuf::uint32 value) {
  set_has_leader();
  leader_ = value;
}

// optional uint32 union = 5;
inline bool PBW2GFactionSyn::has_union_() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBW2GFactionSyn::set_has_union_() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBW2GFactionSyn::clear_has_union_() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBW2GFactionSyn::clear_union_() {
  union__ = 0u;
  clear_has_union_();
}
inline ::google::protobuf::uint32 PBW2GFactionSyn::union_() const {
  return union__;
}
inline void PBW2GFactionSyn::set_union_(::google::protobuf::uint32 value) {
  set_has_union_();
  union__ = value;
}

// optional uint32 corps = 6;
inline bool PBW2GFactionSyn::has_corps() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBW2GFactionSyn::set_has_corps() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBW2GFactionSyn::clear_has_corps() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBW2GFactionSyn::clear_corps() {
  corps_ = 0u;
  clear_has_corps();
}
inline ::google::protobuf::uint32 PBW2GFactionSyn::corps() const {
  return corps_;
}
inline void PBW2GFactionSyn::set_corps(::google::protobuf::uint32 value) {
  set_has_corps();
  corps_ = value;
}

// optional uint32 level = 7;
inline bool PBW2GFactionSyn::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBW2GFactionSyn::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBW2GFactionSyn::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBW2GFactionSyn::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PBW2GFactionSyn::level() const {
  return level_;
}
inline void PBW2GFactionSyn::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 job = 8;
inline bool PBW2GFactionSyn::has_job() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBW2GFactionSyn::set_has_job() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBW2GFactionSyn::clear_has_job() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBW2GFactionSyn::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 PBW2GFactionSyn::job() const {
  return job_;
}
inline void PBW2GFactionSyn::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
}

// optional string unionname = 9;
inline bool PBW2GFactionSyn::has_unionname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PBW2GFactionSyn::set_has_unionname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PBW2GFactionSyn::clear_has_unionname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PBW2GFactionSyn::clear_unionname() {
  if (unionname_ != &::google::protobuf::internal::kEmptyString) {
    unionname_->clear();
  }
  clear_has_unionname();
}
inline const ::std::string& PBW2GFactionSyn::unionname() const {
  return *unionname_;
}
inline void PBW2GFactionSyn::set_unionname(const ::std::string& value) {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void PBW2GFactionSyn::set_unionname(const char* value) {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(value);
}
inline void PBW2GFactionSyn::set_unionname(const char* value, size_t size) {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  unionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBW2GFactionSyn::mutable_unionname() {
  set_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    unionname_ = new ::std::string;
  }
  return unionname_;
}
inline ::std::string* PBW2GFactionSyn::release_unionname() {
  clear_has_unionname();
  if (unionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unionname_;
    unionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string banner = 10;
inline bool PBW2GFactionSyn::has_banner() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PBW2GFactionSyn::set_has_banner() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PBW2GFactionSyn::clear_has_banner() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PBW2GFactionSyn::clear_banner() {
  if (banner_ != &::google::protobuf::internal::kEmptyString) {
    banner_->clear();
  }
  clear_has_banner();
}
inline const ::std::string& PBW2GFactionSyn::banner() const {
  return *banner_;
}
inline void PBW2GFactionSyn::set_banner(const ::std::string& value) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(value);
}
inline void PBW2GFactionSyn::set_banner(const char* value) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(value);
}
inline void PBW2GFactionSyn::set_banner(const char* value, size_t size) {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  banner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBW2GFactionSyn::mutable_banner() {
  set_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    banner_ = new ::std::string;
  }
  return banner_;
}
inline ::std::string* PBW2GFactionSyn::release_banner() {
  clear_has_banner();
  if (banner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = banner_;
    banner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PBGL2WFactionSynPlayer

// optional .PBFactionMemberBase base = 1;
inline bool PBGL2WFactionSynPlayer::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBGL2WFactionSynPlayer::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBGL2WFactionSynPlayer::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBGL2WFactionSynPlayer::clear_base() {
  if (base_ != NULL) base_->::PBFactionMemberBase::Clear();
  clear_has_base();
}
inline const ::PBFactionMemberBase& PBGL2WFactionSynPlayer::base() const {
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::PBFactionMemberBase* PBGL2WFactionSynPlayer::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::PBFactionMemberBase;
  return base_;
}
inline ::PBFactionMemberBase* PBGL2WFactionSynPlayer::release_base() {
  clear_has_base();
  ::PBFactionMemberBase* temp = base_;
  base_ = NULL;
  return temp;
}

// optional uint32 factionid = 2;
inline bool PBGL2WFactionSynPlayer::has_factionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBGL2WFactionSynPlayer::set_has_factionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBGL2WFactionSynPlayer::clear_has_factionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBGL2WFactionSynPlayer::clear_factionid() {
  factionid_ = 0u;
  clear_has_factionid();
}
inline ::google::protobuf::uint32 PBGL2WFactionSynPlayer::factionid() const {
  return factionid_;
}
inline void PBGL2WFactionSynPlayer::set_factionid(::google::protobuf::uint32 value) {
  set_has_factionid();
  factionid_ = value;
}

// -------------------------------------------------------------------

// PBCorpsOfflineChangeJob

// optional uint32 deljob = 1;
inline bool PBCorpsOfflineChangeJob::has_deljob() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBCorpsOfflineChangeJob::set_has_deljob() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBCorpsOfflineChangeJob::clear_has_deljob() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBCorpsOfflineChangeJob::clear_deljob() {
  deljob_ = 0u;
  clear_has_deljob();
}
inline ::google::protobuf::uint32 PBCorpsOfflineChangeJob::deljob() const {
  return deljob_;
}
inline void PBCorpsOfflineChangeJob::set_deljob(::google::protobuf::uint32 value) {
  set_has_deljob();
  deljob_ = value;
}

// optional uint32 addjob = 2;
inline bool PBCorpsOfflineChangeJob::has_addjob() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBCorpsOfflineChangeJob::set_has_addjob() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBCorpsOfflineChangeJob::clear_has_addjob() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBCorpsOfflineChangeJob::clear_addjob() {
  addjob_ = 0u;
  clear_has_addjob();
}
inline ::google::protobuf::uint32 PBCorpsOfflineChangeJob::addjob() const {
  return addjob_;
}
inline void PBCorpsOfflineChangeJob::set_addjob(::google::protobuf::uint32 value) {
  set_has_addjob();
  addjob_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Faction_2eproto__INCLUDED
