// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db/DBInventory.proto

package com.mokylin.bleach.protobuf.db;

public final class DBInventoryBlob {
  private DBInventoryBlob() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DBInventoryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.mokylin.ItemData dBItemDatas = 1;
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> 
        getDBItemDatasList();
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getDBItemDatas(int index);
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    int getDBItemDatasCount();
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
        getDBItemDatasOrBuilderList();
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getDBItemDatasOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.DBInventory}
   *
   * <pre>
   **
   * 数据库中的背包
   * </pre>
   */
  public static final class DBInventory extends
      com.google.protobuf.GeneratedMessage
      implements DBInventoryOrBuilder {
    // Use DBInventory.newBuilder() to construct.
    private DBInventory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBInventory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBInventory defaultInstance;
    public static DBInventory getDefaultInstance() {
      return defaultInstance;
    }

    public DBInventory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBInventory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dBItemDatas_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData>();
                mutable_bitField0_ |= 0x00000001;
              }
              dBItemDatas_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dBItemDatas_ = java.util.Collections.unmodifiableList(dBItemDatas_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_DBInventory_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_DBInventory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory.class, com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory.Builder.class);
    }

    public static com.google.protobuf.Parser<DBInventory> PARSER =
        new com.google.protobuf.AbstractParser<DBInventory>() {
      public DBInventory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBInventory(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBInventory> getParserForType() {
      return PARSER;
    }

    // repeated .com.mokylin.ItemData dBItemDatas = 1;
    public static final int DBITEMDATAS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> dBItemDatas_;
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> getDBItemDatasList() {
      return dBItemDatas_;
    }
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
        getDBItemDatasOrBuilderList() {
      return dBItemDatas_;
    }
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    public int getDBItemDatasCount() {
      return dBItemDatas_.size();
    }
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getDBItemDatas(int index) {
      return dBItemDatas_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getDBItemDatasOrBuilder(
        int index) {
      return dBItemDatas_.get(index);
    }

    private void initFields() {
      dBItemDatas_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getDBItemDatasCount(); i++) {
        if (!getDBItemDatas(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < dBItemDatas_.size(); i++) {
        output.writeMessage(1, dBItemDatas_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dBItemDatas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dBItemDatas_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBInventory}
     *
     * <pre>
     **
     * 数据库中的背包
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_DBInventory_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_DBInventory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory.class, com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDBItemDatasFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (dBItemDatasBuilder_ == null) {
          dBItemDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dBItemDatasBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_DBInventory_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory build() {
        com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory buildPartial() {
        com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory result = new com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory(this);
        int from_bitField0_ = bitField0_;
        if (dBItemDatasBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dBItemDatas_ = java.util.Collections.unmodifiableList(dBItemDatas_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dBItemDatas_ = dBItemDatas_;
        } else {
          result.dBItemDatas_ = dBItemDatasBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory other) {
        if (other == com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory.getDefaultInstance()) return this;
        if (dBItemDatasBuilder_ == null) {
          if (!other.dBItemDatas_.isEmpty()) {
            if (dBItemDatas_.isEmpty()) {
              dBItemDatas_ = other.dBItemDatas_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDBItemDatasIsMutable();
              dBItemDatas_.addAll(other.dBItemDatas_);
            }
            onChanged();
          }
        } else {
          if (!other.dBItemDatas_.isEmpty()) {
            if (dBItemDatasBuilder_.isEmpty()) {
              dBItemDatasBuilder_.dispose();
              dBItemDatasBuilder_ = null;
              dBItemDatas_ = other.dBItemDatas_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dBItemDatasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDBItemDatasFieldBuilder() : null;
            } else {
              dBItemDatasBuilder_.addAllMessages(other.dBItemDatas_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getDBItemDatasCount(); i++) {
          if (!getDBItemDatas(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DBInventoryBlob.DBInventory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.mokylin.ItemData dBItemDatas = 1;
      private java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> dBItemDatas_ =
        java.util.Collections.emptyList();
      private void ensureDBItemDatasIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dBItemDatas_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData>(dBItemDatas_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> dBItemDatasBuilder_;

      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> getDBItemDatasList() {
        if (dBItemDatasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dBItemDatas_);
        } else {
          return dBItemDatasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public int getDBItemDatasCount() {
        if (dBItemDatasBuilder_ == null) {
          return dBItemDatas_.size();
        } else {
          return dBItemDatasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getDBItemDatas(int index) {
        if (dBItemDatasBuilder_ == null) {
          return dBItemDatas_.get(index);
        } else {
          return dBItemDatasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder setDBItemDatas(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (dBItemDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDBItemDatasIsMutable();
          dBItemDatas_.set(index, value);
          onChanged();
        } else {
          dBItemDatasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder setDBItemDatas(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (dBItemDatasBuilder_ == null) {
          ensureDBItemDatasIsMutable();
          dBItemDatas_.set(index, builderForValue.build());
          onChanged();
        } else {
          dBItemDatasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder addDBItemDatas(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (dBItemDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDBItemDatasIsMutable();
          dBItemDatas_.add(value);
          onChanged();
        } else {
          dBItemDatasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder addDBItemDatas(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData value) {
        if (dBItemDatasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDBItemDatasIsMutable();
          dBItemDatas_.add(index, value);
          onChanged();
        } else {
          dBItemDatasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder addDBItemDatas(
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (dBItemDatasBuilder_ == null) {
          ensureDBItemDatasIsMutable();
          dBItemDatas_.add(builderForValue.build());
          onChanged();
        } else {
          dBItemDatasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder addDBItemDatas(
          int index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder builderForValue) {
        if (dBItemDatasBuilder_ == null) {
          ensureDBItemDatasIsMutable();
          dBItemDatas_.add(index, builderForValue.build());
          onChanged();
        } else {
          dBItemDatasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder addAllDBItemDatas(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData> values) {
        if (dBItemDatasBuilder_ == null) {
          ensureDBItemDatasIsMutable();
          super.addAll(values, dBItemDatas_);
          onChanged();
        } else {
          dBItemDatasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder clearDBItemDatas() {
        if (dBItemDatasBuilder_ == null) {
          dBItemDatas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dBItemDatasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public Builder removeDBItemDatas(int index) {
        if (dBItemDatasBuilder_ == null) {
          ensureDBItemDatasIsMutable();
          dBItemDatas_.remove(index);
          onChanged();
        } else {
          dBItemDatasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder getDBItemDatasBuilder(
          int index) {
        return getDBItemDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder getDBItemDatasOrBuilder(
          int index) {
        if (dBItemDatasBuilder_ == null) {
          return dBItemDatas_.get(index);  } else {
          return dBItemDatasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
           getDBItemDatasOrBuilderList() {
        if (dBItemDatasBuilder_ != null) {
          return dBItemDatasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dBItemDatas_);
        }
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder addDBItemDatasBuilder() {
        return getDBItemDatasFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder addDBItemDatasBuilder(
          int index) {
        return getDBItemDatasFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.ItemData dBItemDatas = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder> 
           getDBItemDatasBuilderList() {
        return getDBItemDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder> 
          getDBItemDatasFieldBuilder() {
        if (dBItemDatasBuilder_ == null) {
          dBItemDatasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder>(
                  dBItemDatas_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dBItemDatas_ = null;
        }
        return dBItemDatasBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBInventory)
    }

    static {
      defaultInstance = new DBInventory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBInventory)
  }

  public interface ItemDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 templateId = 1;
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具模板ID
     * </pre>
     */
    boolean hasTemplateId();
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具模板ID
     * </pre>
     */
    int getTemplateId();

    // required int32 overlap = 2;
    /**
     * <code>required int32 overlap = 2;</code>
     *
     * <pre>
     **叠加数量
     * </pre>
     */
    boolean hasOverlap();
    /**
     * <code>required int32 overlap = 2;</code>
     *
     * <pre>
     **叠加数量
     * </pre>
     */
    int getOverlap();
  }
  /**
   * Protobuf type {@code com.mokylin.ItemData}
   */
  public static final class ItemData extends
      com.google.protobuf.GeneratedMessage
      implements ItemDataOrBuilder {
    // Use ItemData.newBuilder() to construct.
    private ItemData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ItemData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ItemData defaultInstance;
    public static ItemData getDefaultInstance() {
      return defaultInstance;
    }

    public ItemData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ItemData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              templateId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              overlap_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_ItemData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_ItemData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.class, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder.class);
    }

    public static com.google.protobuf.Parser<ItemData> PARSER =
        new com.google.protobuf.AbstractParser<ItemData>() {
      public ItemData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ItemData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ItemData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 templateId = 1;
    public static final int TEMPLATEID_FIELD_NUMBER = 1;
    private int templateId_;
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具模板ID
     * </pre>
     */
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 templateId = 1;</code>
     *
     * <pre>
     **道具模板ID
     * </pre>
     */
    public int getTemplateId() {
      return templateId_;
    }

    // required int32 overlap = 2;
    public static final int OVERLAP_FIELD_NUMBER = 2;
    private int overlap_;
    /**
     * <code>required int32 overlap = 2;</code>
     *
     * <pre>
     **叠加数量
     * </pre>
     */
    public boolean hasOverlap() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 overlap = 2;</code>
     *
     * <pre>
     **叠加数量
     * </pre>
     */
    public int getOverlap() {
      return overlap_;
    }

    private void initFields() {
      templateId_ = 0;
      overlap_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTemplateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOverlap()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, overlap_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, templateId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, overlap_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.ItemData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_ItemData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_ItemData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.class, com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        templateId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        overlap_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.internal_static_com_mokylin_ItemData_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData build() {
        com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData buildPartial() {
        com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData result = new com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.templateId_ = templateId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.overlap_ = overlap_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData other) {
        if (other == com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData.getDefaultInstance()) return this;
        if (other.hasTemplateId()) {
          setTemplateId(other.getTemplateId());
        }
        if (other.hasOverlap()) {
          setOverlap(other.getOverlap());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemplateId()) {
          
          return false;
        }
        if (!hasOverlap()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DBInventoryBlob.ItemData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 templateId = 1;
      private int templateId_ ;
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具模板ID
       * </pre>
       */
      public boolean hasTemplateId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具模板ID
       * </pre>
       */
      public int getTemplateId() {
        return templateId_;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具模板ID
       * </pre>
       */
      public Builder setTemplateId(int value) {
        bitField0_ |= 0x00000001;
        templateId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 templateId = 1;</code>
       *
       * <pre>
       **道具模板ID
       * </pre>
       */
      public Builder clearTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        templateId_ = 0;
        onChanged();
        return this;
      }

      // required int32 overlap = 2;
      private int overlap_ ;
      /**
       * <code>required int32 overlap = 2;</code>
       *
       * <pre>
       **叠加数量
       * </pre>
       */
      public boolean hasOverlap() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 overlap = 2;</code>
       *
       * <pre>
       **叠加数量
       * </pre>
       */
      public int getOverlap() {
        return overlap_;
      }
      /**
       * <code>required int32 overlap = 2;</code>
       *
       * <pre>
       **叠加数量
       * </pre>
       */
      public Builder setOverlap(int value) {
        bitField0_ |= 0x00000002;
        overlap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 overlap = 2;</code>
       *
       * <pre>
       **叠加数量
       * </pre>
       */
      public Builder clearOverlap() {
        bitField0_ = (bitField0_ & ~0x00000002);
        overlap_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.ItemData)
    }

    static {
      defaultInstance = new ItemData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.ItemData)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBInventory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBInventory_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_ItemData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_ItemData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024db/DBInventory.proto\022\013com.mokylin\"9\n\013D" +
      "BInventory\022*\n\013dBItemDatas\030\001 \003(\0132\025.com.mo" +
      "kylin.ItemData\"/\n\010ItemData\022\022\n\ntemplateId" +
      "\030\001 \002(\005\022\017\n\007overlap\030\002 \002(\005B1\n\036com.mokylin.b" +
      "leach.protobuf.dbB\017DBInventoryBlob"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_mokylin_DBInventory_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_mokylin_DBInventory_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBInventory_descriptor,
              new java.lang.String[] { "DBItemDatas", });
          internal_static_com_mokylin_ItemData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_mokylin_ItemData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_ItemData_descriptor,
              new java.lang.String[] { "TemplateId", "Overlap", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
