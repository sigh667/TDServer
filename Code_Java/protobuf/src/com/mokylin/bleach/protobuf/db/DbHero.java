// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db/DbHero.proto

package com.mokylin.bleach.protobuf.db;

public final class DbHero {
  private DbHero() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DbHeroLingYaInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 templateIds = 1;
    /**
     * <code>repeated int32 templateIds = 1;</code>
     *
     * <pre>
     **灵压模板ID组 
     * </pre>
     */
    java.util.List<java.lang.Integer> getTemplateIdsList();
    /**
     * <code>repeated int32 templateIds = 1;</code>
     *
     * <pre>
     **灵压模板ID组 
     * </pre>
     */
    int getTemplateIdsCount();
    /**
     * <code>repeated int32 templateIds = 1;</code>
     *
     * <pre>
     **灵压模板ID组 
     * </pre>
     */
    int getTemplateIds(int index);

    // repeated .com.mokylin.CritLevel critLevels = 2;
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DbHero.CritLevel> 
        getCritLevelsList();
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHero.CritLevel getCritLevels(int index);
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    int getCritLevelsCount();
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder> 
        getCritLevelsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder getCritLevelsOrBuilder(
        int index);

    // optional int32 heroGroupId = 3;
    /**
     * <code>optional int32 heroGroupId = 3;</code>
     *
     * <pre>
     **选填
     * </pre>
     */
    boolean hasHeroGroupId();
    /**
     * <code>optional int32 heroGroupId = 3;</code>
     *
     * <pre>
     **选填
     * </pre>
     */
    int getHeroGroupId();
  }
  /**
   * Protobuf type {@code com.mokylin.DbHeroLingYaInfo}
   *
   * <pre>
   **
   * Hero的灵压信息
   * </pre>
   */
  public static final class DbHeroLingYaInfo extends
      com.google.protobuf.GeneratedMessage
      implements DbHeroLingYaInfoOrBuilder {
    // Use DbHeroLingYaInfo.newBuilder() to construct.
    private DbHeroLingYaInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DbHeroLingYaInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DbHeroLingYaInfo defaultInstance;
    public static DbHeroLingYaInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DbHeroLingYaInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DbHeroLingYaInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                templateIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              templateIds_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                templateIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                templateIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                critLevels_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHero.CritLevel>();
                mutable_bitField0_ |= 0x00000002;
              }
              critLevels_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DbHero.CritLevel.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              heroGroupId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          templateIds_ = java.util.Collections.unmodifiableList(templateIds_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          critLevels_ = java.util.Collections.unmodifiableList(critLevels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_DbHeroLingYaInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_DbHeroLingYaInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo.class, com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DbHeroLingYaInfo> PARSER =
        new com.google.protobuf.AbstractParser<DbHeroLingYaInfo>() {
      public DbHeroLingYaInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DbHeroLingYaInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DbHeroLingYaInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 templateIds = 1;
    public static final int TEMPLATEIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> templateIds_;
    /**
     * <code>repeated int32 templateIds = 1;</code>
     *
     * <pre>
     **灵压模板ID组 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTemplateIdsList() {
      return templateIds_;
    }
    /**
     * <code>repeated int32 templateIds = 1;</code>
     *
     * <pre>
     **灵压模板ID组 
     * </pre>
     */
    public int getTemplateIdsCount() {
      return templateIds_.size();
    }
    /**
     * <code>repeated int32 templateIds = 1;</code>
     *
     * <pre>
     **灵压模板ID组 
     * </pre>
     */
    public int getTemplateIds(int index) {
      return templateIds_.get(index);
    }

    // repeated .com.mokylin.CritLevel critLevels = 2;
    public static final int CRITLEVELS_FIELD_NUMBER = 2;
    private java.util.List<com.mokylin.bleach.protobuf.db.DbHero.CritLevel> critLevels_;
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DbHero.CritLevel> getCritLevelsList() {
      return critLevels_;
    }
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder> 
        getCritLevelsOrBuilderList() {
      return critLevels_;
    }
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    public int getCritLevelsCount() {
      return critLevels_.size();
    }
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHero.CritLevel getCritLevels(int index) {
      return critLevels_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
     *
     * <pre>
     **灵压暴击等级
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder getCritLevelsOrBuilder(
        int index) {
      return critLevels_.get(index);
    }

    // optional int32 heroGroupId = 3;
    public static final int HEROGROUPID_FIELD_NUMBER = 3;
    private int heroGroupId_;
    /**
     * <code>optional int32 heroGroupId = 3;</code>
     *
     * <pre>
     **选填
     * </pre>
     */
    public boolean hasHeroGroupId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 heroGroupId = 3;</code>
     *
     * <pre>
     **选填
     * </pre>
     */
    public int getHeroGroupId() {
      return heroGroupId_;
    }

    private void initFields() {
      templateIds_ = java.util.Collections.emptyList();
      critLevels_ = java.util.Collections.emptyList();
      heroGroupId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCritLevelsCount(); i++) {
        if (!getCritLevels(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < templateIds_.size(); i++) {
        output.writeInt32(1, templateIds_.get(i));
      }
      for (int i = 0; i < critLevels_.size(); i++) {
        output.writeMessage(2, critLevels_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, heroGroupId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < templateIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(templateIds_.get(i));
        }
        size += dataSize;
        size += 1 * getTemplateIdsList().size();
      }
      for (int i = 0; i < critLevels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, critLevels_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, heroGroupId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DbHeroLingYaInfo}
     *
     * <pre>
     **
     * Hero的灵压信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_DbHeroLingYaInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_DbHeroLingYaInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo.class, com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCritLevelsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        templateIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (critLevelsBuilder_ == null) {
          critLevels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          critLevelsBuilder_.clear();
        }
        heroGroupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_DbHeroLingYaInfo_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo build() {
        com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo result = new com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          templateIds_ = java.util.Collections.unmodifiableList(templateIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.templateIds_ = templateIds_;
        if (critLevelsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            critLevels_ = java.util.Collections.unmodifiableList(critLevels_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.critLevels_ = critLevels_;
        } else {
          result.critLevels_ = critLevelsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.heroGroupId_ = heroGroupId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo.getDefaultInstance()) return this;
        if (!other.templateIds_.isEmpty()) {
          if (templateIds_.isEmpty()) {
            templateIds_ = other.templateIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTemplateIdsIsMutable();
            templateIds_.addAll(other.templateIds_);
          }
          onChanged();
        }
        if (critLevelsBuilder_ == null) {
          if (!other.critLevels_.isEmpty()) {
            if (critLevels_.isEmpty()) {
              critLevels_ = other.critLevels_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCritLevelsIsMutable();
              critLevels_.addAll(other.critLevels_);
            }
            onChanged();
          }
        } else {
          if (!other.critLevels_.isEmpty()) {
            if (critLevelsBuilder_.isEmpty()) {
              critLevelsBuilder_.dispose();
              critLevelsBuilder_ = null;
              critLevels_ = other.critLevels_;
              bitField0_ = (bitField0_ & ~0x00000002);
              critLevelsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCritLevelsFieldBuilder() : null;
            } else {
              critLevelsBuilder_.addAllMessages(other.critLevels_);
            }
          }
        }
        if (other.hasHeroGroupId()) {
          setHeroGroupId(other.getHeroGroupId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCritLevelsCount(); i++) {
          if (!getCritLevels(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHero.DbHeroLingYaInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 templateIds = 1;
      private java.util.List<java.lang.Integer> templateIds_ = java.util.Collections.emptyList();
      private void ensureTemplateIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          templateIds_ = new java.util.ArrayList<java.lang.Integer>(templateIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 templateIds = 1;</code>
       *
       * <pre>
       **灵压模板ID组 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTemplateIdsList() {
        return java.util.Collections.unmodifiableList(templateIds_);
      }
      /**
       * <code>repeated int32 templateIds = 1;</code>
       *
       * <pre>
       **灵压模板ID组 
       * </pre>
       */
      public int getTemplateIdsCount() {
        return templateIds_.size();
      }
      /**
       * <code>repeated int32 templateIds = 1;</code>
       *
       * <pre>
       **灵压模板ID组 
       * </pre>
       */
      public int getTemplateIds(int index) {
        return templateIds_.get(index);
      }
      /**
       * <code>repeated int32 templateIds = 1;</code>
       *
       * <pre>
       **灵压模板ID组 
       * </pre>
       */
      public Builder setTemplateIds(
          int index, int value) {
        ensureTemplateIdsIsMutable();
        templateIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 templateIds = 1;</code>
       *
       * <pre>
       **灵压模板ID组 
       * </pre>
       */
      public Builder addTemplateIds(int value) {
        ensureTemplateIdsIsMutable();
        templateIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 templateIds = 1;</code>
       *
       * <pre>
       **灵压模板ID组 
       * </pre>
       */
      public Builder addAllTemplateIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTemplateIdsIsMutable();
        super.addAll(values, templateIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 templateIds = 1;</code>
       *
       * <pre>
       **灵压模板ID组 
       * </pre>
       */
      public Builder clearTemplateIds() {
        templateIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .com.mokylin.CritLevel critLevels = 2;
      private java.util.List<com.mokylin.bleach.protobuf.db.DbHero.CritLevel> critLevels_ =
        java.util.Collections.emptyList();
      private void ensureCritLevelsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          critLevels_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHero.CritLevel>(critLevels_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHero.CritLevel, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder, com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder> critLevelsBuilder_;

      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHero.CritLevel> getCritLevelsList() {
        if (critLevelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(critLevels_);
        } else {
          return critLevelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public int getCritLevelsCount() {
        if (critLevelsBuilder_ == null) {
          return critLevels_.size();
        } else {
          return critLevelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHero.CritLevel getCritLevels(int index) {
        if (critLevelsBuilder_ == null) {
          return critLevels_.get(index);
        } else {
          return critLevelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder setCritLevels(
          int index, com.mokylin.bleach.protobuf.db.DbHero.CritLevel value) {
        if (critLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCritLevelsIsMutable();
          critLevels_.set(index, value);
          onChanged();
        } else {
          critLevelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder setCritLevels(
          int index, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder builderForValue) {
        if (critLevelsBuilder_ == null) {
          ensureCritLevelsIsMutable();
          critLevels_.set(index, builderForValue.build());
          onChanged();
        } else {
          critLevelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder addCritLevels(com.mokylin.bleach.protobuf.db.DbHero.CritLevel value) {
        if (critLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCritLevelsIsMutable();
          critLevels_.add(value);
          onChanged();
        } else {
          critLevelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder addCritLevels(
          int index, com.mokylin.bleach.protobuf.db.DbHero.CritLevel value) {
        if (critLevelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCritLevelsIsMutable();
          critLevels_.add(index, value);
          onChanged();
        } else {
          critLevelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder addCritLevels(
          com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder builderForValue) {
        if (critLevelsBuilder_ == null) {
          ensureCritLevelsIsMutable();
          critLevels_.add(builderForValue.build());
          onChanged();
        } else {
          critLevelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder addCritLevels(
          int index, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder builderForValue) {
        if (critLevelsBuilder_ == null) {
          ensureCritLevelsIsMutable();
          critLevels_.add(index, builderForValue.build());
          onChanged();
        } else {
          critLevelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder addAllCritLevels(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DbHero.CritLevel> values) {
        if (critLevelsBuilder_ == null) {
          ensureCritLevelsIsMutable();
          super.addAll(values, critLevels_);
          onChanged();
        } else {
          critLevelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder clearCritLevels() {
        if (critLevelsBuilder_ == null) {
          critLevels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          critLevelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public Builder removeCritLevels(int index) {
        if (critLevelsBuilder_ == null) {
          ensureCritLevelsIsMutable();
          critLevels_.remove(index);
          onChanged();
        } else {
          critLevelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder getCritLevelsBuilder(
          int index) {
        return getCritLevelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder getCritLevelsOrBuilder(
          int index) {
        if (critLevelsBuilder_ == null) {
          return critLevels_.get(index);  } else {
          return critLevelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder> 
           getCritLevelsOrBuilderList() {
        if (critLevelsBuilder_ != null) {
          return critLevelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(critLevels_);
        }
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder addCritLevelsBuilder() {
        return getCritLevelsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DbHero.CritLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder addCritLevelsBuilder(
          int index) {
        return getCritLevelsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.CritLevel critLevels = 2;</code>
       *
       * <pre>
       **灵压暴击等级
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder> 
           getCritLevelsBuilderList() {
        return getCritLevelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHero.CritLevel, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder, com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder> 
          getCritLevelsFieldBuilder() {
        if (critLevelsBuilder_ == null) {
          critLevelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHero.CritLevel, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder, com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder>(
                  critLevels_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          critLevels_ = null;
        }
        return critLevelsBuilder_;
      }

      // optional int32 heroGroupId = 3;
      private int heroGroupId_ ;
      /**
       * <code>optional int32 heroGroupId = 3;</code>
       *
       * <pre>
       **选填
       * </pre>
       */
      public boolean hasHeroGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 heroGroupId = 3;</code>
       *
       * <pre>
       **选填
       * </pre>
       */
      public int getHeroGroupId() {
        return heroGroupId_;
      }
      /**
       * <code>optional int32 heroGroupId = 3;</code>
       *
       * <pre>
       **选填
       * </pre>
       */
      public Builder setHeroGroupId(int value) {
        bitField0_ |= 0x00000004;
        heroGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 heroGroupId = 3;</code>
       *
       * <pre>
       **选填
       * </pre>
       */
      public Builder clearHeroGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroGroupId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DbHeroLingYaInfo)
    }

    static {
      defaultInstance = new DbHeroLingYaInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DbHeroLingYaInfo)
  }

  public interface CritLevelOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 phase = 1;
    /**
     * <code>required int32 phase = 1;</code>
     *
     * <pre>
     **灵压阶段 
     * </pre>
     */
    boolean hasPhase();
    /**
     * <code>required int32 phase = 1;</code>
     *
     * <pre>
     **灵压阶段 
     * </pre>
     */
    int getPhase();

    // repeated int32 levels = 2;
    /**
     * <code>repeated int32 levels = 2;</code>
     *
     * <pre>
     **暴击等级 
     * </pre>
     */
    java.util.List<java.lang.Integer> getLevelsList();
    /**
     * <code>repeated int32 levels = 2;</code>
     *
     * <pre>
     **暴击等级 
     * </pre>
     */
    int getLevelsCount();
    /**
     * <code>repeated int32 levels = 2;</code>
     *
     * <pre>
     **暴击等级 
     * </pre>
     */
    int getLevels(int index);
  }
  /**
   * Protobuf type {@code com.mokylin.CritLevel}
   *
   * <pre>
   **
   * 每阶段的暴击等级
   * </pre>
   */
  public static final class CritLevel extends
      com.google.protobuf.GeneratedMessage
      implements CritLevelOrBuilder {
    // Use CritLevel.newBuilder() to construct.
    private CritLevel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CritLevel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CritLevel defaultInstance;
    public static CritLevel getDefaultInstance() {
      return defaultInstance;
    }

    public CritLevel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CritLevel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              phase_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                levels_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              levels_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                levels_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                levels_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          levels_ = java.util.Collections.unmodifiableList(levels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_CritLevel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_CritLevel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHero.CritLevel.class, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder.class);
    }

    public static com.google.protobuf.Parser<CritLevel> PARSER =
        new com.google.protobuf.AbstractParser<CritLevel>() {
      public CritLevel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CritLevel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CritLevel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 phase = 1;
    public static final int PHASE_FIELD_NUMBER = 1;
    private int phase_;
    /**
     * <code>required int32 phase = 1;</code>
     *
     * <pre>
     **灵压阶段 
     * </pre>
     */
    public boolean hasPhase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 phase = 1;</code>
     *
     * <pre>
     **灵压阶段 
     * </pre>
     */
    public int getPhase() {
      return phase_;
    }

    // repeated int32 levels = 2;
    public static final int LEVELS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> levels_;
    /**
     * <code>repeated int32 levels = 2;</code>
     *
     * <pre>
     **暴击等级 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLevelsList() {
      return levels_;
    }
    /**
     * <code>repeated int32 levels = 2;</code>
     *
     * <pre>
     **暴击等级 
     * </pre>
     */
    public int getLevelsCount() {
      return levels_.size();
    }
    /**
     * <code>repeated int32 levels = 2;</code>
     *
     * <pre>
     **暴击等级 
     * </pre>
     */
    public int getLevels(int index) {
      return levels_.get(index);
    }

    private void initFields() {
      phase_ = 0;
      levels_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPhase()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, phase_);
      }
      for (int i = 0; i < levels_.size(); i++) {
        output.writeInt32(2, levels_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, phase_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < levels_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(levels_.get(i));
        }
        size += dataSize;
        size += 1 * getLevelsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHero.CritLevel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHero.CritLevel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CritLevel}
     *
     * <pre>
     **
     * 每阶段的暴击等级
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHero.CritLevelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_CritLevel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_CritLevel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHero.CritLevel.class, com.mokylin.bleach.protobuf.db.DbHero.CritLevel.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHero.CritLevel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        phase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        levels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHero.internal_static_com_mokylin_CritLevel_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHero.CritLevel getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHero.CritLevel.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHero.CritLevel build() {
        com.mokylin.bleach.protobuf.db.DbHero.CritLevel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHero.CritLevel buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHero.CritLevel result = new com.mokylin.bleach.protobuf.db.DbHero.CritLevel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.phase_ = phase_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          levels_ = java.util.Collections.unmodifiableList(levels_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.levels_ = levels_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHero.CritLevel) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHero.CritLevel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHero.CritLevel other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHero.CritLevel.getDefaultInstance()) return this;
        if (other.hasPhase()) {
          setPhase(other.getPhase());
        }
        if (!other.levels_.isEmpty()) {
          if (levels_.isEmpty()) {
            levels_ = other.levels_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLevelsIsMutable();
            levels_.addAll(other.levels_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPhase()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHero.CritLevel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHero.CritLevel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 phase = 1;
      private int phase_ ;
      /**
       * <code>required int32 phase = 1;</code>
       *
       * <pre>
       **灵压阶段 
       * </pre>
       */
      public boolean hasPhase() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 phase = 1;</code>
       *
       * <pre>
       **灵压阶段 
       * </pre>
       */
      public int getPhase() {
        return phase_;
      }
      /**
       * <code>required int32 phase = 1;</code>
       *
       * <pre>
       **灵压阶段 
       * </pre>
       */
      public Builder setPhase(int value) {
        bitField0_ |= 0x00000001;
        phase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 phase = 1;</code>
       *
       * <pre>
       **灵压阶段 
       * </pre>
       */
      public Builder clearPhase() {
        bitField0_ = (bitField0_ & ~0x00000001);
        phase_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 levels = 2;
      private java.util.List<java.lang.Integer> levels_ = java.util.Collections.emptyList();
      private void ensureLevelsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          levels_ = new java.util.ArrayList<java.lang.Integer>(levels_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 levels = 2;</code>
       *
       * <pre>
       **暴击等级 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLevelsList() {
        return java.util.Collections.unmodifiableList(levels_);
      }
      /**
       * <code>repeated int32 levels = 2;</code>
       *
       * <pre>
       **暴击等级 
       * </pre>
       */
      public int getLevelsCount() {
        return levels_.size();
      }
      /**
       * <code>repeated int32 levels = 2;</code>
       *
       * <pre>
       **暴击等级 
       * </pre>
       */
      public int getLevels(int index) {
        return levels_.get(index);
      }
      /**
       * <code>repeated int32 levels = 2;</code>
       *
       * <pre>
       **暴击等级 
       * </pre>
       */
      public Builder setLevels(
          int index, int value) {
        ensureLevelsIsMutable();
        levels_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 levels = 2;</code>
       *
       * <pre>
       **暴击等级 
       * </pre>
       */
      public Builder addLevels(int value) {
        ensureLevelsIsMutable();
        levels_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 levels = 2;</code>
       *
       * <pre>
       **暴击等级 
       * </pre>
       */
      public Builder addAllLevels(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLevelsIsMutable();
        super.addAll(values, levels_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 levels = 2;</code>
       *
       * <pre>
       **暴击等级 
       * </pre>
       */
      public Builder clearLevels() {
        levels_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CritLevel)
    }

    static {
      defaultInstance = new CritLevel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CritLevel)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DbHeroLingYaInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DbHeroLingYaInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CritLevel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CritLevel_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017db/DbHero.proto\022\013com.mokylin\"h\n\020DbHero" +
      "LingYaInfo\022\023\n\013templateIds\030\001 \003(\005\022*\n\ncritL" +
      "evels\030\002 \003(\0132\026.com.mokylin.CritLevel\022\023\n\013h" +
      "eroGroupId\030\003 \001(\005\"*\n\tCritLevel\022\r\n\005phase\030\001" +
      " \002(\005\022\016\n\006levels\030\002 \003(\005B(\n\036com.mokylin.blea" +
      "ch.protobuf.dbB\006DbHero"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_mokylin_DbHeroLingYaInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_mokylin_DbHeroLingYaInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DbHeroLingYaInfo_descriptor,
              new java.lang.String[] { "TemplateIds", "CritLevels", "HeroGroupId", });
          internal_static_com_mokylin_CritLevel_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_mokylin_CritLevel_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_CritLevel_descriptor,
              new java.lang.String[] { "Phase", "Levels", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
