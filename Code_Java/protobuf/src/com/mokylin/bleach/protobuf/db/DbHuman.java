// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db/DbHuman.proto

package com.mokylin.bleach.protobuf.db;

public final class DbHuman {
  private DbHuman() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.mokylin.FormationType}
   *
   * <pre>
   **阵容类型。新增类型请在最后插入，已有的枚举数值不可改变 
   * </pre>
   */
  public enum FormationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ArenaDefense = 0;</code>
     *
     * <pre>
     **竞技场防守阵容
     * </pre>
     */
    ArenaDefense(0, 0),
    /**
     * <code>ArenaAttack = 1;</code>
     *
     * <pre>
     **竞技场进攻阵容
     * </pre>
     */
    ArenaAttack(1, 1),
    /**
     * <code>GuildWar = 2;</code>
     *
     * <pre>
     **公会战
     * </pre>
     */
    GuildWar(2, 2),
    /**
     * <code>CrossWar = 3;</code>
     *
     * <pre>
     **跨服战
     * </pre>
     */
    CrossWar(3, 3),
    /**
     * <code>Expedition = 4;</code>
     *
     * <pre>
     **远征
     * </pre>
     */
    Expedition(4, 4),
    /**
     * <code>Mission = 5;</code>
     *
     * <pre>
     **副本
     * </pre>
     */
    Mission(5, 5),
    ;

    /**
     * <code>ArenaDefense = 0;</code>
     *
     * <pre>
     **竞技场防守阵容
     * </pre>
     */
    public static final int ArenaDefense_VALUE = 0;
    /**
     * <code>ArenaAttack = 1;</code>
     *
     * <pre>
     **竞技场进攻阵容
     * </pre>
     */
    public static final int ArenaAttack_VALUE = 1;
    /**
     * <code>GuildWar = 2;</code>
     *
     * <pre>
     **公会战
     * </pre>
     */
    public static final int GuildWar_VALUE = 2;
    /**
     * <code>CrossWar = 3;</code>
     *
     * <pre>
     **跨服战
     * </pre>
     */
    public static final int CrossWar_VALUE = 3;
    /**
     * <code>Expedition = 4;</code>
     *
     * <pre>
     **远征
     * </pre>
     */
    public static final int Expedition_VALUE = 4;
    /**
     * <code>Mission = 5;</code>
     *
     * <pre>
     **副本
     * </pre>
     */
    public static final int Mission_VALUE = 5;


    public final int getNumber() { return value; }

    public static FormationType valueOf(int value) {
      switch (value) {
        case 0: return ArenaDefense;
        case 1: return ArenaAttack;
        case 2: return GuildWar;
        case 3: return CrossWar;
        case 4: return Expedition;
        case 5: return Mission;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FormationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FormationType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FormationType>() {
            public FormationType findValueByNumber(int number) {
              return FormationType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.getDescriptor().getEnumTypes().get(0);
    }

    private static final FormationType[] VALUES = values();

    public static FormationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private FormationType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mokylin.FormationType)
  }

  /**
   * Protobuf enum {@code com.mokylin.CDType}
   *
   * <pre>
   **
   * CD类型。新增类型请在最后插入，已有的枚举数值不可改变。
   * 消CD时，是客户端先斩后奏的，所有CD消息都会先过PlayerActor，请注意时序。
   * </pre>
   */
  public enum CDType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AttackInArena = 0;</code>
     *
     * <pre>
     **竞技场挑战CD
     * </pre>
     */
    AttackInArena(0, 0),
    /**
     * <code>AttackInMultiArena = 1;</code>
     *
     * <pre>
     **巅峰竞技场挑战CD
     * </pre>
     */
    AttackInMultiArena(1, 1),
    ;

    /**
     * <code>AttackInArena = 0;</code>
     *
     * <pre>
     **竞技场挑战CD
     * </pre>
     */
    public static final int AttackInArena_VALUE = 0;
    /**
     * <code>AttackInMultiArena = 1;</code>
     *
     * <pre>
     **巅峰竞技场挑战CD
     * </pre>
     */
    public static final int AttackInMultiArena_VALUE = 1;


    public final int getNumber() { return value; }

    public static CDType valueOf(int value) {
      switch (value) {
        case 0: return AttackInArena;
        case 1: return AttackInMultiArena;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CDType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CDType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CDType>() {
            public CDType findValueByNumber(int number) {
              return CDType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.getDescriptor().getEnumTypes().get(1);
    }

    private static final CDType[] VALUES = values();

    public static CDType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CDType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mokylin.CDType)
  }

  public interface DbHumanPointsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.mokylin.DbPoint points = 1;
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint> 
        getPointsList();
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DbPoint getPoints(int index);
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    int getPointsCount();
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder> 
        getPointsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder getPointsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.DbHumanPoints}
   *
   * <pre>
   **
   * Point Blob Array，包含：
   * point
   * lastPointRecoverTime
   * buyPointCounts
   * lastBuyPointCountsResetTime
   * </pre>
   */
  public static final class DbHumanPoints extends
      com.google.protobuf.GeneratedMessage
      implements DbHumanPointsOrBuilder {
    // Use DbHumanPoints.newBuilder() to construct.
    private DbHumanPoints(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DbHumanPoints(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DbHumanPoints defaultInstance;
    public static DbHumanPoints getDefaultInstance() {
      return defaultInstance;
    }

    public DbHumanPoints getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DbHumanPoints(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                points_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint>();
                mutable_bitField0_ |= 0x00000001;
              }
              points_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbHumanPoints_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbHumanPoints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints.class, com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints.Builder.class);
    }

    public static com.google.protobuf.Parser<DbHumanPoints> PARSER =
        new com.google.protobuf.AbstractParser<DbHumanPoints>() {
      public DbHumanPoints parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DbHumanPoints(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DbHumanPoints> getParserForType() {
      return PARSER;
    }

    // repeated .com.mokylin.DbPoint points = 1;
    public static final int POINTS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint> points_;
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.DbPoint points = 1;</code>
     *
     * <pre>
     **所有点数信息
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    private void initFields() {
      points_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getPointsCount(); i++) {
        if (!getPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(1, points_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, points_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DbHumanPoints}
     *
     * <pre>
     **
     * Point Blob Array，包含：
     * point
     * lastPointRecoverTime
     * buyPointCounts
     * lastBuyPointCountsResetTime
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPointsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbHumanPoints_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbHumanPoints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints.class, com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPointsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbHumanPoints_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints result = new com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints(this);
        int from_bitField0_ = bitField0_;
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints.getDefaultInstance()) return this;
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPointsCount(); i++) {
          if (!getPoints(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DbHumanPoints) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.mokylin.DbPoint points = 1;
      private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          points_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint>(points_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DbPoint, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder> pointsBuilder_;

      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder setPoints(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder setPoints(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder addPoints(com.mokylin.bleach.protobuf.db.DbHuman.DbPoint value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder addPoints(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder addPoints(
          com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder addPoints(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DbHuman.DbPoint> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          super.addAll(values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DbPoint points = 1;</code>
       *
       * <pre>
       **所有点数信息
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DbPoint, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.DbPoint, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DbHumanPoints)
    }

    static {
      defaultInstance = new DbHumanPoints(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DbHumanPoints)
  }

  public interface DbPointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pointType = 1;
    /**
     * <code>required int32 pointType = 1;</code>
     *
     * <pre>
     **PointType的枚举ordinal 
     * </pre>
     */
    boolean hasPointType();
    /**
     * <code>required int32 pointType = 1;</code>
     *
     * <pre>
     **PointType的枚举ordinal 
     * </pre>
     */
    int getPointType();

    // required int32 point = 2;
    /**
     * <code>required int32 point = 2;</code>
     *
     * <pre>
     **Point点数 
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>required int32 point = 2;</code>
     *
     * <pre>
     **Point点数 
     * </pre>
     */
    int getPoint();

    // required int64 lastPointRecoverTime = 3;
    /**
     * <code>required int64 lastPointRecoverTime = 3;</code>
     *
     * <pre>
     **上次恢复时间 
     * </pre>
     */
    boolean hasLastPointRecoverTime();
    /**
     * <code>required int64 lastPointRecoverTime = 3;</code>
     *
     * <pre>
     **上次恢复时间 
     * </pre>
     */
    long getLastPointRecoverTime();

    // required int32 buyPointCounts = 4;
    /**
     * <code>required int32 buyPointCounts = 4;</code>
     *
     * <pre>
     **当日已购买次数 
     * </pre>
     */
    boolean hasBuyPointCounts();
    /**
     * <code>required int32 buyPointCounts = 4;</code>
     *
     * <pre>
     **当日已购买次数 
     * </pre>
     */
    int getBuyPointCounts();

    // required int64 lastBuyPointCountsResetTime = 5;
    /**
     * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
     *
     * <pre>
     **上次购买次数重置时间 
     * </pre>
     */
    boolean hasLastBuyPointCountsResetTime();
    /**
     * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
     *
     * <pre>
     **上次购买次数重置时间 
     * </pre>
     */
    long getLastBuyPointCountsResetTime();
  }
  /**
   * Protobuf type {@code com.mokylin.DbPoint}
   *
   * <pre>
   **
   * Point Blob
   * </pre>
   */
  public static final class DbPoint extends
      com.google.protobuf.GeneratedMessage
      implements DbPointOrBuilder {
    // Use DbPoint.newBuilder() to construct.
    private DbPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DbPoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DbPoint defaultInstance;
    public static DbPoint getDefaultInstance() {
      return defaultInstance;
    }

    public DbPoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DbPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pointType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              point_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastPointRecoverTime_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              buyPointCounts_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              lastBuyPointCountsResetTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbPoint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.class, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder.class);
    }

    public static com.google.protobuf.Parser<DbPoint> PARSER =
        new com.google.protobuf.AbstractParser<DbPoint>() {
      public DbPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DbPoint(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DbPoint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pointType = 1;
    public static final int POINTTYPE_FIELD_NUMBER = 1;
    private int pointType_;
    /**
     * <code>required int32 pointType = 1;</code>
     *
     * <pre>
     **PointType的枚举ordinal 
     * </pre>
     */
    public boolean hasPointType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pointType = 1;</code>
     *
     * <pre>
     **PointType的枚举ordinal 
     * </pre>
     */
    public int getPointType() {
      return pointType_;
    }

    // required int32 point = 2;
    public static final int POINT_FIELD_NUMBER = 2;
    private int point_;
    /**
     * <code>required int32 point = 2;</code>
     *
     * <pre>
     **Point点数 
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 point = 2;</code>
     *
     * <pre>
     **Point点数 
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // required int64 lastPointRecoverTime = 3;
    public static final int LASTPOINTRECOVERTIME_FIELD_NUMBER = 3;
    private long lastPointRecoverTime_;
    /**
     * <code>required int64 lastPointRecoverTime = 3;</code>
     *
     * <pre>
     **上次恢复时间 
     * </pre>
     */
    public boolean hasLastPointRecoverTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 lastPointRecoverTime = 3;</code>
     *
     * <pre>
     **上次恢复时间 
     * </pre>
     */
    public long getLastPointRecoverTime() {
      return lastPointRecoverTime_;
    }

    // required int32 buyPointCounts = 4;
    public static final int BUYPOINTCOUNTS_FIELD_NUMBER = 4;
    private int buyPointCounts_;
    /**
     * <code>required int32 buyPointCounts = 4;</code>
     *
     * <pre>
     **当日已购买次数 
     * </pre>
     */
    public boolean hasBuyPointCounts() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 buyPointCounts = 4;</code>
     *
     * <pre>
     **当日已购买次数 
     * </pre>
     */
    public int getBuyPointCounts() {
      return buyPointCounts_;
    }

    // required int64 lastBuyPointCountsResetTime = 5;
    public static final int LASTBUYPOINTCOUNTSRESETTIME_FIELD_NUMBER = 5;
    private long lastBuyPointCountsResetTime_;
    /**
     * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
     *
     * <pre>
     **上次购买次数重置时间 
     * </pre>
     */
    public boolean hasLastBuyPointCountsResetTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
     *
     * <pre>
     **上次购买次数重置时间 
     * </pre>
     */
    public long getLastBuyPointCountsResetTime() {
      return lastBuyPointCountsResetTime_;
    }

    private void initFields() {
      pointType_ = 0;
      point_ = 0;
      lastPointRecoverTime_ = 0L;
      buyPointCounts_ = 0;
      lastBuyPointCountsResetTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPointType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPoint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastPointRecoverTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBuyPointCounts()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastBuyPointCountsResetTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pointType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, point_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, lastPointRecoverTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, buyPointCounts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, lastBuyPointCountsResetTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pointType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, point_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, lastPointRecoverTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, buyPointCounts_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, lastBuyPointCountsResetTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DbPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DbPoint}
     *
     * <pre>
     **
     * Point Blob
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DbPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbPoint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.class, com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pointType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lastPointRecoverTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        buyPointCounts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        lastBuyPointCountsResetTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DbPoint_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DbPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DbPoint buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DbPoint result = new com.mokylin.bleach.protobuf.db.DbHuman.DbPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pointType_ = pointType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastPointRecoverTime_ = lastPointRecoverTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.buyPointCounts_ = buyPointCounts_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastBuyPointCountsResetTime_ = lastBuyPointCountsResetTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DbPoint) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DbPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DbPoint other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DbPoint.getDefaultInstance()) return this;
        if (other.hasPointType()) {
          setPointType(other.getPointType());
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasLastPointRecoverTime()) {
          setLastPointRecoverTime(other.getLastPointRecoverTime());
        }
        if (other.hasBuyPointCounts()) {
          setBuyPointCounts(other.getBuyPointCounts());
        }
        if (other.hasLastBuyPointCountsResetTime()) {
          setLastBuyPointCountsResetTime(other.getLastBuyPointCountsResetTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPointType()) {
          
          return false;
        }
        if (!hasPoint()) {
          
          return false;
        }
        if (!hasLastPointRecoverTime()) {
          
          return false;
        }
        if (!hasBuyPointCounts()) {
          
          return false;
        }
        if (!hasLastBuyPointCountsResetTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DbPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DbPoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pointType = 1;
      private int pointType_ ;
      /**
       * <code>required int32 pointType = 1;</code>
       *
       * <pre>
       **PointType的枚举ordinal 
       * </pre>
       */
      public boolean hasPointType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pointType = 1;</code>
       *
       * <pre>
       **PointType的枚举ordinal 
       * </pre>
       */
      public int getPointType() {
        return pointType_;
      }
      /**
       * <code>required int32 pointType = 1;</code>
       *
       * <pre>
       **PointType的枚举ordinal 
       * </pre>
       */
      public Builder setPointType(int value) {
        bitField0_ |= 0x00000001;
        pointType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pointType = 1;</code>
       *
       * <pre>
       **PointType的枚举ordinal 
       * </pre>
       */
      public Builder clearPointType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pointType_ = 0;
        onChanged();
        return this;
      }

      // required int32 point = 2;
      private int point_ ;
      /**
       * <code>required int32 point = 2;</code>
       *
       * <pre>
       **Point点数 
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 point = 2;</code>
       *
       * <pre>
       **Point点数 
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>required int32 point = 2;</code>
       *
       * <pre>
       **Point点数 
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000002;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 point = 2;</code>
       *
       * <pre>
       **Point点数 
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        point_ = 0;
        onChanged();
        return this;
      }

      // required int64 lastPointRecoverTime = 3;
      private long lastPointRecoverTime_ ;
      /**
       * <code>required int64 lastPointRecoverTime = 3;</code>
       *
       * <pre>
       **上次恢复时间 
       * </pre>
       */
      public boolean hasLastPointRecoverTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 lastPointRecoverTime = 3;</code>
       *
       * <pre>
       **上次恢复时间 
       * </pre>
       */
      public long getLastPointRecoverTime() {
        return lastPointRecoverTime_;
      }
      /**
       * <code>required int64 lastPointRecoverTime = 3;</code>
       *
       * <pre>
       **上次恢复时间 
       * </pre>
       */
      public Builder setLastPointRecoverTime(long value) {
        bitField0_ |= 0x00000004;
        lastPointRecoverTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastPointRecoverTime = 3;</code>
       *
       * <pre>
       **上次恢复时间 
       * </pre>
       */
      public Builder clearLastPointRecoverTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastPointRecoverTime_ = 0L;
        onChanged();
        return this;
      }

      // required int32 buyPointCounts = 4;
      private int buyPointCounts_ ;
      /**
       * <code>required int32 buyPointCounts = 4;</code>
       *
       * <pre>
       **当日已购买次数 
       * </pre>
       */
      public boolean hasBuyPointCounts() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 buyPointCounts = 4;</code>
       *
       * <pre>
       **当日已购买次数 
       * </pre>
       */
      public int getBuyPointCounts() {
        return buyPointCounts_;
      }
      /**
       * <code>required int32 buyPointCounts = 4;</code>
       *
       * <pre>
       **当日已购买次数 
       * </pre>
       */
      public Builder setBuyPointCounts(int value) {
        bitField0_ |= 0x00000008;
        buyPointCounts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 buyPointCounts = 4;</code>
       *
       * <pre>
       **当日已购买次数 
       * </pre>
       */
      public Builder clearBuyPointCounts() {
        bitField0_ = (bitField0_ & ~0x00000008);
        buyPointCounts_ = 0;
        onChanged();
        return this;
      }

      // required int64 lastBuyPointCountsResetTime = 5;
      private long lastBuyPointCountsResetTime_ ;
      /**
       * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
       *
       * <pre>
       **上次购买次数重置时间 
       * </pre>
       */
      public boolean hasLastBuyPointCountsResetTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
       *
       * <pre>
       **上次购买次数重置时间 
       * </pre>
       */
      public long getLastBuyPointCountsResetTime() {
        return lastBuyPointCountsResetTime_;
      }
      /**
       * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
       *
       * <pre>
       **上次购买次数重置时间 
       * </pre>
       */
      public Builder setLastBuyPointCountsResetTime(long value) {
        bitField0_ |= 0x00000010;
        lastBuyPointCountsResetTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 lastBuyPointCountsResetTime = 5;</code>
       *
       * <pre>
       **上次购买次数重置时间 
       * </pre>
       */
      public Builder clearLastBuyPointCountsResetTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastBuyPointCountsResetTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DbPoint)
    }

    static {
      defaultInstance = new DbPoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DbPoint)
  }

  public interface DBHumanFormationsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.mokylin.DBFormation formations = 1;
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation> 
        getFormationsList();
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBFormation getFormations(int index);
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    int getFormationsCount();
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder> 
        getFormationsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder getFormationsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.DBHumanFormations}
   *
   * <pre>
   **
   * 阵型信息 Blob，登陆时通知客户端
   * </pre>
   */
  public static final class DBHumanFormations extends
      com.google.protobuf.GeneratedMessage
      implements DBHumanFormationsOrBuilder {
    // Use DBHumanFormations.newBuilder() to construct.
    private DBHumanFormations(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBHumanFormations(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBHumanFormations defaultInstance;
    public static DBHumanFormations getDefaultInstance() {
      return defaultInstance;
    }

    public DBHumanFormations getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBHumanFormations(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                formations_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation>();
                mutable_bitField0_ |= 0x00000001;
              }
              formations_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          formations_ = java.util.Collections.unmodifiableList(formations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBHumanFormations_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBHumanFormations_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations.class, com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations.Builder.class);
    }

    public static com.google.protobuf.Parser<DBHumanFormations> PARSER =
        new com.google.protobuf.AbstractParser<DBHumanFormations>() {
      public DBHumanFormations parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBHumanFormations(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBHumanFormations> getParserForType() {
      return PARSER;
    }

    // repeated .com.mokylin.DBFormation formations = 1;
    public static final int FORMATIONS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation> formations_;
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation> getFormationsList() {
      return formations_;
    }
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder> 
        getFormationsOrBuilderList() {
      return formations_;
    }
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    public int getFormationsCount() {
      return formations_.size();
    }
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation getFormations(int index) {
      return formations_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder getFormationsOrBuilder(
        int index) {
      return formations_.get(index);
    }

    private void initFields() {
      formations_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getFormationsCount(); i++) {
        if (!getFormations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < formations_.size(); i++) {
        output.writeMessage(1, formations_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < formations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, formations_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBHumanFormations}
     *
     * <pre>
     **
     * 阵型信息 Blob，登陆时通知客户端
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormationsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBHumanFormations_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBHumanFormations_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations.class, com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFormationsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (formationsBuilder_ == null) {
          formations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          formationsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBHumanFormations_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations result = new com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations(this);
        int from_bitField0_ = bitField0_;
        if (formationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            formations_ = java.util.Collections.unmodifiableList(formations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.formations_ = formations_;
        } else {
          result.formations_ = formationsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations.getDefaultInstance()) return this;
        if (formationsBuilder_ == null) {
          if (!other.formations_.isEmpty()) {
            if (formations_.isEmpty()) {
              formations_ = other.formations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFormationsIsMutable();
              formations_.addAll(other.formations_);
            }
            onChanged();
          }
        } else {
          if (!other.formations_.isEmpty()) {
            if (formationsBuilder_.isEmpty()) {
              formationsBuilder_.dispose();
              formationsBuilder_ = null;
              formations_ = other.formations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              formationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFormationsFieldBuilder() : null;
            } else {
              formationsBuilder_.addAllMessages(other.formations_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFormationsCount(); i++) {
          if (!getFormations(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBHumanFormations) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.mokylin.DBFormation formations = 1;
      private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation> formations_ =
        java.util.Collections.emptyList();
      private void ensureFormationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          formations_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation>(formations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBFormation, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder> formationsBuilder_;

      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation> getFormationsList() {
        if (formationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(formations_);
        } else {
          return formationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public int getFormationsCount() {
        if (formationsBuilder_ == null) {
          return formations_.size();
        } else {
          return formationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation getFormations(int index) {
        if (formationsBuilder_ == null) {
          return formations_.get(index);
        } else {
          return formationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder setFormations(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation value) {
        if (formationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormationsIsMutable();
          formations_.set(index, value);
          onChanged();
        } else {
          formationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder setFormations(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder builderForValue) {
        if (formationsBuilder_ == null) {
          ensureFormationsIsMutable();
          formations_.set(index, builderForValue.build());
          onChanged();
        } else {
          formationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder addFormations(com.mokylin.bleach.protobuf.db.DbHuman.DBFormation value) {
        if (formationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormationsIsMutable();
          formations_.add(value);
          onChanged();
        } else {
          formationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder addFormations(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation value) {
        if (formationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFormationsIsMutable();
          formations_.add(index, value);
          onChanged();
        } else {
          formationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder addFormations(
          com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder builderForValue) {
        if (formationsBuilder_ == null) {
          ensureFormationsIsMutable();
          formations_.add(builderForValue.build());
          onChanged();
        } else {
          formationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder addFormations(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder builderForValue) {
        if (formationsBuilder_ == null) {
          ensureFormationsIsMutable();
          formations_.add(index, builderForValue.build());
          onChanged();
        } else {
          formationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder addAllFormations(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBFormation> values) {
        if (formationsBuilder_ == null) {
          ensureFormationsIsMutable();
          super.addAll(values, formations_);
          onChanged();
        } else {
          formationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder clearFormations() {
        if (formationsBuilder_ == null) {
          formations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          formationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public Builder removeFormations(int index) {
        if (formationsBuilder_ == null) {
          ensureFormationsIsMutable();
          formations_.remove(index);
          onChanged();
        } else {
          formationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder getFormationsBuilder(
          int index) {
        return getFormationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder getFormationsOrBuilder(
          int index) {
        if (formationsBuilder_ == null) {
          return formations_.get(index);  } else {
          return formationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder> 
           getFormationsOrBuilderList() {
        if (formationsBuilder_ != null) {
          return formationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(formations_);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder addFormationsBuilder() {
        return getFormationsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder addFormationsBuilder(
          int index) {
        return getFormationsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBFormation formations = 1;</code>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder> 
           getFormationsBuilderList() {
        return getFormationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBFormation, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder> 
          getFormationsFieldBuilder() {
        if (formationsBuilder_ == null) {
          formationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.DBFormation, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder>(
                  formations_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          formations_ = null;
        }
        return formationsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBHumanFormations)
    }

    static {
      defaultInstance = new DBHumanFormations(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBHumanFormations)
  }

  public interface DBFormationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .com.mokylin.FormationType formationType = 1;
    /**
     * <code>required .com.mokylin.FormationType formationType = 1;</code>
     *
     * <pre>
     **阵容类型 
     * </pre>
     */
    boolean hasFormationType();
    /**
     * <code>required .com.mokylin.FormationType formationType = 1;</code>
     *
     * <pre>
     **阵容类型 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.FormationType getFormationType();

    // repeated int64 heros = 2;
    /**
     * <code>repeated int64 heros = 2;</code>
     *
     * <pre>
     **HeroDbId 
     * </pre>
     */
    java.util.List<java.lang.Long> getHerosList();
    /**
     * <code>repeated int64 heros = 2;</code>
     *
     * <pre>
     **HeroDbId 
     * </pre>
     */
    int getHerosCount();
    /**
     * <code>repeated int64 heros = 2;</code>
     *
     * <pre>
     **HeroDbId 
     * </pre>
     */
    long getHeros(int index);
  }
  /**
   * Protobuf type {@code com.mokylin.DBFormation}
   *
   * <pre>
   **
   * 阵型 Blob
   * </pre>
   */
  public static final class DBFormation extends
      com.google.protobuf.GeneratedMessage
      implements DBFormationOrBuilder {
    // Use DBFormation.newBuilder() to construct.
    private DBFormation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBFormation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBFormation defaultInstance;
    public static DBFormation getDefaultInstance() {
      return defaultInstance;
    }

    public DBFormation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBFormation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mokylin.bleach.protobuf.db.DbHuman.FormationType value = com.mokylin.bleach.protobuf.db.DbHuman.FormationType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                formationType_ = value;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                heros_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              heros_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                heros_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                heros_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          heros_ = java.util.Collections.unmodifiableList(heros_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBFormation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBFormation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.class, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder.class);
    }

    public static com.google.protobuf.Parser<DBFormation> PARSER =
        new com.google.protobuf.AbstractParser<DBFormation>() {
      public DBFormation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBFormation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBFormation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .com.mokylin.FormationType formationType = 1;
    public static final int FORMATIONTYPE_FIELD_NUMBER = 1;
    private com.mokylin.bleach.protobuf.db.DbHuman.FormationType formationType_;
    /**
     * <code>required .com.mokylin.FormationType formationType = 1;</code>
     *
     * <pre>
     **阵容类型 
     * </pre>
     */
    public boolean hasFormationType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.mokylin.FormationType formationType = 1;</code>
     *
     * <pre>
     **阵容类型 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.FormationType getFormationType() {
      return formationType_;
    }

    // repeated int64 heros = 2;
    public static final int HEROS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> heros_;
    /**
     * <code>repeated int64 heros = 2;</code>
     *
     * <pre>
     **HeroDbId 
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getHerosList() {
      return heros_;
    }
    /**
     * <code>repeated int64 heros = 2;</code>
     *
     * <pre>
     **HeroDbId 
     * </pre>
     */
    public int getHerosCount() {
      return heros_.size();
    }
    /**
     * <code>repeated int64 heros = 2;</code>
     *
     * <pre>
     **HeroDbId 
     * </pre>
     */
    public long getHeros(int index) {
      return heros_.get(index);
    }

    private void initFields() {
      formationType_ = com.mokylin.bleach.protobuf.db.DbHuman.FormationType.ArenaDefense;
      heros_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFormationType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, formationType_.getNumber());
      }
      for (int i = 0; i < heros_.size(); i++) {
        output.writeInt64(2, heros_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, formationType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heros_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(heros_.get(i));
        }
        size += dataSize;
        size += 1 * getHerosList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBFormation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBFormation}
     *
     * <pre>
     **
     * 阵型 Blob
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBFormationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBFormation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBFormation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.class, com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        formationType_ = com.mokylin.bleach.protobuf.db.DbHuman.FormationType.ArenaDefense;
        bitField0_ = (bitField0_ & ~0x00000001);
        heros_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBFormation_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBFormation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBFormation buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBFormation result = new com.mokylin.bleach.protobuf.db.DbHuman.DBFormation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.formationType_ = formationType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          heros_ = java.util.Collections.unmodifiableList(heros_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.heros_ = heros_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBFormation) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBFormation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBFormation other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBFormation.getDefaultInstance()) return this;
        if (other.hasFormationType()) {
          setFormationType(other.getFormationType());
        }
        if (!other.heros_.isEmpty()) {
          if (heros_.isEmpty()) {
            heros_ = other.heros_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHerosIsMutable();
            heros_.addAll(other.heros_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFormationType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBFormation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBFormation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .com.mokylin.FormationType formationType = 1;
      private com.mokylin.bleach.protobuf.db.DbHuman.FormationType formationType_ = com.mokylin.bleach.protobuf.db.DbHuman.FormationType.ArenaDefense;
      /**
       * <code>required .com.mokylin.FormationType formationType = 1;</code>
       *
       * <pre>
       **阵容类型 
       * </pre>
       */
      public boolean hasFormationType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.mokylin.FormationType formationType = 1;</code>
       *
       * <pre>
       **阵容类型 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.FormationType getFormationType() {
        return formationType_;
      }
      /**
       * <code>required .com.mokylin.FormationType formationType = 1;</code>
       *
       * <pre>
       **阵容类型 
       * </pre>
       */
      public Builder setFormationType(com.mokylin.bleach.protobuf.db.DbHuman.FormationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        formationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.mokylin.FormationType formationType = 1;</code>
       *
       * <pre>
       **阵容类型 
       * </pre>
       */
      public Builder clearFormationType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        formationType_ = com.mokylin.bleach.protobuf.db.DbHuman.FormationType.ArenaDefense;
        onChanged();
        return this;
      }

      // repeated int64 heros = 2;
      private java.util.List<java.lang.Long> heros_ = java.util.Collections.emptyList();
      private void ensureHerosIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          heros_ = new java.util.ArrayList<java.lang.Long>(heros_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 heros = 2;</code>
       *
       * <pre>
       **HeroDbId 
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getHerosList() {
        return java.util.Collections.unmodifiableList(heros_);
      }
      /**
       * <code>repeated int64 heros = 2;</code>
       *
       * <pre>
       **HeroDbId 
       * </pre>
       */
      public int getHerosCount() {
        return heros_.size();
      }
      /**
       * <code>repeated int64 heros = 2;</code>
       *
       * <pre>
       **HeroDbId 
       * </pre>
       */
      public long getHeros(int index) {
        return heros_.get(index);
      }
      /**
       * <code>repeated int64 heros = 2;</code>
       *
       * <pre>
       **HeroDbId 
       * </pre>
       */
      public Builder setHeros(
          int index, long value) {
        ensureHerosIsMutable();
        heros_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 heros = 2;</code>
       *
       * <pre>
       **HeroDbId 
       * </pre>
       */
      public Builder addHeros(long value) {
        ensureHerosIsMutable();
        heros_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 heros = 2;</code>
       *
       * <pre>
       **HeroDbId 
       * </pre>
       */
      public Builder addAllHeros(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureHerosIsMutable();
        super.addAll(values, heros_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 heros = 2;</code>
       *
       * <pre>
       **HeroDbId 
       * </pre>
       */
      public Builder clearHeros() {
        heros_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBFormation)
    }

    static {
      defaultInstance = new DBFormation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBFormation)
  }

  public interface DBTeamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 currentAvatarHeroId = 1;
    /**
     * <code>required int64 currentAvatarHeroId = 1;</code>
     *
     * <pre>
     **玩家当前使用作为Avatar外观的英雄的UUID
     * </pre>
     */
    boolean hasCurrentAvatarHeroId();
    /**
     * <code>required int64 currentAvatarHeroId = 1;</code>
     *
     * <pre>
     **玩家当前使用作为Avatar外观的英雄的UUID
     * </pre>
     */
    long getCurrentAvatarHeroId();

    // required int32 currentHeadFrameId = 2;
    /**
     * <code>required int32 currentHeadFrameId = 2;</code>
     *
     * <pre>
     **玩家当前使用的头像框ID
     * </pre>
     */
    boolean hasCurrentHeadFrameId();
    /**
     * <code>required int32 currentHeadFrameId = 2;</code>
     *
     * <pre>
     **玩家当前使用的头像框ID
     * </pre>
     */
    int getCurrentHeadFrameId();

    // repeated int32 openedHeadFrameIds = 3;
    /**
     * <code>repeated int32 openedHeadFrameIds = 3;</code>
     *
     * <pre>
     **玩家已经获得的头像框ID列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getOpenedHeadFrameIdsList();
    /**
     * <code>repeated int32 openedHeadFrameIds = 3;</code>
     *
     * <pre>
     **玩家已经获得的头像框ID列表
     * </pre>
     */
    int getOpenedHeadFrameIdsCount();
    /**
     * <code>repeated int32 openedHeadFrameIds = 3;</code>
     *
     * <pre>
     **玩家已经获得的头像框ID列表
     * </pre>
     */
    int getOpenedHeadFrameIds(int index);
  }
  /**
   * Protobuf type {@code com.mokylin.DBTeam}
   *
   * <pre>
   **
   * 客户端队伍系统的消息
   * </pre>
   */
  public static final class DBTeam extends
      com.google.protobuf.GeneratedMessage
      implements DBTeamOrBuilder {
    // Use DBTeam.newBuilder() to construct.
    private DBTeam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBTeam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBTeam defaultInstance;
    public static DBTeam getDefaultInstance() {
      return defaultInstance;
    }

    public DBTeam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBTeam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              currentAvatarHeroId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currentHeadFrameId_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                openedHeadFrameIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              openedHeadFrameIds_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                openedHeadFrameIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                openedHeadFrameIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          openedHeadFrameIds_ = java.util.Collections.unmodifiableList(openedHeadFrameIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBTeam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBTeam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBTeam.class, com.mokylin.bleach.protobuf.db.DbHuman.DBTeam.Builder.class);
    }

    public static com.google.protobuf.Parser<DBTeam> PARSER =
        new com.google.protobuf.AbstractParser<DBTeam>() {
      public DBTeam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBTeam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBTeam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 currentAvatarHeroId = 1;
    public static final int CURRENTAVATARHEROID_FIELD_NUMBER = 1;
    private long currentAvatarHeroId_;
    /**
     * <code>required int64 currentAvatarHeroId = 1;</code>
     *
     * <pre>
     **玩家当前使用作为Avatar外观的英雄的UUID
     * </pre>
     */
    public boolean hasCurrentAvatarHeroId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 currentAvatarHeroId = 1;</code>
     *
     * <pre>
     **玩家当前使用作为Avatar外观的英雄的UUID
     * </pre>
     */
    public long getCurrentAvatarHeroId() {
      return currentAvatarHeroId_;
    }

    // required int32 currentHeadFrameId = 2;
    public static final int CURRENTHEADFRAMEID_FIELD_NUMBER = 2;
    private int currentHeadFrameId_;
    /**
     * <code>required int32 currentHeadFrameId = 2;</code>
     *
     * <pre>
     **玩家当前使用的头像框ID
     * </pre>
     */
    public boolean hasCurrentHeadFrameId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 currentHeadFrameId = 2;</code>
     *
     * <pre>
     **玩家当前使用的头像框ID
     * </pre>
     */
    public int getCurrentHeadFrameId() {
      return currentHeadFrameId_;
    }

    // repeated int32 openedHeadFrameIds = 3;
    public static final int OPENEDHEADFRAMEIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> openedHeadFrameIds_;
    /**
     * <code>repeated int32 openedHeadFrameIds = 3;</code>
     *
     * <pre>
     **玩家已经获得的头像框ID列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOpenedHeadFrameIdsList() {
      return openedHeadFrameIds_;
    }
    /**
     * <code>repeated int32 openedHeadFrameIds = 3;</code>
     *
     * <pre>
     **玩家已经获得的头像框ID列表
     * </pre>
     */
    public int getOpenedHeadFrameIdsCount() {
      return openedHeadFrameIds_.size();
    }
    /**
     * <code>repeated int32 openedHeadFrameIds = 3;</code>
     *
     * <pre>
     **玩家已经获得的头像框ID列表
     * </pre>
     */
    public int getOpenedHeadFrameIds(int index) {
      return openedHeadFrameIds_.get(index);
    }

    private void initFields() {
      currentAvatarHeroId_ = 0L;
      currentHeadFrameId_ = 0;
      openedHeadFrameIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCurrentAvatarHeroId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentHeadFrameId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, currentAvatarHeroId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, currentHeadFrameId_);
      }
      for (int i = 0; i < openedHeadFrameIds_.size(); i++) {
        output.writeInt32(3, openedHeadFrameIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, currentAvatarHeroId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, currentHeadFrameId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < openedHeadFrameIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(openedHeadFrameIds_.get(i));
        }
        size += dataSize;
        size += 1 * getOpenedHeadFrameIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBTeam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBTeam}
     *
     * <pre>
     **
     * 客户端队伍系统的消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBTeamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBTeam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBTeam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBTeam.class, com.mokylin.bleach.protobuf.db.DbHuman.DBTeam.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBTeam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        currentAvatarHeroId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        currentHeadFrameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        openedHeadFrameIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBTeam_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBTeam getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBTeam.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBTeam build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBTeam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBTeam buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBTeam result = new com.mokylin.bleach.protobuf.db.DbHuman.DBTeam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currentAvatarHeroId_ = currentAvatarHeroId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentHeadFrameId_ = currentHeadFrameId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          openedHeadFrameIds_ = java.util.Collections.unmodifiableList(openedHeadFrameIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.openedHeadFrameIds_ = openedHeadFrameIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBTeam) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBTeam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBTeam other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBTeam.getDefaultInstance()) return this;
        if (other.hasCurrentAvatarHeroId()) {
          setCurrentAvatarHeroId(other.getCurrentAvatarHeroId());
        }
        if (other.hasCurrentHeadFrameId()) {
          setCurrentHeadFrameId(other.getCurrentHeadFrameId());
        }
        if (!other.openedHeadFrameIds_.isEmpty()) {
          if (openedHeadFrameIds_.isEmpty()) {
            openedHeadFrameIds_ = other.openedHeadFrameIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOpenedHeadFrameIdsIsMutable();
            openedHeadFrameIds_.addAll(other.openedHeadFrameIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCurrentAvatarHeroId()) {
          
          return false;
        }
        if (!hasCurrentHeadFrameId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBTeam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBTeam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 currentAvatarHeroId = 1;
      private long currentAvatarHeroId_ ;
      /**
       * <code>required int64 currentAvatarHeroId = 1;</code>
       *
       * <pre>
       **玩家当前使用作为Avatar外观的英雄的UUID
       * </pre>
       */
      public boolean hasCurrentAvatarHeroId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 currentAvatarHeroId = 1;</code>
       *
       * <pre>
       **玩家当前使用作为Avatar外观的英雄的UUID
       * </pre>
       */
      public long getCurrentAvatarHeroId() {
        return currentAvatarHeroId_;
      }
      /**
       * <code>required int64 currentAvatarHeroId = 1;</code>
       *
       * <pre>
       **玩家当前使用作为Avatar外观的英雄的UUID
       * </pre>
       */
      public Builder setCurrentAvatarHeroId(long value) {
        bitField0_ |= 0x00000001;
        currentAvatarHeroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 currentAvatarHeroId = 1;</code>
       *
       * <pre>
       **玩家当前使用作为Avatar外观的英雄的UUID
       * </pre>
       */
      public Builder clearCurrentAvatarHeroId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currentAvatarHeroId_ = 0L;
        onChanged();
        return this;
      }

      // required int32 currentHeadFrameId = 2;
      private int currentHeadFrameId_ ;
      /**
       * <code>required int32 currentHeadFrameId = 2;</code>
       *
       * <pre>
       **玩家当前使用的头像框ID
       * </pre>
       */
      public boolean hasCurrentHeadFrameId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 currentHeadFrameId = 2;</code>
       *
       * <pre>
       **玩家当前使用的头像框ID
       * </pre>
       */
      public int getCurrentHeadFrameId() {
        return currentHeadFrameId_;
      }
      /**
       * <code>required int32 currentHeadFrameId = 2;</code>
       *
       * <pre>
       **玩家当前使用的头像框ID
       * </pre>
       */
      public Builder setCurrentHeadFrameId(int value) {
        bitField0_ |= 0x00000002;
        currentHeadFrameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 currentHeadFrameId = 2;</code>
       *
       * <pre>
       **玩家当前使用的头像框ID
       * </pre>
       */
      public Builder clearCurrentHeadFrameId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentHeadFrameId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 openedHeadFrameIds = 3;
      private java.util.List<java.lang.Integer> openedHeadFrameIds_ = java.util.Collections.emptyList();
      private void ensureOpenedHeadFrameIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          openedHeadFrameIds_ = new java.util.ArrayList<java.lang.Integer>(openedHeadFrameIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 openedHeadFrameIds = 3;</code>
       *
       * <pre>
       **玩家已经获得的头像框ID列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOpenedHeadFrameIdsList() {
        return java.util.Collections.unmodifiableList(openedHeadFrameIds_);
      }
      /**
       * <code>repeated int32 openedHeadFrameIds = 3;</code>
       *
       * <pre>
       **玩家已经获得的头像框ID列表
       * </pre>
       */
      public int getOpenedHeadFrameIdsCount() {
        return openedHeadFrameIds_.size();
      }
      /**
       * <code>repeated int32 openedHeadFrameIds = 3;</code>
       *
       * <pre>
       **玩家已经获得的头像框ID列表
       * </pre>
       */
      public int getOpenedHeadFrameIds(int index) {
        return openedHeadFrameIds_.get(index);
      }
      /**
       * <code>repeated int32 openedHeadFrameIds = 3;</code>
       *
       * <pre>
       **玩家已经获得的头像框ID列表
       * </pre>
       */
      public Builder setOpenedHeadFrameIds(
          int index, int value) {
        ensureOpenedHeadFrameIdsIsMutable();
        openedHeadFrameIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 openedHeadFrameIds = 3;</code>
       *
       * <pre>
       **玩家已经获得的头像框ID列表
       * </pre>
       */
      public Builder addOpenedHeadFrameIds(int value) {
        ensureOpenedHeadFrameIdsIsMutable();
        openedHeadFrameIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 openedHeadFrameIds = 3;</code>
       *
       * <pre>
       **玩家已经获得的头像框ID列表
       * </pre>
       */
      public Builder addAllOpenedHeadFrameIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOpenedHeadFrameIdsIsMutable();
        super.addAll(values, openedHeadFrameIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 openedHeadFrameIds = 3;</code>
       *
       * <pre>
       **玩家已经获得的头像框ID列表
       * </pre>
       */
      public Builder clearOpenedHeadFrameIds() {
        openedHeadFrameIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBTeam)
    }

    static {
      defaultInstance = new DBTeam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBTeam)
  }

  public interface DBCDOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.mokylin.CDNode cdNodes = 1;
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.CDNode> 
        getCdNodesList();
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.CDNode getCdNodes(int index);
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    int getCdNodesCount();
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder> 
        getCdNodesOrBuilderList();
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder getCdNodesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.mokylin.DBCD}
   *
   * <pre>
   **
   * CD信息
   * </pre>
   */
  public static final class DBCD extends
      com.google.protobuf.GeneratedMessage
      implements DBCDOrBuilder {
    // Use DBCD.newBuilder() to construct.
    private DBCD(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBCD(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBCD defaultInstance;
    public static DBCD getDefaultInstance() {
      return defaultInstance;
    }

    public DBCD getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBCD(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cdNodes_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.CDNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              cdNodes_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.CDNode.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cdNodes_ = java.util.Collections.unmodifiableList(cdNodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBCD_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBCD_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBCD.class, com.mokylin.bleach.protobuf.db.DbHuman.DBCD.Builder.class);
    }

    public static com.google.protobuf.Parser<DBCD> PARSER =
        new com.google.protobuf.AbstractParser<DBCD>() {
      public DBCD parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBCD(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBCD> getParserForType() {
      return PARSER;
    }

    // repeated .com.mokylin.CDNode cdNodes = 1;
    public static final int CDNODES_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.CDNode> cdNodes_;
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.CDNode> getCdNodesList() {
      return cdNodes_;
    }
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder> 
        getCdNodesOrBuilderList() {
      return cdNodes_;
    }
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    public int getCdNodesCount() {
      return cdNodes_.size();
    }
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.CDNode getCdNodes(int index) {
      return cdNodes_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
     *
     * <pre>
     **所有CD类型的信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder getCdNodesOrBuilder(
        int index) {
      return cdNodes_.get(index);
    }

    private void initFields() {
      cdNodes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCdNodesCount(); i++) {
        if (!getCdNodes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cdNodes_.size(); i++) {
        output.writeMessage(1, cdNodes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cdNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cdNodes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBCD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBCD prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBCD}
     *
     * <pre>
     **
     * CD信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBCDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBCD_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBCD_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBCD.class, com.mokylin.bleach.protobuf.db.DbHuman.DBCD.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBCD.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCdNodesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cdNodesBuilder_ == null) {
          cdNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cdNodesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBCD_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBCD getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBCD.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBCD build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBCD result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBCD buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBCD result = new com.mokylin.bleach.protobuf.db.DbHuman.DBCD(this);
        int from_bitField0_ = bitField0_;
        if (cdNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cdNodes_ = java.util.Collections.unmodifiableList(cdNodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cdNodes_ = cdNodes_;
        } else {
          result.cdNodes_ = cdNodesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBCD) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBCD)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBCD other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBCD.getDefaultInstance()) return this;
        if (cdNodesBuilder_ == null) {
          if (!other.cdNodes_.isEmpty()) {
            if (cdNodes_.isEmpty()) {
              cdNodes_ = other.cdNodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCdNodesIsMutable();
              cdNodes_.addAll(other.cdNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.cdNodes_.isEmpty()) {
            if (cdNodesBuilder_.isEmpty()) {
              cdNodesBuilder_.dispose();
              cdNodesBuilder_ = null;
              cdNodes_ = other.cdNodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cdNodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCdNodesFieldBuilder() : null;
            } else {
              cdNodesBuilder_.addAllMessages(other.cdNodes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCdNodesCount(); i++) {
          if (!getCdNodes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBCD parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBCD) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.mokylin.CDNode cdNodes = 1;
      private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.CDNode> cdNodes_ =
        java.util.Collections.emptyList();
      private void ensureCdNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cdNodes_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.CDNode>(cdNodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.CDNode, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder, com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder> cdNodesBuilder_;

      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.CDNode> getCdNodesList() {
        if (cdNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cdNodes_);
        } else {
          return cdNodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public int getCdNodesCount() {
        if (cdNodesBuilder_ == null) {
          return cdNodes_.size();
        } else {
          return cdNodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.CDNode getCdNodes(int index) {
        if (cdNodesBuilder_ == null) {
          return cdNodes_.get(index);
        } else {
          return cdNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder setCdNodes(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.CDNode value) {
        if (cdNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCdNodesIsMutable();
          cdNodes_.set(index, value);
          onChanged();
        } else {
          cdNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder setCdNodes(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder builderForValue) {
        if (cdNodesBuilder_ == null) {
          ensureCdNodesIsMutable();
          cdNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          cdNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder addCdNodes(com.mokylin.bleach.protobuf.db.DbHuman.CDNode value) {
        if (cdNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCdNodesIsMutable();
          cdNodes_.add(value);
          onChanged();
        } else {
          cdNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder addCdNodes(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.CDNode value) {
        if (cdNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCdNodesIsMutable();
          cdNodes_.add(index, value);
          onChanged();
        } else {
          cdNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder addCdNodes(
          com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder builderForValue) {
        if (cdNodesBuilder_ == null) {
          ensureCdNodesIsMutable();
          cdNodes_.add(builderForValue.build());
          onChanged();
        } else {
          cdNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder addCdNodes(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder builderForValue) {
        if (cdNodesBuilder_ == null) {
          ensureCdNodesIsMutable();
          cdNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          cdNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder addAllCdNodes(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DbHuman.CDNode> values) {
        if (cdNodesBuilder_ == null) {
          ensureCdNodesIsMutable();
          super.addAll(values, cdNodes_);
          onChanged();
        } else {
          cdNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder clearCdNodes() {
        if (cdNodesBuilder_ == null) {
          cdNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cdNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public Builder removeCdNodes(int index) {
        if (cdNodesBuilder_ == null) {
          ensureCdNodesIsMutable();
          cdNodes_.remove(index);
          onChanged();
        } else {
          cdNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder getCdNodesBuilder(
          int index) {
        return getCdNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder getCdNodesOrBuilder(
          int index) {
        if (cdNodesBuilder_ == null) {
          return cdNodes_.get(index);  } else {
          return cdNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder> 
           getCdNodesOrBuilderList() {
        if (cdNodesBuilder_ != null) {
          return cdNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cdNodes_);
        }
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder addCdNodesBuilder() {
        return getCdNodesFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DbHuman.CDNode.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder addCdNodesBuilder(
          int index) {
        return getCdNodesFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.CDNode cdNodes = 1;</code>
       *
       * <pre>
       **所有CD类型的信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder> 
           getCdNodesBuilderList() {
        return getCdNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.CDNode, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder, com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder> 
          getCdNodesFieldBuilder() {
        if (cdNodesBuilder_ == null) {
          cdNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.CDNode, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder, com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder>(
                  cdNodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cdNodes_ = null;
        }
        return cdNodesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBCD)
    }

    static {
      defaultInstance = new DBCD(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBCD)
  }

  public interface CDNodeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .com.mokylin.CDType cdType = 1;
    /**
     * <code>required .com.mokylin.CDType cdType = 1;</code>
     *
     * <pre>
     **CD类型 
     * </pre>
     */
    boolean hasCdType();
    /**
     * <code>required .com.mokylin.CDType cdType = 1;</code>
     *
     * <pre>
     **CD类型 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.CDType getCdType();

    // required int64 remainingTime = 2;
    /**
     * <code>required int64 remainingTime = 2;</code>
     *
     * <pre>
     **
     * 若用于DB存储：到期时间点。
     * 若用于给客户端的消息：剩余时间，单位：毫秒。
     * </pre>
     */
    boolean hasRemainingTime();
    /**
     * <code>required int64 remainingTime = 2;</code>
     *
     * <pre>
     **
     * 若用于DB存储：到期时间点。
     * 若用于给客户端的消息：剩余时间，单位：毫秒。
     * </pre>
     */
    long getRemainingTime();
  }
  /**
   * Protobuf type {@code com.mokylin.CDNode}
   *
   * <pre>
   **某种类型的CD信息 
   * </pre>
   */
  public static final class CDNode extends
      com.google.protobuf.GeneratedMessage
      implements CDNodeOrBuilder {
    // Use CDNode.newBuilder() to construct.
    private CDNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDNode defaultInstance;
    public static CDNode getDefaultInstance() {
      return defaultInstance;
    }

    public CDNode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mokylin.bleach.protobuf.db.DbHuman.CDType value = com.mokylin.bleach.protobuf.db.DbHuman.CDType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                cdType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              remainingTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_CDNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_CDNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.CDNode.class, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder.class);
    }

    public static com.google.protobuf.Parser<CDNode> PARSER =
        new com.google.protobuf.AbstractParser<CDNode>() {
      public CDNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDNode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDNode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .com.mokylin.CDType cdType = 1;
    public static final int CDTYPE_FIELD_NUMBER = 1;
    private com.mokylin.bleach.protobuf.db.DbHuman.CDType cdType_;
    /**
     * <code>required .com.mokylin.CDType cdType = 1;</code>
     *
     * <pre>
     **CD类型 
     * </pre>
     */
    public boolean hasCdType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.mokylin.CDType cdType = 1;</code>
     *
     * <pre>
     **CD类型 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.CDType getCdType() {
      return cdType_;
    }

    // required int64 remainingTime = 2;
    public static final int REMAININGTIME_FIELD_NUMBER = 2;
    private long remainingTime_;
    /**
     * <code>required int64 remainingTime = 2;</code>
     *
     * <pre>
     **
     * 若用于DB存储：到期时间点。
     * 若用于给客户端的消息：剩余时间，单位：毫秒。
     * </pre>
     */
    public boolean hasRemainingTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 remainingTime = 2;</code>
     *
     * <pre>
     **
     * 若用于DB存储：到期时间点。
     * 若用于给客户端的消息：剩余时间，单位：毫秒。
     * </pre>
     */
    public long getRemainingTime() {
      return remainingTime_;
    }

    private void initFields() {
      cdType_ = com.mokylin.bleach.protobuf.db.DbHuman.CDType.AttackInArena;
      remainingTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCdType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRemainingTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cdType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, remainingTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cdType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, remainingTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.CDNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.CDNode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.CDNode}
     *
     * <pre>
     **某种类型的CD信息 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.CDNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_CDNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_CDNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.CDNode.class, com.mokylin.bleach.protobuf.db.DbHuman.CDNode.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.CDNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cdType_ = com.mokylin.bleach.protobuf.db.DbHuman.CDType.AttackInArena;
        bitField0_ = (bitField0_ & ~0x00000001);
        remainingTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_CDNode_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.CDNode getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.CDNode.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.CDNode build() {
        com.mokylin.bleach.protobuf.db.DbHuman.CDNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.CDNode buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.CDNode result = new com.mokylin.bleach.protobuf.db.DbHuman.CDNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cdType_ = cdType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.remainingTime_ = remainingTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.CDNode) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.CDNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.CDNode other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.CDNode.getDefaultInstance()) return this;
        if (other.hasCdType()) {
          setCdType(other.getCdType());
        }
        if (other.hasRemainingTime()) {
          setRemainingTime(other.getRemainingTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCdType()) {
          
          return false;
        }
        if (!hasRemainingTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.CDNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.CDNode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .com.mokylin.CDType cdType = 1;
      private com.mokylin.bleach.protobuf.db.DbHuman.CDType cdType_ = com.mokylin.bleach.protobuf.db.DbHuman.CDType.AttackInArena;
      /**
       * <code>required .com.mokylin.CDType cdType = 1;</code>
       *
       * <pre>
       **CD类型 
       * </pre>
       */
      public boolean hasCdType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.mokylin.CDType cdType = 1;</code>
       *
       * <pre>
       **CD类型 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.CDType getCdType() {
        return cdType_;
      }
      /**
       * <code>required .com.mokylin.CDType cdType = 1;</code>
       *
       * <pre>
       **CD类型 
       * </pre>
       */
      public Builder setCdType(com.mokylin.bleach.protobuf.db.DbHuman.CDType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cdType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.mokylin.CDType cdType = 1;</code>
       *
       * <pre>
       **CD类型 
       * </pre>
       */
      public Builder clearCdType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cdType_ = com.mokylin.bleach.protobuf.db.DbHuman.CDType.AttackInArena;
        onChanged();
        return this;
      }

      // required int64 remainingTime = 2;
      private long remainingTime_ ;
      /**
       * <code>required int64 remainingTime = 2;</code>
       *
       * <pre>
       **
       * 若用于DB存储：到期时间点。
       * 若用于给客户端的消息：剩余时间，单位：毫秒。
       * </pre>
       */
      public boolean hasRemainingTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 remainingTime = 2;</code>
       *
       * <pre>
       **
       * 若用于DB存储：到期时间点。
       * 若用于给客户端的消息：剩余时间，单位：毫秒。
       * </pre>
       */
      public long getRemainingTime() {
        return remainingTime_;
      }
      /**
       * <code>required int64 remainingTime = 2;</code>
       *
       * <pre>
       **
       * 若用于DB存储：到期时间点。
       * 若用于给客户端的消息：剩余时间，单位：毫秒。
       * </pre>
       */
      public Builder setRemainingTime(long value) {
        bitField0_ |= 0x00000002;
        remainingTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 remainingTime = 2;</code>
       *
       * <pre>
       **
       * 若用于DB存储：到期时间点。
       * 若用于给客户端的消息：剩余时间，单位：毫秒。
       * </pre>
       */
      public Builder clearRemainingTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        remainingTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.CDNode)
    }

    static {
      defaultInstance = new CDNode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.CDNode)
  }

  public interface DBQuestDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .com.mokylin.DBQuestInfo questInfo = 1;
    /**
     * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
     *
     * <pre>
     *玩家任务信息
     * </pre>
     */
    boolean hasQuestInfo();
    /**
     * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
     *
     * <pre>
     *玩家任务信息
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo getQuestInfo();
    /**
     * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
     *
     * <pre>
     *玩家任务信息
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfoOrBuilder getQuestInfoOrBuilder();

    // required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;
    /**
     * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
     *
     * <pre>
     *任务刷新信息
     * </pre>
     */
    boolean hasRefreshInfo();
    /**
     * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
     *
     * <pre>
     *任务刷新信息
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo getRefreshInfo();
    /**
     * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
     *
     * <pre>
     *任务刷新信息
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfoOrBuilder getRefreshInfoOrBuilder();
  }
  /**
   * Protobuf type {@code com.mokylin.DBQuestData}
   *
   * <pre>
   **
   * 任务系统信息
   * </pre>
   */
  public static final class DBQuestData extends
      com.google.protobuf.GeneratedMessage
      implements DBQuestDataOrBuilder {
    // Use DBQuestData.newBuilder() to construct.
    private DBQuestData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBQuestData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBQuestData defaultInstance;
    public static DBQuestData getDefaultInstance() {
      return defaultInstance;
    }

    public DBQuestData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBQuestData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = questInfo_.toBuilder();
              }
              questInfo_ = input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(questInfo_);
                questInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = refreshInfo_.toBuilder();
              }
              refreshInfo_ = input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(refreshInfo_);
                refreshInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData.Builder.class);
    }

    public static com.google.protobuf.Parser<DBQuestData> PARSER =
        new com.google.protobuf.AbstractParser<DBQuestData>() {
      public DBQuestData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBQuestData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBQuestData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .com.mokylin.DBQuestInfo questInfo = 1;
    public static final int QUESTINFO_FIELD_NUMBER = 1;
    private com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo questInfo_;
    /**
     * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
     *
     * <pre>
     *玩家任务信息
     * </pre>
     */
    public boolean hasQuestInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
     *
     * <pre>
     *玩家任务信息
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo getQuestInfo() {
      return questInfo_;
    }
    /**
     * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
     *
     * <pre>
     *玩家任务信息
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfoOrBuilder getQuestInfoOrBuilder() {
      return questInfo_;
    }

    // required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;
    public static final int REFRESHINFO_FIELD_NUMBER = 2;
    private com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo refreshInfo_;
    /**
     * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
     *
     * <pre>
     *任务刷新信息
     * </pre>
     */
    public boolean hasRefreshInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
     *
     * <pre>
     *任务刷新信息
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo getRefreshInfo() {
      return refreshInfo_;
    }
    /**
     * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
     *
     * <pre>
     *任务刷新信息
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfoOrBuilder getRefreshInfoOrBuilder() {
      return refreshInfo_;
    }

    private void initFields() {
      questInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.getDefaultInstance();
      refreshInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasQuestInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRefreshInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getQuestInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, questInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, refreshInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, questInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, refreshInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBQuestData}
     *
     * <pre>
     **
     * 任务系统信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBQuestDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getQuestInfoFieldBuilder();
          getRefreshInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (questInfoBuilder_ == null) {
          questInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.getDefaultInstance();
        } else {
          questInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (refreshInfoBuilder_ == null) {
          refreshInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.getDefaultInstance();
        } else {
          refreshInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestData_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData result = new com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (questInfoBuilder_ == null) {
          result.questInfo_ = questInfo_;
        } else {
          result.questInfo_ = questInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (refreshInfoBuilder_ == null) {
          result.refreshInfo_ = refreshInfo_;
        } else {
          result.refreshInfo_ = refreshInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData.getDefaultInstance()) return this;
        if (other.hasQuestInfo()) {
          mergeQuestInfo(other.getQuestInfo());
        }
        if (other.hasRefreshInfo()) {
          mergeRefreshInfo(other.getRefreshInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasQuestInfo()) {
          
          return false;
        }
        if (!hasRefreshInfo()) {
          
          return false;
        }
        if (!getQuestInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBQuestData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .com.mokylin.DBQuestInfo questInfo = 1;
      private com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo questInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfoOrBuilder> questInfoBuilder_;
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public boolean hasQuestInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo getQuestInfo() {
        if (questInfoBuilder_ == null) {
          return questInfo_;
        } else {
          return questInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public Builder setQuestInfo(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo value) {
        if (questInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          questInfo_ = value;
          onChanged();
        } else {
          questInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public Builder setQuestInfo(
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder builderForValue) {
        if (questInfoBuilder_ == null) {
          questInfo_ = builderForValue.build();
          onChanged();
        } else {
          questInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public Builder mergeQuestInfo(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo value) {
        if (questInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              questInfo_ != com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.getDefaultInstance()) {
            questInfo_ =
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.newBuilder(questInfo_).mergeFrom(value).buildPartial();
          } else {
            questInfo_ = value;
          }
          onChanged();
        } else {
          questInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public Builder clearQuestInfo() {
        if (questInfoBuilder_ == null) {
          questInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.getDefaultInstance();
          onChanged();
        } else {
          questInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder getQuestInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getQuestInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfoOrBuilder getQuestInfoOrBuilder() {
        if (questInfoBuilder_ != null) {
          return questInfoBuilder_.getMessageOrBuilder();
        } else {
          return questInfo_;
        }
      }
      /**
       * <code>required .com.mokylin.DBQuestInfo questInfo = 1;</code>
       *
       * <pre>
       *玩家任务信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfoOrBuilder> 
          getQuestInfoFieldBuilder() {
        if (questInfoBuilder_ == null) {
          questInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfoOrBuilder>(
                  questInfo_,
                  getParentForChildren(),
                  isClean());
          questInfo_ = null;
        }
        return questInfoBuilder_;
      }

      // required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;
      private com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo refreshInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfoOrBuilder> refreshInfoBuilder_;
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public boolean hasRefreshInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo getRefreshInfo() {
        if (refreshInfoBuilder_ == null) {
          return refreshInfo_;
        } else {
          return refreshInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public Builder setRefreshInfo(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo value) {
        if (refreshInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          refreshInfo_ = value;
          onChanged();
        } else {
          refreshInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public Builder setRefreshInfo(
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder builderForValue) {
        if (refreshInfoBuilder_ == null) {
          refreshInfo_ = builderForValue.build();
          onChanged();
        } else {
          refreshInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public Builder mergeRefreshInfo(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo value) {
        if (refreshInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              refreshInfo_ != com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.getDefaultInstance()) {
            refreshInfo_ =
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.newBuilder(refreshInfo_).mergeFrom(value).buildPartial();
          } else {
            refreshInfo_ = value;
          }
          onChanged();
        } else {
          refreshInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public Builder clearRefreshInfo() {
        if (refreshInfoBuilder_ == null) {
          refreshInfo_ = com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.getDefaultInstance();
          onChanged();
        } else {
          refreshInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder getRefreshInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRefreshInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfoOrBuilder getRefreshInfoOrBuilder() {
        if (refreshInfoBuilder_ != null) {
          return refreshInfoBuilder_.getMessageOrBuilder();
        } else {
          return refreshInfo_;
        }
      }
      /**
       * <code>required .com.mokylin.DBQuestRefreshInfo refreshInfo = 2;</code>
       *
       * <pre>
       *任务刷新信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfoOrBuilder> 
          getRefreshInfoFieldBuilder() {
        if (refreshInfoBuilder_ == null) {
          refreshInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfoOrBuilder>(
                  refreshInfo_,
                  getParentForChildren(),
                  isClean());
          refreshInfo_ = null;
        }
        return refreshInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBQuestData)
    }

    static {
      defaultInstance = new DBQuestData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBQuestData)
  }

  public interface DBQuestInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.mokylin.DBQuest cronQuests = 1;
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> 
        getCronQuestsList();
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getCronQuests(int index);
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    int getCronQuestsCount();
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
        getCronQuestsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getCronQuestsOrBuilder(
        int index);

    // repeated .com.mokylin.DBQuest dailyQuests = 2;
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> 
        getDailyQuestsList();
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getDailyQuests(int index);
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    int getDailyQuestsCount();
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
        getDailyQuestsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getDailyQuestsOrBuilder(
        int index);

    // repeated .com.mokylin.DBQuest oneTimeQuests = 3;
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> 
        getOneTimeQuestsList();
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getOneTimeQuests(int index);
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    int getOneTimeQuestsCount();
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
        getOneTimeQuestsOrBuilderList();
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getOneTimeQuestsOrBuilder(
        int index);

    // repeated int32 completeIds = 4;
    /**
     * <code>repeated int32 completeIds = 4;</code>
     *
     * <pre>
     *已领奖的任务存档
     * </pre>
     */
    java.util.List<java.lang.Integer> getCompleteIdsList();
    /**
     * <code>repeated int32 completeIds = 4;</code>
     *
     * <pre>
     *已领奖的任务存档
     * </pre>
     */
    int getCompleteIdsCount();
    /**
     * <code>repeated int32 completeIds = 4;</code>
     *
     * <pre>
     *已领奖的任务存档
     * </pre>
     */
    int getCompleteIds(int index);
  }
  /**
   * Protobuf type {@code com.mokylin.DBQuestInfo}
   *
   * <pre>
   **
   * 玩家任务信息
   * </pre>
   */
  public static final class DBQuestInfo extends
      com.google.protobuf.GeneratedMessage
      implements DBQuestInfoOrBuilder {
    // Use DBQuestInfo.newBuilder() to construct.
    private DBQuestInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBQuestInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBQuestInfo defaultInstance;
    public static DBQuestInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DBQuestInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBQuestInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cronQuests_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest>();
                mutable_bitField0_ |= 0x00000001;
              }
              cronQuests_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                dailyQuests_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest>();
                mutable_bitField0_ |= 0x00000002;
              }
              dailyQuests_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                oneTimeQuests_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest>();
                mutable_bitField0_ |= 0x00000004;
              }
              oneTimeQuests_.add(input.readMessage(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                completeIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              completeIds_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                completeIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                completeIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cronQuests_ = java.util.Collections.unmodifiableList(cronQuests_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          dailyQuests_ = java.util.Collections.unmodifiableList(dailyQuests_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          oneTimeQuests_ = java.util.Collections.unmodifiableList(oneTimeQuests_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          completeIds_ = java.util.Collections.unmodifiableList(completeIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DBQuestInfo> PARSER =
        new com.google.protobuf.AbstractParser<DBQuestInfo>() {
      public DBQuestInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBQuestInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBQuestInfo> getParserForType() {
      return PARSER;
    }

    // repeated .com.mokylin.DBQuest cronQuests = 1;
    public static final int CRONQUESTS_FIELD_NUMBER = 1;
    private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> cronQuests_;
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> getCronQuestsList() {
      return cronQuests_;
    }
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
        getCronQuestsOrBuilderList() {
      return cronQuests_;
    }
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    public int getCronQuestsCount() {
      return cronQuests_.size();
    }
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getCronQuests(int index) {
      return cronQuests_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
     *
     * <pre>
     **定时任务信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getCronQuestsOrBuilder(
        int index) {
      return cronQuests_.get(index);
    }

    // repeated .com.mokylin.DBQuest dailyQuests = 2;
    public static final int DAILYQUESTS_FIELD_NUMBER = 2;
    private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> dailyQuests_;
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> getDailyQuestsList() {
      return dailyQuests_;
    }
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
        getDailyQuestsOrBuilderList() {
      return dailyQuests_;
    }
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    public int getDailyQuestsCount() {
      return dailyQuests_.size();
    }
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getDailyQuests(int index) {
      return dailyQuests_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
     *
     * <pre>
     **每日任务信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getDailyQuestsOrBuilder(
        int index) {
      return dailyQuests_.get(index);
    }

    // repeated .com.mokylin.DBQuest oneTimeQuests = 3;
    public static final int ONETIMEQUESTS_FIELD_NUMBER = 3;
    private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> oneTimeQuests_;
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> getOneTimeQuestsList() {
      return oneTimeQuests_;
    }
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
        getOneTimeQuestsOrBuilderList() {
      return oneTimeQuests_;
    }
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    public int getOneTimeQuestsCount() {
      return oneTimeQuests_.size();
    }
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getOneTimeQuests(int index) {
      return oneTimeQuests_.get(index);
    }
    /**
     * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
     *
     * <pre>
     **一次性任务信息 
     * </pre>
     */
    public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getOneTimeQuestsOrBuilder(
        int index) {
      return oneTimeQuests_.get(index);
    }

    // repeated int32 completeIds = 4;
    public static final int COMPLETEIDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> completeIds_;
    /**
     * <code>repeated int32 completeIds = 4;</code>
     *
     * <pre>
     *已领奖的任务存档
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCompleteIdsList() {
      return completeIds_;
    }
    /**
     * <code>repeated int32 completeIds = 4;</code>
     *
     * <pre>
     *已领奖的任务存档
     * </pre>
     */
    public int getCompleteIdsCount() {
      return completeIds_.size();
    }
    /**
     * <code>repeated int32 completeIds = 4;</code>
     *
     * <pre>
     *已领奖的任务存档
     * </pre>
     */
    public int getCompleteIds(int index) {
      return completeIds_.get(index);
    }

    private void initFields() {
      cronQuests_ = java.util.Collections.emptyList();
      dailyQuests_ = java.util.Collections.emptyList();
      oneTimeQuests_ = java.util.Collections.emptyList();
      completeIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCronQuestsCount(); i++) {
        if (!getCronQuests(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDailyQuestsCount(); i++) {
        if (!getDailyQuests(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOneTimeQuestsCount(); i++) {
        if (!getOneTimeQuests(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cronQuests_.size(); i++) {
        output.writeMessage(1, cronQuests_.get(i));
      }
      for (int i = 0; i < dailyQuests_.size(); i++) {
        output.writeMessage(2, dailyQuests_.get(i));
      }
      for (int i = 0; i < oneTimeQuests_.size(); i++) {
        output.writeMessage(3, oneTimeQuests_.get(i));
      }
      for (int i = 0; i < completeIds_.size(); i++) {
        output.writeInt32(4, completeIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cronQuests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cronQuests_.get(i));
      }
      for (int i = 0; i < dailyQuests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, dailyQuests_.get(i));
      }
      for (int i = 0; i < oneTimeQuests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, oneTimeQuests_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < completeIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(completeIds_.get(i));
        }
        size += dataSize;
        size += 1 * getCompleteIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBQuestInfo}
     *
     * <pre>
     **
     * 玩家任务信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCronQuestsFieldBuilder();
          getDailyQuestsFieldBuilder();
          getOneTimeQuestsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cronQuestsBuilder_ == null) {
          cronQuests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cronQuestsBuilder_.clear();
        }
        if (dailyQuestsBuilder_ == null) {
          dailyQuests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dailyQuestsBuilder_.clear();
        }
        if (oneTimeQuestsBuilder_ == null) {
          oneTimeQuests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          oneTimeQuestsBuilder_.clear();
        }
        completeIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestInfo_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo result = new com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo(this);
        int from_bitField0_ = bitField0_;
        if (cronQuestsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cronQuests_ = java.util.Collections.unmodifiableList(cronQuests_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cronQuests_ = cronQuests_;
        } else {
          result.cronQuests_ = cronQuestsBuilder_.build();
        }
        if (dailyQuestsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            dailyQuests_ = java.util.Collections.unmodifiableList(dailyQuests_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.dailyQuests_ = dailyQuests_;
        } else {
          result.dailyQuests_ = dailyQuestsBuilder_.build();
        }
        if (oneTimeQuestsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            oneTimeQuests_ = java.util.Collections.unmodifiableList(oneTimeQuests_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.oneTimeQuests_ = oneTimeQuests_;
        } else {
          result.oneTimeQuests_ = oneTimeQuestsBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          completeIds_ = java.util.Collections.unmodifiableList(completeIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.completeIds_ = completeIds_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo.getDefaultInstance()) return this;
        if (cronQuestsBuilder_ == null) {
          if (!other.cronQuests_.isEmpty()) {
            if (cronQuests_.isEmpty()) {
              cronQuests_ = other.cronQuests_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCronQuestsIsMutable();
              cronQuests_.addAll(other.cronQuests_);
            }
            onChanged();
          }
        } else {
          if (!other.cronQuests_.isEmpty()) {
            if (cronQuestsBuilder_.isEmpty()) {
              cronQuestsBuilder_.dispose();
              cronQuestsBuilder_ = null;
              cronQuests_ = other.cronQuests_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cronQuestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCronQuestsFieldBuilder() : null;
            } else {
              cronQuestsBuilder_.addAllMessages(other.cronQuests_);
            }
          }
        }
        if (dailyQuestsBuilder_ == null) {
          if (!other.dailyQuests_.isEmpty()) {
            if (dailyQuests_.isEmpty()) {
              dailyQuests_ = other.dailyQuests_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDailyQuestsIsMutable();
              dailyQuests_.addAll(other.dailyQuests_);
            }
            onChanged();
          }
        } else {
          if (!other.dailyQuests_.isEmpty()) {
            if (dailyQuestsBuilder_.isEmpty()) {
              dailyQuestsBuilder_.dispose();
              dailyQuestsBuilder_ = null;
              dailyQuests_ = other.dailyQuests_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dailyQuestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDailyQuestsFieldBuilder() : null;
            } else {
              dailyQuestsBuilder_.addAllMessages(other.dailyQuests_);
            }
          }
        }
        if (oneTimeQuestsBuilder_ == null) {
          if (!other.oneTimeQuests_.isEmpty()) {
            if (oneTimeQuests_.isEmpty()) {
              oneTimeQuests_ = other.oneTimeQuests_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureOneTimeQuestsIsMutable();
              oneTimeQuests_.addAll(other.oneTimeQuests_);
            }
            onChanged();
          }
        } else {
          if (!other.oneTimeQuests_.isEmpty()) {
            if (oneTimeQuestsBuilder_.isEmpty()) {
              oneTimeQuestsBuilder_.dispose();
              oneTimeQuestsBuilder_ = null;
              oneTimeQuests_ = other.oneTimeQuests_;
              bitField0_ = (bitField0_ & ~0x00000004);
              oneTimeQuestsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOneTimeQuestsFieldBuilder() : null;
            } else {
              oneTimeQuestsBuilder_.addAllMessages(other.oneTimeQuests_);
            }
          }
        }
        if (!other.completeIds_.isEmpty()) {
          if (completeIds_.isEmpty()) {
            completeIds_ = other.completeIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCompleteIdsIsMutable();
            completeIds_.addAll(other.completeIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCronQuestsCount(); i++) {
          if (!getCronQuests(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDailyQuestsCount(); i++) {
          if (!getDailyQuests(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOneTimeQuestsCount(); i++) {
          if (!getOneTimeQuests(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBQuestInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.mokylin.DBQuest cronQuests = 1;
      private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> cronQuests_ =
        java.util.Collections.emptyList();
      private void ensureCronQuestsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cronQuests_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest>(cronQuests_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> cronQuestsBuilder_;

      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> getCronQuestsList() {
        if (cronQuestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cronQuests_);
        } else {
          return cronQuestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public int getCronQuestsCount() {
        if (cronQuestsBuilder_ == null) {
          return cronQuests_.size();
        } else {
          return cronQuestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getCronQuests(int index) {
        if (cronQuestsBuilder_ == null) {
          return cronQuests_.get(index);
        } else {
          return cronQuestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder setCronQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (cronQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCronQuestsIsMutable();
          cronQuests_.set(index, value);
          onChanged();
        } else {
          cronQuestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder setCronQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (cronQuestsBuilder_ == null) {
          ensureCronQuestsIsMutable();
          cronQuests_.set(index, builderForValue.build());
          onChanged();
        } else {
          cronQuestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder addCronQuests(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (cronQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCronQuestsIsMutable();
          cronQuests_.add(value);
          onChanged();
        } else {
          cronQuestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder addCronQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (cronQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCronQuestsIsMutable();
          cronQuests_.add(index, value);
          onChanged();
        } else {
          cronQuestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder addCronQuests(
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (cronQuestsBuilder_ == null) {
          ensureCronQuestsIsMutable();
          cronQuests_.add(builderForValue.build());
          onChanged();
        } else {
          cronQuestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder addCronQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (cronQuestsBuilder_ == null) {
          ensureCronQuestsIsMutable();
          cronQuests_.add(index, builderForValue.build());
          onChanged();
        } else {
          cronQuestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder addAllCronQuests(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> values) {
        if (cronQuestsBuilder_ == null) {
          ensureCronQuestsIsMutable();
          super.addAll(values, cronQuests_);
          onChanged();
        } else {
          cronQuestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder clearCronQuests() {
        if (cronQuestsBuilder_ == null) {
          cronQuests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cronQuestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public Builder removeCronQuests(int index) {
        if (cronQuestsBuilder_ == null) {
          ensureCronQuestsIsMutable();
          cronQuests_.remove(index);
          onChanged();
        } else {
          cronQuestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder getCronQuestsBuilder(
          int index) {
        return getCronQuestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getCronQuestsOrBuilder(
          int index) {
        if (cronQuestsBuilder_ == null) {
          return cronQuests_.get(index);  } else {
          return cronQuestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
           getCronQuestsOrBuilderList() {
        if (cronQuestsBuilder_ != null) {
          return cronQuestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cronQuests_);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder addCronQuestsBuilder() {
        return getCronQuestsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder addCronQuestsBuilder(
          int index) {
        return getCronQuestsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBQuest cronQuests = 1;</code>
       *
       * <pre>
       **定时任务信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder> 
           getCronQuestsBuilderList() {
        return getCronQuestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
          getCronQuestsFieldBuilder() {
        if (cronQuestsBuilder_ == null) {
          cronQuestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder>(
                  cronQuests_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cronQuests_ = null;
        }
        return cronQuestsBuilder_;
      }

      // repeated .com.mokylin.DBQuest dailyQuests = 2;
      private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> dailyQuests_ =
        java.util.Collections.emptyList();
      private void ensureDailyQuestsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dailyQuests_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest>(dailyQuests_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> dailyQuestsBuilder_;

      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> getDailyQuestsList() {
        if (dailyQuestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dailyQuests_);
        } else {
          return dailyQuestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public int getDailyQuestsCount() {
        if (dailyQuestsBuilder_ == null) {
          return dailyQuests_.size();
        } else {
          return dailyQuestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getDailyQuests(int index) {
        if (dailyQuestsBuilder_ == null) {
          return dailyQuests_.get(index);
        } else {
          return dailyQuestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder setDailyQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (dailyQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyQuestsIsMutable();
          dailyQuests_.set(index, value);
          onChanged();
        } else {
          dailyQuestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder setDailyQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (dailyQuestsBuilder_ == null) {
          ensureDailyQuestsIsMutable();
          dailyQuests_.set(index, builderForValue.build());
          onChanged();
        } else {
          dailyQuestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder addDailyQuests(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (dailyQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyQuestsIsMutable();
          dailyQuests_.add(value);
          onChanged();
        } else {
          dailyQuestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder addDailyQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (dailyQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDailyQuestsIsMutable();
          dailyQuests_.add(index, value);
          onChanged();
        } else {
          dailyQuestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder addDailyQuests(
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (dailyQuestsBuilder_ == null) {
          ensureDailyQuestsIsMutable();
          dailyQuests_.add(builderForValue.build());
          onChanged();
        } else {
          dailyQuestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder addDailyQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (dailyQuestsBuilder_ == null) {
          ensureDailyQuestsIsMutable();
          dailyQuests_.add(index, builderForValue.build());
          onChanged();
        } else {
          dailyQuestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder addAllDailyQuests(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> values) {
        if (dailyQuestsBuilder_ == null) {
          ensureDailyQuestsIsMutable();
          super.addAll(values, dailyQuests_);
          onChanged();
        } else {
          dailyQuestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder clearDailyQuests() {
        if (dailyQuestsBuilder_ == null) {
          dailyQuests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dailyQuestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public Builder removeDailyQuests(int index) {
        if (dailyQuestsBuilder_ == null) {
          ensureDailyQuestsIsMutable();
          dailyQuests_.remove(index);
          onChanged();
        } else {
          dailyQuestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder getDailyQuestsBuilder(
          int index) {
        return getDailyQuestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getDailyQuestsOrBuilder(
          int index) {
        if (dailyQuestsBuilder_ == null) {
          return dailyQuests_.get(index);  } else {
          return dailyQuestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
           getDailyQuestsOrBuilderList() {
        if (dailyQuestsBuilder_ != null) {
          return dailyQuestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dailyQuests_);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder addDailyQuestsBuilder() {
        return getDailyQuestsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder addDailyQuestsBuilder(
          int index) {
        return getDailyQuestsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBQuest dailyQuests = 2;</code>
       *
       * <pre>
       **每日任务信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder> 
           getDailyQuestsBuilderList() {
        return getDailyQuestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
          getDailyQuestsFieldBuilder() {
        if (dailyQuestsBuilder_ == null) {
          dailyQuestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder>(
                  dailyQuests_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          dailyQuests_ = null;
        }
        return dailyQuestsBuilder_;
      }

      // repeated .com.mokylin.DBQuest oneTimeQuests = 3;
      private java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> oneTimeQuests_ =
        java.util.Collections.emptyList();
      private void ensureOneTimeQuestsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          oneTimeQuests_ = new java.util.ArrayList<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest>(oneTimeQuests_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> oneTimeQuestsBuilder_;

      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> getOneTimeQuestsList() {
        if (oneTimeQuestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(oneTimeQuests_);
        } else {
          return oneTimeQuestsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public int getOneTimeQuestsCount() {
        if (oneTimeQuestsBuilder_ == null) {
          return oneTimeQuests_.size();
        } else {
          return oneTimeQuestsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getOneTimeQuests(int index) {
        if (oneTimeQuestsBuilder_ == null) {
          return oneTimeQuests_.get(index);
        } else {
          return oneTimeQuestsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder setOneTimeQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (oneTimeQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOneTimeQuestsIsMutable();
          oneTimeQuests_.set(index, value);
          onChanged();
        } else {
          oneTimeQuestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder setOneTimeQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (oneTimeQuestsBuilder_ == null) {
          ensureOneTimeQuestsIsMutable();
          oneTimeQuests_.set(index, builderForValue.build());
          onChanged();
        } else {
          oneTimeQuestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder addOneTimeQuests(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (oneTimeQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOneTimeQuestsIsMutable();
          oneTimeQuests_.add(value);
          onChanged();
        } else {
          oneTimeQuestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder addOneTimeQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest value) {
        if (oneTimeQuestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOneTimeQuestsIsMutable();
          oneTimeQuests_.add(index, value);
          onChanged();
        } else {
          oneTimeQuestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder addOneTimeQuests(
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (oneTimeQuestsBuilder_ == null) {
          ensureOneTimeQuestsIsMutable();
          oneTimeQuests_.add(builderForValue.build());
          onChanged();
        } else {
          oneTimeQuestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder addOneTimeQuests(
          int index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder builderForValue) {
        if (oneTimeQuestsBuilder_ == null) {
          ensureOneTimeQuestsIsMutable();
          oneTimeQuests_.add(index, builderForValue.build());
          onChanged();
        } else {
          oneTimeQuestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder addAllOneTimeQuests(
          java.lang.Iterable<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuest> values) {
        if (oneTimeQuestsBuilder_ == null) {
          ensureOneTimeQuestsIsMutable();
          super.addAll(values, oneTimeQuests_);
          onChanged();
        } else {
          oneTimeQuestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder clearOneTimeQuests() {
        if (oneTimeQuestsBuilder_ == null) {
          oneTimeQuests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          oneTimeQuestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public Builder removeOneTimeQuests(int index) {
        if (oneTimeQuestsBuilder_ == null) {
          ensureOneTimeQuestsIsMutable();
          oneTimeQuests_.remove(index);
          onChanged();
        } else {
          oneTimeQuestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder getOneTimeQuestsBuilder(
          int index) {
        return getOneTimeQuestsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder getOneTimeQuestsOrBuilder(
          int index) {
        if (oneTimeQuestsBuilder_ == null) {
          return oneTimeQuests_.get(index);  } else {
          return oneTimeQuestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public java.util.List<? extends com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
           getOneTimeQuestsOrBuilderList() {
        if (oneTimeQuestsBuilder_ != null) {
          return oneTimeQuestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(oneTimeQuests_);
        }
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder addOneTimeQuestsBuilder() {
        return getOneTimeQuestsFieldBuilder().addBuilder(
            com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder addOneTimeQuestsBuilder(
          int index) {
        return getOneTimeQuestsFieldBuilder().addBuilder(
            index, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance());
      }
      /**
       * <code>repeated .com.mokylin.DBQuest oneTimeQuests = 3;</code>
       *
       * <pre>
       **一次性任务信息 
       * </pre>
       */
      public java.util.List<com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder> 
           getOneTimeQuestsBuilderList() {
        return getOneTimeQuestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder> 
          getOneTimeQuestsFieldBuilder() {
        if (oneTimeQuestsBuilder_ == null) {
          oneTimeQuestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuest, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder>(
                  oneTimeQuests_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          oneTimeQuests_ = null;
        }
        return oneTimeQuestsBuilder_;
      }

      // repeated int32 completeIds = 4;
      private java.util.List<java.lang.Integer> completeIds_ = java.util.Collections.emptyList();
      private void ensureCompleteIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          completeIds_ = new java.util.ArrayList<java.lang.Integer>(completeIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 completeIds = 4;</code>
       *
       * <pre>
       *已领奖的任务存档
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCompleteIdsList() {
        return java.util.Collections.unmodifiableList(completeIds_);
      }
      /**
       * <code>repeated int32 completeIds = 4;</code>
       *
       * <pre>
       *已领奖的任务存档
       * </pre>
       */
      public int getCompleteIdsCount() {
        return completeIds_.size();
      }
      /**
       * <code>repeated int32 completeIds = 4;</code>
       *
       * <pre>
       *已领奖的任务存档
       * </pre>
       */
      public int getCompleteIds(int index) {
        return completeIds_.get(index);
      }
      /**
       * <code>repeated int32 completeIds = 4;</code>
       *
       * <pre>
       *已领奖的任务存档
       * </pre>
       */
      public Builder setCompleteIds(
          int index, int value) {
        ensureCompleteIdsIsMutable();
        completeIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 completeIds = 4;</code>
       *
       * <pre>
       *已领奖的任务存档
       * </pre>
       */
      public Builder addCompleteIds(int value) {
        ensureCompleteIdsIsMutable();
        completeIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 completeIds = 4;</code>
       *
       * <pre>
       *已领奖的任务存档
       * </pre>
       */
      public Builder addAllCompleteIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCompleteIdsIsMutable();
        super.addAll(values, completeIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 completeIds = 4;</code>
       *
       * <pre>
       *已领奖的任务存档
       * </pre>
       */
      public Builder clearCompleteIds() {
        completeIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBQuestInfo)
    }

    static {
      defaultInstance = new DBQuestInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBQuestInfo)
  }

  public interface DBQuestRefreshInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int64 lastCronQuestRefreshTime = 1;
    /**
     * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
     *
     * <pre>
     *定时任务上次刷新时间
     * </pre>
     */
    boolean hasLastCronQuestRefreshTime();
    /**
     * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
     *
     * <pre>
     *定时任务上次刷新时间
     * </pre>
     */
    long getLastCronQuestRefreshTime();

    // optional int64 lastDailyQuestRefreshTime = 2;
    /**
     * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
     *
     * <pre>
     *每日任务上次刷新时间
     * </pre>
     */
    boolean hasLastDailyQuestRefreshTime();
    /**
     * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
     *
     * <pre>
     *每日任务上次刷新时间
     * </pre>
     */
    long getLastDailyQuestRefreshTime();
  }
  /**
   * Protobuf type {@code com.mokylin.DBQuestRefreshInfo}
   *
   * <pre>
   **
   * 任务刷新信息
   * </pre>
   */
  public static final class DBQuestRefreshInfo extends
      com.google.protobuf.GeneratedMessage
      implements DBQuestRefreshInfoOrBuilder {
    // Use DBQuestRefreshInfo.newBuilder() to construct.
    private DBQuestRefreshInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBQuestRefreshInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBQuestRefreshInfo defaultInstance;
    public static DBQuestRefreshInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DBQuestRefreshInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBQuestRefreshInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lastCronQuestRefreshTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lastDailyQuestRefreshTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestRefreshInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestRefreshInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DBQuestRefreshInfo> PARSER =
        new com.google.protobuf.AbstractParser<DBQuestRefreshInfo>() {
      public DBQuestRefreshInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBQuestRefreshInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBQuestRefreshInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int64 lastCronQuestRefreshTime = 1;
    public static final int LASTCRONQUESTREFRESHTIME_FIELD_NUMBER = 1;
    private long lastCronQuestRefreshTime_;
    /**
     * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
     *
     * <pre>
     *定时任务上次刷新时间
     * </pre>
     */
    public boolean hasLastCronQuestRefreshTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
     *
     * <pre>
     *定时任务上次刷新时间
     * </pre>
     */
    public long getLastCronQuestRefreshTime() {
      return lastCronQuestRefreshTime_;
    }

    // optional int64 lastDailyQuestRefreshTime = 2;
    public static final int LASTDAILYQUESTREFRESHTIME_FIELD_NUMBER = 2;
    private long lastDailyQuestRefreshTime_;
    /**
     * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
     *
     * <pre>
     *每日任务上次刷新时间
     * </pre>
     */
    public boolean hasLastDailyQuestRefreshTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
     *
     * <pre>
     *每日任务上次刷新时间
     * </pre>
     */
    public long getLastDailyQuestRefreshTime() {
      return lastDailyQuestRefreshTime_;
    }

    private void initFields() {
      lastCronQuestRefreshTime_ = 0L;
      lastDailyQuestRefreshTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, lastCronQuestRefreshTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, lastDailyQuestRefreshTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, lastCronQuestRefreshTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, lastDailyQuestRefreshTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBQuestRefreshInfo}
     *
     * <pre>
     **
     * 任务刷新信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestRefreshInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestRefreshInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lastCronQuestRefreshTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        lastDailyQuestRefreshTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuestRefreshInfo_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo result = new com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lastCronQuestRefreshTime_ = lastCronQuestRefreshTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lastDailyQuestRefreshTime_ = lastDailyQuestRefreshTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo.getDefaultInstance()) return this;
        if (other.hasLastCronQuestRefreshTime()) {
          setLastCronQuestRefreshTime(other.getLastCronQuestRefreshTime());
        }
        if (other.hasLastDailyQuestRefreshTime()) {
          setLastDailyQuestRefreshTime(other.getLastDailyQuestRefreshTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBQuestRefreshInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int64 lastCronQuestRefreshTime = 1;
      private long lastCronQuestRefreshTime_ ;
      /**
       * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
       *
       * <pre>
       *定时任务上次刷新时间
       * </pre>
       */
      public boolean hasLastCronQuestRefreshTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
       *
       * <pre>
       *定时任务上次刷新时间
       * </pre>
       */
      public long getLastCronQuestRefreshTime() {
        return lastCronQuestRefreshTime_;
      }
      /**
       * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
       *
       * <pre>
       *定时任务上次刷新时间
       * </pre>
       */
      public Builder setLastCronQuestRefreshTime(long value) {
        bitField0_ |= 0x00000001;
        lastCronQuestRefreshTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastCronQuestRefreshTime = 1;</code>
       *
       * <pre>
       *定时任务上次刷新时间
       * </pre>
       */
      public Builder clearLastCronQuestRefreshTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lastCronQuestRefreshTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 lastDailyQuestRefreshTime = 2;
      private long lastDailyQuestRefreshTime_ ;
      /**
       * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
       *
       * <pre>
       *每日任务上次刷新时间
       * </pre>
       */
      public boolean hasLastDailyQuestRefreshTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
       *
       * <pre>
       *每日任务上次刷新时间
       * </pre>
       */
      public long getLastDailyQuestRefreshTime() {
        return lastDailyQuestRefreshTime_;
      }
      /**
       * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
       *
       * <pre>
       *每日任务上次刷新时间
       * </pre>
       */
      public Builder setLastDailyQuestRefreshTime(long value) {
        bitField0_ |= 0x00000002;
        lastDailyQuestRefreshTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastDailyQuestRefreshTime = 2;</code>
       *
       * <pre>
       *每日任务上次刷新时间
       * </pre>
       */
      public Builder clearLastDailyQuestRefreshTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lastDailyQuestRefreshTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBQuestRefreshInfo)
    }

    static {
      defaultInstance = new DBQuestRefreshInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBQuestRefreshInfo)
  }

  public interface DBQuestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *任务模板ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *任务模板ID
     * </pre>
     */
    int getId();

    // required bool done = 2;
    /**
     * <code>required bool done = 2;</code>
     *
     * <pre>
     *任务状态，是否已完成
     * </pre>
     */
    boolean hasDone();
    /**
     * <code>required bool done = 2;</code>
     *
     * <pre>
     *任务状态，是否已完成
     * </pre>
     */
    boolean getDone();

    // optional int32 progress = 3;
    /**
     * <code>optional int32 progress = 3;</code>
     *
     * <pre>
     *任务进度，选填
     * </pre>
     */
    boolean hasProgress();
    /**
     * <code>optional int32 progress = 3;</code>
     *
     * <pre>
     *任务进度，选填
     * </pre>
     */
    int getProgress();
  }
  /**
   * Protobuf type {@code com.mokylin.DBQuest}
   *
   * <pre>
   **
   * 任务信息
   * </pre>
   */
  public static final class DBQuest extends
      com.google.protobuf.GeneratedMessage
      implements DBQuestOrBuilder {
    // Use DBQuest.newBuilder() to construct.
    private DBQuest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DBQuest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DBQuest defaultInstance;
    public static DBQuest getDefaultInstance() {
      return defaultInstance;
    }

    public DBQuest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DBQuest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              done_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              progress_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder.class);
    }

    public static com.google.protobuf.Parser<DBQuest> PARSER =
        new com.google.protobuf.AbstractParser<DBQuest>() {
      public DBQuest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DBQuest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DBQuest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *任务模板ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     *任务模板ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required bool done = 2;
    public static final int DONE_FIELD_NUMBER = 2;
    private boolean done_;
    /**
     * <code>required bool done = 2;</code>
     *
     * <pre>
     *任务状态，是否已完成
     * </pre>
     */
    public boolean hasDone() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool done = 2;</code>
     *
     * <pre>
     *任务状态，是否已完成
     * </pre>
     */
    public boolean getDone() {
      return done_;
    }

    // optional int32 progress = 3;
    public static final int PROGRESS_FIELD_NUMBER = 3;
    private int progress_;
    /**
     * <code>optional int32 progress = 3;</code>
     *
     * <pre>
     *任务进度，选填
     * </pre>
     */
    public boolean hasProgress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 progress = 3;</code>
     *
     * <pre>
     *任务进度，选填
     * </pre>
     */
    public int getProgress() {
      return progress_;
    }

    private void initFields() {
      id_ = 0;
      done_ = false;
      progress_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDone()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, done_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, progress_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, done_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, progress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mokylin.DBQuest}
     *
     * <pre>
     **
     * 任务信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mokylin.bleach.protobuf.db.DbHuman.DBQuestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.class, com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.Builder.class);
      }

      // Construct using com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        done_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        progress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.internal_static_com_mokylin_DBQuest_descriptor;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest getDefaultInstanceForType() {
        return com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance();
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest build() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mokylin.bleach.protobuf.db.DbHuman.DBQuest buildPartial() {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuest result = new com.mokylin.bleach.protobuf.db.DbHuman.DBQuest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.done_ = done_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.progress_ = progress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mokylin.bleach.protobuf.db.DbHuman.DBQuest) {
          return mergeFrom((com.mokylin.bleach.protobuf.db.DbHuman.DBQuest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mokylin.bleach.protobuf.db.DbHuman.DBQuest other) {
        if (other == com.mokylin.bleach.protobuf.db.DbHuman.DBQuest.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDone()) {
          setDone(other.getDone());
        }
        if (other.hasProgress()) {
          setProgress(other.getProgress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasDone()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mokylin.bleach.protobuf.db.DbHuman.DBQuest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mokylin.bleach.protobuf.db.DbHuman.DBQuest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *任务模板ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *任务模板ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *任务模板ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       *任务模板ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // required bool done = 2;
      private boolean done_ ;
      /**
       * <code>required bool done = 2;</code>
       *
       * <pre>
       *任务状态，是否已完成
       * </pre>
       */
      public boolean hasDone() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool done = 2;</code>
       *
       * <pre>
       *任务状态，是否已完成
       * </pre>
       */
      public boolean getDone() {
        return done_;
      }
      /**
       * <code>required bool done = 2;</code>
       *
       * <pre>
       *任务状态，是否已完成
       * </pre>
       */
      public Builder setDone(boolean value) {
        bitField0_ |= 0x00000002;
        done_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool done = 2;</code>
       *
       * <pre>
       *任务状态，是否已完成
       * </pre>
       */
      public Builder clearDone() {
        bitField0_ = (bitField0_ & ~0x00000002);
        done_ = false;
        onChanged();
        return this;
      }

      // optional int32 progress = 3;
      private int progress_ ;
      /**
       * <code>optional int32 progress = 3;</code>
       *
       * <pre>
       *任务进度，选填
       * </pre>
       */
      public boolean hasProgress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 progress = 3;</code>
       *
       * <pre>
       *任务进度，选填
       * </pre>
       */
      public int getProgress() {
        return progress_;
      }
      /**
       * <code>optional int32 progress = 3;</code>
       *
       * <pre>
       *任务进度，选填
       * </pre>
       */
      public Builder setProgress(int value) {
        bitField0_ |= 0x00000004;
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 progress = 3;</code>
       *
       * <pre>
       *任务进度，选填
       * </pre>
       */
      public Builder clearProgress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        progress_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mokylin.DBQuest)
    }

    static {
      defaultInstance = new DBQuest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.mokylin.DBQuest)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DbHumanPoints_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DbHumanPoints_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DbPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DbPoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBHumanFormations_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBHumanFormations_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBFormation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBFormation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBTeam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBTeam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBCD_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBCD_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_CDNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_CDNode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBQuestData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBQuestData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBQuestInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBQuestInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBQuestRefreshInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBQuestRefreshInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mokylin_DBQuest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mokylin_DBQuest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020db/DbHuman.proto\022\013com.mokylin\"5\n\rDbHum" +
      "anPoints\022$\n\006points\030\001 \003(\0132\024.com.mokylin.D" +
      "bPoint\"\206\001\n\007DbPoint\022\021\n\tpointType\030\001 \002(\005\022\r\n" +
      "\005point\030\002 \002(\005\022\034\n\024lastPointRecoverTime\030\003 \002" +
      "(\003\022\026\n\016buyPointCounts\030\004 \002(\005\022#\n\033lastBuyPoi" +
      "ntCountsResetTime\030\005 \002(\003\"A\n\021DBHumanFormat" +
      "ions\022,\n\nformations\030\001 \003(\0132\030.com.mokylin.D" +
      "BFormation\"O\n\013DBFormation\0221\n\rformationTy" +
      "pe\030\001 \002(\0162\032.com.mokylin.FormationType\022\r\n\005" +
      "heros\030\002 \003(\003\"]\n\006DBTeam\022\033\n\023currentAvatarHe",
      "roId\030\001 \002(\003\022\032\n\022currentHeadFrameId\030\002 \002(\005\022\032" +
      "\n\022openedHeadFrameIds\030\003 \003(\005\",\n\004DBCD\022$\n\007cd" +
      "Nodes\030\001 \003(\0132\023.com.mokylin.CDNode\"D\n\006CDNo" +
      "de\022#\n\006cdType\030\001 \002(\0162\023.com.mokylin.CDType\022" +
      "\025\n\rremainingTime\030\002 \002(\003\"p\n\013DBQuestData\022+\n" +
      "\tquestInfo\030\001 \002(\0132\030.com.mokylin.DBQuestIn" +
      "fo\0224\n\013refreshInfo\030\002 \002(\0132\037.com.mokylin.DB" +
      "QuestRefreshInfo\"\244\001\n\013DBQuestInfo\022(\n\ncron" +
      "Quests\030\001 \003(\0132\024.com.mokylin.DBQuest\022)\n\013da" +
      "ilyQuests\030\002 \003(\0132\024.com.mokylin.DBQuest\022+\n",
      "\roneTimeQuests\030\003 \003(\0132\024.com.mokylin.DBQue" +
      "st\022\023\n\013completeIds\030\004 \003(\005\"Y\n\022DBQuestRefres" +
      "hInfo\022 \n\030lastCronQuestRefreshTime\030\001 \001(\003\022" +
      "!\n\031lastDailyQuestRefreshTime\030\002 \001(\003\"5\n\007DB" +
      "Quest\022\n\n\002id\030\001 \002(\005\022\014\n\004done\030\002 \002(\010\022\020\n\010progr" +
      "ess\030\003 \001(\005*k\n\rFormationType\022\020\n\014ArenaDefen" +
      "se\020\000\022\017\n\013ArenaAttack\020\001\022\014\n\010GuildWar\020\002\022\014\n\010C" +
      "rossWar\020\003\022\016\n\nExpedition\020\004\022\013\n\007Mission\020\005*3" +
      "\n\006CDType\022\021\n\rAttackInArena\020\000\022\026\n\022AttackInM" +
      "ultiArena\020\001B)\n\036com.mokylin.bleach.protob",
      "uf.dbB\007DbHuman"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_mokylin_DbHumanPoints_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_mokylin_DbHumanPoints_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DbHumanPoints_descriptor,
              new java.lang.String[] { "Points", });
          internal_static_com_mokylin_DbPoint_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_mokylin_DbPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DbPoint_descriptor,
              new java.lang.String[] { "PointType", "Point", "LastPointRecoverTime", "BuyPointCounts", "LastBuyPointCountsResetTime", });
          internal_static_com_mokylin_DBHumanFormations_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_mokylin_DBHumanFormations_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBHumanFormations_descriptor,
              new java.lang.String[] { "Formations", });
          internal_static_com_mokylin_DBFormation_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_mokylin_DBFormation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBFormation_descriptor,
              new java.lang.String[] { "FormationType", "Heros", });
          internal_static_com_mokylin_DBTeam_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_mokylin_DBTeam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBTeam_descriptor,
              new java.lang.String[] { "CurrentAvatarHeroId", "CurrentHeadFrameId", "OpenedHeadFrameIds", });
          internal_static_com_mokylin_DBCD_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_mokylin_DBCD_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBCD_descriptor,
              new java.lang.String[] { "CdNodes", });
          internal_static_com_mokylin_CDNode_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_mokylin_CDNode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_CDNode_descriptor,
              new java.lang.String[] { "CdType", "RemainingTime", });
          internal_static_com_mokylin_DBQuestData_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_mokylin_DBQuestData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBQuestData_descriptor,
              new java.lang.String[] { "QuestInfo", "RefreshInfo", });
          internal_static_com_mokylin_DBQuestInfo_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_mokylin_DBQuestInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBQuestInfo_descriptor,
              new java.lang.String[] { "CronQuests", "DailyQuests", "OneTimeQuests", "CompleteIds", });
          internal_static_com_mokylin_DBQuestRefreshInfo_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_mokylin_DBQuestRefreshInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBQuestRefreshInfo_descriptor,
              new java.lang.String[] { "LastCronQuestRefreshTime", "LastDailyQuestRefreshTime", });
          internal_static_com_mokylin_DBQuest_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_mokylin_DBQuest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_mokylin_DBQuest_descriptor,
              new java.lang.String[] { "Id", "Done", "Progress", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
